#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKDamageInterface

#include "Basic.hpp"

#include "BP_SGKDamageInterface_classes.hpp"
#include "BP_SGKDamageInterface_parameters.hpp"


namespace SDK
{

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.GetHit
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_SGKDamageInterface_C::GetHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "GetHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK BleedDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TickDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TickTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BleedLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKDamageInterface_C::SGK_BleedDamage(int32 TickDamage, double TickTime, double BleedLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK BleedDamage");

	Params::BP_SGKDamageInterface_C_SGK_BleedDamage Parms{};

	Parms.TickDamage = TickDamage;
	Parms.TickTime = TickTime;
	Parms.BleedLength = BleedLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK CurrentHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKDamageInterface_C::SGK_CurrentHealth(int32* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK CurrentHealth");

	Params::BP_SGKDamageInterface_C_SGK_CurrentHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK Damage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BaseDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_DamageType                            DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Hitbox                                HitBox                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKDamageInterface_C::SGK_Damage(int32 BaseDamage, class AActor* EventInstigator, class AActor* DamageCauser, E_DamageType DamageType, E_Hitbox HitBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK Damage");

	Params::BP_SGKDamageInterface_C_SGK_Damage Parms{};

	Parms.BaseDamage = BaseDamage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;
	Parms.DamageType = DamageType;
	Parms.HitBox = HitBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK MaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   MaxHealth                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKDamageInterface_C::SGK_MaxHealth(int32* MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK MaxHealth");

	Params::BP_SGKDamageInterface_C_SGK_MaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MaxHealth != nullptr)
		*MaxHealth = Parms.MaxHealth;
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK SetCurrentHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewHealthAmount                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKDamageInterface_C::SGK_SetCurrentHealth(int32 NewHealthAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK SetCurrentHealth");

	Params::BP_SGKDamageInterface_C_SGK_SetCurrentHealth Parms{};

	Parms.NewHealthAmount = NewHealthAmount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK ShowHealthWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowHealthWidget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             HealthWidgetName                                       (Parm, OutParm)

void IBP_SGKDamageInterface_C::SGK_ShowHealthWidget(bool* ShowHealthWidget, class FText* HealthWidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKDamageInterface_C", "SGK ShowHealthWidget");

	Params::BP_SGKDamageInterface_C_SGK_ShowHealthWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShowHealthWidget != nullptr)
		*ShowHealthWidget = Parms.ShowHealthWidget;

	if (HealthWidgetName != nullptr)
		*HealthWidgetName = std::move(Parms.HealthWidgetName);
}

}

