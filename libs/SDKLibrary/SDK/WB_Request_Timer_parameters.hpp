#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Request_Timer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "S_RequestOptions_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Request_Timer.WB_Request_Timer_C.Anim_Fade
// 0x0030 (0x0030 - 0x0000)
struct WB_Request_Timer_C_Anim_Fade final
{
public:
	double                                        PlaybackSpeed;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Forward;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E1[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E2[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_Anim_Fade) == 0x000008, "Wrong alignment on WB_Request_Timer_C_Anim_Fade");
static_assert(sizeof(WB_Request_Timer_C_Anim_Fade) == 0x000030, "Wrong size on WB_Request_Timer_C_Anim_Fade");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, PlaybackSpeed) == 0x000000, "Member 'WB_Request_Timer_C_Anim_Fade::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Forward) == 0x000008, "Member 'WB_Request_Timer_C_Anim_Fade::Forward' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_bool_Variable) == 0x000009, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_byte_Variable) == 0x00000A, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_byte_Variable_1) == 0x00000B, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_bool_Variable_1) == 0x00000C, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, K2Node_Select_Default) == 0x00000D, "Member 'WB_Request_Timer_C_Anim_Fade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_int_Variable) == 0x000010, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, Temp_int_Variable_1) == 0x000014, "Member 'WB_Request_Timer_C_Anim_Fade::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, K2Node_Select_Default_1) == 0x000018, "Member 'WB_Request_Timer_C_Anim_Fade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WB_Request_Timer_C_Anim_Fade::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_Anim_Fade, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000028, "Member 'WB_Request_Timer_C_Anim_Fade::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_Timer_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on WB_Request_Timer_C_BP_OnHandleBackAction");
static_assert(sizeof(WB_Request_Timer_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on WB_Request_Timer_C_BP_OnHandleBackAction");
static_assert(offsetof(WB_Request_Timer_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'WB_Request_Timer_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.ExecuteUbergraph_WB_Request_Timer
// 0x0280 (0x0280 - 0x0000)
struct WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E3[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Confirmed)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E4[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Quick_Button_C*                     CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E6[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E7[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RequestOptions                      CallFunc_Array_Get_Item;                           // 0x00E0(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_FindText_ReturnValue;                     // 0x0108(0x0018)()
	bool                                          CallFunc_ValidateDataTableRow_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E8[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColorByType_ReturnValue;         // 0x0124(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E9[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0138(0x0014)()
	uint8                                         Pad_49EA[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateDataTableRow_ReturnValue_1;       // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Confirmed;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EB[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0180(0x0014)()
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0194(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddToHorizontalBox_ReturnValue;           // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EC[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x01C0(0x0010)(NoDestructor)
	EUMGSequencePlayMode                          K2Node_Select_Default_2;                           // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49ED[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RequestOptions                      K2Node_MakeStruct_S_RequestOptions;                // 0x01D8(0x0028)(HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0208(0x0010)(NoDestructor)
	struct FS_RequestOptions                      K2Node_MakeStruct_S_RequestOptions_1;              // 0x0218(0x0028)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EE[0x7];                                     // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_RequestOptions>              K2Node_MakeArray_Array_1;                          // 0x0248(0x0010)(ReferenceParm)
	TArray<struct FS_RequestOptions>              K2Node_MakeArray_Array_2;                          // 0x0258(0x0010)(ReferenceParm)
	TArray<struct FS_RequestOptions>              K2Node_Select_Default_3;                           // 0x0268(0x0010)(ReferenceParm)
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer) == 0x000008, "Wrong alignment on WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer");
static_assert(sizeof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer) == 0x000280, "Wrong size on WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, EntryPoint) == 0x000000, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Variable) == 0x000004, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Create_ReturnValue) == 0x000020, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Variable_1) == 0x000028, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Variable_2) == 0x000029, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Variable_3) == 0x00002A, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Variable_4) == 0x00002B, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000030, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000038, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeArray_Array) == 0x0000A0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000C8, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_byte_Variable) == 0x0000C9, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Has_Been_Initd_Variable) == 0x0000CA, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_IsClosed_Variable) == 0x0000CB, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Add_IntInt_ReturnValue) == 0x0000D4, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_FindText_ReturnValue) == 0x000108, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_FindText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_ValidateDataTableRow_ReturnValue) == 0x000120, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_ValidateDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_GetGlobalColorByType_ReturnValue) == 0x000124, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_GetGlobalColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_Event_IsDesignTime) == 0x000134, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_SlateColor) == 0x000138, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_CustomEvent_Button) == 0x000150, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_Has_Been_Initd_Variable_1) == 0x000158, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_ValidateDataTableRow_ReturnValue_1) == 0x000159, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_ValidateDataTableRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00015A, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_Select_Default) == 0x00015B, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_Subtract_IntInt_ReturnValue) == 0x00015C, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_CreateDelegate_OutputDelegate_2) == 0x000160, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_CustomEvent_Confirmed) == 0x000170, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_CustomEvent_Confirmed' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000178, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_SlateColor_1) == 0x000180, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_Margin) == 0x000194, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_int_Variable) == 0x0001A4, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_int_Variable_1) == 0x0001A8, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_Select_Default_1) == 0x0001AC, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_AddToHorizontalBox_ReturnValue) == 0x0001B0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_AddToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_byte_Variable_1) == 0x0001B8, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_DataTableRowHandle) == 0x0001C0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_Select_Default_2) == 0x0001D0, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_S_RequestOptions) == 0x0001D8, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_S_RequestOptions' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, CallFunc_PlayAnimation_ReturnValue) == 0x000200, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000208, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_S_RequestOptions_1) == 0x000218, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_S_RequestOptions_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, Temp_bool_IsClosed_Variable_1) == 0x000240, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeArray_Array_1) == 0x000248, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeArray_Array_2) == 0x000258, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_Select_Default_3) == 0x000268, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_Left_ImplicitCast) == 0x000278, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer, K2Node_MakeStruct_Right_ImplicitCast) == 0x00027C, "Member 'WB_Request_Timer_C_ExecuteUbergraph_WB_Request_Timer::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.FindText
// 0x03D0 (0x03D0 - 0x0000)
struct WB_Request_Timer_C_FindText final
{
public:
	class FText                                   TextOverride;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FDataTableRowHandle                    DataTableRowHandle;                                // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49EF[0xE];                                     // 0x0042(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCommonInputActionDataBase             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0360)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49F0[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x03B8(0x0018)()
};
static_assert(alignof(WB_Request_Timer_C_FindText) == 0x000010, "Wrong alignment on WB_Request_Timer_C_FindText");
static_assert(sizeof(WB_Request_Timer_C_FindText) == 0x0003D0, "Wrong size on WB_Request_Timer_C_FindText");
static_assert(offsetof(WB_Request_Timer_C_FindText, TextOverride) == 0x000000, "Member 'WB_Request_Timer_C_FindText::TextOverride' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, DataTableRowHandle) == 0x000018, "Member 'WB_Request_Timer_C_FindText::DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, ReturnValue) == 0x000028, "Member 'WB_Request_Timer_C_FindText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, Temp_bool_Variable) == 0x000040, "Member 'WB_Request_Timer_C_FindText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, CallFunc_TextIsEmpty_ReturnValue) == 0x000041, "Member 'WB_Request_Timer_C_FindText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'WB_Request_Timer_C_FindText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003B0, "Member 'WB_Request_Timer_C_FindText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_FindText, K2Node_Select_Default) == 0x0003B8, "Member 'WB_Request_Timer_C_FindText::K2Node_Select_Default' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.OnButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct WB_Request_Timer_C_OnButtonClicked final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_OnButtonClicked) == 0x000008, "Wrong alignment on WB_Request_Timer_C_OnButtonClicked");
static_assert(sizeof(WB_Request_Timer_C_OnButtonClicked) == 0x000008, "Wrong size on WB_Request_Timer_C_OnButtonClicked");
static_assert(offsetof(WB_Request_Timer_C_OnButtonClicked, Button) == 0x000000, "Member 'WB_Request_Timer_C_OnButtonClicked::Button' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.OnPreviewKeyDown
// 0x0210 (0x0210 - 0x0000)
struct WB_Request_Timer_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0138(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0150(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_Request_Timer_C_OnPreviewKeyDown");
static_assert(sizeof(WB_Request_Timer_C_OnPreviewKeyDown) == 0x000210, "Wrong size on WB_Request_Timer_C_OnPreviewKeyDown");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, InKeyEvent) == 0x000040, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, ReturnValue) == 0x000080, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000138, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000150, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000208, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000209, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Request_Timer_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'WB_Request_Timer_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.OnUserReactionTimer__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature final
{
public:
	bool                                          Confirmed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature) == 0x000001, "Wrong alignment on WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature");
static_assert(sizeof(WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature) == 0x000001, "Wrong size on WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature");
static_assert(offsetof(WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature, Confirmed) == 0x000000, "Member 'WB_Request_Timer_C_OnUserReactionTimer__DelegateSignature::Confirmed' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.OnUserReactionTimer_Event
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_Timer_C_OnUserReactionTimer_Event final
{
public:
	bool                                          Confirmed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_OnUserReactionTimer_Event) == 0x000001, "Wrong alignment on WB_Request_Timer_C_OnUserReactionTimer_Event");
static_assert(sizeof(WB_Request_Timer_C_OnUserReactionTimer_Event) == 0x000001, "Wrong size on WB_Request_Timer_C_OnUserReactionTimer_Event");
static_assert(offsetof(WB_Request_Timer_C_OnUserReactionTimer_Event, Confirmed) == 0x000000, "Member 'WB_Request_Timer_C_OnUserReactionTimer_Event::Confirmed' has a wrong offset!");

// Function WB_Request_Timer.WB_Request_Timer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_Timer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_Timer_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Request_Timer_C_PreConstruct");
static_assert(sizeof(WB_Request_Timer_C_PreConstruct) == 0x000001, "Wrong size on WB_Request_Timer_C_PreConstruct");
static_assert(offsetof(WB_Request_Timer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Request_Timer_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

