#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Quick_Button

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "S_TextButtonInfo_structs.hpp"
#include "WB_Base_Button_classes.hpp"
#include "ECommonButtonState_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Quick_Button.WB_Quick_Button_C
// 0x0090 (0x1580 - 0x14F0)
class UWB_Quick_Button_C final : public UWB_Base_Button_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x14F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                B_InputAction;                                     // 0x14F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                b_TextColor;                                       // 0x1500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ButtonText;                                        // 0x1508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_InputActionWidget;                              // 0x1510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   InText;                                            // 0x1518(0x0018)(Edit, BlueprintVisible)
	bool                                          bIsDesignTime;                                     // 0x1530(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_Action_Widget;                                // 0x1531(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DD[0x6];                                     // 0x1532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Action_Widget_Scale_Size;                          // 0x1538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Action_Widget_Color_Override;                      // 0x1540(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFocusMakesSelection;                              // 0x1550(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DE[0x3];                                     // 0x1551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIndex;                                         // 0x1554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        Neighbours;                                        // 0x1558(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FS_TextButtonInfo                      TextColorOverrides;                                // 0x1568(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionWidget_ShowAlways;                           // 0x1574(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseSelectionGroup;                                // 0x1575(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33DF[0x2];                                     // 0x1576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SelectionGroup;                                    // 0x1578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Activate();
	void BndEvt__Text_Button_InputActionWidget_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool bUsingGamepad);
	void BP_OnClicked();
	void BP_OnDeselected();
	void BP_OnHovered();
	void BP_OnSelected();
	void BP_OnUnhovered();
	void Construct();
	void DisplayInputAction(bool bShow);
	void ExecuteUbergraph_WB_Quick_Button(int32 EntryPoint);
	class FText GetButtonText();
	bool GetHasTextOverride();
	bool GetHasTriggeringInputAction();
	void GetInputAction_DisplayName(class FText* DisplayName);
	bool GetInputActionWidgetHasInput();
	void OnCurrentTextStyleChanged();
	void PreConstruct(bool IsDesignTime);
	void SetButtonState(ECommonButtonState State);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Quick_Button_C">();
	}
	static class UWB_Quick_Button_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Quick_Button_C>();
	}
};
static_assert(alignof(UWB_Quick_Button_C) == 0x000010, "Wrong alignment on UWB_Quick_Button_C");
static_assert(sizeof(UWB_Quick_Button_C) == 0x001580, "Wrong size on UWB_Quick_Button_C");
static_assert(offsetof(UWB_Quick_Button_C, UberGraphFrame) == 0x0014F0, "Member 'UWB_Quick_Button_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, B_InputAction) == 0x0014F8, "Member 'UWB_Quick_Button_C::B_InputAction' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, b_TextColor) == 0x001500, "Member 'UWB_Quick_Button_C::b_TextColor' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, ButtonText) == 0x001508, "Member 'UWB_Quick_Button_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, SB_InputActionWidget) == 0x001510, "Member 'UWB_Quick_Button_C::SB_InputActionWidget' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, InText) == 0x001518, "Member 'UWB_Quick_Button_C::InText' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, bIsDesignTime) == 0x001530, "Member 'UWB_Quick_Button_C::bIsDesignTime' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, Show_Action_Widget) == 0x001531, "Member 'UWB_Quick_Button_C::Show_Action_Widget' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, Action_Widget_Scale_Size) == 0x001538, "Member 'UWB_Quick_Button_C::Action_Widget_Scale_Size' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, Action_Widget_Color_Override) == 0x001540, "Member 'UWB_Quick_Button_C::Action_Widget_Color_Override' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, bFocusMakesSelection) == 0x001550, "Member 'UWB_Quick_Button_C::bFocusMakesSelection' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, SlotIndex) == 0x001554, "Member 'UWB_Quick_Button_C::SlotIndex' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, Neighbours) == 0x001558, "Member 'UWB_Quick_Button_C::Neighbours' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, TextColorOverrides) == 0x001568, "Member 'UWB_Quick_Button_C::TextColorOverrides' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, ActionWidget_ShowAlways) == 0x001574, "Member 'UWB_Quick_Button_C::ActionWidget_ShowAlways' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, bUseSelectionGroup) == 0x001575, "Member 'UWB_Quick_Button_C::bUseSelectionGroup' has a wrong offset!");
static_assert(offsetof(UWB_Quick_Button_C, SelectionGroup) == 0x001578, "Member 'UWB_Quick_Button_C::SelectionGroup' has a wrong offset!");

}

