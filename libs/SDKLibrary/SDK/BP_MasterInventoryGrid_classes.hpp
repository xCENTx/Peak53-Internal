#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterInventoryGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MasterInventoryGrid.BP_MasterInventoryGrid_C
// 0x0038 (0x02B0 - 0x0278)
class UBP_MasterInventoryGrid_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class UBP_InventoryItemIcon_C*>        InvItemIcons;                                      // 0x0280(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_InventoryCell_C*>            InvCells;                                          // 0x0290(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  GridInventory;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void ClearInvGrid();
	void Construct();
	void ConstructInventoryCellArray(TArray<class UBP_InventoryCell_C*>& Array);
	void ConstructInventoryItemIconArray(TArray<class UBP_InventoryItemIcon_C*>& Array);
	void ConstructInvGrid();
	void ExecuteUbergraph_BP_MasterInventoryGrid(int32 EntryPoint);
	void GetCellCount(int32* InventoryCells);
	void GetInvColumnsCount(int32* Columns);
	void SetCustomSlots();
	void SGK_CellSlots(TArray<class UBP_InventoryCell_C*>* Cells);
	void SGK_ConstructGrid(class UBP_MasterInventory_C* Param_GridInventory);
	void SGK_InvItemSlots(TArray<class UBP_InventoryItemIcon_C*>* ItemInvWidgets);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterInventoryGrid_C">();
	}
	static class UBP_MasterInventoryGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MasterInventoryGrid_C>();
	}
};
static_assert(alignof(UBP_MasterInventoryGrid_C) == 0x000008, "Wrong alignment on UBP_MasterInventoryGrid_C");
static_assert(sizeof(UBP_MasterInventoryGrid_C) == 0x0002B0, "Wrong size on UBP_MasterInventoryGrid_C");
static_assert(offsetof(UBP_MasterInventoryGrid_C, UberGraphFrame) == 0x000278, "Member 'UBP_MasterInventoryGrid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MasterInventoryGrid_C, InvItemIcons) == 0x000280, "Member 'UBP_MasterInventoryGrid_C::InvItemIcons' has a wrong offset!");
static_assert(offsetof(UBP_MasterInventoryGrid_C, InvCells) == 0x000290, "Member 'UBP_MasterInventoryGrid_C::InvCells' has a wrong offset!");
static_assert(offsetof(UBP_MasterInventoryGrid_C, GridInventory) == 0x0002A0, "Member 'UBP_MasterInventoryGrid_C::GridInventory' has a wrong offset!");
static_assert(offsetof(UBP_MasterInventoryGrid_C, PlayerInventory) == 0x0002A8, "Member 'UBP_MasterInventoryGrid_C::PlayerInventory' has a wrong offset!");

}

