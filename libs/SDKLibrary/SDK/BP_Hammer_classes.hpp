#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Hammer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterMeleeWeapon_classes.hpp"
#include "E_BuildingMode_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Hammer.BP_Hammer_C
// 0x0030 (0x09D0 - 0x09A0)
class ABP_Hammer_C final : public ABP_MasterMeleeWeapon_C
{
public:
	uint8                                         Pad_57FF[0x2];                                     // 0x0996(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Hammer_C;                        // 0x0998(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x09A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MeleeTraceSocket_C*                 BP_MeleeTraceSocket1;                              // 0x09A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MeleeTraceSocket_C*                 BP_MeleeTraceSocket;                               // 0x09B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            OverlayWidget;                                     // 0x09B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          BlockSwing;                                        // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClientAddOverlayWidget();
	void ClientRemoveOverlayWidget();
	void ExecuteUbergraph_BP_Hammer(int32 EntryPoint);
	void ReceiveDestroyed();
	void ServerBlockSwing(bool bLock);
	void SGK_ClientPrimaryAction(bool KeyDown);
	void SGK_ClientSecondaryAction(bool KeyDown);
	void SGK_HoldableMesh(class UPrimitiveComponent** Mesh);
	void SGK_NewHeld(bool Held);
	void SGK_ResetHoldable();
	void SGK_ServerPrimaryAction(bool KeyDown);
	void ToggleBuildMenu(bool Open);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Hammer_C">();
	}
	static class ABP_Hammer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Hammer_C>();
	}
};
static_assert(alignof(ABP_Hammer_C) == 0x000010, "Wrong alignment on ABP_Hammer_C");
static_assert(sizeof(ABP_Hammer_C) == 0x0009D0, "Wrong size on ABP_Hammer_C");
static_assert(offsetof(ABP_Hammer_C, UberGraphFrame_BP_Hammer_C) == 0x000998, "Member 'ABP_Hammer_C::UberGraphFrame_BP_Hammer_C' has a wrong offset!");
static_assert(offsetof(ABP_Hammer_C, StaticMesh) == 0x0009A0, "Member 'ABP_Hammer_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_Hammer_C, BP_MeleeTraceSocket1) == 0x0009A8, "Member 'ABP_Hammer_C::BP_MeleeTraceSocket1' has a wrong offset!");
static_assert(offsetof(ABP_Hammer_C, BP_MeleeTraceSocket) == 0x0009B0, "Member 'ABP_Hammer_C::BP_MeleeTraceSocket' has a wrong offset!");
static_assert(offsetof(ABP_Hammer_C, OverlayWidget) == 0x0009B8, "Member 'ABP_Hammer_C::OverlayWidget' has a wrong offset!");
static_assert(offsetof(ABP_Hammer_C, BlockSwing) == 0x0009C0, "Member 'ABP_Hammer_C::BlockSwing' has a wrong offset!");

}

