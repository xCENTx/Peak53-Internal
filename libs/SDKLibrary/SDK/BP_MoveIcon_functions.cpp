#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MoveIcon

#include "Basic.hpp"

#include "BP_MoveIcon_classes.hpp"
#include "BP_MoveIcon_parameters.hpp"


namespace SDK
{

// Function BP_MoveIcon.BP_MoveIcon_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MoveIcon_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MoveIcon.BP_MoveIcon_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_MoveIcon_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MoveIcon.BP_MoveIcon_C.ExecuteUbergraph_BP_MoveIcon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MoveIcon_C::ExecuteUbergraph_BP_MoveIcon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "ExecuteUbergraph_BP_MoveIcon");

	Params::BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.InitializeMoveAttachmentItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_AttachmentSlotID              AttachmentID                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MoveIcon_C::InitializeMoveAttachmentItem(const struct FS_AttachmentSlotID& AttachmentID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "InitializeMoveAttachmentItem");

	Params::BP_MoveIcon_C_InitializeMoveAttachmentItem Parms{};

	Parms.AttachmentID = std::move(AttachmentID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.InitializeMoveItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlotID                     Param_ItemSlotID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MoveIcon_C::InitializeMoveItem(const struct FS_InvSlotID& Param_ItemSlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "InitializeMoveItem");

	Params::BP_MoveIcon_C_InitializeMoveItem Parms{};

	Parms.Param_ItemSlotID = std::move(Param_ItemSlotID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveEquipmentItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EquipmentSlotID               Param_EquipmentSlotID                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MoveIcon_C::InitilalizeMoveEquipmentItem(const struct FS_EquipmentSlotID& Param_EquipmentSlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "InitilalizeMoveEquipmentItem");

	Params::BP_MoveIcon_C_InitilalizeMoveEquipmentItem Parms{};

	Parms.Param_EquipmentSlotID = std::move(Param_EquipmentSlotID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveQuickSlot
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlotID                     Param_ItemSlotID                                       (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MoveIcon_C::InitilalizeMoveQuickSlot(const struct FS_InvSlotID& Param_ItemSlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "InitilalizeMoveQuickSlot");

	Params::BP_MoveIcon_C_InitilalizeMoveQuickSlot Parms{};

	Parms.Param_ItemSlotID = std::move(Param_ItemSlotID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveWeaponItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_WeaponSlotID                  Param_WeaponSlotID                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_MoveIcon_C::InitilalizeMoveWeaponItem(const struct FS_WeaponSlotID& Param_WeaponSlotID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "InitilalizeMoveWeaponItem");

	Params::BP_MoveIcon_C_InitilalizeMoveWeaponItem Parms{};

	Parms.Param_WeaponSlotID = std::move(Param_WeaponSlotID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MoveIcon.BP_MoveIcon_C.RotateWidget
// (BlueprintCallable, BlueprintEvent)

void UBP_MoveIcon_C::RotateWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "RotateWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MoveIcon.BP_MoveIcon_C.SetMoveIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_ItemDetails                   ItemDetails                                            (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MoveIcon_C::SetMoveIcon(const struct FS_ItemDetails& ItemDetails, bool Rotated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MoveIcon_C", "SetMoveIcon");

	Params::BP_MoveIcon_C_SetMoveIcon Parms{};

	Parms.ItemDetails = std::move(ItemDetails);
	Parms.Rotated = Rotated;

	UObject::ProcessEvent(Func, &Parms);
}

}

