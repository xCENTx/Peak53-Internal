#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ServerBrowser

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_MasterMenuPanel_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "UMG_structs.hpp"
#include "E_ServerSortType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ServerBrowser.BP_ServerBrowser_C
// 0x01E0 (0x04E0 - 0x0300)
class UBP_ServerBrowser_C final : public UBP_MasterMenuPanel_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ServerBrowser_C;                 // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Backround;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_0;                                          // 0x0310(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_1;                                          // 0x0318(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_1;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_2;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_3;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_4;                                // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_5;                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_6;                                // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_7;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    BP_ServerListing_147;                              // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCheckBox*                              CheckBox_473;                                      // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCircularThrobber*                      CircularThrobber_139;                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PingArrow;                                         // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PlayerArrow;                                       // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                RefreshButton;                                     // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_77;                                      // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ServerVerticalBox;                                 // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Subtitle;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          UseLAN;                                            // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A36[0x3];                                     // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackroundColor;                                    // 0x03B4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A37[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TitleText;                                         // 0x03C8(0x0018)(Edit, BlueprintVisible)
	class FText                                   SubtitleText;                                      // 0x03E0(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         TitleFont;                                         // 0x03F8(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         SubtitleFont;                                      // 0x0450(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FMargin                                ServerListingPadding;                              // 0x04A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FBlueprintSessionResult>        ServerList;                                        // 0x04B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HeighestPlayerCount;                               // 0x04C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A38[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_NoServers_C*                        NoServerText;                                      // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_ServerSortType                              SortType;                                          // 0x04D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeighestPingCount;                                 // 0x04D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSearching;                                       // 0x04DA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature(bool bIsChecked);
	void BndEvt__RefreshButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void ClearServerList();
	void ExecuteUbergraph_BP_ServerBrowser(int32 EntryPoint);
	bool Get_RefreshButton_bIsEnabled();
	ESlateVisibility GetVisibility_0();
	void OnCallback_082A6CC94F6CFA08329835AF8EABC9B0(const struct FGameServerItem& Data);
	void OnCallback_801058C74FE79927C70DD9B77744220F(const TArray<struct FSteamSessionResult>& Results);
	void OnCallback_A704576F446B951529D786A335C0F788(const TArray<struct FSteamSessionResult>& Results);
	void OnRefreshCompleted_082A6CC94F6CFA08329835AF8EABC9B0();
	struct FEventReply PingClicked(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply PlayerCountClicked(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void PopulateServerList(TArray<struct FBlueprintSessionResult>& Servers);
	void PreConstruct(bool IsDesignTime);
	void RefreshServerList();
	void SortByPing(bool HeighestFirst, TArray<struct FBlueprintSessionResult>& Servers, TArray<struct FBlueprintSessionResult>* SortedServer);
	void SortByPlayerCount(bool HeighestFirst, TArray<struct FBlueprintSessionResult>& Servers, TArray<struct FBlueprintSessionResult>* SortedServer);
	TArray<struct FBlueprintSessionResult> SortList(TArray<struct FBlueprintSessionResult>& Servers);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ServerBrowser_C">();
	}
	static class UBP_ServerBrowser_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ServerBrowser_C>();
	}
};
static_assert(alignof(UBP_ServerBrowser_C) == 0x000008, "Wrong alignment on UBP_ServerBrowser_C");
static_assert(sizeof(UBP_ServerBrowser_C) == 0x0004E0, "Wrong size on UBP_ServerBrowser_C");
static_assert(offsetof(UBP_ServerBrowser_C, UberGraphFrame_BP_ServerBrowser_C) == 0x000300, "Member 'UBP_ServerBrowser_C::UberGraphFrame_BP_ServerBrowser_C' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, Backround) == 0x000308, "Member 'UBP_ServerBrowser_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, Border_0) == 0x000310, "Member 'UBP_ServerBrowser_C::Border_0' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, Border_1) == 0x000318, "Member 'UBP_ServerBrowser_C::Border_1' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing) == 0x000320, "Member 'UBP_ServerBrowser_C::BP_ServerListing' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_1) == 0x000328, "Member 'UBP_ServerBrowser_C::BP_ServerListing_1' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_2) == 0x000330, "Member 'UBP_ServerBrowser_C::BP_ServerListing_2' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_3) == 0x000338, "Member 'UBP_ServerBrowser_C::BP_ServerListing_3' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_4) == 0x000340, "Member 'UBP_ServerBrowser_C::BP_ServerListing_4' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_5) == 0x000348, "Member 'UBP_ServerBrowser_C::BP_ServerListing_5' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_6) == 0x000350, "Member 'UBP_ServerBrowser_C::BP_ServerListing_6' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_7) == 0x000358, "Member 'UBP_ServerBrowser_C::BP_ServerListing_7' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BP_ServerListing_147) == 0x000360, "Member 'UBP_ServerBrowser_C::BP_ServerListing_147' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, CheckBox_473) == 0x000368, "Member 'UBP_ServerBrowser_C::CheckBox_473' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, CircularThrobber_139) == 0x000370, "Member 'UBP_ServerBrowser_C::CircularThrobber_139' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, PingArrow) == 0x000378, "Member 'UBP_ServerBrowser_C::PingArrow' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, PlayerArrow) == 0x000380, "Member 'UBP_ServerBrowser_C::PlayerArrow' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, RefreshButton) == 0x000388, "Member 'UBP_ServerBrowser_C::RefreshButton' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, ScrollBox_77) == 0x000390, "Member 'UBP_ServerBrowser_C::ScrollBox_77' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, ServerVerticalBox) == 0x000398, "Member 'UBP_ServerBrowser_C::ServerVerticalBox' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, Subtitle) == 0x0003A0, "Member 'UBP_ServerBrowser_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, Title) == 0x0003A8, "Member 'UBP_ServerBrowser_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, UseLAN) == 0x0003B0, "Member 'UBP_ServerBrowser_C::UseLAN' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, BackroundColor) == 0x0003B4, "Member 'UBP_ServerBrowser_C::BackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, TitleText) == 0x0003C8, "Member 'UBP_ServerBrowser_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, SubtitleText) == 0x0003E0, "Member 'UBP_ServerBrowser_C::SubtitleText' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, TitleFont) == 0x0003F8, "Member 'UBP_ServerBrowser_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, SubtitleFont) == 0x000450, "Member 'UBP_ServerBrowser_C::SubtitleFont' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, ServerListingPadding) == 0x0004A8, "Member 'UBP_ServerBrowser_C::ServerListingPadding' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, ServerList) == 0x0004B8, "Member 'UBP_ServerBrowser_C::ServerList' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, HeighestPlayerCount) == 0x0004C8, "Member 'UBP_ServerBrowser_C::HeighestPlayerCount' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, NoServerText) == 0x0004D0, "Member 'UBP_ServerBrowser_C::NoServerText' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, SortType) == 0x0004D8, "Member 'UBP_ServerBrowser_C::SortType' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, HeighestPingCount) == 0x0004D9, "Member 'UBP_ServerBrowser_C::HeighestPingCount' has a wrong offset!");
static_assert(offsetof(UBP_ServerBrowser_C, IsSearching) == 0x0004DA, "Member 'UBP_ServerBrowser_C::IsSearching' has a wrong offset!");

}

