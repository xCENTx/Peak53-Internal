#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VendorComponent

#include "Basic.hpp"

#include "S_LevelSaveData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_VendorSave_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_VendorBuy_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_VendorSell_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_NotificationDetails_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_VendorComponent.BP_VendorComponent_C.BuyCostCheck
// 0x0198 (0x0198 - 0x0000)
struct BP_VendorComponent_C_BuyCostCheck final
{
public:
	struct FS_VendorBuy                           BuyListing;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveItems;                                       // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6E[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C6F[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     InvSlotsL;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x0080(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound;  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C70[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots;    // 0x00A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots; // 0x00F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C71[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0110(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C72[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound_1; // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C73[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots_1;  // 0x0138(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1; // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_VendorComponent_C_BuyCostCheck) == 0x000008, "Wrong alignment on BP_VendorComponent_C_BuyCostCheck");
static_assert(sizeof(BP_VendorComponent_C_BuyCostCheck) == 0x000198, "Wrong size on BP_VendorComponent_C_BuyCostCheck");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, BuyListing) == 0x000000, "Member 'BP_VendorComponent_C_BuyCostCheck::BuyListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, PlayerInventory) == 0x000040, "Member 'BP_VendorComponent_C_BuyCostCheck::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, RemoveItems) == 0x000048, "Member 'BP_VendorComponent_C_BuyCostCheck::RemoveItems' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, Amount) == 0x00004C, "Member 'BP_VendorComponent_C_BuyCostCheck::Amount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, ReturnValue) == 0x000050, "Member 'BP_VendorComponent_C_BuyCostCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, InvSlotsL) == 0x000058, "Member 'BP_VendorComponent_C_BuyCostCheck::InvSlotsL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_VendorComponent_C_BuyCostCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_VendorComponent_C_BuyCostCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, Temp_int_Array_Index_Variable_1) == 0x000074, "Member 'BP_VendorComponent_C_BuyCostCheck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_VendorComponent_C_BuyCostCheck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Multiply_IntInt_ReturnValue) == 0x00009C, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_ItemsFound) == 0x0000A1, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_InvSlots) == 0x0000A8, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_InvSlots' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_AllInvSlots) == 0x0000F8, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_AllInvSlots' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Array_Length_ReturnValue_1) == 0x000108, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Array_Get_Item_1) == 0x000110, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Less_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_ItemsFound_1) == 0x000130, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_InvSlots_1) == 0x000138, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_InvSlots_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyCostCheck, CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1) == 0x000188, "Member 'BP_VendorComponent_C_BuyCostCheck::CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.BuyVenderItem
// 0x14E0 (0x14E0 - 0x0000)
struct BP_VendorComponent_C_BuyVenderItem final
{
public:
	struct FS_VendorBuy                           BuyListing;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C74[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorBuy                           NewLocalVar_0;                                     // 0x0050(0x0040)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         ItemAmountL;                                       // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C75[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RemainderL;                                        // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastIndexL;                                        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C76[0xF];                                     // 0x00A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x00B0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C77[0x3];                                     // 0x0941(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0948(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C78[0x4];                                     // 0x094C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0958(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C79[0x7];                                     // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0980(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7A[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2;  // 0x09A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7B[0x7];                                     // 0x09B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_2; // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x09C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x09CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x09D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7C[0x4];                                     // 0x09D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x09D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x0A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7D[0x3];                                     // 0x0A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x0A10(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x0A40(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7E[0x4];                                     // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C7F[0x3];                                     // 0x0A6D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0A70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0A74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0A75(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C80[0x2];                                     // 0x0A76(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x0A78(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem_1;         // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C81[0x3];                                     // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem_1;      // 0x0AB0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot_1;           // 0x0AE0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0AF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C82[0x3];                                     // 0x0AF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0AF8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C83[0x7];                                     // 0x0B29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B30(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x13C0(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x13F8(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x1430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StockLimitCheck_ReturnValue;              // 0x1434(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C84[0x3];                                     // 0x1435(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StockLimitCheck_FoundAmount;              // 0x1438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C85[0x4];                                     // 0x143C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_2;                  // 0x1440(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BuyCostCheck_ReturnValue;                 // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem_2;         // 0x1471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C86[0x6];                                     // 0x1472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem_2;      // 0x1478(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot_2;           // 0x14A8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_StockLimitCheck_ReturnValue_1;            // 0x14B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C87[0x3];                                     // 0x14B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_StockLimitCheck_FoundAmount_1;            // 0x14BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x14C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C88[0x7];                                     // 0x14C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_BuyVenderItem) == 0x000010, "Wrong alignment on BP_VendorComponent_C_BuyVenderItem");
static_assert(sizeof(BP_VendorComponent_C_BuyVenderItem) == 0x0014E0, "Wrong size on BP_VendorComponent_C_BuyVenderItem");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, BuyListing) == 0x000000, "Member 'BP_VendorComponent_C_BuyVenderItem::BuyListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, PlayerInventory) == 0x000040, "Member 'BP_VendorComponent_C_BuyVenderItem::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, Amount) == 0x000048, "Member 'BP_VendorComponent_C_BuyVenderItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, NewLocalVar_0) == 0x000050, "Member 'BP_VendorComponent_C_BuyVenderItem::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, ItemAmountL) == 0x000090, "Member 'BP_VendorComponent_C_BuyVenderItem::ItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, RemainderL) == 0x000098, "Member 'BP_VendorComponent_C_BuyVenderItem::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, LastIndexL) == 0x0000A0, "Member 'BP_VendorComponent_C_BuyVenderItem::LastIndexL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, ItemDetailsL) == 0x0000B0, "Member 'BP_VendorComponent_C_BuyVenderItem::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, Temp_bool_Variable) == 0x000940, "Member 'BP_VendorComponent_C_BuyVenderItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, Temp_int_Variable) == 0x000944, "Member 'BP_VendorComponent_C_BuyVenderItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Add_IntInt_ReturnValue) == 0x000948, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_GetGameMode_ReturnValue) == 0x000950, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000958, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_bSuccess) == 0x000968, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_GetGameMode_ReturnValue_1) == 0x000970, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000978, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000980, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_bSuccess_1) == 0x000990, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000998, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_GetGameMode_ReturnValue_2) == 0x0009A0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2) == 0x0009A8, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_DynamicCast_bSuccess_2) == 0x0009B8, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory_2) == 0x0009C0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_FFloor_ReturnValue) == 0x0009C8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_Select_Default) == 0x0009CC, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, Temp_int_Variable_1) == 0x0009D0, "Member 'BP_VendorComponent_C_BuyVenderItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_CreateNewItem_NewItem) == 0x0009D8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000A08, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingItem) == 0x000A0C, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x000A10, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_NewItemSlot) == 0x000A40, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000A50, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Multiply_IntInt_ReturnValue) == 0x000A54, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000A58, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_FMod_Remainder) == 0x000A60, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_FMod_ReturnValue) == 0x000A68, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A6C, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000A70, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000A74, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000A75, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_CreateNewItem_NewItem_1) == 0x000A78, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000AA8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingItem_1) == 0x000AAC, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingInvItem_1) == 0x000AB0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingInvItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_NewItemSlot_1) == 0x000AE0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_NewItemSlot_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000AF0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000AF4, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_MakeStruct_S_InvItem) == 0x000AF8, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B28, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B30, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_MakeStruct_S_NotificationDetails) == 0x0013C0, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0013F8, "Member 'BP_VendorComponent_C_BuyVenderItem::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x001430, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_StockLimitCheck_ReturnValue) == 0x001434, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_StockLimitCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_StockLimitCheck_FoundAmount) == 0x001438, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_StockLimitCheck_FoundAmount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_CreateNewItem_NewItem_2) == 0x001440, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_CreateNewItem_NewItem_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_BuyCostCheck_ReturnValue) == 0x001470, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_BuyCostCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingItem_2) == 0x001471, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingItem_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_RemainingInvItem_2) == 0x001478, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_RemainingInvItem_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_AttemptToAddItem_NewItemSlot_2) == 0x0014A8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_AttemptToAddItem_NewItemSlot_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_StockLimitCheck_ReturnValue_1) == 0x0014B8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_StockLimitCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_StockLimitCheck_FoundAmount_1) == 0x0014BC, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_StockLimitCheck_FoundAmount_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0014C0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_FMod_Divisor_ImplicitCast) == 0x0014C8, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_BuyVenderItem, CallFunc_FMod_Dividend_ImplicitCast) == 0x0014D0, "Member 'BP_VendorComponent_C_BuyVenderItem::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.ExecuteUbergraph_BP_VendorComponent
// 0x0100 (0x0100 - 0x0000)
struct BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C89[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8A[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VendorBuy                           K2Node_CustomEvent_VenderBuyListing;               // 0x0020(0x0040)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_CustomEvent_PlayerInventory_1;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VendorBuy                           CallFunc_Array_Get_Item;                           // 0x0070(0x0040)(HasGetValueTypeHash)
	struct FS_VendorSell                          K2Node_CustomEvent_VenderSellListing;              // 0x00B0(0x0038)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_CustomEvent_PlayerInventory;                // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8B[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent) == 0x000008, "Wrong alignment on BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent");
static_assert(sizeof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent) == 0x000100, "Wrong size on BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, EntryPoint) == 0x000000, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_Event_SaveGame) == 0x000008, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_BooleanAND_ReturnValue) == 0x000018, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_VenderBuyListing) == 0x000020, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_VenderBuyListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_PlayerInventory_1) == 0x000060, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_PlayerInventory_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_Amount_1) == 0x000068, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_VenderSellListing) == 0x0000B0, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_VenderSellListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_PlayerInventory) == 0x0000E8, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, K2Node_CustomEvent_Amount) == 0x0000F0, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'BP_VendorComponent_C_ExecuteUbergraph_BP_VendorComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.LoadComponentData
// 0x0160 (0x0160 - 0x0000)
struct BP_VendorComponent_C_LoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadComplete;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8D[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindVenderSaveData_SaveFound;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8E[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorSave                          CallFunc_FindVenderSaveData_Array_Element;         // 0x00A0(0x00B0)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentRestockTime_ImplicitCast; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_LoadComponentData) == 0x000010, "Wrong alignment on BP_VendorComponent_C_LoadComponentData");
static_assert(sizeof(BP_VendorComponent_C_LoadComponentData) == 0x000160, "Wrong size on BP_VendorComponent_C_LoadComponentData");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, SaveGame) == 0x000000, "Member 'BP_VendorComponent_C_LoadComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, LoadComplete) == 0x000008, "Member 'BP_VendorComponent_C_LoadComponentData::LoadComplete' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000010, "Member 'BP_VendorComponent_C_LoadComponentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_VendorComponent_C_LoadComponentData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_VendorComponent_C_LoadComponentData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, CallFunc_FindVenderSaveData_SaveFound) == 0x000090, "Member 'BP_VendorComponent_C_LoadComponentData::CallFunc_FindVenderSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, CallFunc_FindVenderSaveData_Array_Element) == 0x0000A0, "Member 'BP_VendorComponent_C_LoadComponentData::CallFunc_FindVenderSaveData_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_LoadComponentData, K2Node_VariableSet_CurrentRestockTime_ImplicitCast) == 0x000150, "Member 'BP_VendorComponent_C_LoadComponentData::K2Node_VariableSet_CurrentRestockTime_ImplicitCast' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.RestockCheckTimer
// 0x0080 (0x0080 - 0x0000)
struct BP_VendorComponent_C_RestockCheckTimer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C8F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_VendorBuy                           CallFunc_Array_Get_Item;                           // 0x0018(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C90[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C91[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_RestockCheckTimer) == 0x000008, "Wrong alignment on BP_VendorComponent_C_RestockCheckTimer");
static_assert(sizeof(BP_VendorComponent_C_RestockCheckTimer) == 0x000080, "Wrong size on BP_VendorComponent_C_RestockCheckTimer");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_VendorComponent_C_RestockCheckTimer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_VendorComponent_C_RestockCheckTimer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, Temp_real_Variable) == 0x000010, "Member 'BP_VendorComponent_C_RestockCheckTimer::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Greater_IntInt_ReturnValue) == 0x00005C, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_RestockCheckTimer, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_VendorComponent_C_RestockCheckTimer::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.SaveComponentData
// 0x0008 (0x0008 - 0x0000)
struct BP_VendorComponent_C_SaveComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_SaveComponentData) == 0x000008, "Wrong alignment on BP_VendorComponent_C_SaveComponentData");
static_assert(sizeof(BP_VendorComponent_C_SaveComponentData) == 0x000008, "Wrong size on BP_VendorComponent_C_SaveComponentData");
static_assert(offsetof(BP_VendorComponent_C_SaveComponentData, SaveGame) == 0x000000, "Member 'BP_VendorComponent_C_SaveComponentData::SaveGame' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.SaveVenderData
// 0x0298 (0x0298 - 0x0000)
struct BP_VendorComponent_C_SaveVenderData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x0008(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PrepareVenderSaveData_ExtraDataIndex;     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C92[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_PrepareVenderSaveData_NewLevelSaveData;   // 0x00F0(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C93[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x01C8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_SaveVenderData) == 0x000008, "Wrong alignment on BP_VendorComponent_C_SaveVenderData");
static_assert(sizeof(BP_VendorComponent_C_SaveVenderData) == 0x000298, "Wrong size on BP_VendorComponent_C_SaveVenderData");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, SaveGame) == 0x000000, "Member 'BP_VendorComponent_C_SaveVenderData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, LevelSaveDataL) == 0x000008, "Member 'BP_VendorComponent_C_SaveVenderData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000D8, "Member 'BP_VendorComponent_C_SaveVenderData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, CallFunc_PrepareVenderSaveData_ExtraDataIndex) == 0x0000E8, "Member 'BP_VendorComponent_C_SaveVenderData::CallFunc_PrepareVenderSaveData_ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, CallFunc_PrepareVenderSaveData_NewLevelSaveData) == 0x0000F0, "Member 'BP_VendorComponent_C_SaveVenderData::CallFunc_PrepareVenderSaveData_NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, CallFunc_SelectLevelSaveData_SaveFound) == 0x0001C0, "Member 'BP_VendorComponent_C_SaveVenderData::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SaveVenderData, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x0001C8, "Member 'BP_VendorComponent_C_SaveVenderData::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.SellVenderItem
// 0x1470 (0x1470 - 0x0000)
struct BP_VendorComponent_C_SellVenderItem final
{
public:
	struct FS_VendorSell                          SellListing;                                       // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C94[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RemainingL;                                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LastIndexL;                                        // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C95[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0060(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingCost                        AddingItemL;                                       // 0x08F0(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     InvSlotsL;                                         // 0x0908(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0919(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C96[0x2];                                     // 0x091A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C97[0x7];                                     // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0948(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C98[0x7];                                     // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0960(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C99[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9A[0x3];                                     // 0x0989(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0998(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9B[0x7];                                     // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x09D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x0A00(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9C[0x4];                                     // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0A30(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9D[0xF];                                     // 0x0A61(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0A70(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9E[0x7];                                     // 0x1301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x1308(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x1338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x133C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x1342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C9F[0x1];                                     // 0x1343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x1348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA0[0x4];                                     // 0x134C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x1350(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem_1;         // 0x1388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA1[0x7];                                     // 0x1389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem_1;      // 0x1390(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot_1;           // 0x13C0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x13D0(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x13E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x13EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA2[0x3];                                     // 0x13ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x13F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound;  // 0x13F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA3[0x3];                                     // 0x13F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots;    // 0x13F8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots; // 0x1448(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA4[0x7];                                     // 0x1459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x1460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x1468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_SellVenderItem) == 0x000010, "Wrong alignment on BP_VendorComponent_C_SellVenderItem");
static_assert(sizeof(BP_VendorComponent_C_SellVenderItem) == 0x001470, "Wrong size on BP_VendorComponent_C_SellVenderItem");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, SellListing) == 0x000000, "Member 'BP_VendorComponent_C_SellVenderItem::SellListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, PlayerInventory) == 0x000038, "Member 'BP_VendorComponent_C_SellVenderItem::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Amount) == 0x000040, "Member 'BP_VendorComponent_C_SellVenderItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, RemainingL) == 0x000048, "Member 'BP_VendorComponent_C_SellVenderItem::RemainingL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, LastIndexL) == 0x000050, "Member 'BP_VendorComponent_C_SellVenderItem::LastIndexL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, ItemDetailsL) == 0x000060, "Member 'BP_VendorComponent_C_SellVenderItem::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, AddingItemL) == 0x0008F0, "Member 'BP_VendorComponent_C_SellVenderItem::AddingItemL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, InvSlotsL) == 0x000908, "Member 'BP_VendorComponent_C_SellVenderItem::InvSlotsL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_bool_Variable) == 0x000918, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000919, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_int_Loop_Counter_Variable) == 0x00091C, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Add_IntInt_ReturnValue) == 0x000920, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_int_Array_Index_Variable) == 0x000924, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_int_Variable) == 0x000928, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00092C, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_bool_Variable_1) == 0x000930, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_GetGameMode_ReturnValue) == 0x000938, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_GetGameMode_ReturnValue_1) == 0x000940, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000948, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_DynamicCast_bSuccess) == 0x000958, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000960, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_DynamicCast_bSuccess_1) == 0x000970, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000978, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000980, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000988, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_FFloor_ReturnValue) == 0x00098C, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SelectInt_ReturnValue) == 0x000990, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_Select_Default) == 0x000994, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_CreateNewItem_NewItem) == 0x000998, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_RemainingItem) == 0x0009C8, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x0009D0, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_NewItemSlot) == 0x000A00, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000A10, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000A14, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_FMod_Remainder) == 0x000A18, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_FMod_ReturnValue) == 0x000A20, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000A24, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_Select_Default_1) == 0x000A28, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_MakeStruct_S_InvItem) == 0x000A30, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000A60, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000A70, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001300, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_CreateNewItem_NewItem_1) == 0x001308, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x001338, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, Temp_int_Variable_1) == 0x00133C, "Member 'BP_VendorComponent_C_SellVenderItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x001340, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001341, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x001342, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x001344, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Multiply_IntInt_ReturnValue) == 0x001348, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, K2Node_MakeStruct_S_NotificationDetails) == 0x001350, "Member 'BP_VendorComponent_C_SellVenderItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_RemainingItem_1) == 0x001388, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_RemainingItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_RemainingInvItem_1) == 0x001390, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_RemainingInvItem_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_AttemptToAddItem_NewItemSlot_1) == 0x0013C0, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_AttemptToAddItem_NewItemSlot_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Array_Get_Item) == 0x0013D0, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Array_Length_ReturnValue) == 0x0013E8, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Less_IntInt_ReturnValue) == 0x0013EC, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Array_Length_ReturnValue_1) == 0x0013F0, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SearchPlayerInventoryForItem_ItemsFound) == 0x0013F4, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SearchPlayerInventoryForItem_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SearchPlayerInventoryForItem_InvSlots) == 0x0013F8, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SearchPlayerInventoryForItem_InvSlots' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_SearchPlayerInventoryForItem_AllInvSlots) == 0x001448, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_SearchPlayerInventoryForItem_AllInvSlots' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_Greater_IntInt_ReturnValue) == 0x001458, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_FMod_Divisor_ImplicitCast) == 0x001460, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_SellVenderItem, CallFunc_FMod_Dividend_ImplicitCast) == 0x001468, "Member 'BP_VendorComponent_C_SellVenderItem::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.ServerBuyVenderItem
// 0x0050 (0x0050 - 0x0000)
struct BP_VendorComponent_C_ServerBuyVenderItem final
{
public:
	struct FS_VendorBuy                           VenderBuyListing;                                  // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_ServerBuyVenderItem) == 0x000008, "Wrong alignment on BP_VendorComponent_C_ServerBuyVenderItem");
static_assert(sizeof(BP_VendorComponent_C_ServerBuyVenderItem) == 0x000050, "Wrong size on BP_VendorComponent_C_ServerBuyVenderItem");
static_assert(offsetof(BP_VendorComponent_C_ServerBuyVenderItem, VenderBuyListing) == 0x000000, "Member 'BP_VendorComponent_C_ServerBuyVenderItem::VenderBuyListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ServerBuyVenderItem, PlayerInventory) == 0x000040, "Member 'BP_VendorComponent_C_ServerBuyVenderItem::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ServerBuyVenderItem, Amount) == 0x000048, "Member 'BP_VendorComponent_C_ServerBuyVenderItem::Amount' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.ServerSellVenderItem
// 0x0048 (0x0048 - 0x0000)
struct BP_VendorComponent_C_ServerSellVenderItem final
{
public:
	struct FS_VendorSell                          VenderSellListing;                                 // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_ServerSellVenderItem) == 0x000008, "Wrong alignment on BP_VendorComponent_C_ServerSellVenderItem");
static_assert(sizeof(BP_VendorComponent_C_ServerSellVenderItem) == 0x000048, "Wrong size on BP_VendorComponent_C_ServerSellVenderItem");
static_assert(offsetof(BP_VendorComponent_C_ServerSellVenderItem, VenderSellListing) == 0x000000, "Member 'BP_VendorComponent_C_ServerSellVenderItem::VenderSellListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ServerSellVenderItem, PlayerInventory) == 0x000038, "Member 'BP_VendorComponent_C_ServerSellVenderItem::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_ServerSellVenderItem, Amount) == 0x000040, "Member 'BP_VendorComponent_C_ServerSellVenderItem::Amount' has a wrong offset!");

// Function BP_VendorComponent.BP_VendorComponent_C.StockLimitCheck
// 0x0120 (0x0120 - 0x0000)
struct BP_VendorComponent_C_StockLimitCheck final
{
public:
	struct FS_VendorBuy                           BuyListing;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          RemoveStock;                                       // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA5[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA6[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FoundAmount;                                       // 0x004C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveL;                                           // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA7[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FoundL;                                            // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndexL;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA8[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorBuy                           ArrayElementL;                                     // 0x0060(0x0040)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CA9[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CAA[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x00C8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CAB[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorBuy                           CallFunc_Array_Get_Item_3;                         // 0x00D0(0x0040)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CAC[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorComponent_C_StockLimitCheck) == 0x000008, "Wrong alignment on BP_VendorComponent_C_StockLimitCheck");
static_assert(sizeof(BP_VendorComponent_C_StockLimitCheck) == 0x000120, "Wrong size on BP_VendorComponent_C_StockLimitCheck");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, BuyListing) == 0x000000, "Member 'BP_VendorComponent_C_StockLimitCheck::BuyListing' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, RemoveStock) == 0x000040, "Member 'BP_VendorComponent_C_StockLimitCheck::RemoveStock' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, Amount) == 0x000044, "Member 'BP_VendorComponent_C_StockLimitCheck::Amount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, ReturnValue) == 0x000048, "Member 'BP_VendorComponent_C_StockLimitCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, FoundAmount) == 0x00004C, "Member 'BP_VendorComponent_C_StockLimitCheck::FoundAmount' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, ReturnValueL) == 0x000050, "Member 'BP_VendorComponent_C_StockLimitCheck::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, RemoveL) == 0x000051, "Member 'BP_VendorComponent_C_StockLimitCheck::RemoveL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, FoundL) == 0x000054, "Member 'BP_VendorComponent_C_StockLimitCheck::FoundL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, ArrayIndexL) == 0x000058, "Member 'BP_VendorComponent_C_StockLimitCheck::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, ArrayElementL) == 0x000060, "Member 'BP_VendorComponent_C_StockLimitCheck::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_VendorComponent_C_StockLimitCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_VendorComponent_C_StockLimitCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000AC, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, Temp_bool_Variable) == 0x0000B4, "Member 'BP_VendorComponent_C_StockLimitCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Array_Get_Item_1) == 0x0000B8, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Array_Get_Item_2) == 0x0000BC, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, K2Node_Select_Default) == 0x0000C8, "Member 'BP_VendorComponent_C_StockLimitCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x0000CD, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Array_Get_Item_3) == 0x0000D0, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000110, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Array_Length_ReturnValue) == 0x000114, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorComponent_C_StockLimitCheck, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_VendorComponent_C_StockLimitCheck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

