#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Smoke_Grenade

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterExplosiveThrowable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Smoke_Grenade.BP_Smoke_Grenade_C
// 0x0020 (0x0850 - 0x0830)
class ABP_Smoke_Grenade_C final : public ABP_MasterExplosiveThrowable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Smoke_Grenade_C;                 // 0x0828(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         SmokeTimeFrame_NewTrack_0_C1ADBC694AF107AD602076B2C777B532; // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            SmokeTimeFrame__Direction_C1ADBC694AF107AD602076B2C777B532; // 0x0834(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D74[0x3];                                     // 0x0835(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     SmokeTimeFrame;                                    // 0x0838(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         SmokeTimer;                                        // 0x0840(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Smoke_Grenade(int32 EntryPoint);
	void ReceiveBeginPlay();
	void SmokeTimeFrame__FinishedFunc();
	void SmokeTimeFrame__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Smoke_Grenade_C">();
	}
	static class ABP_Smoke_Grenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Smoke_Grenade_C>();
	}
};
static_assert(alignof(ABP_Smoke_Grenade_C) == 0x000010, "Wrong alignment on ABP_Smoke_Grenade_C");
static_assert(sizeof(ABP_Smoke_Grenade_C) == 0x000850, "Wrong size on ABP_Smoke_Grenade_C");
static_assert(offsetof(ABP_Smoke_Grenade_C, UberGraphFrame_BP_Smoke_Grenade_C) == 0x000828, "Member 'ABP_Smoke_Grenade_C::UberGraphFrame_BP_Smoke_Grenade_C' has a wrong offset!");
static_assert(offsetof(ABP_Smoke_Grenade_C, SmokeTimeFrame_NewTrack_0_C1ADBC694AF107AD602076B2C777B532) == 0x000830, "Member 'ABP_Smoke_Grenade_C::SmokeTimeFrame_NewTrack_0_C1ADBC694AF107AD602076B2C777B532' has a wrong offset!");
static_assert(offsetof(ABP_Smoke_Grenade_C, SmokeTimeFrame__Direction_C1ADBC694AF107AD602076B2C777B532) == 0x000834, "Member 'ABP_Smoke_Grenade_C::SmokeTimeFrame__Direction_C1ADBC694AF107AD602076B2C777B532' has a wrong offset!");
static_assert(offsetof(ABP_Smoke_Grenade_C, SmokeTimeFrame) == 0x000838, "Member 'ABP_Smoke_Grenade_C::SmokeTimeFrame' has a wrong offset!");
static_assert(offsetof(ABP_Smoke_Grenade_C, SmokeTimer) == 0x000840, "Member 'ABP_Smoke_Grenade_C::SmokeTimer' has a wrong offset!");

}

