#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExtCookingMenu

#include "Basic.hpp"

#include "BP_ExtCookingMenu_classes.hpp"
#include "BP_ExtCookingMenu_parameters.hpp"


namespace SDK
{

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.BndEvt__Button_144_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_ExtCookingMenu_C::BndEvt__Button_144_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "BndEvt__Button_144_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ClearCurrentSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::ClearCurrentSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ClearCurrentSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructCookingSlots
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::ConstructCookingSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ConstructCookingSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructFuelInvSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::ConstructFuelInvSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ConstructFuelInvSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructStorageInvSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::ConstructStorageInvSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ConstructStorageInvSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ExecuteUbergraph_BP_ExtCookingMenu
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::ExecuteUbergraph_BP_ExtCookingMenu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ExecuteUbergraph_BP_ExtCookingMenu");

	Params::BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.FindCookingSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CookingSlot                   ConvertSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_CookingSlot_C*                CookingSlot                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

bool UBP_ExtCookingMenu_C::FindCookingSlot(const struct FS_CookingSlot& ConvertSlot, class UBP_CookingSlot_C** CookingSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "FindCookingSlot");

	Params::BP_ExtCookingMenu_C_FindCookingSlot Parms{};

	Parms.ConvertSlot = std::move(ConvertSlot);

	UObject::ProcessEvent(Func, &Parms);

	if (CookingSlot != nullptr)
		*CookingSlot = Parms.CookingSlot;

	return Parms.ReturnValue;
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.Get_OnButtonText_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_ExtCookingMenu_C::Get_OnButtonText_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "Get_OnButtonText_Text_0");

	Params::BP_ExtCookingMenu_C_Get_OnButtonText_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.InitializeExtCookingMenu
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MasterInventory_C*            CraftingInventory                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::InitializeExtCookingMenu(class UBP_MasterInventory_C* CraftingInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "InitializeExtCookingMenu");

	Params::BP_ExtCookingMenu_C_InitializeExtCookingMenu Parms{};

	Parms.CraftingInventory = CraftingInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.InitizlizeCookingInvGrids
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::InitizlizeCookingInvGrids()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "InitizlizeCookingInvGrids");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UnPauseSingleSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Pause                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::UnPauseSingleSlot(int32 Param_Index, bool Pause)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "UnPauseSingleSlot");

	Params::BP_ExtCookingMenu_C_UnPauseSingleSlot Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Pause = Pause;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PauseAllCookingSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::PauseAllCookingSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "PauseAllCookingSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PauseCookingSlotTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CookingSlot                   ConvertSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::PauseCookingSlotTimer(const struct FS_CookingSlot& ConvertSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "PauseCookingSlotTimer");

	Params::BP_ExtCookingMenu_C_PauseCookingSlotTimer Parms{};

	Parms.ConvertSlot = std::move(ConvertSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "PreConstruct");

	Params::BP_ExtCookingMenu_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.RestartCookingSlotTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CookingSlot                   ConvertSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::RestartCookingSlotTimer(const struct FS_CookingSlot& ConvertSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "RestartCookingSlotTimer");

	Params::BP_ExtCookingMenu_C_RestartCookingSlotTimer Parms{};

	Parms.ConvertSlot = std::move(ConvertSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ResumeAllCookingSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::ResumeAllCookingSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ResumeAllCookingSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ResumeCookingSlotTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CookingSlot                   ConvertSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::ResumeCookingSlotTimer(const struct FS_CookingSlot& ConvertSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "ResumeCookingSlotTimer");

	Params::BP_ExtCookingMenu_C_ResumeCookingSlotTimer Parms{};

	Parms.ConvertSlot = std::move(ConvertSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK CellSlots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_InventoryCell_C*>      Cells                                                  (Parm, OutParm, ContainsInstancedReference)

void UBP_ExtCookingMenu_C::SGK_CellSlots(TArray<class UBP_InventoryCell_C*>* Cells)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "SGK CellSlots");

	Params::BP_ExtCookingMenu_C_SGK_CellSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Cells != nullptr)
		*Cells = std::move(Parms.Cells);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK ConstructGrid
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MasterInventory_C*            GridInventory                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::SGK_ConstructGrid(class UBP_MasterInventory_C* GridInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "SGK ConstructGrid");

	Params::BP_ExtCookingMenu_C_SGK_ConstructGrid Parms{};

	Parms.GridInventory = GridInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK InvItemSlots
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_InventoryItemIcon_C*>  ItemInvWidgets                                         (Parm, OutParm, ContainsInstancedReference)

void UBP_ExtCookingMenu_C::SGK_InvItemSlots(TArray<class UBP_InventoryItemIcon_C*>* ItemInvWidgets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "SGK InvItemSlots");

	Params::BP_ExtCookingMenu_C_SGK_InvItemSlots Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemInvWidgets != nullptr)
		*ItemInvWidgets = std::move(Parms.ItemInvWidgets);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.StartCookingSlotTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CookingSlot                   ConvertSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::StartCookingSlotTimer(const struct FS_CookingSlot& ConvertSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "StartCookingSlotTimer");

	Params::BP_ExtCookingMenu_C_StartCookingSlotTimer Parms{};

	Parms.ConvertSlot = std::move(ConvertSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UpdateCookingSlot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       CookingSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_ExtCookingMenu_C::UpdateCookingSlot(const struct FS_InvSlot& CookingSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "UpdateCookingSlot");

	Params::BP_ExtCookingMenu_C_UpdateCookingSlot Parms{};

	Parms.CookingSlot = std::move(CookingSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UpdateWeight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ExtCookingMenu_C::UpdateWeight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ExtCookingMenu_C", "UpdateWeight");

	UObject::ProcessEvent(Func, nullptr);
}

}

