#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CookingSlot

#include "Basic.hpp"

#include "BP_CookingSlot_classes.hpp"
#include "BP_CookingSlot_parameters.hpp"


namespace SDK
{

// Function BP_CookingSlot.BP_CookingSlot_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_CookingSlot_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.ExecuteUbergraph_BP_CookingSlot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::ExecuteUbergraph_BP_CookingSlot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "ExecuteUbergraph_BP_CookingSlot");

	Params::BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.Get_ProgressText_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_CookingSlot_C::Get_ProgressText_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "Get_ProgressText_Text_0");

	Params::BP_CookingSlot_C_Get_ProgressText_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.GetItemName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_CookingSlot_C::GetItemName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "GetItemName");

	Params::BP_CookingSlot_C_GetItemName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.GetProgressPercentText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_CookingSlot_C::GetProgressPercentText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "GetProgressPercentText");

	Params::BP_CookingSlot_C_GetProgressPercentText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.HideOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::HideOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "HideOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.IsItemValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ItemValid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::IsItemValid(bool* ItemValid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "IsItemValid");

	Params::BP_CookingSlot_C_IsItemValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ItemValid != nullptr)
		*ItemValid = Parms.ItemValid;
}


// Function BP_CookingSlot.BP_CookingSlot_C.LoadGameSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::LoadGameSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "LoadGameSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnDragDetected
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnDragDetected");

	Params::BP_CookingSlot_C_OnDragDetected Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);

	UObject::ProcessEvent(Func, &Parms);

	if (Operation != nullptr)
		*Operation = Parms.Operation;
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_CookingSlot_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnDrop");

	Params::BP_CookingSlot_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseButtonDoubleClick
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        InMyGeometry                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    InMouseEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_CookingSlot_C::OnMouseButtonDoubleClick(const struct FGeometry& InMyGeometry, const struct FPointerEvent& InMouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnMouseButtonDoubleClick");

	Params::BP_CookingSlot_C_OnMouseButtonDoubleClick Parms{};

	Parms.InMyGeometry = std::move(InMyGeometry);
	Parms.InMouseEvent = std::move(InMouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_CookingSlot_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnMouseButtonDown");

	Params::BP_CookingSlot_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CookingSlot_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnMouseEnter");

	Params::BP_CookingSlot_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_CookingSlot_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "OnMouseLeave");

	Params::BP_CookingSlot_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.PauseTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::PauseTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "PauseTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "PreConstruct");

	Params::BP_CookingSlot_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.RestartTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::RestartTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "RestartTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.ResumeFrom
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_CurrentTime                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Param_TimerLength                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Paused                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::ResumeFrom(double Param_CurrentTime, double Param_TimerLength, bool Paused)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "ResumeFrom");

	Params::BP_CookingSlot_C_ResumeFrom Parms{};

	Parms.Param_CurrentTime = Param_CurrentTime;
	Parms.Param_TimerLength = Param_TimerLength;
	Parms.Paused = Paused;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.ResumeTimer
// (BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::ResumeTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "ResumeTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.SetProgressPercent
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::SetProgressPercent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "SetProgressPercent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.ShowGreenOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::ShowGreenOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "ShowGreenOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.ShowRedOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::ShowRedOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "ShowRedOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CookingSlot.BP_CookingSlot_C.StartTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_CookingSlot_C::StartTimer(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "StartTimer");

	Params::BP_CookingSlot_C_StartTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.UpdateCookingItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       Param_CookingSlot                                      (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_CookingSlot_C::UpdateCookingItem(const struct FS_InvSlot& Param_CookingSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "UpdateCookingItem");

	Params::BP_CookingSlot_C_UpdateCookingItem Parms{};

	Parms.Param_CookingSlot = std::move(Param_CookingSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CookingSlot.BP_CookingSlot_C.UpdateItemCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_CookingSlot_C::UpdateItemCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CookingSlot_C", "UpdateItemCount");

	UObject::ProcessEvent(Func, nullptr);
}

}

