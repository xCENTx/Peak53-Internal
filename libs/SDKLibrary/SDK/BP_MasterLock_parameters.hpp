#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterLock

#include "Basic.hpp"

#include "S_WorldAction_structs.hpp"
#include "S_LockSave_structs.hpp"
#include "S_LevelSaveData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_WorldActions_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterLock.BP_MasterLock_C.CanOpen
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_CanOpen final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          AllowOpen;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVerifiedPlayer_IsVerified;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwner_ReturnValue;                      // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_CanOpen) == 0x000008, "Wrong alignment on BP_MasterLock_C_CanOpen");
static_assert(sizeof(BP_MasterLock_C_CanOpen) == 0x000020, "Wrong size on BP_MasterLock_C_CanOpen");
static_assert(offsetof(BP_MasterLock_C_CanOpen, Param_Name) == 0x000000, "Member 'BP_MasterLock_C_CanOpen::Param_Name' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_CanOpen, AllowOpen) == 0x000018, "Member 'BP_MasterLock_C_CanOpen::AllowOpen' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_CanOpen, CallFunc_IsVerifiedPlayer_IsVerified) == 0x000019, "Member 'BP_MasterLock_C_CanOpen::CallFunc_IsVerifiedPlayer_IsVerified' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_CanOpen, CallFunc_IsOwner_ReturnValue) == 0x00001A, "Member 'BP_MasterLock_C_CanOpen::CallFunc_IsOwner_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.ExecuteUbergraph_BP_MasterLock
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5378[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5379[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LoadLockData_OwnerLocation;               // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Locked;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_Event_PlayerInventory;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_FromSaveGame;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock) == 0x000008, "Wrong alignment on BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock");
static_assert(sizeof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock) == 0x000048, "Wrong size on BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, EntryPoint) == 0x000000, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, K2Node_Event_SaveGame) == 0x000008, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, K2Node_Event_Index) == 0x000010, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, CallFunc_LoadLockData_OwnerLocation) == 0x000018, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::CallFunc_LoadLockData_OwnerLocation' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, K2Node_CustomEvent_Locked) == 0x000030, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::K2Node_CustomEvent_Locked' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, K2Node_Event_PlayerInventory) == 0x000038, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::K2Node_Event_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock, K2Node_Event_FromSaveGame) == 0x000040, "Member 'BP_MasterLock_C_ExecuteUbergraph_BP_MasterLock::K2Node_Event_FromSaveGame' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.IsVerifiedPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_IsVerifiedPlayer final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsVerified;                                        // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_IsVerifiedPlayer) == 0x000008, "Wrong alignment on BP_MasterLock_C_IsVerifiedPlayer");
static_assert(sizeof(BP_MasterLock_C_IsVerifiedPlayer) == 0x000020, "Wrong size on BP_MasterLock_C_IsVerifiedPlayer");
static_assert(offsetof(BP_MasterLock_C_IsVerifiedPlayer, PlayerName) == 0x000000, "Member 'BP_MasterLock_C_IsVerifiedPlayer::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_IsVerifiedPlayer, IsVerified) == 0x000018, "Member 'BP_MasterLock_C_IsVerifiedPlayer::IsVerified' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_IsVerifiedPlayer, CallFunc_Array_Contains_ReturnValue) == 0x000019, "Member 'BP_MasterLock_C_IsVerifiedPlayer::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.LoadExtraData
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterLock_C_LoadExtraData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_LoadExtraData) == 0x000008, "Wrong alignment on BP_MasterLock_C_LoadExtraData");
static_assert(sizeof(BP_MasterLock_C_LoadExtraData) == 0x000010, "Wrong size on BP_MasterLock_C_LoadExtraData");
static_assert(offsetof(BP_MasterLock_C_LoadExtraData, SaveGame) == 0x000000, "Member 'BP_MasterLock_C_LoadExtraData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadExtraData, Param_Index) == 0x000008, "Member 'BP_MasterLock_C_LoadExtraData::Param_Index' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.LoadLockData
// 0x0228 (0x0228 - 0x0000)
struct BP_MasterLock_C_LoadLockData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                OwnerLocation;                                     // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x0028(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_LockSave                            CallFunc_Array_Get_Item;                           // 0x0108(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537C[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x0158(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_LoadLockData) == 0x000008, "Wrong alignment on BP_MasterLock_C_LoadLockData");
static_assert(sizeof(BP_MasterLock_C_LoadLockData) == 0x000228, "Wrong size on BP_MasterLock_C_LoadLockData");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, SaveGame) == 0x000000, "Member 'BP_MasterLock_C_LoadLockData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, Param_Index) == 0x000008, "Member 'BP_MasterLock_C_LoadLockData::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, OwnerLocation) == 0x000010, "Member 'BP_MasterLock_C_LoadLockData::OwnerLocation' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, LevelSaveDataL) == 0x000028, "Member 'BP_MasterLock_C_LoadLockData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000F8, "Member 'BP_MasterLock_C_LoadLockData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_MasterLock_C_LoadLockData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, CallFunc_SelectLevelSaveData_SaveFound) == 0x000150, "Member 'BP_MasterLock_C_LoadLockData::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_LoadLockData, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x000158, "Member 'BP_MasterLock_C_LoadLockData::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.LockEffects
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterLock_C_LockEffects final
{
public:
	bool                                          Param_Locked;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_LockEffects) == 0x000001, "Wrong alignment on BP_MasterLock_C_LockEffects");
static_assert(sizeof(BP_MasterLock_C_LockEffects) == 0x000001, "Wrong size on BP_MasterLock_C_LockEffects");
static_assert(offsetof(BP_MasterLock_C_LockEffects, Param_Locked) == 0x000000, "Member 'BP_MasterLock_C_LockEffects::Param_Locked' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.RandomCode
// 0x0060 (0x0060 - 0x0000)
struct BP_MasterLock_C_RandomCode final
{
public:
	bool                                          SameCodeFoundL;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537D[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_537F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterLock_C*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5380[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterLock_C*                       CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5381[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_RandomCode) == 0x000008, "Wrong alignment on BP_MasterLock_C_RandomCode");
static_assert(sizeof(BP_MasterLock_C_RandomCode) == 0x000060, "Wrong size on BP_MasterLock_C_RandomCode");
static_assert(offsetof(BP_MasterLock_C_RandomCode, SameCodeFoundL) == 0x000000, "Member 'BP_MasterLock_C_RandomCode::SameCodeFoundL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'BP_MasterLock_C_RandomCode::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterLock_C_RandomCode::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MasterLock_C_RandomCode::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'BP_MasterLock_C_RandomCode::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000028, "Member 'BP_MasterLock_C_RandomCode::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000050, "Member 'BP_MasterLock_C_RandomCode::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000058, "Member 'BP_MasterLock_C_RandomCode::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_MasterLock_C_RandomCode::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_RandomCode, CallFunc_BooleanAND_ReturnValue) == 0x00005A, "Member 'BP_MasterLock_C_RandomCode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SaveExtraData
// 0x0288 (0x0288 - 0x0000)
struct BP_MasterLock_C_SaveExtraData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveData;                                     // 0x0008(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ExtraDataIndex;                                    // 0x00D8(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5382[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       NewLevelSaveData;                                  // 0x00E0(0x00D0)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SaveLockData_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5383[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SaveLockData_NewLevelSaveData;            // 0x01B8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SaveExtraData) == 0x000008, "Wrong alignment on BP_MasterLock_C_SaveExtraData");
static_assert(sizeof(BP_MasterLock_C_SaveExtraData) == 0x000288, "Wrong size on BP_MasterLock_C_SaveExtraData");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, SaveGame) == 0x000000, "Member 'BP_MasterLock_C_SaveExtraData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, LevelSaveData) == 0x000008, "Member 'BP_MasterLock_C_SaveExtraData::LevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, ExtraDataIndex) == 0x0000D8, "Member 'BP_MasterLock_C_SaveExtraData::ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, NewLevelSaveData) == 0x0000E0, "Member 'BP_MasterLock_C_SaveExtraData::NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, CallFunc_SaveLockData_ReturnValue) == 0x0001B0, "Member 'BP_MasterLock_C_SaveExtraData::CallFunc_SaveLockData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveExtraData, CallFunc_SaveLockData_NewLevelSaveData) == 0x0001B8, "Member 'BP_MasterLock_C_SaveExtraData::CallFunc_SaveLockData_NewLevelSaveData' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SaveLockData
// 0x0310 (0x0310 - 0x0000)
struct BP_MasterLock_C_SaveLockData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveData;                                     // 0x0008(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x00D8(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5384[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       NewLevelSaveData;                                  // 0x00E0(0x00D0)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                LocationL;                                         // 0x01B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x01C8(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAttachParentActor_ReturnValue;         // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5385[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_LockSave                            K2Node_MakeStruct_S_LockSave;                      // 0x02C0(0x0048)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SaveLockData) == 0x000008, "Wrong alignment on BP_MasterLock_C_SaveLockData");
static_assert(sizeof(BP_MasterLock_C_SaveLockData) == 0x000310, "Wrong size on BP_MasterLock_C_SaveLockData");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, SaveGame) == 0x000000, "Member 'BP_MasterLock_C_SaveLockData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, LevelSaveData) == 0x000008, "Member 'BP_MasterLock_C_SaveLockData::LevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, ReturnValue) == 0x0000D8, "Member 'BP_MasterLock_C_SaveLockData::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, NewLevelSaveData) == 0x0000E0, "Member 'BP_MasterLock_C_SaveLockData::NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, LocationL) == 0x0001B0, "Member 'BP_MasterLock_C_SaveLockData::LocationL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, LevelSaveDataL) == 0x0001C8, "Member 'BP_MasterLock_C_SaveLockData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, CallFunc_GetAttachParentActor_ReturnValue) == 0x000298, "Member 'BP_MasterLock_C_SaveLockData::CallFunc_GetAttachParentActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, CallFunc_IsValid_ReturnValue) == 0x0002A0, "Member 'BP_MasterLock_C_SaveLockData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A8, "Member 'BP_MasterLock_C_SaveLockData::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, K2Node_MakeStruct_S_LockSave) == 0x0002C0, "Member 'BP_MasterLock_C_SaveLockData::K2Node_MakeStruct_S_LockSave' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SaveLockData, CallFunc_Array_Add_ReturnValue) == 0x000308, "Member 'BP_MasterLock_C_SaveLockData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK AddMultipleOwners
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterLock_C_SGK_AddMultipleOwners final
{
public:
	TArray<class FText>                           Param_Owners;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AddMultipleOwners_ReturnValue;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_AddMultipleOwners) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_AddMultipleOwners");
static_assert(sizeof(BP_MasterLock_C_SGK_AddMultipleOwners) == 0x000018, "Wrong size on BP_MasterLock_C_SGK_AddMultipleOwners");
static_assert(offsetof(BP_MasterLock_C_SGK_AddMultipleOwners, Param_Owners) == 0x000000, "Member 'BP_MasterLock_C_SGK_AddMultipleOwners::Param_Owners' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_AddMultipleOwners, ReturnValue) == 0x000010, "Member 'BP_MasterLock_C_SGK_AddMultipleOwners::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_AddMultipleOwners, CallFunc_SGK_AddMultipleOwners_ReturnValue) == 0x000011, "Member 'BP_MasterLock_C_SGK_AddMultipleOwners::CallFunc_SGK_AddMultipleOwners_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK AddOwner
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_SGK_AddOwner final
{
public:
	class FText                                   PlayerName;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AddOwner_ReturnValue;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5386[0x2];                                     // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_AddOwner) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_AddOwner");
static_assert(sizeof(BP_MasterLock_C_SGK_AddOwner) == 0x000020, "Wrong size on BP_MasterLock_C_SGK_AddOwner");
static_assert(offsetof(BP_MasterLock_C_SGK_AddOwner, PlayerName) == 0x000000, "Member 'BP_MasterLock_C_SGK_AddOwner::PlayerName' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_AddOwner, ReturnValue) == 0x000018, "Member 'BP_MasterLock_C_SGK_AddOwner::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_AddOwner, CallFunc_SGK_AddOwner_ReturnValue) == 0x000019, "Member 'BP_MasterLock_C_SGK_AddOwner::CallFunc_SGK_AddOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_AddOwner, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'BP_MasterLock_C_SGK_AddOwner::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK AllowInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterLock_C_SGK_AllowInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_AllowInteraction) == 0x000001, "Wrong alignment on BP_MasterLock_C_SGK_AllowInteraction");
static_assert(sizeof(BP_MasterLock_C_SGK_AllowInteraction) == 0x000001, "Wrong size on BP_MasterLock_C_SGK_AllowInteraction");
static_assert(offsetof(BP_MasterLock_C_SGK_AllowInteraction, AllowInteraction) == 0x000000, "Member 'BP_MasterLock_C_SGK_AllowInteraction::AllowInteraction' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK BuildPartPlaced
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterLock_C_SGK_BuildPartPlaced final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FromSaveGame;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_BuildPartPlaced) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_BuildPartPlaced");
static_assert(sizeof(BP_MasterLock_C_SGK_BuildPartPlaced) == 0x000010, "Wrong size on BP_MasterLock_C_SGK_BuildPartPlaced");
static_assert(offsetof(BP_MasterLock_C_SGK_BuildPartPlaced, PlayerInventory) == 0x000000, "Member 'BP_MasterLock_C_SGK_BuildPartPlaced::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_BuildPartPlaced, FromSaveGame) == 0x000008, "Member 'BP_MasterLock_C_SGK_BuildPartPlaced::FromSaveGame' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK CodeCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_SGK_CodeCheck final
{
public:
	class FText                                   Param_Code;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CodeAccepted;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_CodeCheck) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_CodeCheck");
static_assert(sizeof(BP_MasterLock_C_SGK_CodeCheck) == 0x000020, "Wrong size on BP_MasterLock_C_SGK_CodeCheck");
static_assert(offsetof(BP_MasterLock_C_SGK_CodeCheck, Param_Code) == 0x000000, "Member 'BP_MasterLock_C_SGK_CodeCheck::Param_Code' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_CodeCheck, CodeAccepted) == 0x000018, "Member 'BP_MasterLock_C_SGK_CodeCheck::CodeAccepted' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_CodeCheck, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000019, "Member 'BP_MasterLock_C_SGK_CodeCheck::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK Interact
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_SGK_Interact final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                Action;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwner_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5387[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_Select_Default;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOwner_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVerifiedPlayer_IsVerified;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_Interact) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_Interact");
static_assert(sizeof(BP_MasterLock_C_SGK_Interact) == 0x000020, "Wrong size on BP_MasterLock_C_SGK_Interact");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, PlayerInventory) == 0x000000, "Member 'BP_MasterLock_C_SGK_Interact::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, Action) == 0x000008, "Member 'BP_MasterLock_C_SGK_Interact::Action' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, ReturnValue) == 0x000009, "Member 'BP_MasterLock_C_SGK_Interact::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'BP_MasterLock_C_SGK_Interact::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, CallFunc_IsOwner_ReturnValue) == 0x00000B, "Member 'BP_MasterLock_C_SGK_Interact::CallFunc_IsOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, Temp_bool_Variable) == 0x00000C, "Member 'BP_MasterLock_C_SGK_Interact::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'BP_MasterLock_C_SGK_Interact::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, K2Node_Select_Default) == 0x000010, "Member 'BP_MasterLock_C_SGK_Interact::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, CallFunc_IsOwner_ReturnValue_1) == 0x000018, "Member 'BP_MasterLock_C_SGK_Interact::CallFunc_IsOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_Interact, CallFunc_IsVerifiedPlayer_IsVerified) == 0x000019, "Member 'BP_MasterLock_C_SGK_Interact::CallFunc_IsVerifiedPlayer_IsVerified' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK PossibleActions
// 0x0188 (0x0188 - 0x0000)
struct BP_MasterLock_C_SGK_PossibleActions final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionsFound;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5388[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WorldAction>                 PossibleActions;                                   // 0x0010(0x0010)(Parm, OutParm)
	bool                                          VerifiedL;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOwnerL;                                          // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5389[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0028(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538A[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_1;                              // 0x0048(0x0018)()
	bool                                          CallFunc_IsOwner_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538B[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable_2;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0080(0x0018)()
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538C[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction;                   // 0x00A0(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction_1;                 // 0x00D0(0x0020)(HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default;                             // 0x00F0(0x0018)()
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction_2;                 // 0x0108(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array_1;                          // 0x0128(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538D[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x0140(0x0018)()
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction_3;                 // 0x0158(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array_2;                          // 0x0178(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_MasterLock_C_SGK_PossibleActions) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_PossibleActions");
static_assert(sizeof(BP_MasterLock_C_SGK_PossibleActions) == 0x000188, "Wrong size on BP_MasterLock_C_SGK_PossibleActions");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, PlayerInventory) == 0x000000, "Member 'BP_MasterLock_C_SGK_PossibleActions::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, ActionsFound) == 0x000008, "Member 'BP_MasterLock_C_SGK_PossibleActions::ActionsFound' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, PossibleActions) == 0x000010, "Member 'BP_MasterLock_C_SGK_PossibleActions::PossibleActions' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, VerifiedL) == 0x000020, "Member 'BP_MasterLock_C_SGK_PossibleActions::VerifiedL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, IsOwnerL) == 0x000021, "Member 'BP_MasterLock_C_SGK_PossibleActions::IsOwnerL' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_text_Variable) == 0x000028, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_MasterLock_C_SGK_PossibleActions::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_text_Variable_1) == 0x000048, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, CallFunc_IsOwner_ReturnValue) == 0x000060, "Member 'BP_MasterLock_C_SGK_PossibleActions::CallFunc_IsOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_bool_Variable) == 0x000061, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_text_Variable_2) == 0x000068, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_text_Variable_3) == 0x000080, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, Temp_bool_Variable_1) == 0x000098, "Member 'BP_MasterLock_C_SGK_PossibleActions::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction) == 0x0000A0, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeArray_Array) == 0x0000C0, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction_1) == 0x0000D0, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_Select_Default) == 0x0000F0, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction_2) == 0x000108, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction_2' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeArray_Array_1) == 0x000128, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, CallFunc_Array_Contains_ReturnValue) == 0x000138, "Member 'BP_MasterLock_C_SGK_PossibleActions::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_Select_Default_1) == 0x000140, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction_3) == 0x000158, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction_3' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_PossibleActions, K2Node_MakeArray_Array_2) == 0x000178, "Member 'BP_MasterLock_C_SGK_PossibleActions::K2Node_MakeArray_Array_2' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK UpdateCode
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_SGK_UpdateCode final
{
public:
	class FText                                   Param_Code;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_UpdateCode) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_UpdateCode");
static_assert(sizeof(BP_MasterLock_C_SGK_UpdateCode) == 0x000020, "Wrong size on BP_MasterLock_C_SGK_UpdateCode");
static_assert(offsetof(BP_MasterLock_C_SGK_UpdateCode, Param_Code) == 0x000000, "Member 'BP_MasterLock_C_SGK_UpdateCode::Param_Code' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_UpdateCode, ReturnValue) == 0x000018, "Member 'BP_MasterLock_C_SGK_UpdateCode::ReturnValue' has a wrong offset!");

// Function BP_MasterLock.BP_MasterLock_C.SGK VerifyPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterLock_C_SGK_VerifyPlayer final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538E[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterLock_C_SGK_VerifyPlayer) == 0x000008, "Wrong alignment on BP_MasterLock_C_SGK_VerifyPlayer");
static_assert(sizeof(BP_MasterLock_C_SGK_VerifyPlayer) == 0x000020, "Wrong size on BP_MasterLock_C_SGK_VerifyPlayer");
static_assert(offsetof(BP_MasterLock_C_SGK_VerifyPlayer, Text) == 0x000000, "Member 'BP_MasterLock_C_SGK_VerifyPlayer::Text' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_VerifyPlayer, ReturnValue) == 0x000018, "Member 'BP_MasterLock_C_SGK_VerifyPlayer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterLock_C_SGK_VerifyPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'BP_MasterLock_C_SGK_VerifyPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

