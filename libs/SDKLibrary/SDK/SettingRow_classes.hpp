#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SettingRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass SettingRow.SettingRow_C
// 0x0050 (0x02C8 - 0x0278)
class USettingRow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                AlternatingRowBorder;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ContentSize;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LabelText;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             SettingContent;                                    // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x02A0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Index_SettingRow_C;                                // 0x02B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354E[0x4];                                     // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinDesiredWidth;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SettingRow(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SettingRow_C">();
	}
	static class USettingRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USettingRow_C>();
	}
};
static_assert(alignof(USettingRow_C) == 0x000008, "Wrong alignment on USettingRow_C");
static_assert(sizeof(USettingRow_C) == 0x0002C8, "Wrong size on USettingRow_C");
static_assert(offsetof(USettingRow_C, UberGraphFrame) == 0x000278, "Member 'USettingRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USettingRow_C, AlternatingRowBorder) == 0x000280, "Member 'USettingRow_C::AlternatingRowBorder' has a wrong offset!");
static_assert(offsetof(USettingRow_C, ContentSize) == 0x000288, "Member 'USettingRow_C::ContentSize' has a wrong offset!");
static_assert(offsetof(USettingRow_C, LabelText) == 0x000290, "Member 'USettingRow_C::LabelText' has a wrong offset!");
static_assert(offsetof(USettingRow_C, SettingContent) == 0x000298, "Member 'USettingRow_C::SettingContent' has a wrong offset!");
static_assert(offsetof(USettingRow_C, Label) == 0x0002A0, "Member 'USettingRow_C::Label' has a wrong offset!");
static_assert(offsetof(USettingRow_C, Index_SettingRow_C) == 0x0002B8, "Member 'USettingRow_C::Index_SettingRow_C' has a wrong offset!");
static_assert(offsetof(USettingRow_C, MinDesiredWidth) == 0x0002C0, "Member 'USettingRow_C::MinDesiredWidth' has a wrong offset!");

}

