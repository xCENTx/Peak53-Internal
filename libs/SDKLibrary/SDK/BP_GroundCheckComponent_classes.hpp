#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GroundCheckComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "PhysicsCore_structs.hpp"
#include "E_InventoryRestrictionType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GroundCheckComponent.BP_GroundCheckComponent_C
// 0x0050 (0x02F0 - 0x02A0)
class UBP_GroundCheckComponent_C final : public USceneComponent
{
public:
	double                                        GroundTraceDistance;                               // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TraceDown;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               TraceVisibility;                                   // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               GroundTraceChannel;                                // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	uint8                                         Pad_4356[0x5];                                     // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         IgnoreActorClasses;                                // 0x02B0(0x0010)(Edit, BlueprintVisible)
	E_InventoryRestrictionType                    UseSurfaceRestrictions;                            // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4357[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPhysicalSurface>                      RestrictedSurfaces;                                // 0x02C8(0x0010)(Edit, BlueprintVisible)
	bool                                          UseHitActorRestriction;                            // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4358[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         HitActorClassRestriction;                          // 0x02E0(0x0010)(Edit, BlueprintVisible)

public:
	bool GroundTrace(class AActor* Actor, struct FHitResult* OutHit);
	bool HitRestrictionsCheck(class AActor* HitActor);
	bool SurfaceRestrictionsCheck(class UPhysicalMaterial* Surface);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GroundCheckComponent_C">();
	}
	static class UBP_GroundCheckComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GroundCheckComponent_C>();
	}
};
static_assert(alignof(UBP_GroundCheckComponent_C) == 0x000010, "Wrong alignment on UBP_GroundCheckComponent_C");
static_assert(sizeof(UBP_GroundCheckComponent_C) == 0x0002F0, "Wrong size on UBP_GroundCheckComponent_C");
static_assert(offsetof(UBP_GroundCheckComponent_C, GroundTraceDistance) == 0x0002A0, "Member 'UBP_GroundCheckComponent_C::GroundTraceDistance' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, TraceDown) == 0x0002A8, "Member 'UBP_GroundCheckComponent_C::TraceDown' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, TraceVisibility) == 0x0002A9, "Member 'UBP_GroundCheckComponent_C::TraceVisibility' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, GroundTraceChannel) == 0x0002AA, "Member 'UBP_GroundCheckComponent_C::GroundTraceChannel' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, IgnoreActorClasses) == 0x0002B0, "Member 'UBP_GroundCheckComponent_C::IgnoreActorClasses' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, UseSurfaceRestrictions) == 0x0002C0, "Member 'UBP_GroundCheckComponent_C::UseSurfaceRestrictions' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, RestrictedSurfaces) == 0x0002C8, "Member 'UBP_GroundCheckComponent_C::RestrictedSurfaces' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, UseHitActorRestriction) == 0x0002D8, "Member 'UBP_GroundCheckComponent_C::UseHitActorRestriction' has a wrong offset!");
static_assert(offsetof(UBP_GroundCheckComponent_C, HitActorClassRestriction) == 0x0002E0, "Member 'UBP_GroundCheckComponent_C::HitActorClassRestriction' has a wrong offset!");

}

