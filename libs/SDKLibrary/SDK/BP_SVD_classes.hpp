#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SVD

#include "Basic.hpp"

#include "BP_MasterRangeWeapon_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SVD.BP_SVD_C
// 0x0040 (0x0E50 - 0x0E10)
class ABP_SVD_C final : public ABP_MasterRangeWeapon_C
{
public:
	class UStaticMeshComponent*                   Rail;                                              // 0x0E10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Flashlight;                                        // 0x0E18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_SVD_PSO_mesh_026;                               // 0x0E20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal4;                                            // 0x0E28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal2;                                            // 0x0E30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal1;                                            // 0x0E38(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        Decal;                                             // 0x0E40(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SVD_C">();
	}
	static class ABP_SVD_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SVD_C>();
	}
};
static_assert(alignof(ABP_SVD_C) == 0x000010, "Wrong alignment on ABP_SVD_C");
static_assert(sizeof(ABP_SVD_C) == 0x000E50, "Wrong size on ABP_SVD_C");
static_assert(offsetof(ABP_SVD_C, Rail) == 0x000E10, "Member 'ABP_SVD_C::Rail' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, Flashlight) == 0x000E18, "Member 'ABP_SVD_C::Flashlight' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, SM_SVD_PSO_mesh_026) == 0x000E20, "Member 'ABP_SVD_C::SM_SVD_PSO_mesh_026' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, Decal4) == 0x000E28, "Member 'ABP_SVD_C::Decal4' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, Decal2) == 0x000E30, "Member 'ABP_SVD_C::Decal2' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, Decal1) == 0x000E38, "Member 'ABP_SVD_C::Decal1' has a wrong offset!");
static_assert(offsetof(ABP_SVD_C, Decal) == 0x000E40, "Member 'ABP_SVD_C::Decal' has a wrong offset!");

}

