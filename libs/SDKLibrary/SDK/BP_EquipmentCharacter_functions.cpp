#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentCharacter

#include "Basic.hpp"

#include "BP_EquipmentCharacter_classes.hpp"
#include "BP_EquipmentCharacter_parameters.hpp"


namespace SDK
{

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.AutoLadderClimbVault
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::AutoLadderClimbVault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "AutoLadderClimbVault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Bind Meshes to Master Component
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Bind_Meshes_to_Master_Component()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Bind Meshes to Master Component");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CameraChange TPP__FinishedFunc
// (BlueprintEvent)

void ABP_EquipmentCharacter_C::CameraChange_TPP__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CameraChange TPP__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CameraChange TPP__UpdateFunc
// (BlueprintEvent)

void ABP_EquipmentCharacter_C::CameraChange_TPP__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CameraChange TPP__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CameraChangeProne__FinishedFunc
// (BlueprintEvent)

void ABP_EquipmentCharacter_C::CameraChangeProne__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CameraChangeProne__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CameraChangeProne__UpdateFunc
// (BlueprintEvent)

void ABP_EquipmentCharacter_C::CameraChangeProne__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CameraChangeProne__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Load Loadout Data
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CL_Load_Loadout_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CL_Load Loadout Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Load Loadout from Slot
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::CL_Load_Loadout_from_Slot(int32 Slot_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CL_Load Loadout from Slot");

	Params::BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot Parms{};

	Parms.Slot_Index = Slot_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Save Loadout Data
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CL_Save_Loadout_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CL_Save Loadout Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Save Loadout to Slot
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Loadout_Name                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::CL_Save_Loadout_to_Slot(int32 Slot_Index, class FName Loadout_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CL_Save Loadout to Slot");

	Params::BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot Parms{};

	Parms.Slot_Index = Slot_Index;
	Parms.Loadout_Name = Loadout_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CMDUpdateEquipmentForAllClients
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_CurrentEquipment                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::CMDUpdateEquipmentForAllClients(const class FString& Param_CurrentEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CMDUpdateEquipmentForAllClients");

	Params::BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients Parms{};

	Parms.Param_CurrentEquipment = std::move(Param_CurrentEquipment);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Create Camo DMI
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Create_Camo_DMI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Create Camo DMI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CustomEvent
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CustomEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CustomEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CustomEvent_0
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CustomEvent_R
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CustomEvent_R()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CustomEvent_R");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CustomEvent_RS
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::CustomEvent_RS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "CustomEvent_RS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.DisableCollisionMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::DisableCollisionMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "DisableCollisionMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.DisableCollisionSv
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::DisableCollisionSv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "DisableCollisionSv");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.EquipCharRef_INT
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_EquipmentCharacter_C*         Param_EquipCharRef_INT                                 (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::EquipCharRef_INT(class ABP_EquipmentCharacter_C** Param_EquipCharRef_INT)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "EquipCharRef_INT");

	Params::BP_EquipmentCharacter_C_EquipCharRef_INT Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_EquipCharRef_INT != nullptr)
		*Param_EquipCharRef_INT = Parms.Param_EquipCharRef_INT;
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ExecuteUbergraph_BP_EquipmentCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::ExecuteUbergraph_BP_EquipmentCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "ExecuteUbergraph_BP_EquipmentCharacter");

	Params::BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.GetisInTopBox
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTopBox                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::GetisInTopBox(bool* IsTopBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "GetisInTopBox");

	Params::BP_EquipmentCharacter_C_GetisInTopBox Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTopBox != nullptr)
		*IsTopBox = Parms.IsTopBox;
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.GetisOnLadder
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsOnladder                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::GetisOnLadder(bool* Param_IsOnladder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "GetisOnLadder");

	Params::BP_EquipmentCharacter_C_GetisOnLadder Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsOnladder != nullptr)
		*Param_IsOnladder = Parms.Param_IsOnladder;
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Four_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Four_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Four_K2Node_InputKeyEvent_5");

	Params::BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Jump_K2Node_InputActionEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Jump_K2Node_InputActionEvent_1");

	Params::BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Jump_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Jump_K2Node_InputActionEvent_2");

	Params::BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_LeftShift_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_LeftShift_K2Node_InputKeyEvent_1");

	Params::BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_LeftShift_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_LeftShift_K2Node_InputKeyEvent_2");

	Params::BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");

	Params::BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_One_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_One_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_One_K2Node_InputKeyEvent_3");

	Params::BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Prone_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Prone_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Prone_K2Node_InputActionEvent_0");

	Params::BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Three_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Three_K2Node_InputKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Three_K2Node_InputKeyEvent_6");

	Params::BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Two_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::InpActEvt_Two_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "InpActEvt_Two_K2Node_InputKeyEvent_4");

	Params::BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Load Loadout Data
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Load_Loadout_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Load Loadout Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Load Loadout from Slot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Load_Loadout_from_Slot(int32 Slot_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Load Loadout from Slot");

	Params::BP_EquipmentCharacter_C_Load_Loadout_from_Slot Parms{};

	Parms.Slot_Index = Slot_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Make Equipment Array
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Make_Equipment_Array()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Make Equipment Array");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MC_Change Equipment Mesh
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class USkeletalMesh*                    NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::MC_Change_Equipment_Mesh(class USkeletalMeshComponent* Target, class USkeletalMesh* NewMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "MC_Change Equipment Mesh");

	Params::BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh Parms{};

	Parms.Target = Target;
	Parms.NewMesh = NewMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MC_Equip Item
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Item_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::MC_Equip_Item(class FName Item_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "MC_Equip Item");

	Params::BP_EquipmentCharacter_C_MC_Equip_Item Parms{};

	Parms.Item_ID = Item_ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MLT_PlayEnterExitMontage
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::MLT_PlayEnterExitMontage(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "MLT_PlayEnterExitMontage");

	Params::BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Multicast Sound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Multicast_Sound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Multicast Sound");

	Params::BP_EquipmentCharacter_C_Multicast_Sound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MulticastEquipItem
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Item_ID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::MulticastEquipItem(class FName Item_ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "MulticastEquipItem");

	Params::BP_EquipmentCharacter_C_MulticastEquipItem Parms{};

	Parms.Item_ID = Item_ID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentAddItem
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewEquipment                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::NewEquipmentAddItem(const class FString& NewEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentAddItem");

	Params::BP_EquipmentCharacter_C_NewEquipmentAddItem Parms{};

	Parms.NewEquipment = std::move(NewEquipment);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentClearItems
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::NewEquipmentClearItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentClearItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentGetTargetSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_EquipmentSlots                        Slot                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USkeletalMeshComponent*           TargetMesh                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::NewEquipmentGetTargetSlot(E_EquipmentSlots Slot, class USkeletalMeshComponent** TargetMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentGetTargetSlot");

	Params::BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot Parms{};

	Parms.Slot = Slot;

	UObject::ProcessEvent(Func, &Parms);

	if (TargetMesh != nullptr)
		*TargetMesh = Parms.TargetMesh;
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentResetToDefault
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPeak53Teams                            Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::NewEquipmentResetToDefault(EPeak53Teams Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentResetToDefault");

	Params::BP_EquipmentCharacter_C_NewEquipmentResetToDefault Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentResetToOutfit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewEquipment                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    UpdateVisual                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::NewEquipmentResetToOutfit(const class FString& NewEquipment, bool UpdateVisual)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentResetToOutfit");

	Params::BP_EquipmentCharacter_C_NewEquipmentResetToOutfit Parms{};

	Parms.NewEquipment = std::move(NewEquipment);
	Parms.UpdateVisual = UpdateVisual;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentUpdateVisuals
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::NewEquipmentUpdateVisuals(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "NewEquipmentUpdateVisuals");

	Params::BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521");

	Params::BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnCompleted_BCAA89434B5A978F4970D9A3D52B6521
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::OnCompleted_BCAA89434B5A978F4970D9A3D52B6521(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnCompleted_BCAA89434B5A978F4970D9A3D52B6521");

	Params::BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521");

	Params::BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521");

	Params::BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521");

	Params::BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnPossessed_Client
// (Event, Public, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnPossessed_Client()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnPossessed_Client");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_bgettingup?
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_bgettingup_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_bgettingup?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_bproning
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_bproning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_bproning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_goingdowncodeExe
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_goingdowncodeExe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_goingdowncodeExe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_InLadderSystem
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_InLadderSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_InLadderSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_LadderOnPressed
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_LadderOnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_LadderOnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_MyClimbingUpGettingOff?
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_MyClimbingUpGettingOff_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_MyClimbingUpGettingOff?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_OnMyLadder
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_OnMyLadder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_OnMyLadder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_youareatthetop
// (BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::OnRep_youareatthetop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "OnRep_youareatthetop");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Open Equipment Screen
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Open_Equipment_Screen()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Open Equipment Screen");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Open Equipment Sound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Open_Equipment_Sound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Open Equipment Sound");

	Params::BP_EquipmentCharacter_C_Open_Equipment_Sound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Peak_GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPeak53Teams                            Param_CharacterTeam                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Peak_GetTeam(EPeak53Teams* Param_CharacterTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Peak_GetTeam");

	Params::BP_EquipmentCharacter_C_Peak_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_CharacterTeam != nullptr)
		*Param_CharacterTeam = Parms.Param_CharacterTeam;
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.PlayEnterExitMontage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::PlayEnterExitMontage(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "PlayEnterExitMontage");

	Params::BP_EquipmentCharacter_C_PlayEnterExitMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EquipmentCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "ReceiveEndPlay");

	Params::BP_EquipmentCharacter_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "ReceivePossessed");

	Params::BP_EquipmentCharacter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "ReceiveTick");

	Params::BP_EquipmentCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Register with Weapon Hot System
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Register_with_Weapon_Hot_System()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Register with Weapon Hot System");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.RPCUpdateEquipment
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::RPCUpdateEquipment(const class FString& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "RPCUpdateEquipment");

	Params::BP_EquipmentCharacter_C_RPCUpdateEquipment Parms{};

	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Save Current Loadout to Slot
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Slot_Index                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Loadout_Name                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Save_Current_Loadout_to_Slot(int32 Slot_Index, class FName Loadout_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Save Current Loadout to Slot");

	Params::BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot Parms{};

	Parms.Slot_Index = Slot_Index;
	Parms.Loadout_Name = Loadout_Name;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Save Loadout Data
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Save_Loadout_Data()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Save Loadout Data");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Select Next Camo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Select_Next_Camo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Select Next Camo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SetisInTopBox
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTopBox                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::SetisInTopBox(bool IsTopBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "SetisInTopBox");

	Params::BP_EquipmentCharacter_C_SetisInTopBox Parms{};

	Parms.IsTopBox = IsTopBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SetOnLadderBool
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsOnladder                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::SetOnLadderBool(bool Param_IsOnladder)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "SetOnLadderBool");

	Params::BP_EquipmentCharacter_C_SetOnLadderBool Parms{};

	Parms.Param_IsOnladder = Param_IsOnladder;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SRV_PlayEnterExitMontage
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::SRV_PlayEnterExitMontage(class UAnimMontage* MontageToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "SRV_PlayEnterExitMontage");

	Params::BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage Parms{};

	Parms.MontageToPlay = MontageToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SV_Equip Loadout
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_LoadoutData                  ST_LoadoutData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::SV_Equip_Loadout(const struct FST_LoadoutData& ST_LoadoutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "SV_Equip Loadout");

	Params::BP_EquipmentCharacter_C_SV_Equip_Loadout Parms{};

	Parms.ST_LoadoutData = std::move(ST_LoadoutData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellClinetProneToStand
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    P                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::TellClinetProneToStand(bool P, bool G)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "TellClinetProneToStand");

	Params::BP_EquipmentCharacter_C_TellClinetProneToStand Parms{};

	Parms.P = P;
	Parms.G = G;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellClinetStandToProne
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    P                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::TellClinetStandToProne(bool P, bool G)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "TellClinetStandToProne");

	Params::BP_EquipmentCharacter_C_TellClinetStandToProne Parms{};

	Parms.P = P;
	Parms.G = G;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellServerProneToStand
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    P                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::TellServerProneToStand(bool P, bool G)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "TellServerProneToStand");

	Params::BP_EquipmentCharacter_C_TellServerProneToStand Parms{};

	Parms.P = P;
	Parms.G = G;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellServerStandToProne
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    P                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    G                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::TellServerStandToProne(bool P, bool G)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "TellServerStandToProne");

	Params::BP_EquipmentCharacter_C_TellServerStandToProne Parms{};

	Parms.P = P;
	Parms.G = G;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.UnDetectedRifleCheck
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::UnDetectedRifleCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "UnDetectedRifleCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Update All Players
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::Update_All_Players()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Update All Players");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Update Current Loadout
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EquipmentCharacter_C::Update_Current_Loadout(int32 Param_Index, const class FName& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "Update Current Loadout");

	Params::BP_EquipmentCharacter_C_Update_Current_Loadout Parms{};

	Parms.Param_Index = Param_Index;
	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.VaultMC
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::VaultMC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "VaultMC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.VaultSv
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_EquipmentCharacter_C::VaultSv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EquipmentCharacter_C", "VaultSv");

	UObject::ProcessEvent(Func, nullptr);
}

}

