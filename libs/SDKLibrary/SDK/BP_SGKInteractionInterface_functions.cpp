#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKInteractionInterface

#include "Basic.hpp"

#include "BP_SGKInteractionInterface_classes.hpp"
#include "BP_SGKInteractionInterface_parameters.hpp"


namespace SDK
{

// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK AllowInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllowInteraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_AllowInteraction(bool* AllowInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK AllowInteraction");

	Params::BP_SGKInteractionInterface_C_SGK_AllowInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllowInteraction != nullptr)
		*AllowInteraction = Parms.AllowInteraction;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK CodeCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    CodeAccepted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_CodeCheck(const class FText& Code, bool* CodeAccepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK CodeCheck");

	Params::BP_SGKInteractionInterface_C_SGK_CodeCheck Parms{};

	Parms.Code = std::move(Code);

	UObject::ProcessEvent(Func, &Parms);

	if (CodeAccepted != nullptr)
		*CodeAccepted = Parms.CodeAccepted;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK DropItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Dropped                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Spawned                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SaveLoaded                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKInteractionInterface_C::SGK_DropItem(const struct FS_InvItem& InvItem, bool Dropped, bool Spawned, bool SaveLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK DropItem");

	Params::BP_SGKInteractionInterface_C_SGK_DropItem Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.Dropped = Dropped;
	Parms.Spawned = Spawned;
	Parms.SaveLoaded = SaveLoaded;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK EndInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKInteractionInterface_C::SGK_EndInteraction(class UBP_PlayerInventory_C* PlayerInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK EndInteraction");

	Params::BP_SGKInteractionInterface_C_SGK_EndInteraction Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK GetVerifiedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     VerifiedPlayers                                        (Parm, OutParm)

void IBP_SGKInteractionInterface_C::SGK_GetVerifiedPlayers(TArray<class FText>* VerifiedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK GetVerifiedPlayers");

	Params::BP_SGKInteractionInterface_C_SGK_GetVerifiedPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VerifiedPlayers != nullptr)
		*VerifiedPlayers = std::move(Parms.VerifiedPlayers);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK Interact
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_WorldActions                          Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKInteractionInterface_C::SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK Interact");

	Params::BP_SGKInteractionInterface_C_SGK_Interact Parms{};

	Parms.PlayerInventory = PlayerInventory;
	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK InteractName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InteractName                                           (Parm, OutParm)

void IBP_SGKInteractionInterface_C::SGK_InteractName(class FText* InteractName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK InteractName");

	Params::BP_SGKInteractionInterface_C_SGK_InteractName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractName != nullptr)
		*InteractName = std::move(Parms.InteractName);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK InvItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsItem                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_InvItem                       InvItem                                                (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_InvItem(bool* IsItem, struct FS_InvItem* InvItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK InvItem");

	Params::BP_SGKInteractionInterface_C_SGK_InvItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsItem != nullptr)
		*IsItem = Parms.IsItem;

	if (InvItem != nullptr)
		*InvItem = std::move(Parms.InvItem);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK ItemAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_ItemAmount(int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK ItemAmount");

	Params::BP_SGKInteractionInterface_C_SGK_ItemAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK Mesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_Mesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK Mesh");

	Params::BP_SGKInteractionInterface_C_SGK_Mesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK PlayerInProximity
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_SGKInteractionInterface_C::SGK_PlayerInProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK PlayerInProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK PlayerOutProximity
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_SGKInteractionInterface_C::SGK_PlayerOutProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK PlayerOutProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK PossibleActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ActionsFound                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_WorldAction>           PossibleActions                                        (Parm, OutParm)

void IBP_SGKInteractionInterface_C::SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK PossibleActions");

	Params::BP_SGKInteractionInterface_C_SGK_PossibleActions Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);

	if (ActionsFound != nullptr)
		*ActionsFound = Parms.ActionsFound;

	if (PossibleActions != nullptr)
		*PossibleActions = std::move(Parms.PossibleActions);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK SetVerifiedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     VerifiedPlayers                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void IBP_SGKInteractionInterface_C::SGK_SetVerifiedPlayers(TArray<class FText>& VerifiedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK SetVerifiedPlayers");

	Params::BP_SGKInteractionInterface_C_SGK_SetVerifiedPlayers Parms{};

	Parms.VerifiedPlayers = std::move(VerifiedPlayers);

	UObject::ProcessEvent(Func, &Parms);

	VerifiedPlayers = std::move(Parms.VerifiedPlayers);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK TurnedOnEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnedOn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKInteractionInterface_C::SGK_TurnedOnEffect(bool TurnedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK TurnedOnEffect");

	Params::BP_SGKInteractionInterface_C_SGK_TurnedOnEffect Parms{};

	Parms.TurnedOn = TurnedOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK UpdateCode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKInteractionInterface_C::SGK_UpdateCode(const class FText& Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK UpdateCode");

	Params::BP_SGKInteractionInterface_C_SGK_UpdateCode Parms{};

	Parms.Code = std::move(Code);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKInteractionInterface.BP_SGKInteractionInterface_C.SGK VerifyPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool IBP_SGKInteractionInterface_C::SGK_VerifyPlayer(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKInteractionInterface_C", "SGK VerifyPlayer");

	Params::BP_SGKInteractionInterface_C_SGK_VerifyPlayer Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

