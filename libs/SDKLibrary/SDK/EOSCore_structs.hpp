#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EOSCore

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum EOSCore.EOSResult
// NumValues: 0x00DE
enum class EOSResult : uint8
{
	EOS_Success                              = 0,
	EOS_NoConnection                         = 1,
	EOS_InvalidCredentials                   = 2,
	EOS_InvalidUser                          = 3,
	EOS_InvalidAuth                          = 4,
	EOS_AccessDenied                         = 5,
	EOS_MissingPermissions                   = 6,
	EOS_Token_Not_Account                    = 7,
	EOS_TooManyRequests                      = 8,
	EOS_AlreadyPending                       = 9,
	EOS_InvalidParameters                    = 10,
	EOS_InvalidRequest                       = 11,
	EOS_UnrecognizedResponse                 = 12,
	EOS_IncompatibleVersion                  = 13,
	EOS_NotConfigured                        = 14,
	EOS_AlreadyConfigured                    = 15,
	EOS_NotImplemented                       = 16,
	EOS_Canceled                             = 17,
	EOS_NotFound                             = 18,
	EOS_OperationWillRetry                   = 19,
	EOS_NoChange                             = 20,
	EOS_VersionMismatch                      = 21,
	EOS_LimitExceeded                        = 22,
	EOS_Disabled                             = 23,
	EOS_DuplicateNotAllowed                  = 24,
	EOS_MissingParameters_DEPRECATED         = 25,
	EOS_InvalidSandboxId                     = 26,
	EOS_TimedOut                             = 27,
	EOS_PartialResult                        = 28,
	EOS_Missing_Role                         = 29,
	EOS_Missing_Feature                      = 30,
	EOS_Invalid_Sandbox                      = 31,
	EOS_Invalid_Deployment                   = 32,
	EOS_Invalid_Product                      = 33,
	EOS_Invalid_ProductUserID                = 34,
	EOS_ServiceFailure                       = 35,
	EOS_CacheDirectoryMissing                = 36,
	EOS_CacheDirectoryInvalid                = 37,
	EOS_InvalidState                         = 38,
	EOS_RequestInProgress                    = 39,
	EOS_ApplicationSuspended                 = 40,
	EOS_NetworkDisconnected                  = 41,
	EOS_Auth_AccountLocked                   = 42,
	EOS_Auth_AccountLockedForUpdate          = 43,
	EOS_Auth_InvalidRefreshToken             = 44,
	EOS_Auth_InvalidToken                    = 45,
	EOS_Auth_AuthenticationFailure           = 46,
	EOS_Auth_InvalidPlatformToken            = 47,
	EOS_Auth_WrongAccount                    = 48,
	EOS_Auth_WrongClient                     = 49,
	EOS_Auth_FullAccountRequired             = 50,
	EOS_Auth_HeadlessAccountRequired         = 51,
	EOS_Auth_PasswordResetRequired           = 52,
	EOS_Auth_PasswordCannotBeReused          = 53,
	EOS_Auth_Expired                         = 54,
	EOS_Auth_ScopeConsentRequired            = 55,
	EOS_Auth_ApplicationNotFound             = 56,
	EOS_Auth_ScopeNotFound                   = 57,
	EOS_Auth_AccountFeatureRestricted        = 58,
	EOS_Auth_AccountPortalLoadError          = 59,
	EOS_Auth_CorrectiveActionRequired        = 60,
	EOS_Auth_PinGrantCode                    = 61,
	EOS_Auth_PinGrantExpired                 = 62,
	EOS_Auth_PinGrantPending                 = 63,
	EOS_Auth_ExternalAuthNotLinked           = 64,
	EOS_Auth_ExternalAuthRevoked             = 65,
	EOS_Auth_ExternalAuthInvalid             = 66,
	EOS_Auth_ExternalAuthRestricted          = 67,
	EOS_Auth_ExternalAuthCannotLogin         = 68,
	EOS_Auth_ExternalAuthExpired             = 69,
	EOS_Auth_ExternalAuthIsLastLoginType     = 70,
	EOS_Auth_ExchangeCodeNotFound            = 71,
	EOS_Auth_OriginatingExchangeCodeSessionExpired = 72,
	EOS_Auth_AccountNotActive                = 73,
	EOS_Auth_MFARequired                     = 74,
	EOS_Auth_ParentalControls                = 75,
	EOS_Auth_NoRealId                        = 76,
	EOS_Friends_InviteAwaitingAcceptance     = 77,
	EOS_Friends_NoInvitation                 = 78,
	EOS_Friends_AlreadyFriends               = 79,
	EOS_Friends_NotFriends                   = 80,
	EOS_Friends_TargetUserTooManyInvites     = 81,
	EOS_Friends_LocalUserTooManyInvites      = 82,
	EOS_Friends_TargetUserFriendLimitExceeded = 83,
	EOS_Friends_LocalUserFriendLimitExceeded = 84,
	EOS_Presence_DataInvalid                 = 85,
	EOS_Presence_DataLengthInvalid           = 86,
	EOS_Presence_DataKeyInvalid              = 87,
	EOS_Presence_DataKeyLengthInvalid        = 88,
	EOS_Presence_DataValueInvalid            = 89,
	EOS_Presence_DataValueLengthInvalid      = 90,
	EOS_Presence_RichTextInvalid             = 91,
	EOS_Presence_RichTextLengthInvalid       = 92,
	EOS_Presence_StatusInvalid               = 93,
	EOS_Ecom_EntitlementStale                = 94,
	EOS_Ecom_CatalogOfferStale               = 95,
	EOS_Ecom_CatalogItemStale                = 96,
	EOS_Ecom_CatalogOfferPriceInvalid        = 97,
	EOS_Ecom_CheckoutLoadError               = 98,
	EOS_Sessions_SessionInProgress           = 99,
	EOS_Sessions_TooManyPlayers              = 100,
	EOS_Sessions_NoPermission                = 101,
	EOS_Sessions_SessionAlreadyExists        = 102,
	EOS_Sessions_InvalidLock                 = 103,
	EOS_Sessions_InvalidSession              = 104,
	EOS_Sessions_SandboxNotAllowed           = 105,
	EOS_Sessions_InviteFailed                = 106,
	EOS_Sessions_InviteNotFound              = 107,
	EOS_Sessions_UpsertNotAllowed            = 108,
	EOS_Sessions_AggregationFailed           = 109,
	EOS_Sessions_HostAtCapacity              = 110,
	EOS_Sessions_SandboxAtCapacity           = 111,
	EOS_Sessions_SessionNotAnonymous         = 112,
	EOS_Sessions_OutOfSync                   = 113,
	EOS_Sessions_TooManyInvites              = 114,
	EOS_Sessions_PresenceSessionExists       = 115,
	EOS_Sessions_DeploymentAtCapacity        = 116,
	EOS_Sessions_NotAllowed                  = 117,
	EOS_Sessions_PlayerSanctioned            = 118,
	EOS_PlayerDataStorage_FilenameInvalid    = 119,
	EOS_PlayerDataStorage_FilenameLengthInvalid = 120,
	EOS_PlayerDataStorage_FilenameInvalidChars = 121,
	EOS_PlayerDataStorage_FileSizeTooLarge   = 122,
	EOS_PlayerDataStorage_FileSizeInvalid    = 123,
	EOS_PlayerDataStorage_FileHandleInvalid  = 124,
	EOS_PlayerDataStorage_DataInvalid        = 125,
	EOS_PlayerDataStorage_DataLengthInvalid  = 126,
	EOS_PlayerDataStorage_StartIndexInvalid  = 127,
	EOS_PlayerDataStorage_RequestInProgress  = 128,
	EOS_PlayerDataStorage_UserThrottled      = 129,
	EOS_PlayerDataStorage_EncryptionKeyNotSet = 130,
	EOS_PlayerDataStorage_UserErrorFromDataCallback = 131,
	EOS_PlayerDataStorage_FileHeaderHasNewerVersion = 132,
	EOS_PlayerDataStorage_FileCorrupted      = 133,
	EOS_Connect_ExternalTokenValidationFailed = 134,
	EOS_Connect_UserAlreadyExists            = 135,
	EOS_Connect_AuthExpired                  = 136,
	EOS_Connect_InvalidToken                 = 137,
	EOS_Connect_UnsupportedTokenType         = 138,
	EOS_Connect_LinkAccountFailed            = 139,
	EOS_Connect_ExternalServiceUnavailable   = 140,
	EOS_Connect_ExternalServiceConfigurationFailure = 141,
	EOS_Connect_LinkAccountFailedMissingNintendoIdAccount_DEPRECATED = 142,
	EOS_UI_SocialOverlayLoadError            = 143,
	EOS_Lobby_NotOwner                       = 144,
	EOS_Lobby_InvalidLock                    = 145,
	EOS_Lobby_LobbyAlreadyExists             = 146,
	EOS_Lobby_SessionInProgress              = 147,
	EOS_Lobby_TooManyPlayers                 = 148,
	EOS_Lobby_NoPermission                   = 149,
	EOS_Lobby_InvalidSession                 = 150,
	EOS_Lobby_SandboxNotAllowed              = 151,
	EOS_Lobby_InviteFailed                   = 152,
	EOS_Lobby_InviteNotFound                 = 153,
	EOS_Lobby_UpsertNotAllowed               = 154,
	EOS_Lobby_AggregationFailed              = 155,
	EOS_Lobby_HostAtCapacity                 = 156,
	EOS_Lobby_SandboxAtCapacity              = 157,
	EOS_Lobby_TooManyInvites                 = 158,
	EOS_Lobby_DeploymentAtCapacity           = 159,
	EOS_Lobby_NotAllowed                     = 160,
	EOS_Lobby_MemberUpdateOnly               = 161,
	EOS_Lobby_PresenceLobbyExists            = 162,
	EOS_Lobby_VoiceNotEnabled                = 163,
	EOS_TitleStorage_UserErrorFromDataCallback = 164,
	EOS_TitleStorage_EncryptionKeyNotSet     = 165,
	EOS_TitleStorage_FileCorrupted           = 166,
	EOS_TitleStorage_FileHeaderHasNewerVersion = 167,
	EOS_Mods_ModSdkProcessIsAlreadyRunning   = 168,
	EOS_Mods_ModSdkCommandIsEmpty            = 169,
	EOS_Mods_ModSdkProcessCreationFailed     = 170,
	EOS_Mods_CriticalError                   = 171,
	EOS_Mods_ToolInternalError               = 172,
	EOS_Mods_IPCFailure                      = 173,
	EOS_Mods_InvalidIPCResponse              = 174,
	EOS_Mods_URILaunchFailure                = 175,
	EOS_Mods_ModIsNotInstalled               = 176,
	EOS_Mods_UserDoesNotOwnTheGame           = 177,
	EOS_Mods_OfferRequestByIdInvalidResult   = 178,
	EOS_Mods_CouldNotFindOffer               = 179,
	EOS_Mods_OfferRequestByIdFailure         = 180,
	EOS_Mods_PurchaseFailure                 = 181,
	EOS_Mods_InvalidGameInstallInfo          = 182,
	EOS_Mods_CannotGetManifestLocation       = 183,
	EOS_Mods_UnsupportedOS                   = 184,
	EOS_AntiCheat_ClientProtectionNotAvailable = 185,
	EOS_AntiCheat_InvalidMode                = 186,
	EOS_AntiCheat_ClientProductIdMismatch    = 187,
	EOS_AntiCheat_ClientSandboxIdMismatch    = 188,
	EOS_AntiCheat_ProtectMessageSessionKeyRequired = 189,
	EOS_AntiCheat_ProtectMessageValidationFailed = 190,
	EOS_AntiCheat_ProtectMessageInitializationFailed = 191,
	EOS_AntiCheat_PeerAlreadyRegistered      = 192,
	EOS_AntiCheat_PeerNotFound               = 193,
	EOS_AntiCheat_PeerNotProtected           = 194,
	EOS_AntiCheat_ClientDeploymentIdMismatch = 195,
	EOS_AntiCheat_DeviceIdAuthIsNotSupported = 196,
	EOS_RTC_TooManyParticipants              = 197,
	EOS_RTC_RoomAlreadyExists                = 198,
	EOS_RTC_UserKicked                       = 199,
	EOS_RTC_UserBanned                       = 200,
	EOS_RTC_RoomWasLeft                      = 201,
	EOS_RTC_ReconnectionTimegateExpired      = 202,
	EOS_RTC_ShutdownInvoked                  = 203,
	EOS_RTC_UserIsInBlocklist                = 204,
	EOS_ProgressionSnapshot_SnapshotIdUnavailable = 205,
	EOS_KWS_ParentEmailMissing               = 206,
	EOS_KWS_UserGraduated                    = 207,
	EOS_Android_JavaVMNotStored              = 208,
	EOS_Permission_RequiredPatchAvailable    = 209,
	EOS_Permission_RequiredSystemUpdate      = 210,
	EOS_Permission_AgeRestrictionFailure     = 211,
	EOS_Permission_AccountTypeFailure        = 212,
	EOS_Permission_ChatRestriction           = 213,
	EOS_Permission_UGCRestriction            = 214,
	EOS_Permission_OnlinePlayRestricted      = 215,
	EOS_DesktopCrossplay_ApplicationNotBootstrapped = 216,
	EOS_DesktopCrossplay_ServiceNotInstalled = 217,
	EOS_DesktopCrossplay_ServiceStartFailed  = 218,
	EOS_DesktopCrossplay_ServiceNotRunning   = 219,
	EOS_UnexpectedError                      = 220,
	MAX                                      = 221,
};

// Enum EOSCore.EEOSEAntiCheatClientViolationType
// NumValues: 0x0011
enum class EEOSEAntiCheatClientViolationType : uint8
{
	EOS_ACCVT_Invalid                        = 0,
	EOS_ACCVT_IntegrityCatalogNotFound       = 1,
	EOS_ACCVT_IntegrityCatalogError          = 2,
	EOS_ACCVT_IntegrityCatalogCertificateRevoked = 3,
	EOS_ACCVT_IntegrityCatalogMissingMainExecutable = 4,
	EOS_ACCVT_GameFileMismatch               = 5,
	EOS_ACCVT_RequiredGameFileNotFound       = 6,
	EOS_ACCVT_UnknownGameFileForbidden       = 7,
	EOS_ACCVT_SystemFileUntrusted            = 8,
	EOS_ACCVT_ForbiddenModuleLoaded          = 9,
	EOS_ACCVT_CorruptedMemory                = 10,
	EOS_ACCVT_ForbiddenToolDetected          = 11,
	EOS_ACCVT_InternalAntiCheatViolation     = 12,
	EOS_ACCVT_CorruptedNetworkMessageFlow    = 13,
	EOS_ACCVT_VirtualMachineNotAllowed       = 14,
	EOS_ACCVT_ForbiddenSystemConfiguration   = 15,
	EOS_ACCVT_MAX                            = 16,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientActionReason
// NumValues: 0x000C
enum class EEOSEAntiCheatCommonClientActionReason : uint8
{
	EOS_ACCCAR_Invalid                       = 0,
	EOS_ACCCAR_InternalError                 = 1,
	EOS_ACCCAR_InvalidMessage                = 2,
	EOS_ACCCAR_AuthenticationFailed          = 3,
	EOS_ACCCAR_NullClient                    = 4,
	EOS_ACCCAR_HeartbeatTimeout              = 5,
	EOS_ACCCAR_ClientViolation               = 6,
	EOS_ACCCAR_BackendViolation              = 7,
	EOS_ACCCAR_TemporaryCooldown             = 8,
	EOS_ACCCAR_TemporaryBanned               = 9,
	EOS_ACCCAR_PermanentBanned               = 10,
	EOS_ACCCAR_MAX                           = 11,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientAction
// NumValues: 0x0003
enum class EEOSEAntiCheatCommonClientAction : uint8
{
	EOS_ACCCA_Invalid                        = 0,
	EOS_ACCCA_RemovePlayer                   = 1,
	EOS_ACCCA_MAX                            = 2,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientAuthStatus
// NumValues: 0x0004
enum class EEOSEAntiCheatCommonClientAuthStatus : uint8
{
	EOS_ACCCAS_Invalid                       = 0,
	EOS_ACCCAS_LocalAuthComplete             = 1,
	EOS_ACCCAS_RemoteAuthComplete            = 2,
	EOS_ACCCAS_MAX                           = 3,
};

// Enum EOSCore.EEOSERTCAudioInputStatus
// NumValues: 0x0006
enum class EEOSERTCAudioInputStatus : uint8
{
	EOS_RTCAIS_Idle                          = 0,
	EOS_RTCAIS_Recording                     = 1,
	EOS_RTCAIS_RecordingSilent               = 2,
	EOS_RTCAIS_RecordingDisconnected         = 3,
	EOS_RTCAIS_Failed                        = 4,
	EOS_RTCAIS_MAX                           = 5,
};

// Enum EOSCore.EEOSERTCAudioOutputStatus
// NumValues: 0x0004
enum class EEOSERTCAudioOutputStatus : uint8
{
	EOS_RTCAOS_Idle                          = 0,
	EOS_RTCAOS_Playing                       = 1,
	EOS_RTCAOS_Failed                        = 2,
	EOS_RTCAOS_MAX                           = 3,
};

// Enum EOSCore.EOSELoginStatus
// NumValues: 0x0004
enum class EOSELoginStatus : uint8
{
	EOS_LS_NotLoggedIn                       = 0,
	EOS_LS_UsingLocalProfile                 = 1,
	EOS_LS_LoggedIn                          = 2,
	EOS_LS_MAX                               = 3,
};

// Enum EOSCore.EEOSEExternalAccountType
// NumValues: 0x000F
enum class EEOSEExternalAccountType : uint8
{
	EOS_EAT_EPIC                             = 0,
	EOS_EAT_STEAM                            = 1,
	EOS_EAT_PSN                              = 2,
	EOS_EAT_XBL                              = 3,
	EOS_EAT_DISCORD                          = 4,
	EOS_EAT_GOG                              = 5,
	EOS_EAT_NINTENDO                         = 6,
	EOS_EAT_UPLAY                            = 7,
	EOS_EAT_OPENID                           = 8,
	EOS_EAT_APPLE                            = 9,
	EOS_EAT_GOOGLE                           = 10,
	EOS_EAT_OCULUS                           = 11,
	EOS_EAT_ITCHIO                           = 12,
	EOS_EAT_AMAZON                           = 13,
	EOS_EAT_MAX                              = 14,
};

// Enum EOSCore.EEOSEOwnershipStatus
// NumValues: 0x0003
enum class EEOSEOwnershipStatus : uint8
{
	EOS_OS_NotOwned                          = 0,
	EOS_OS_Owned                             = 1,
	EOS_OS_MAX                               = 2,
};

// Enum EOSCore.EEOSEModEnumerationType
// NumValues: 0x0003
enum class EEOSEModEnumerationType : uint8
{
	EOS_MET_INSTALLED                        = 0,
	EOS_MET_ALL_AVAILABLE                    = 1,
	EOS_MET_MAX                              = 2,
};

// Enum EOSCore.EEOSLogLevel
// NumValues: 0x0008
enum class EEOSLogLevel : uint8
{
	Off                                      = 0,
	Fatal                                    = 1,
	Error                                    = 2,
	Warning                                  = 3,
	Info                                     = 4,
	Verbose                                  = 5,
	VeryVerbose                              = 6,
	EEOSLogLevel_MAX                         = 7,
};

// Enum EOSCore.EEOSEFriendsStatus
// NumValues: 0x0005
enum class EEOSEFriendsStatus : uint8
{
	EOS_FS_NotFriends                        = 0,
	EOS_FS_InviteSent                        = 1,
	EOS_FS_InviteReceived                    = 2,
	EOS_FS_Friends                           = 3,
	EOS_FS_MAX                               = 4,
};

// Enum EOSCore.EEOSELobbyMemberStatus
// NumValues: 0x0007
enum class EEOSELobbyMemberStatus : uint8
{
	EOS_LMS_JOINED                           = 0,
	EOS_LMS_LEFT                             = 1,
	EOS_LMS_DISCONNECTED                     = 2,
	EOS_LMS_KICKED                           = 3,
	EOS_LMS_PROMOTED                         = 4,
	EOS_LMS_CLOSED                           = 5,
	EOS_LMS_MAX                              = 6,
};

// Enum EOSCore.EEOSELoginStatus
// NumValues: 0x0004
enum class EEOSELoginStatus : uint8
{
	EOS_LS_NotLoggedIn                       = 0,
	EOS_LS_UsingLocalProfile                 = 1,
	EOS_LS_LoggedIn                          = 2,
	EOS_LS_MAX                               = 3,
};

// Enum EOSCore.EEOSENetworkConnectionType
// NumValues: 0x0004
enum class EEOSENetworkConnectionType : uint8
{
	EOS_NCT_NoConnection                     = 0,
	EOS_NCT_DirectConnection                 = 1,
	EOS_NCT_RelayedConnection                = 2,
	EOS_NCT_MAX                              = 3,
};

// Enum EOSCore.EEOSEConnectionEstablishedType
// NumValues: 0x0003
enum class EEOSEConnectionEstablishedType : uint8
{
	EOS_CET_NewConnection                    = 0,
	EOS_CET_Reconnection                     = 1,
	EOS_CET_MAX                              = 2,
};

// Enum EOSCore.EEOSENATType
// NumValues: 0x0005
enum class EEOSENATType : uint8
{
	EOS_NAT_Unknown                          = 0,
	EOS_NAT_Open                             = 1,
	EOS_NAT_Moderate                         = 2,
	EOS_NAT_Strict                           = 3,
	EOS_NAT_MAX                              = 4,
};

// Enum EOSCore.EEOSEConnectionClosedReason
// NumValues: 0x000C
enum class EEOSEConnectionClosedReason : uint8
{
	EOS_CCR_Unknown                          = 0,
	EOS_CCR_ClosedByLocalUser                = 1,
	EOS_CCR_ClosedByPeer                     = 2,
	EOS_CCR_TimedOut                         = 3,
	EOS_CCR_TooManyConnections               = 4,
	EOS_CCR_InvalidMessage                   = 5,
	EOS_CCR_InvalidData                      = 6,
	EOS_CCR_ConnectionFailed                 = 7,
	EOS_CCR_ConnectionClosed                 = 8,
	EOS_CCR_NegotiationFailed                = 9,
	EOS_CCR_UnexpectedError                  = 10,
	EOS_CCR_MAX                              = 11,
};

// Enum EOSCore.EEOSERTCParticipantStatus
// NumValues: 0x0003
enum class EEOSERTCParticipantStatus : uint8
{
	EOS_RTCPS_Joined                         = 0,
	EOS_RTCPS_Left                           = 1,
	EOS_RTCPS_MAX                            = 2,
};

// Enum EOSCore.EEOSERTCAudioStatus
// NumValues: 0x0006
enum class EEOSERTCAudioStatus : uint8
{
	EOS_RTCAS_Unsupported                    = 0,
	EOS_RTCAS_Enabled                        = 1,
	EOS_RTCAS_Disabled                       = 2,
	EOS_RTCAS_AdminDisabled                  = 3,
	EOS_RTCAS_NotListeningDisabled           = 4,
	EOS_RTCAS_MAX                            = 5,
};

// Enum EOSCore.EEOSEAntiCheatClientMode
// NumValues: 0x0004
enum class EEOSEAntiCheatClientMode : uint8
{
	EOS_ACCM_Invalid                         = 0,
	EOS_ACCM_ClientServer                    = 1,
	EOS_ACCM_PeerToPeer                      = 2,
	EOS_ACCM_MAX                             = 3,
};

// Enum EOSCore.EEOSELinkAccountFlags
// NumValues: 0x0003
enum class EEOSELinkAccountFlags : uint8
{
	EOS_LA_NoFlags                           = 0,
	EOS_LA_NintendoNsaId                     = 1,
	EOS_LA_MAX                               = 2,
};

// Enum EOSCore.EEOSLoginCredentialType
// NumValues: 0x0009
enum class EEOSLoginCredentialType : uint8
{
	EOS_LCT_Password                         = 0,
	EOS_LCT_ExchangeCode                     = 1,
	EOS_LCT_PersistentAuth                   = 2,
	EOS_LCT_DeviceCode                       = 3,
	EOS_LCT_Developer                        = 4,
	EOS_LCT_RefreshToken                     = 5,
	EOS_LCT_AccountPortal                    = 6,
	EOS_LCT_ExternalAuth                     = 7,
	EOS_LCT_MAX                              = 8,
};

// Enum EOSCore.EOSEAuthTokenType
// NumValues: 0x0003
enum class EOSEAuthTokenType : uint8
{
	EOS_ATT_Client                           = 0,
	EOS_ATT_User                             = 1,
	EOS_ATT_MAX                              = 2,
};

// Enum EOSCore.EEOSEExternalCredentialType
// NumValues: 0x0014
enum class EEOSEExternalCredentialType : uint8
{
	EOS_ECT_EPIC                             = 0,
	EOS_ECT_STEAM_APP_TICKET                 = 1,
	EOS_ECT_PSN_ID_TOKEN                     = 2,
	EOS_ECT_XBL_XSTS_TOKEN                   = 3,
	EOS_ECT_DISCORD_ACCESS_TOKEN             = 4,
	EOS_ECT_GOG_SESSION_TICKET               = 5,
	EOS_ECT_NINTENDO_ID_TOKEN                = 6,
	EOS_ECT_NINTENDO_NSA_ID_TOKEN            = 7,
	EOS_ECT_UPLAY_ACCESS_TOKEN               = 8,
	EOS_ECT_OPENID_ACCESS_TOKEN              = 9,
	EOS_ECT_DEVICEID_ACCESS_TOKEN            = 10,
	EOS_ECT_APPLE_ID_TOKEN                   = 11,
	EOS_ECT_GOOGLE_ID_TOKEN                  = 12,
	EOS_ECT_OCULUS_USERID_NONCE              = 13,
	EOS_ECT_ITCHIO_JWT                       = 14,
	EOS_ECT_ITCHIO_KEY                       = 15,
	EOS_ECT_EPIC_ID_TOKEN                    = 16,
	EOS_ECT_AMAZON_ACCESS_TOKEN              = 17,
	EOS_ECT_STEAM_SESSION_TICKET             = 18,
	EOS_ECT_MAX                              = 19,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientType
// NumValues: 0x0004
enum class EEOSEAntiCheatCommonClientType : uint8
{
	EOS_ACCCT_ProtectedClient                = 0,
	EOS_ACCCT_UnprotectedClient              = 1,
	EOS_ACCCT_AIBot                          = 2,
	EOS_ACCCT_MAX                            = 3,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientPlatform
// NumValues: 0x000A
enum class EEOSEAntiCheatCommonClientPlatform : uint8
{
	EOS_ACCCP_Unknown                        = 0,
	EOS_ACCCP_Windows                        = 1,
	EOS_ACCCP_Mac                            = 2,
	EOS_ACCCP_Linux                          = 3,
	EOS_ACCCP_Xbox                           = 4,
	EOS_ACCCP_PlayStation                    = 5,
	EOS_ACCCP_Nintendo                       = 6,
	EOS_ACCCP_iOS                            = 7,
	EOS_ACCCP_Android                        = 8,
	EOS_ACCCP_MAX                            = 9,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientFlags
// NumValues: 0x0003
enum class EEOSEAntiCheatCommonClientFlags : uint8
{
	EOS_ACCCF_None                           = 0,
	EOS_ACCCF_Admin                          = 1,
	EOS_ACCCF_MAX                            = 2,
};

// Enum EOSCore.EEOSEAntiCheatCommonClientInput
// NumValues: 0x0005
enum class EEOSEAntiCheatCommonClientInput : uint8
{
	EOS_ACCCI_Unknown                        = 0,
	EOS_ACCCI_MouseKeyboard                  = 1,
	EOS_ACCCI_Gamepad                        = 2,
	EOS_ACCCI_TouchInput                     = 3,
	EOS_ACCCI_MAX                            = 4,
};

// Enum EOSCore.EEOSEAntiCheatCommonEventType
// NumValues: 0x0004
enum class EEOSEAntiCheatCommonEventType : uint8
{
	EOS_ACCET_Invalid                        = 0,
	EOS_ACCET_GameEvent                      = 1,
	EOS_ACCET_PlayerEvent                    = 2,
	EOS_ACCET_MAX                            = 3,
};

// Enum EOSCore.EEOSEAntiCheatCommonEventParamType
// NumValues: 0x000A
enum class EEOSEAntiCheatCommonEventParamType : uint8
{
	EOS_ACCEPT_Invalid                       = 0,
	EOS_ACCEPT_ClientHandle                  = 1,
	EOS_ACCEPT_String                        = 2,
	EOS_ACCEPT_UInt32                        = 3,
	EOS_ACCEPT_Int32                         = 4,
	EOS_ACCEPT_UInt64                        = 5,
	EOS_ACCEPT_Int64                         = 6,
	EOS_ACCEPT_Vector3f                      = 7,
	EOS_ACCEPT_Quat                          = 8,
	EOS_ACCEPT_MAX                           = 9,
};

// Enum EOSCore.EEOSEAntiCheatCommonPlayerMovementState
// NumValues: 0x0009
enum class EEOSEAntiCheatCommonPlayerMovementState : uint8
{
	EOS_ACCPMS_None                          = 0,
	EOS_ACCPMS_Crouching                     = 1,
	EOS_ACCPMS_Prone                         = 2,
	EOS_ACCPMS_Mounted                       = 3,
	EOS_ACCPMS_Swimming                      = 4,
	EOS_ACCPMS_Falling                       = 5,
	EOS_ACCPMS_Flying                        = 6,
	EOS_ACCPMS_OnLadder                      = 7,
	EOS_ACCPMS_MAX                           = 8,
};

// Enum EOSCore.EEOSEAntiCheatCommonPlayerTakeDamageSource
// NumValues: 0x0005
enum class EEOSEAntiCheatCommonPlayerTakeDamageSource : uint8
{
	EOS_ACCPTDS_None                         = 0,
	EOS_ACCPTDS_Player                       = 1,
	EOS_ACCPTDS_NonPlayerCharacter           = 2,
	EOS_ACCPTDS_World                        = 3,
	EOS_ACCPTDS_MAX                          = 4,
};

// Enum EOSCore.EEOSEAntiCheatCommonPlayerTakeDamageType
// NumValues: 0x0005
enum class EEOSEAntiCheatCommonPlayerTakeDamageType : uint8
{
	EOS_ACCPTDT_None                         = 0,
	EOS_ACCPTDT_PointDamage                  = 1,
	EOS_ACCPTDT_RadialDamage                 = 2,
	EOS_ACCPTDT_DamageOverTime               = 3,
	EOS_ACCPTDT_MAX                          = 4,
};

// Enum EOSCore.EEOSEAntiCheatCommonPlayerTakeDamageResult
// NumValues: 0x0004
enum class EEOSEAntiCheatCommonPlayerTakeDamageResult : uint8
{
	EOS_ACCPTDR_None                         = 0,
	EOS_ACCPTDR_Downed                       = 1,
	EOS_ACCPTDR_Eliminated                   = 2,
	EOS_ACCPTDR_MAX                          = 3,
};

// Enum EOSCore.EEOSEEcomItemType
// NumValues: 0x0004
enum class EEOSEEcomItemType : uint8
{
	EOS_EIT_Durable                          = 0,
	EOS_EIT_Consumable                       = 1,
	EOS_EIT_Other                            = 2,
	EOS_EIT_MAX                              = 3,
};

// Enum EOSCore.EEOSELeaderboardAggregation
// NumValues: 0x0004
enum class EEOSELeaderboardAggregation : uint8
{
	EOS_LA_Min                               = 0,
	EOS_LA_Max                               = 1,
	EOS_LA_Sum                               = 2,
	EOS_LA_Latest                            = 3,
};

// Enum EOSCore.EEOSELobbyPermissionLevel
// NumValues: 0x0004
enum class EEOSELobbyPermissionLevel : uint8
{
	EOS_LPL_PUBLICADVERTISED                 = 0,
	EOS_LPL_JOINVIAPRESENCE                  = 1,
	EOS_LPL_INVITEONLY                       = 2,
	EOS_LPL_MAX                              = 3,
};

// Enum EOSCore.EEOSELobbyAttributeVisibility
// NumValues: 0x0003
enum class EEOSELobbyAttributeVisibility : uint8
{
	EOS_LAT_PUBLIC                           = 0,
	EOS_LAT_PRIVATE                          = 1,
	EOS_LAT_MAX                              = 2,
};

// Enum EOSCore.EEOSEUserControllerType
// NumValues: 0x0005
enum class EEOSEUserControllerType : uint8
{
	EOS_UCT_Unknown                          = 0,
	EOS_UCT_MouseKeyboard                    = 1,
	EOS_UCT_GamepadControl                   = 2,
	EOS_UCT_TouchControl                     = 3,
	EOS_UCT_MAX                              = 4,
};

// Enum EOSCore.EEOSEMetricsAccountIdType
// NumValues: 0x0003
enum class EEOSEMetricsAccountIdType : uint8
{
	EOS_MAIT_Epic                            = 0,
	EOS_MAIT_External                        = 1,
	EOS_MAIT_MAX                             = 2,
};

// Enum EOSCore.EEOSERelayControl
// NumValues: 0x0004
enum class EEOSERelayControl : uint8
{
	EOS_RC_NoRelays                          = 0,
	EOS_RC_AllowRelays                       = 1,
	EOS_RC_ForceRelays                       = 2,
	EOS_RC_MAX                               = 3,
};

// Enum EOSCore.EEOSEPacketReliability
// NumValues: 0x0004
enum class EEOSEPacketReliability : uint8
{
	EOS_PR_UnreliableUnordered               = 0,
	EOS_PR_ReliableUnordered                 = 1,
	EOS_PR_ReliableOrdered                   = 2,
	EOS_PR_MAX                               = 3,
};

// Enum EOSCore.EEOSPlayerDataStorag_EReadResult
// NumValues: 0x0005
enum class EEOSPlayerDataStorag_EReadResult : uint8
{
	None                                     = 0,
	EOS_RR_ContinueReading                   = 1,
	EOS_RR_FailRequest                       = 2,
	EOS_RR_CancelRequest                     = 3,
	EEOSPlayerDataStorag_MAX                 = 4,
};

// Enum EOSCore.EEOSPlayerDataStorageEWriteResult
// NumValues: 0x0006
enum class EEOSPlayerDataStorageEWriteResult : uint8
{
	None                                     = 0,
	EOS_WR_ContinueWriting                   = 1,
	EOS_WR_CompleteRequest                   = 2,
	EOS_WR_FailRequest                       = 3,
	EOS_WR_CancelRequest                     = 4,
	EEOSPlayerDataStorageEWriteResult_MAX    = 5,
};

// Enum EOSCore.EEOSPresenceEStatus
// NumValues: 0x0006
enum class EEOSPresenceEStatus : uint8
{
	EOS_PS_Offline                           = 0,
	EOS_PS_Online                            = 1,
	EOS_PS_Away                              = 2,
	EOS_PS_ExtendedAway                      = 3,
	EOS_PS_DoNotDisturb                      = 4,
	EOS_PS_MAX                               = 5,
};

// Enum EOSCore.EEOSEPlayerReportsCategory
// NumValues: 0x0009
enum class EEOSEPlayerReportsCategory : uint8
{
	EOS_PRC_Invalid                          = 0,
	EOS_PRC_Cheating                         = 1,
	EOS_PRC_Exploiting                       = 2,
	EOS_PRC_OffensiveProfile                 = 3,
	EOS_PRC_VerbalAbuse                      = 4,
	EOS_PRC_Scamming                         = 5,
	EOS_PRC_Spamming                         = 6,
	EOS_PRC_Other                            = 7,
	EOS_PRC_MAX                              = 8,
};

// Enum EOSCore.EEOSEOnlineSessionState
// NumValues: 0x0009
enum class EEOSEOnlineSessionState : uint8
{
	EOS_OSS_NoSession                        = 0,
	EOS_OSS_Creating                         = 1,
	EOS_OSS_Pending                          = 2,
	EOS_OSS_Starting                         = 3,
	EOS_OSS_InProgress                       = 4,
	EOS_OSS_Ending                           = 5,
	EOS_OSS_Ended                            = 6,
	EOS_OSS_Destroying                       = 7,
	EOS_OSS_MAX                              = 8,
};

// Enum EOSCore.EEOSESessionAttributeAdvertisementType
// NumValues: 0x0003
enum class EEOSESessionAttributeAdvertisementType : uint8
{
	EOS_SAAT_DontAdvertise                   = 0,
	EOS_SAAT_Advertise                       = 1,
	EOS_SAAT_MAX                             = 2,
};

// Enum EOSCore.EEOSEOnlineSessionPermissionLevel
// NumValues: 0x0004
enum class EEOSEOnlineSessionPermissionLevel : uint8
{
	EOS_OSPF_PublicAdvertised                = 0,
	EOS_OSPF_JoinViaPresence                 = 1,
	EOS_OSPF_InviteOnly                      = 2,
	EOS_OSPF_MAX                             = 3,
};

// Enum EOSCore.EEOSTitleStorageEReadResult
// NumValues: 0x0005
enum class EEOSTitleStorageEReadResult : uint8
{
	NONE                                     = 0,
	EOS_TS_RR_ContinueReading                = 1,
	EOS_TS_RR_FailRequest                    = 2,
	EOS_TS_RR_CancelRequest                  = 3,
	EEOSTitleStorageEReadResult_MAX          = 4,
};

// Enum EOSCore.EEOSChannelType
// NumValues: 0x0006
enum class EEOSChannelType : uint8
{
	DEFAULT                                  = 0,
	DATA_REQUEST                             = 251,
	DATA_HANDSHAKE                           = 252,
	DATA_SUBSYSTEM                           = 253,
	DATA_CHAT                                = 254,
	EEOSChannelType_MAX                      = 255,
};

// Enum EOSCore.EEOSEAttributeType
// NumValues: 0x0005
enum class EEOSEAttributeType : uint8
{
	EOS_AT_BOOLEAN                           = 0,
	EOS_AT_INT64                             = 1,
	EOS_AT_DOUBLE                            = 2,
	EOS_AT_STRING                            = 3,
	EOS_AT_MAX                               = 4,
};

// Enum EOSCore.EEOSEComparisonOp
// NumValues: 0x000A
enum class EEOSEComparisonOp : uint8
{
	EOS_CO_EQUAL                             = 0,
	EOS_CO_NOTEQUAL                          = 1,
	EOS_CO_GREATERTHAN                       = 2,
	EOS_CO_GREATERTHANOREQUAL                = 3,
	EOS_CO_LESSTHAN                          = 4,
	EOS_CO_LESSTHANOREQUAL                   = 5,
	EOS_CO_DISTANCE                          = 6,
	EOS_CO_ANYOF                             = 7,
	EOS_CO_NOTANYOF                          = 8,
	EOS_CO_MAX                               = 9,
};

// Enum EOSCore.EOSEApplicationStatus
// NumValues: 0x0005
enum class EOSEApplicationStatus : uint8
{
	EOS_AS_BackgroundConstrained             = 0,
	EOS_AS_BackgroundUnconstrained           = 1,
	EOS_AS_BackgroundSuspended               = 2,
	EOS_AS_Foreground                        = 3,
	EOS_AS_MAX                               = 4,
};

// Enum EOSCore.EOSENetworkStatus
// NumValues: 0x0004
enum class EOSENetworkStatus : uint8
{
	EOS_NS_Disabled                          = 0,
	EOS_NS_Offline                           = 1,
	EOS_NS_Online                            = 2,
	EOS_NS_MAX                               = 3,
};

// Enum EOSCore.EEOSEDesktopCrossplayStatus
// NumValues: 0x000A
enum class EEOSEDesktopCrossplayStatus : uint8
{
	EOS_DCS_OK                               = 0,
	EOS_DCS_ApplicationNotBootstrapped       = 1,
	EOS_DCS_ServiceNotInstalled              = 2,
	EOS_DCS_ServiceStartFailed               = 3,
	EOS_DCS_ServiceNotRunning                = 4,
	EOS_DCS_OverlayDisabled                  = 5,
	EOS_DCS_OverlayNotInstalled              = 6,
	EOS_DCS_OverlayTrustCheckFailed          = 7,
	EOS_DCS_OverlayLoadFailed                = 8,
	EOS_DCS_MAX                              = 9,
};

// Enum EOSCore.ESuccessFail
// NumValues: 0x0003
enum class ESuccessFail : uint8
{
	Success                                  = 0,
	Fail                                     = 1,
	ESuccessFail_MAX                         = 2,
};

// Enum EOSCore.EEOSUIENotificationLocation
// NumValues: 0x0005
enum class EEOSUIENotificationLocation : uint8
{
	EOS_UNL_TopLeft                          = 0,
	EOS_UNL_TopRight                         = 1,
	EOS_UNL_BottomLeft                       = 2,
	EOS_UNL_BottomRight                      = 3,
	EOS_UNL_MAX                              = 4,
};

// ScriptStruct EOSCore.EOSProductUserId
// 0x0021 (0x0021 - 0x0000)
struct FEOSProductUserId final
{
public:
	uint8                                         Pad_2532[0x21];                                    // 0x0000(0x0021)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSProductUserId) == 0x000001, "Wrong alignment on FEOSProductUserId");
static_assert(sizeof(FEOSProductUserId) == 0x000021, "Wrong size on FEOSProductUserId");

// ScriptStruct EOSCore.EOSAchievementsOnUnlockAchievementsCompleteCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2533[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2534[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AchievementsCount;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo");
static_assert(sizeof(FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo) == 0x000038, "Wrong size on FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo");
static_assert(offsetof(FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo, UserId) == 0x000010, "Member 'FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo::UserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo, AchievementsCount) == 0x000034, "Member 'FEOSAchievementsOnUnlockAchievementsCompleteCallbackInfo::AchievementsCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsCopyMemberAttributeByKeyOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyDetailsCopyMemberAttributeByKeyOptions final
{
public:
	uint8                                         Pad_2535[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2536[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AttrKey;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDetailsCopyMemberAttributeByKeyOptions) == 0x000008, "Wrong alignment on FEOSLobbyDetailsCopyMemberAttributeByKeyOptions");
static_assert(sizeof(FEOSLobbyDetailsCopyMemberAttributeByKeyOptions) == 0x000038, "Wrong size on FEOSLobbyDetailsCopyMemberAttributeByKeyOptions");
static_assert(offsetof(FEOSLobbyDetailsCopyMemberAttributeByKeyOptions, TargetUserId) == 0x000004, "Member 'FEOSLobbyDetailsCopyMemberAttributeByKeyOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsCopyMemberAttributeByKeyOptions, AttrKey) == 0x000028, "Member 'FEOSLobbyDetailsCopyMemberAttributeByKeyOptions::AttrKey' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectQueryExternalAccountMappingsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectQueryExternalAccountMappingsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2537[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2538[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectQueryExternalAccountMappingsCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectQueryExternalAccountMappingsCallbackInfo");
static_assert(sizeof(FEOSConnectQueryExternalAccountMappingsCallbackInfo) == 0x000038, "Wrong size on FEOSConnectQueryExternalAccountMappingsCallbackInfo");
static_assert(offsetof(FEOSConnectQueryExternalAccountMappingsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectQueryExternalAccountMappingsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectQueryExternalAccountMappingsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectQueryExternalAccountMappingsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageReadFileDataCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct FEOSTitleStorageReadFileDataCallbackInfo final
{
public:
	uint8                                         Pad_2539[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_253A[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFileSizeBytes;                                // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLastChunk;                                      // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_253B[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataChunkLengthBytes;                              // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_253C[0xC];                                     // 0x004C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageReadFileDataCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageReadFileDataCallbackInfo");
static_assert(sizeof(FEOSTitleStorageReadFileDataCallbackInfo) == 0x000058, "Wrong size on FEOSTitleStorageReadFileDataCallbackInfo");
static_assert(offsetof(FEOSTitleStorageReadFileDataCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSTitleStorageReadFileDataCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileDataCallbackInfo, Filename) == 0x000030, "Member 'FEOSTitleStorageReadFileDataCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileDataCallbackInfo, TotalFileSizeBytes) == 0x000040, "Member 'FEOSTitleStorageReadFileDataCallbackInfo::TotalFileSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileDataCallbackInfo, bIsLastChunk) == 0x000044, "Member 'FEOSTitleStorageReadFileDataCallbackInfo::bIsLastChunk' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileDataCallbackInfo, DataChunkLengthBytes) == 0x000048, "Member 'FEOSTitleStorageReadFileDataCallbackInfo::DataChunkLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsOnQueryDefinitionsCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_253D[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo");
static_assert(sizeof(FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo");
static_assert(offsetof(FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAchievementsOnQueryDefinitionsCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsLeaderboardUserScore
// 0x002C (0x002C - 0x0000)
struct FEOSLeaderboardsLeaderboardUserScore final
{
public:
	uint8                                         Pad_253E[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_253F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Score;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsLeaderboardUserScore) == 0x000004, "Wrong alignment on FEOSLeaderboardsLeaderboardUserScore");
static_assert(sizeof(FEOSLeaderboardsLeaderboardUserScore) == 0x00002C, "Wrong size on FEOSLeaderboardsLeaderboardUserScore");
static_assert(offsetof(FEOSLeaderboardsLeaderboardUserScore, UserId) == 0x000004, "Member 'FEOSLeaderboardsLeaderboardUserScore::UserId' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsLeaderboardUserScore, Score) == 0x000028, "Member 'FEOSLeaderboardsLeaderboardUserScore::Score' has a wrong offset!");

// ScriptStruct EOSCore.EOSEpicAccountId
// 0x0021 (0x0021 - 0x0000)
struct FEOSEpicAccountId final
{
public:
	uint8                                         Pad_2540[0x21];                                    // 0x0000(0x0021)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEpicAccountId) == 0x000001, "Wrong alignment on FEOSEpicAccountId");
static_assert(sizeof(FEOSEpicAccountId) == 0x000021, "Wrong size on FEOSEpicAccountId");

// ScriptStruct EOSCore.EOSEcomQueryOffersCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSEcomQueryOffersCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2541[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2542[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomQueryOffersCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomQueryOffersCallbackInfo");
static_assert(sizeof(FEOSEcomQueryOffersCallbackInfo) == 0x000038, "Wrong size on FEOSEcomQueryOffersCallbackInfo");
static_assert(offsetof(FEOSEcomQueryOffersCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomQueryOffersCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOffersCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomQueryOffersCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchSetMaxResultsOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSSessionSearchSetMaxResultsOptions final
{
public:
	int32                                         MaxSearchResults;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionSearchSetMaxResultsOptions) == 0x000004, "Wrong alignment on FEOSSessionSearchSetMaxResultsOptions");
static_assert(sizeof(FEOSSessionSearchSetMaxResultsOptions) == 0x000004, "Wrong size on FEOSSessionSearchSetMaxResultsOptions");
static_assert(offsetof(FEOSSessionSearchSetMaxResultsOptions, MaxSearchResults) == 0x000000, "Member 'FEOSSessionSearchSetMaxResultsOptions::MaxSearchResults' has a wrong offset!");

// ScriptStruct EOSCore.EOSNotificationId
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSNotificationId final
{
public:
	uint8                                         Pad_2543[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSNotificationId) == 0x000008, "Wrong alignment on FEOSNotificationId");
static_assert(sizeof(FEOSNotificationId) == 0x000008, "Wrong size on FEOSNotificationId");

// ScriptStruct EOSCore.EOSEcomItemOwnership
// 0x0020 (0x0020 - 0x0000)
struct FEOSEcomItemOwnership final
{
public:
	uint8                                         Pad_2544[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ID;                                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEOwnershipStatus                          OwnershipStatus;                                   // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2545[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomItemOwnership) == 0x000008, "Wrong alignment on FEOSEcomItemOwnership");
static_assert(sizeof(FEOSEcomItemOwnership) == 0x000020, "Wrong size on FEOSEcomItemOwnership");
static_assert(offsetof(FEOSEcomItemOwnership, ID) == 0x000008, "Member 'FEOSEcomItemOwnership::ID' has a wrong offset!");
static_assert(offsetof(FEOSEcomItemOwnership, OwnershipStatus) == 0x000018, "Member 'FEOSEcomItemOwnership::OwnershipStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryOwnershipCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSEcomQueryOwnershipCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2546[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2547[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSEcomItemOwnership>          ItemOwnership;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2548[0x8];                                     // 0x0048(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomQueryOwnershipCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomQueryOwnershipCallbackInfo");
static_assert(sizeof(FEOSEcomQueryOwnershipCallbackInfo) == 0x000050, "Wrong size on FEOSEcomQueryOwnershipCallbackInfo");
static_assert(offsetof(FEOSEcomQueryOwnershipCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomQueryOwnershipCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomQueryOwnershipCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipCallbackInfo, ItemOwnership) == 0x000038, "Member 'FEOSEcomQueryOwnershipCallbackInfo::ItemOwnership' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsGetInviteCountOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSSessionsGetInviteCountOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsGetInviteCountOptions) == 0x000001, "Wrong alignment on FEOSSessionsGetInviteCountOptions");
static_assert(sizeof(FEOSSessionsGetInviteCountOptions) == 0x000021, "Wrong size on FEOSSessionsGetInviteCountOptions");
static_assert(offsetof(FEOSSessionsGetInviteCountOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionsGetInviteCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2549[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254A[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo");
static_assert(sizeof(FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo) == 0x000038, "Wrong size on FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo");
static_assert(offsetof(FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo, UserId) == 0x000010, "Member 'FEOSAchievementsOnQueryPlayerAchievementsCompleteCallbackInfo::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsCopyAttributeByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyDetailsCopyAttributeByIndexOptions final
{
public:
	uint8                                         Pad_254B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttrIndex;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDetailsCopyAttributeByIndexOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsCopyAttributeByIndexOptions");
static_assert(sizeof(FEOSLobbyDetailsCopyAttributeByIndexOptions) == 0x000008, "Wrong size on FEOSLobbyDetailsCopyAttributeByIndexOptions");
static_assert(offsetof(FEOSLobbyDetailsCopyAttributeByIndexOptions, AttrIndex) == 0x000004, "Member 'FEOSLobbyDetailsCopyAttributeByIndexOptions::AttrIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateParticipantVolumeCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSRTCAudioUpdateParticipantVolumeCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254C[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0048(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_254E[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateParticipantVolumeCallbackInfo");
static_assert(sizeof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo) == 0x000070, "Wrong size on FEOSRTCAudioUpdateParticipantVolumeCallbackInfo");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCAudioUpdateParticipantVolumeCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCAudioUpdateParticipantVolumeCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCAudioUpdateParticipantVolumeCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo, ParticipantId) == 0x000048, "Member 'FEOSRTCAudioUpdateParticipantVolumeCallbackInfo::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeCallbackInfo, Volume) == 0x00006C, "Member 'FEOSRTCAudioUpdateParticipantVolumeCallbackInfo::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSModIdentifier
// 0x0058 (0x0058 - 0x0000)
struct FEOSModIdentifier final
{
public:
	uint8                                         Pad_254F[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 NamespaceId;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ItemId;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ArtifactId;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Title;                                             // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Version;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModIdentifier) == 0x000008, "Wrong alignment on FEOSModIdentifier");
static_assert(sizeof(FEOSModIdentifier) == 0x000058, "Wrong size on FEOSModIdentifier");
static_assert(offsetof(FEOSModIdentifier, NamespaceId) == 0x000008, "Member 'FEOSModIdentifier::NamespaceId' has a wrong offset!");
static_assert(offsetof(FEOSModIdentifier, ItemId) == 0x000018, "Member 'FEOSModIdentifier::ItemId' has a wrong offset!");
static_assert(offsetof(FEOSModIdentifier, ArtifactId) == 0x000028, "Member 'FEOSModIdentifier::ArtifactId' has a wrong offset!");
static_assert(offsetof(FEOSModIdentifier, Title) == 0x000038, "Member 'FEOSModIdentifier::Title' has a wrong offset!");
static_assert(offsetof(FEOSModIdentifier, Version) == 0x000048, "Member 'FEOSModIdentifier::Version' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsUpdateModOptions
// 0x0080 (0x0080 - 0x0000)
struct FEOSModsUpdateModOptions final
{
public:
	uint8                                         Pad_2550[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2551[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0028(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModsUpdateModOptions) == 0x000008, "Wrong alignment on FEOSModsUpdateModOptions");
static_assert(sizeof(FEOSModsUpdateModOptions) == 0x000080, "Wrong size on FEOSModsUpdateModOptions");
static_assert(offsetof(FEOSModsUpdateModOptions, LocalUserId) == 0x000004, "Member 'FEOSModsUpdateModOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsUpdateModOptions, Mod) == 0x000028, "Member 'FEOSModsUpdateModOptions::Mod' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIGetToggleFriendsKeyOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSUIGetToggleFriendsKeyOptions final
{
public:
	uint8                                         Pad_2552[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIGetToggleFriendsKeyOptions) == 0x000004, "Wrong alignment on FEOSUIGetToggleFriendsKeyOptions");
static_assert(sizeof(FEOSUIGetToggleFriendsKeyOptions) == 0x000004, "Wrong size on FEOSUIGetToggleFriendsKeyOptions");

// ScriptStruct EOSCore.EOSAntiCheatCommonClientHandle
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSAntiCheatCommonClientHandle final
{
public:
	uint8                                         Pad_2553[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonClientHandle) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonClientHandle");
static_assert(sizeof(FEOSAntiCheatCommonClientHandle) == 0x000008, "Wrong size on FEOSAntiCheatCommonClientHandle");

// ScriptStruct EOSCore.EOSAntiCheatCommonOnMessageToClientCallbackInfo
// 0x0028 (0x0028 - 0x0000)
struct FEOSAntiCheatCommonOnMessageToClientCallbackInfo final
{
public:
	uint8                                         Pad_2554[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 MessageData;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2555[0x8];                                     // 0x0020(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonOnMessageToClientCallbackInfo) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonOnMessageToClientCallbackInfo");
static_assert(sizeof(FEOSAntiCheatCommonOnMessageToClientCallbackInfo) == 0x000028, "Wrong size on FEOSAntiCheatCommonOnMessageToClientCallbackInfo");
static_assert(offsetof(FEOSAntiCheatCommonOnMessageToClientCallbackInfo, ClientHandle) == 0x000008, "Member 'FEOSAntiCheatCommonOnMessageToClientCallbackInfo::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonOnMessageToClientCallbackInfo, MessageData) == 0x000010, "Member 'FEOSAntiCheatCommonOnMessageToClientCallbackInfo::MessageData' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageCopyFileMetadataByFilenameOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions final
{
public:
	uint8                                         Pad_2556[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2557[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions");
static_assert(sizeof(FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions) == 0x000038, "Wrong size on FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions");
static_assert(offsetof(FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions, Filename) == 0x000028, "Member 'FEOSPlayerDataStorageCopyFileMetadataByFilenameOptions::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsOnAchievementsUnlockedCallbackV2Info
// 0x0058 (0x0058 - 0x0000)
struct FEOSAchievementsOnAchievementsUnlockedCallbackV2Info final
{
public:
	uint8                                         Pad_2558[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2559[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AchievementId;                                     // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UnlockTime;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSNotificationId                     NotificationID;                                    // 0x0050(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info) == 0x000008, "Wrong alignment on FEOSAchievementsOnAchievementsUnlockedCallbackV2Info");
static_assert(sizeof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info) == 0x000058, "Wrong size on FEOSAchievementsOnAchievementsUnlockedCallbackV2Info");
static_assert(offsetof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info, UserId) == 0x000008, "Member 'FEOSAchievementsOnAchievementsUnlockedCallbackV2Info::UserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info, AchievementId) == 0x000030, "Member 'FEOSAchievementsOnAchievementsUnlockedCallbackV2Info::AchievementId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info, UnlockTime) == 0x000040, "Member 'FEOSAchievementsOnAchievementsUnlockedCallbackV2Info::UnlockTime' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsOnAchievementsUnlockedCallbackV2Info, NotificationID) == 0x000050, "Member 'FEOSAchievementsOnAchievementsUnlockedCallbackV2Info::NotificationID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsGetLeaderboardUserScoreCountOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLeaderboardsGetLeaderboardUserScoreCountOptions final
{
public:
	uint8                                         Pad_255A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsGetLeaderboardUserScoreCountOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsGetLeaderboardUserScoreCountOptions");
static_assert(sizeof(FEOSLeaderboardsGetLeaderboardUserScoreCountOptions) == 0x000018, "Wrong size on FEOSLeaderboardsGetLeaderboardUserScoreCountOptions");
static_assert(offsetof(FEOSLeaderboardsGetLeaderboardUserScoreCountOptions, StatName) == 0x000008, "Member 'FEOSLeaderboardsGetLeaderboardUserScoreCountOptions::StatName' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomRedeemEntitlementsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSEcomRedeemEntitlementsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_255B[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_255C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RedeemedEntitlementIdsCount;                       // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomRedeemEntitlementsCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomRedeemEntitlementsCallbackInfo");
static_assert(sizeof(FEOSEcomRedeemEntitlementsCallbackInfo) == 0x000038, "Wrong size on FEOSEcomRedeemEntitlementsCallbackInfo");
static_assert(offsetof(FEOSEcomRedeemEntitlementsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomRedeemEntitlementsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomRedeemEntitlementsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomRedeemEntitlementsCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomRedeemEntitlementsCallbackInfo, RedeemedEntitlementIdsCount) == 0x000034, "Member 'FEOSEcomRedeemEntitlementsCallbackInfo::RedeemedEntitlementIdsCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthVerifyIdTokenCallbackInfo
// 0x00A8 (0x00A8 - 0x0000)
struct FEOSAuthVerifyIdTokenCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_255D[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ApplicationId;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientId;                                          // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductId;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SandboxId;                                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeploymentId;                                      // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsExternalAccountInfoPresent;                     // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      ExternalAccountIdType;                             // 0x0071(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_255E[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExternalAccountId;                                 // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExternalAccountDisplayName;                        // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthVerifyIdTokenCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthVerifyIdTokenCallbackInfo");
static_assert(sizeof(FEOSAuthVerifyIdTokenCallbackInfo) == 0x0000A8, "Wrong size on FEOSAuthVerifyIdTokenCallbackInfo");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ApplicationId) == 0x000010, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ApplicationId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ClientId) == 0x000020, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ClientId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ProductId) == 0x000030, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ProductId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, SandboxId) == 0x000040, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::SandboxId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, DeploymentId) == 0x000050, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::DeploymentId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, DisplayName) == 0x000060, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, bIsExternalAccountInfoPresent) == 0x000070, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::bIsExternalAccountInfoPresent' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ExternalAccountIdType) == 0x000071, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ExternalAccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ExternalAccountId) == 0x000078, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ExternalAccountId' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, ExternalAccountDisplayName) == 0x000088, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::ExternalAccountDisplayName' has a wrong offset!");
static_assert(offsetof(FEOSAuthVerifyIdTokenCallbackInfo, Platform) == 0x000098, "Member 'FEOSAuthVerifyIdTokenCallbackInfo::Platform' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo final
{
public:
	uint8                                         Pad_255F[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSEAntiCheatClientViolationType             ViolationType;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2560[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ViolationMessage;                                  // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo) == 0x000008, "Wrong alignment on FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo");
static_assert(sizeof(FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo) == 0x000020, "Wrong size on FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo");
static_assert(offsetof(FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo, ViolationType) == 0x000008, "Member 'FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo::ViolationType' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo, ViolationMessage) == 0x000010, "Member 'FEOSAntiCheatClientOnClientIntegrityViolatedCallbackInfo::ViolationMessage' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientOnMessageToServerCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSAntiCheatClientOnMessageToServerCallbackInfo final
{
public:
	uint8                                         Pad_2561[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MessageData;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2562[0x8];                                     // 0x0018(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientOnMessageToServerCallbackInfo) == 0x000008, "Wrong alignment on FEOSAntiCheatClientOnMessageToServerCallbackInfo");
static_assert(sizeof(FEOSAntiCheatClientOnMessageToServerCallbackInfo) == 0x000020, "Wrong size on FEOSAntiCheatClientOnMessageToServerCallbackInfo");
static_assert(offsetof(FEOSAntiCheatClientOnMessageToServerCallbackInfo, MessageData) == 0x000008, "Member 'FEOSAntiCheatClientOnMessageToServerCallbackInfo::MessageData' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageReadFileOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSPlayerDataStorageReadFileOptions final
{
public:
	uint8                                         Pad_2563[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2564[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalFile;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RemoteFile;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReadChunkLengthBytes;                              // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2565[0x14];                                    // 0x004C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageReadFileOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageReadFileOptions");
static_assert(sizeof(FEOSPlayerDataStorageReadFileOptions) == 0x000060, "Wrong size on FEOSPlayerDataStorageReadFileOptions");
static_assert(offsetof(FEOSPlayerDataStorageReadFileOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageReadFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileOptions, LocalFile) == 0x000028, "Member 'FEOSPlayerDataStorageReadFileOptions::LocalFile' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileOptions, RemoteFile) == 0x000038, "Member 'FEOSPlayerDataStorageReadFileOptions::RemoteFile' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileOptions, ReadChunkLengthBytes) == 0x000048, "Member 'FEOSPlayerDataStorageReadFileOptions::ReadChunkLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerUseAbilityOptions
// 0x0020 (0x0020 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerUseAbilityOptions final
{
public:
	uint8                                         Pad_2566[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        PlayerHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         AbilityId;                                         // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbilityDurationMs;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AbilityCooldownMs;                                 // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2567[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerUseAbilityOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions) == 0x000020, "Wrong size on FEOSAntiCheatCommonLogPlayerUseAbilityOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions, PlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerUseAbilityOptions::PlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions, AbilityId) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerUseAbilityOptions::AbilityId' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions, AbilityDurationMs) == 0x000014, "Member 'FEOSAntiCheatCommonLogPlayerUseAbilityOptions::AbilityDurationMs' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseAbilityOptions, AbilityCooldownMs) == 0x000018, "Member 'FEOSAntiCheatCommonLogPlayerUseAbilityOptions::AbilityCooldownMs' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsCreateSessionSearchOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSSessionsCreateSessionSearchOptions final
{
public:
	int32                                         MaxSearchResults;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsCreateSessionSearchOptions) == 0x000004, "Wrong alignment on FEOSSessionsCreateSessionSearchOptions");
static_assert(sizeof(FEOSSessionsCreateSessionSearchOptions) == 0x000004, "Wrong size on FEOSSessionsCreateSessionSearchOptions");
static_assert(offsetof(FEOSSessionsCreateSessionSearchOptions, MaxSearchResults) == 0x000000, "Member 'FEOSSessionsCreateSessionSearchOptions::MaxSearchResults' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonOnClientActionRequiredCallbackInfo
// 0x0028 (0x0028 - 0x0000)
struct FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo final
{
public:
	uint8                                         Pad_2568[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientAction              ClientAction;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientActionReason        ActionReasonCode;                                  // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2569[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ActionReasonDetailsString;                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo");
static_assert(sizeof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo) == 0x000028, "Wrong size on FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo");
static_assert(offsetof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo, ClientHandle) == 0x000008, "Member 'FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo, ClientAction) == 0x000010, "Member 'FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo::ClientAction' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo, ActionReasonCode) == 0x000011, "Member 'FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo::ActionReasonCode' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo, ActionReasonDetailsString) == 0x000018, "Member 'FEOSAntiCheatCommonOnClientActionRequiredCallbackInfo::ActionReasonDetailsString' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PSocketId
// 0x0018 (0x0018 - 0x0000)
struct FEOSP2PSocketId final
{
public:
	uint8                                         Pad_256A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SocketName;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PSocketId) == 0x000008, "Wrong alignment on FEOSP2PSocketId");
static_assert(sizeof(FEOSP2PSocketId) == 0x000018, "Wrong size on FEOSP2PSocketId");
static_assert(offsetof(FEOSP2PSocketId, SocketName) == 0x000008, "Member 'FEOSP2PSocketId::SocketName' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PAddNotifyPeerConnectionInterruptedOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSP2PAddNotifyPeerConnectionInterruptedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_256B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PAddNotifyPeerConnectionInterruptedOptions) == 0x000008, "Wrong alignment on FEOSP2PAddNotifyPeerConnectionInterruptedOptions");
static_assert(sizeof(FEOSP2PAddNotifyPeerConnectionInterruptedOptions) == 0x000040, "Wrong size on FEOSP2PAddNotifyPeerConnectionInterruptedOptions");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionInterruptedOptions, LocalUserId) == 0x000000, "Member 'FEOSP2PAddNotifyPeerConnectionInterruptedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionInterruptedOptions, SocketId) == 0x000028, "Member 'FEOSP2PAddNotifyPeerConnectionInterruptedOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationRemoveAttributeOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionModificationRemoveAttributeOptions final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationRemoveAttributeOptions) == 0x000008, "Wrong alignment on FEOSSessionModificationRemoveAttributeOptions");
static_assert(sizeof(FEOSSessionModificationRemoveAttributeOptions) == 0x000010, "Wrong size on FEOSSessionModificationRemoveAttributeOptions");
static_assert(offsetof(FEOSSessionModificationRemoveAttributeOptions, Key) == 0x000000, "Member 'FEOSSessionModificationRemoveAttributeOptions::Key' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo final
{
public:
	uint8                                         Pad_256C[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientAuthStatus          ClientAuthStatus;                                  // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_256D[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo");
static_assert(sizeof(FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo) == 0x000018, "Wrong size on FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo");
static_assert(offsetof(FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo, ClientHandle) == 0x000008, "Member 'FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo, ClientAuthStatus) == 0x000010, "Member 'FEOSAntiCheatCommonOnClientAuthStatusChangedCallbackInfo::ClientAuthStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationSetHostAddressOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionModificationSetHostAddressOptions final
{
public:
	class FString                                 HostAddress;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetHostAddressOptions) == 0x000008, "Wrong alignment on FEOSSessionModificationSetHostAddressOptions");
static_assert(sizeof(FEOSSessionModificationSetHostAddressOptions) == 0x000010, "Wrong size on FEOSSessionModificationSetHostAddressOptions");
static_assert(offsetof(FEOSSessionModificationSetHostAddressOptions, HostAddress) == 0x000000, "Member 'FEOSSessionModificationSetHostAddressOptions::HostAddress' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDeleteCacheCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPlayerDataStorageDeleteCacheCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_256E[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_256F[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageDeleteCacheCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageDeleteCacheCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageDeleteCacheCallbackInfo) == 0x000038, "Wrong size on FEOSPlayerDataStorageDeleteCacheCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageDeleteCacheCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageDeleteCacheCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDeleteCacheCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageDeleteCacheCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioAudioBuffer
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSRTCAudioAudioBuffer final
{
public:
	int32                                         SampleRate;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Channels;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2570[0x8];                                     // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCAudioAudioBuffer) == 0x000008, "Wrong alignment on FEOSRTCAudioAudioBuffer");
static_assert(sizeof(FEOSRTCAudioAudioBuffer) == 0x000010, "Wrong size on FEOSRTCAudioAudioBuffer");
static_assert(offsetof(FEOSRTCAudioAudioBuffer, SampleRate) == 0x000000, "Member 'FEOSRTCAudioAudioBuffer::SampleRate' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioAudioBuffer, Channels) == 0x000004, "Member 'FEOSRTCAudioAudioBuffer::Channels' has a wrong offset!");

// ScriptStruct EOSCore.EOSBeforeRenderCallbackInfo
// 0x0078 (0x0078 - 0x0000)
struct FEOSBeforeRenderCallbackInfo final
{
public:
	uint8                                         Pad_2571[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2572[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSRTCAudioAudioBuffer                Buffer;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0050(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2573[0x7];                                     // 0x0071(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSBeforeRenderCallbackInfo) == 0x000008, "Wrong alignment on FEOSBeforeRenderCallbackInfo");
static_assert(sizeof(FEOSBeforeRenderCallbackInfo) == 0x000078, "Wrong size on FEOSBeforeRenderCallbackInfo");
static_assert(offsetof(FEOSBeforeRenderCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSBeforeRenderCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSBeforeRenderCallbackInfo, RoomName) == 0x000030, "Member 'FEOSBeforeRenderCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSBeforeRenderCallbackInfo, Buffer) == 0x000040, "Member 'FEOSBeforeRenderCallbackInfo::Buffer' has a wrong offset!");
static_assert(offsetof(FEOSBeforeRenderCallbackInfo, ParticipantId) == 0x000050, "Member 'FEOSBeforeRenderCallbackInfo::ParticipantId' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotBeginSnapshotOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSProgressionSnapshotBeginSnapshotOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSProgressionSnapshotBeginSnapshotOptions) == 0x000001, "Wrong alignment on FEOSProgressionSnapshotBeginSnapshotOptions");
static_assert(sizeof(FEOSProgressionSnapshotBeginSnapshotOptions) == 0x000021, "Wrong size on FEOSProgressionSnapshotBeginSnapshotOptions");
static_assert(offsetof(FEOSProgressionSnapshotBeginSnapshotOptions, LocalUserId) == 0x000000, "Member 'FEOSProgressionSnapshotBeginSnapshotOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSanctionsPlayerSanction
// 0x0020 (0x0020 - 0x0000)
struct FEOSSanctionsPlayerSanction final
{
public:
	uint8                                         Pad_2574[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              TimePlaced;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Action;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSanctionsPlayerSanction) == 0x000008, "Wrong alignment on FEOSSanctionsPlayerSanction");
static_assert(sizeof(FEOSSanctionsPlayerSanction) == 0x000020, "Wrong size on FEOSSanctionsPlayerSanction");
static_assert(offsetof(FEOSSanctionsPlayerSanction, TimePlaced) == 0x000008, "Member 'FEOSSanctionsPlayerSanction::TimePlaced' has a wrong offset!");
static_assert(offsetof(FEOSSanctionsPlayerSanction, Action) == 0x000010, "Member 'FEOSSanctionsPlayerSanction::Action' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsSendInviteCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSFriendsSendInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2575[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2576[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsSendInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSFriendsSendInviteCallbackInfo");
static_assert(sizeof(FEOSFriendsSendInviteCallbackInfo) == 0x000058, "Wrong size on FEOSFriendsSendInviteCallbackInfo");
static_assert(offsetof(FEOSFriendsSendInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSFriendsSendInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSFriendsSendInviteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSFriendsSendInviteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsSendInviteCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSFriendsSendInviteCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyCopyLobbyDetailsHandleOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyCopyLobbyDetailsHandleOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2577[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyCopyLobbyDetailsHandleOptions) == 0x000008, "Wrong alignment on FEOSLobbyCopyLobbyDetailsHandleOptions");
static_assert(sizeof(FEOSLobbyCopyLobbyDetailsHandleOptions) == 0x000038, "Wrong size on FEOSLobbyCopyLobbyDetailsHandleOptions");
static_assert(offsetof(FEOSLobbyCopyLobbyDetailsHandleOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyCopyLobbyDetailsHandleOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCopyLobbyDetailsHandleOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyCopyLobbyDetailsHandleOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectDeleteDeviceIdCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSConnectDeleteDeviceIdCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2578[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectDeleteDeviceIdCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectDeleteDeviceIdCallbackInfo");
static_assert(sizeof(FEOSConnectDeleteDeviceIdCallbackInfo) == 0x000010, "Wrong size on FEOSConnectDeleteDeviceIdCallbackInfo");
static_assert(offsetof(FEOSConnectDeleteDeviceIdCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectDeleteDeviceIdCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyGetRTCRoomNameOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyGetRTCRoomNameOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2579[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyGetRTCRoomNameOptions) == 0x000008, "Wrong alignment on FEOSLobbyGetRTCRoomNameOptions");
static_assert(sizeof(FEOSLobbyGetRTCRoomNameOptions) == 0x000038, "Wrong size on FEOSLobbyGetRTCRoomNameOptions");
static_assert(offsetof(FEOSLobbyGetRTCRoomNameOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyGetRTCRoomNameOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyGetRTCRoomNameOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyGetRTCRoomNameOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSBeforeSendCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSBeforeSendCallbackInfo final
{
public:
	uint8                                         Pad_257A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_257B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSRTCAudioAudioBuffer                Buffer;                                            // 0x0040(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSBeforeSendCallbackInfo) == 0x000008, "Wrong alignment on FEOSBeforeSendCallbackInfo");
static_assert(sizeof(FEOSBeforeSendCallbackInfo) == 0x000050, "Wrong size on FEOSBeforeSendCallbackInfo");
static_assert(offsetof(FEOSBeforeSendCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSBeforeSendCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSBeforeSendCallbackInfo, RoomName) == 0x000030, "Member 'FEOSBeforeSendCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSBeforeSendCallbackInfo, Buffer) == 0x000040, "Member 'FEOSBeforeSendCallbackInfo::Buffer' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyOfferByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSEcomCopyOfferByIndexOptions final
{
public:
	uint8                                         Pad_257C[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_257D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OfferIndex;                                        // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyOfferByIndexOptions) == 0x000004, "Wrong alignment on FEOSEcomCopyOfferByIndexOptions");
static_assert(sizeof(FEOSEcomCopyOfferByIndexOptions) == 0x00002C, "Wrong size on FEOSEcomCopyOfferByIndexOptions");
static_assert(offsetof(FEOSEcomCopyOfferByIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomCopyOfferByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferByIndexOptions, OfferIndex) == 0x000028, "Member 'FEOSEcomCopyOfferByIndexOptions::OfferIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIShowReportPlayerOptions
// 0x0042 (0x0042 - 0x0000)
struct FEOSUIShowReportPlayerOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUIShowReportPlayerOptions) == 0x000001, "Wrong alignment on FEOSUIShowReportPlayerOptions");
static_assert(sizeof(FEOSUIShowReportPlayerOptions) == 0x000042, "Wrong size on FEOSUIShowReportPlayerOptions");
static_assert(offsetof(FEOSUIShowReportPlayerOptions, LocalUserId) == 0x000000, "Member 'FEOSUIShowReportPlayerOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUIShowReportPlayerOptions, TargetUserId) == 0x000021, "Member 'FEOSUIShowReportPlayerOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCopyProductUserExternalAccountByAccountTypeOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions final
{
public:
	uint8                                         Pad_257E[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_257F[0x2];                                     // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions) == 0x000004, "Wrong alignment on FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions");
static_assert(sizeof(FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions) == 0x000028, "Wrong size on FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions, TargetUserId) == 0x000004, "Member 'FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions, AccountIdType) == 0x000025, "Member 'FEOSConnectCopyProductUserExternalAccountByAccountTypeOptions::AccountIdType' has a wrong offset!");

// ScriptStruct EOSCore.EOSAudioDevicesChangedCallbackInfo
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSAudioDevicesChangedCallbackInfo final
{
public:
	uint8                                         Pad_2580[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAudioDevicesChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSAudioDevicesChangedCallbackInfo");
static_assert(sizeof(FEOSAudioDevicesChangedCallbackInfo) == 0x000008, "Wrong size on FEOSAudioDevicesChangedCallbackInfo");

// ScriptStruct EOSCore.EOSUIAddNotifyDisplaySettingsUpdatedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSUIAddNotifyDisplaySettingsUpdatedOptions final
{
public:
	uint8                                         Pad_2581[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIAddNotifyDisplaySettingsUpdatedOptions) == 0x000004, "Wrong alignment on FEOSUIAddNotifyDisplaySettingsUpdatedOptions");
static_assert(sizeof(FEOSUIAddNotifyDisplaySettingsUpdatedOptions) == 0x000004, "Wrong size on FEOSUIAddNotifyDisplaySettingsUpdatedOptions");

// ScriptStruct EOSCore.EOSConnectTransferDeviceIdAccountCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectTransferDeviceIdAccountCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2582[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2583[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectTransferDeviceIdAccountCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectTransferDeviceIdAccountCallbackInfo");
static_assert(sizeof(FEOSConnectTransferDeviceIdAccountCallbackInfo) == 0x000038, "Wrong size on FEOSConnectTransferDeviceIdAccountCallbackInfo");
static_assert(offsetof(FEOSConnectTransferDeviceIdAccountCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectTransferDeviceIdAccountCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectTransferDeviceIdAccountCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectTransferDeviceIdAccountCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAudioInputStateCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSAudioInputStateCallbackInfo final
{
public:
	uint8                                         Pad_2584[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2585[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCAudioInputStatus                      Status;                                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2586[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAudioInputStateCallbackInfo) == 0x000008, "Wrong alignment on FEOSAudioInputStateCallbackInfo");
static_assert(sizeof(FEOSAudioInputStateCallbackInfo) == 0x000048, "Wrong size on FEOSAudioInputStateCallbackInfo");
static_assert(offsetof(FEOSAudioInputStateCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSAudioInputStateCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAudioInputStateCallbackInfo, RoomName) == 0x000030, "Member 'FEOSAudioInputStateCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSAudioInputStateCallbackInfo, Status) == 0x000040, "Member 'FEOSAudioInputStateCallbackInfo::Status' has a wrong offset!");

// ScriptStruct EOSCore.EOSOutputStateCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSOutputStateCallbackInfo final
{
public:
	uint8                                         Pad_2587[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2588[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCAudioOutputStatus                     Status;                                            // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2589[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSOutputStateCallbackInfo) == 0x000008, "Wrong alignment on FEOSOutputStateCallbackInfo");
static_assert(sizeof(FEOSOutputStateCallbackInfo) == 0x000048, "Wrong size on FEOSOutputStateCallbackInfo");
static_assert(offsetof(FEOSOutputStateCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSOutputStateCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSOutputStateCallbackInfo, RoomName) == 0x000030, "Member 'FEOSOutputStateCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSOutputStateCallbackInfo, Status) == 0x000040, "Member 'FEOSOutputStateCallbackInfo::Status' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIOnDisplaySettingsUpdatedCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSUIOnDisplaySettingsUpdatedCallbackInfo final
{
public:
	uint8                                         Pad_258A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bIsVisible;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsExclusiveInput;                                 // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258B[0x6];                                     // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIOnDisplaySettingsUpdatedCallbackInfo) == 0x000008, "Wrong alignment on FEOSUIOnDisplaySettingsUpdatedCallbackInfo");
static_assert(sizeof(FEOSUIOnDisplaySettingsUpdatedCallbackInfo) == 0x000010, "Wrong size on FEOSUIOnDisplaySettingsUpdatedCallbackInfo");
static_assert(offsetof(FEOSUIOnDisplaySettingsUpdatedCallbackInfo, bIsVisible) == 0x000008, "Member 'FEOSUIOnDisplaySettingsUpdatedCallbackInfo::bIsVisible' has a wrong offset!");
static_assert(offsetof(FEOSUIOnDisplaySettingsUpdatedCallbackInfo, bIsExclusiveInput) == 0x000009, "Member 'FEOSUIOnDisplaySettingsUpdatedCallbackInfo::bIsExclusiveInput' has a wrong offset!");

// ScriptStruct EOSCore.EOSUpdateSendingCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSUpdateSendingCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258C[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258D[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCAudioStatus                           AudioStatus;                                       // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258E[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUpdateSendingCallbackInfo) == 0x000008, "Wrong alignment on FEOSUpdateSendingCallbackInfo");
static_assert(sizeof(FEOSUpdateSendingCallbackInfo) == 0x000050, "Wrong size on FEOSUpdateSendingCallbackInfo");
static_assert(offsetof(FEOSUpdateSendingCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUpdateSendingCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUpdateSendingCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUpdateSendingCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateSendingCallbackInfo, RoomName) == 0x000038, "Member 'FEOSUpdateSendingCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSUpdateSendingCallbackInfo, AudioStatus) == 0x000048, "Member 'FEOSUpdateSendingCallbackInfo::AudioStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotEndSnapshotOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSProgressionSnapshotEndSnapshotOptions final
{
public:
	int32                                         SnapshotId;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSProgressionSnapshotEndSnapshotOptions) == 0x000004, "Wrong alignment on FEOSProgressionSnapshotEndSnapshotOptions");
static_assert(sizeof(FEOSProgressionSnapshotEndSnapshotOptions) == 0x000004, "Wrong size on FEOSProgressionSnapshotEndSnapshotOptions");
static_assert(offsetof(FEOSProgressionSnapshotEndSnapshotOptions, SnapshotId) == 0x000000, "Member 'FEOSProgressionSnapshotEndSnapshotOptions::SnapshotId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthDeletePersistentAuthCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSAuthDeletePersistentAuthCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_258F[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthDeletePersistentAuthCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthDeletePersistentAuthCallbackInfo");
static_assert(sizeof(FEOSAuthDeletePersistentAuthCallbackInfo) == 0x000010, "Wrong size on FEOSAuthDeletePersistentAuthCallbackInfo");
static_assert(offsetof(FEOSAuthDeletePersistentAuthCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthDeletePersistentAuthCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsSendInviteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsSendInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2590[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsSendInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsSendInviteCallbackInfo");
static_assert(sizeof(FEOSSessionsSendInviteCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsSendInviteCallbackInfo");
static_assert(offsetof(FEOSSessionsSendInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsSendInviteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDuplicateFileCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPlayerDataStorageDuplicateFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2591[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2592[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageDuplicateFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageDuplicateFileCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageDuplicateFileCallbackInfo) == 0x000038, "Wrong size on FEOSPlayerDataStorageDuplicateFileCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageDuplicateFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageDuplicateFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDuplicateFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageDuplicateFileCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsCreateSessionModificationOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSSessionsCreateSessionModificationOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 BucketId;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxPlayers;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0024(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresenceEnabled;                                  // 0x0045(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2593[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsCreateSessionModificationOptions) == 0x000008, "Wrong alignment on FEOSSessionsCreateSessionModificationOptions");
static_assert(sizeof(FEOSSessionsCreateSessionModificationOptions) == 0x000048, "Wrong size on FEOSSessionsCreateSessionModificationOptions");
static_assert(offsetof(FEOSSessionsCreateSessionModificationOptions, SessionName) == 0x000000, "Member 'FEOSSessionsCreateSessionModificationOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsCreateSessionModificationOptions, BucketId) == 0x000010, "Member 'FEOSSessionsCreateSessionModificationOptions::BucketId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsCreateSessionModificationOptions, MaxPlayers) == 0x000020, "Member 'FEOSSessionsCreateSessionModificationOptions::MaxPlayers' has a wrong offset!");
static_assert(offsetof(FEOSSessionsCreateSessionModificationOptions, LocalUserId) == 0x000024, "Member 'FEOSSessionsCreateSessionModificationOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsCreateSessionModificationOptions, bPresenceEnabled) == 0x000045, "Member 'FEOSSessionsCreateSessionModificationOptions::bPresenceEnabled' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectAuthExpirationCallbackInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FEOSConnectAuthExpirationCallbackInfo final
{
public:
	uint8                                         Pad_2594[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2595[0x7];                                     // 0x0029(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectAuthExpirationCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectAuthExpirationCallbackInfo");
static_assert(sizeof(FEOSConnectAuthExpirationCallbackInfo) == 0x000030, "Wrong size on FEOSConnectAuthExpirationCallbackInfo");
static_assert(offsetof(FEOSConnectAuthExpirationCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSConnectAuthExpirationCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCheckoutCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSEcomCheckoutCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2596[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2597[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TransactionId;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCheckoutCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomCheckoutCallbackInfo");
static_assert(sizeof(FEOSEcomCheckoutCallbackInfo) == 0x000048, "Wrong size on FEOSEcomCheckoutCallbackInfo");
static_assert(offsetof(FEOSEcomCheckoutCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomCheckoutCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomCheckoutCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomCheckoutCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCheckoutCallbackInfo, TransactionId) == 0x000038, "Member 'FEOSEcomCheckoutCallbackInfo::TransactionId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCheckoutEntry
// 0x0018 (0x0018 - 0x0000)
struct FEOSEcomCheckoutEntry final
{
public:
	uint8                                         Pad_2598[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCheckoutEntry) == 0x000008, "Wrong alignment on FEOSEcomCheckoutEntry");
static_assert(sizeof(FEOSEcomCheckoutEntry) == 0x000018, "Wrong size on FEOSEcomCheckoutEntry");
static_assert(offsetof(FEOSEcomCheckoutEntry, OfferId) == 0x000008, "Member 'FEOSEcomCheckoutEntry::OfferId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthPinGrantInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSAuthPinGrantInfo final
{
public:
	uint8                                         Pad_2599[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UserCode;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 VerificationURI;                                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ExpiresIn;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259A[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VerificationURIComplete;                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthPinGrantInfo) == 0x000008, "Wrong alignment on FEOSAuthPinGrantInfo");
static_assert(sizeof(FEOSAuthPinGrantInfo) == 0x000040, "Wrong size on FEOSAuthPinGrantInfo");
static_assert(offsetof(FEOSAuthPinGrantInfo, UserCode) == 0x000008, "Member 'FEOSAuthPinGrantInfo::UserCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthPinGrantInfo, VerificationURI) == 0x000018, "Member 'FEOSAuthPinGrantInfo::VerificationURI' has a wrong offset!");
static_assert(offsetof(FEOSAuthPinGrantInfo, ExpiresIn) == 0x000028, "Member 'FEOSAuthPinGrantInfo::ExpiresIn' has a wrong offset!");
static_assert(offsetof(FEOSAuthPinGrantInfo, VerificationURIComplete) == 0x000030, "Member 'FEOSAuthPinGrantInfo::VerificationURIComplete' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLinkAccountCallbackInfo
// 0x00A0 (0x00A0 - 0x0000)
struct FEOSAuthLinkAccountCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259B[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259C[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAuthPinGrantInfo                   PinGrantInfo;                                      // 0x0038(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      SelectedAccountId;                                 // 0x0078(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_259D[0x7];                                     // 0x0099(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLinkAccountCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthLinkAccountCallbackInfo");
static_assert(sizeof(FEOSAuthLinkAccountCallbackInfo) == 0x0000A0, "Wrong size on FEOSAuthLinkAccountCallbackInfo");
static_assert(offsetof(FEOSAuthLinkAccountCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthLinkAccountCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthLinkAccountCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSAuthLinkAccountCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAuthLinkAccountCallbackInfo, PinGrantInfo) == 0x000038, "Member 'FEOSAuthLinkAccountCallbackInfo::PinGrantInfo' has a wrong offset!");
static_assert(offsetof(FEOSAuthLinkAccountCallbackInfo, SelectedAccountId) == 0x000078, "Member 'FEOSAuthLinkAccountCallbackInfo::SelectedAccountId' has a wrong offset!");

// ScriptStruct EOSCore.ContinuanceToken
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FContinuanceToken final
{
public:
	uint8                                         Pad_259E[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FContinuanceToken) == 0x000008, "Wrong alignment on FContinuanceToken");
static_assert(sizeof(FContinuanceToken) == 0x000008, "Wrong size on FContinuanceToken");

// ScriptStruct EOSCore.EOSAuthAccountFeatureRestrictedInfo
// 0x0018 (0x0018 - 0x0000)
struct FEOSAuthAccountFeatureRestrictedInfo final
{
public:
	uint8                                         Pad_259F[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 VerificationURI;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthAccountFeatureRestrictedInfo) == 0x000008, "Wrong alignment on FEOSAuthAccountFeatureRestrictedInfo");
static_assert(sizeof(FEOSAuthAccountFeatureRestrictedInfo) == 0x000018, "Wrong size on FEOSAuthAccountFeatureRestrictedInfo");
static_assert(offsetof(FEOSAuthAccountFeatureRestrictedInfo, VerificationURI) == 0x000008, "Member 'FEOSAuthAccountFeatureRestrictedInfo::VerificationURI' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLoginCallbackInfo
// 0x00C0 (0x00C0 - 0x0000)
struct FEOSAuthLoginCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A0[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAuthPinGrantInfo                   PinGrantInfo;                                      // 0x0038(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FContinuanceToken                      ContinuanceToken;                                  // 0x0078(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSAuthAccountFeatureRestrictedInfo   AccountFeatureRestrictedInfo;                      // 0x0080(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      SelectedAccountId;                                 // 0x0098(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A2[0x7];                                     // 0x00B9(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLoginCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthLoginCallbackInfo");
static_assert(sizeof(FEOSAuthLoginCallbackInfo) == 0x0000C0, "Wrong size on FEOSAuthLoginCallbackInfo");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthLoginCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSAuthLoginCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, PinGrantInfo) == 0x000038, "Member 'FEOSAuthLoginCallbackInfo::PinGrantInfo' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, ContinuanceToken) == 0x000078, "Member 'FEOSAuthLoginCallbackInfo::ContinuanceToken' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, AccountFeatureRestrictedInfo) == 0x000080, "Member 'FEOSAuthLoginCallbackInfo::AccountFeatureRestrictedInfo' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginCallbackInfo, SelectedAccountId) == 0x000098, "Member 'FEOSAuthLoginCallbackInfo::SelectedAccountId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryEntitlementTokenCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomQueryEntitlementTokenCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A3[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EntitlementToken;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryEntitlementTokenCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomQueryEntitlementTokenCallbackInfo");
static_assert(sizeof(FEOSEcomQueryEntitlementTokenCallbackInfo) == 0x000038, "Wrong size on FEOSEcomQueryEntitlementTokenCallbackInfo");
static_assert(offsetof(FEOSEcomQueryEntitlementTokenCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomQueryEntitlementTokenCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementTokenCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSEcomQueryEntitlementTokenCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementTokenCallbackInfo, EntitlementToken) == 0x000028, "Member 'FEOSEcomQueryEntitlementTokenCallbackInfo::EntitlementToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationDataRecordId
// 0x0018 (0x0018 - 0x0000)
struct FEOSPresenceModificationDataRecordId final
{
public:
	uint8                                         Pad_25A4[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceModificationDataRecordId) == 0x000008, "Wrong alignment on FEOSPresenceModificationDataRecordId");
static_assert(sizeof(FEOSPresenceModificationDataRecordId) == 0x000018, "Wrong size on FEOSPresenceModificationDataRecordId");
static_assert(offsetof(FEOSPresenceModificationDataRecordId, Key) == 0x000008, "Member 'FEOSPresenceModificationDataRecordId::Key' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationDeleteDataOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSPresenceModificationDeleteDataOptions final
{
public:
	uint8                                         Pad_25A5[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSPresenceModificationDataRecordId> Records;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceModificationDeleteDataOptions) == 0x000008, "Wrong alignment on FEOSPresenceModificationDeleteDataOptions");
static_assert(sizeof(FEOSPresenceModificationDeleteDataOptions) == 0x000018, "Wrong size on FEOSPresenceModificationDeleteDataOptions");
static_assert(offsetof(FEOSPresenceModificationDeleteDataOptions, Records) == 0x000008, "Member 'FEOSPresenceModificationDeleteDataOptions::Records' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsGetFriendAtIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSFriendsGetFriendAtIndexOptions final
{
public:
	uint8                                         Pad_25A6[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A7[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSFriendsGetFriendAtIndexOptions) == 0x000004, "Wrong alignment on FEOSFriendsGetFriendAtIndexOptions");
static_assert(sizeof(FEOSFriendsGetFriendAtIndexOptions) == 0x00002C, "Wrong size on FEOSFriendsGetFriendAtIndexOptions");
static_assert(offsetof(FEOSFriendsGetFriendAtIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsGetFriendAtIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsGetFriendAtIndexOptions, Index) == 0x000028, "Member 'FEOSFriendsGetFriendAtIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLoginStatusChangedCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct FEOSAuthLoginStatusChangedCallbackInfo final
{
public:
	uint8                                         Pad_25A8[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSELoginStatus                               PrevStatus;                                        // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSELoginStatus                               CurrentStatus;                                     // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25A9[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSNotificationId                     NotificationID;                                    // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthLoginStatusChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthLoginStatusChangedCallbackInfo");
static_assert(sizeof(FEOSAuthLoginStatusChangedCallbackInfo) == 0x000038, "Wrong size on FEOSAuthLoginStatusChangedCallbackInfo");
static_assert(offsetof(FEOSAuthLoginStatusChangedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSAuthLoginStatusChangedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginStatusChangedCallbackInfo, PrevStatus) == 0x000029, "Member 'FEOSAuthLoginStatusChangedCallbackInfo::PrevStatus' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginStatusChangedCallbackInfo, CurrentStatus) == 0x00002A, "Member 'FEOSAuthLoginStatusChangedCallbackInfo::CurrentStatus' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginStatusChangedCallbackInfo, NotificationID) == 0x000030, "Member 'FEOSAuthLoginStatusChangedCallbackInfo::NotificationID' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLogoutCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSAuthLogoutCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AA[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AB[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLogoutCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthLogoutCallbackInfo");
static_assert(sizeof(FEOSAuthLogoutCallbackInfo) == 0x000038, "Wrong size on FEOSAuthLogoutCallbackInfo");
static_assert(offsetof(FEOSAuthLogoutCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthLogoutCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthLogoutCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSAuthLogoutCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUpdateReceivingCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSUpdateReceivingCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AC[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AD[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0048(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAudioEnabled;                                     // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AE[0x6];                                     // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUpdateReceivingCallbackInfo) == 0x000008, "Wrong alignment on FEOSUpdateReceivingCallbackInfo");
static_assert(sizeof(FEOSUpdateReceivingCallbackInfo) == 0x000070, "Wrong size on FEOSUpdateReceivingCallbackInfo");
static_assert(offsetof(FEOSUpdateReceivingCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUpdateReceivingCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUpdateReceivingCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingCallbackInfo, RoomName) == 0x000038, "Member 'FEOSUpdateReceivingCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingCallbackInfo, ParticipantId) == 0x000048, "Member 'FEOSUpdateReceivingCallbackInfo::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingCallbackInfo, bAudioEnabled) == 0x000069, "Member 'FEOSUpdateReceivingCallbackInfo::bAudioEnabled' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthQueryIdTokenCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSAuthQueryIdTokenCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25AF[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetAccountId;                                   // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B0[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthQueryIdTokenCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthQueryIdTokenCallbackInfo");
static_assert(sizeof(FEOSAuthQueryIdTokenCallbackInfo) == 0x000058, "Wrong size on FEOSAuthQueryIdTokenCallbackInfo");
static_assert(offsetof(FEOSAuthQueryIdTokenCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthQueryIdTokenCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSAuthQueryIdTokenCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSAuthQueryIdTokenCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAuthQueryIdTokenCallbackInfo, TargetAccountId) == 0x000031, "Member 'FEOSAuthQueryIdTokenCallbackInfo::TargetAccountId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationRemoveAttributeOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyModificationRemoveAttributeOptions final
{
public:
	uint8                                         Pad_25B1[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyModificationRemoveAttributeOptions) == 0x000008, "Wrong alignment on FEOSLobbyModificationRemoveAttributeOptions");
static_assert(sizeof(FEOSLobbyModificationRemoveAttributeOptions) == 0x000018, "Wrong size on FEOSLobbyModificationRemoveAttributeOptions");
static_assert(offsetof(FEOSLobbyModificationRemoveAttributeOptions, Key) == 0x000008, "Member 'FEOSLobbyModificationRemoveAttributeOptions::Key' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsEnumerateModsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSModsEnumerateModsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B2[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSEModEnumerationType                       Type;                                              // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B3[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSModsEnumerateModsCallbackInfo) == 0x000008, "Wrong alignment on FEOSModsEnumerateModsCallbackInfo");
static_assert(sizeof(FEOSModsEnumerateModsCallbackInfo) == 0x000038, "Wrong size on FEOSModsEnumerateModsCallbackInfo");
static_assert(offsetof(FEOSModsEnumerateModsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSModsEnumerateModsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSModsEnumerateModsCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSModsEnumerateModsCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsEnumerateModsCallbackInfo, Type) == 0x000030, "Member 'FEOSModsEnumerateModsCallbackInfo::Type' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsAcceptInviteOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSFriendsAcceptInviteOptions final
{
public:
	uint8                                         Pad_25B4[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B5[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsAcceptInviteOptions) == 0x000004, "Wrong alignment on FEOSFriendsAcceptInviteOptions");
static_assert(sizeof(FEOSFriendsAcceptInviteOptions) == 0x000048, "Wrong size on FEOSFriendsAcceptInviteOptions");
static_assert(offsetof(FEOSFriendsAcceptInviteOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsAcceptInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsAcceptInviteOptions, TargetUserId) == 0x000025, "Member 'FEOSFriendsAcceptInviteOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthVerifyUserAuthCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSAuthVerifyUserAuthCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B6[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthVerifyUserAuthCallbackInfo) == 0x000008, "Wrong alignment on FEOSAuthVerifyUserAuthCallbackInfo");
static_assert(sizeof(FEOSAuthVerifyUserAuthCallbackInfo) == 0x000010, "Wrong size on FEOSAuthVerifyUserAuthCallbackInfo");
static_assert(offsetof(FEOSAuthVerifyUserAuthCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSAuthVerifyUserAuthCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsUserScoresQueryStatInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLeaderboardsUserScoresQueryStatInfo final
{
public:
	uint8                                         Pad_25B7[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELeaderboardAggregation                   Aggregation;                                       // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25B8[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsUserScoresQueryStatInfo) == 0x000008, "Wrong alignment on FEOSLeaderboardsUserScoresQueryStatInfo");
static_assert(sizeof(FEOSLeaderboardsUserScoresQueryStatInfo) == 0x000020, "Wrong size on FEOSLeaderboardsUserScoresQueryStatInfo");
static_assert(offsetof(FEOSLeaderboardsUserScoresQueryStatInfo, StatName) == 0x000008, "Member 'FEOSLeaderboardsUserScoresQueryStatInfo::StatName' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsUserScoresQueryStatInfo, Aggregation) == 0x000018, "Member 'FEOSLeaderboardsUserScoresQueryStatInfo::Aggregation' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsQueryLeaderboardUserScoresOptions
// 0x0070 (0x0070 - 0x0000)
struct FEOSLeaderboardsQueryLeaderboardUserScoresOptions final
{
public:
	uint8                                         Pad_25B9[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              UserIds;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEOSLeaderboardsUserScoresQueryStatInfo> StatInfo;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0048(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BA[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsQueryLeaderboardUserScoresOptions");
static_assert(sizeof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions) == 0x000070, "Wrong size on FEOSLeaderboardsQueryLeaderboardUserScoresOptions");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions, UserIds) == 0x000008, "Member 'FEOSLeaderboardsQueryLeaderboardUserScoresOptions::UserIds' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions, StatInfo) == 0x000018, "Member 'FEOSLeaderboardsQueryLeaderboardUserScoresOptions::StatInfo' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions, StartTime) == 0x000028, "Member 'FEOSLeaderboardsQueryLeaderboardUserScoresOptions::StartTime' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions, EndTime) == 0x000038, "Member 'FEOSLeaderboardsQueryLeaderboardUserScoresOptions::EndTime' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardUserScoresOptions, LocalUserId) == 0x000048, "Member 'FEOSLeaderboardsQueryLeaderboardUserScoresOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCBlockParticipantCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSRTCBlockParticipantCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BB[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0048(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlocked;                                          // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BD[0x6];                                     // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCBlockParticipantCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCBlockParticipantCallbackInfo");
static_assert(sizeof(FEOSRTCBlockParticipantCallbackInfo) == 0x000070, "Wrong size on FEOSRTCBlockParticipantCallbackInfo");
static_assert(offsetof(FEOSRTCBlockParticipantCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCBlockParticipantCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCBlockParticipantCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCBlockParticipantCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCBlockParticipantCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCBlockParticipantCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCBlockParticipantCallbackInfo, ParticipantId) == 0x000048, "Member 'FEOSRTCBlockParticipantCallbackInfo::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSRTCBlockParticipantCallbackInfo, bBlocked) == 0x000069, "Member 'FEOSRTCBlockParticipantCallbackInfo::bBlocked' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectOnVerifyIdTokenCallback
// 0x00A8 (0x00A8 - 0x0000)
struct FEOSConnectOnVerifyIdTokenCallback final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BE[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      ProductUserId;                                     // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsAccountInfoPresent;                             // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25BF[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountId;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceType;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientId;                                          // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductId;                                         // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SandboxId;                                         // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeploymentId;                                      // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectOnVerifyIdTokenCallback) == 0x000008, "Wrong alignment on FEOSConnectOnVerifyIdTokenCallback");
static_assert(sizeof(FEOSConnectOnVerifyIdTokenCallback) == 0x0000A8, "Wrong size on FEOSConnectOnVerifyIdTokenCallback");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, ResultCode) == 0x000000, "Member 'FEOSConnectOnVerifyIdTokenCallback::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, ProductUserId) == 0x000010, "Member 'FEOSConnectOnVerifyIdTokenCallback::ProductUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, bIsAccountInfoPresent) == 0x000031, "Member 'FEOSConnectOnVerifyIdTokenCallback::bIsAccountInfoPresent' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, AccountIdType) == 0x000032, "Member 'FEOSConnectOnVerifyIdTokenCallback::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, AccountId) == 0x000038, "Member 'FEOSConnectOnVerifyIdTokenCallback::AccountId' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, Platform) == 0x000048, "Member 'FEOSConnectOnVerifyIdTokenCallback::Platform' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, DeviceType) == 0x000058, "Member 'FEOSConnectOnVerifyIdTokenCallback::DeviceType' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, ClientId) == 0x000068, "Member 'FEOSConnectOnVerifyIdTokenCallback::ClientId' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, ProductId) == 0x000078, "Member 'FEOSConnectOnVerifyIdTokenCallback::ProductId' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, SandboxId) == 0x000088, "Member 'FEOSConnectOnVerifyIdTokenCallback::SandboxId' has a wrong offset!");
static_assert(offsetof(FEOSConnectOnVerifyIdTokenCallback, DeploymentId) == 0x000098, "Member 'FEOSConnectOnVerifyIdTokenCallback::DeploymentId' has a wrong offset!");

// ScriptStruct EOSCore.EOSHPlayerDataStorageFileTransferRequest
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHPlayerDataStorageFileTransferRequest final
{
public:
	uint8                                         Pad_25C0[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHPlayerDataStorageFileTransferRequest) == 0x000008, "Wrong alignment on FEOSHPlayerDataStorageFileTransferRequest");
static_assert(sizeof(FEOSHPlayerDataStorageFileTransferRequest) == 0x000008, "Wrong size on FEOSHPlayerDataStorageFileTransferRequest");

// ScriptStruct EOSCore.EOSOnFileTransferProgressUpdated
// 0x0050 (0x0050 - 0x0000)
struct FEOSOnFileTransferProgressUpdated final
{
public:
	uint8                                         Pad_25C1[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C2[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BytesTransferred;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFileSizeBytes;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSHPlayerDataStorageFileTransferRequest Handle;                                            // 0x0048(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSOnFileTransferProgressUpdated) == 0x000008, "Wrong alignment on FEOSOnFileTransferProgressUpdated");
static_assert(sizeof(FEOSOnFileTransferProgressUpdated) == 0x000050, "Wrong size on FEOSOnFileTransferProgressUpdated");
static_assert(offsetof(FEOSOnFileTransferProgressUpdated, LocalUserId) == 0x000008, "Member 'FEOSOnFileTransferProgressUpdated::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSOnFileTransferProgressUpdated, Filename) == 0x000030, "Member 'FEOSOnFileTransferProgressUpdated::Filename' has a wrong offset!");
static_assert(offsetof(FEOSOnFileTransferProgressUpdated, BytesTransferred) == 0x000040, "Member 'FEOSOnFileTransferProgressUpdated::BytesTransferred' has a wrong offset!");
static_assert(offsetof(FEOSOnFileTransferProgressUpdated, TotalFileSizeBytes) == 0x000044, "Member 'FEOSOnFileTransferProgressUpdated::TotalFileSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSOnFileTransferProgressUpdated, Handle) == 0x000048, "Member 'FEOSOnFileTransferProgressUpdated::Handle' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCreateDeviceIdCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSConnectCreateDeviceIdCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C3[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectCreateDeviceIdCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectCreateDeviceIdCallbackInfo");
static_assert(sizeof(FEOSConnectCreateDeviceIdCallbackInfo) == 0x000010, "Wrong size on FEOSConnectCreateDeviceIdCallbackInfo");
static_assert(offsetof(FEOSConnectCreateDeviceIdCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectCreateDeviceIdCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomKeyImageInfo
// 0x0030 (0x0030 - 0x0000)
struct FEOSEcomKeyImageInfo final
{
public:
	uint8                                         Pad_25C4[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Type;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 URL;                                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Width;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Height;                                            // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomKeyImageInfo) == 0x000008, "Wrong alignment on FEOSEcomKeyImageInfo");
static_assert(sizeof(FEOSEcomKeyImageInfo) == 0x000030, "Wrong size on FEOSEcomKeyImageInfo");
static_assert(offsetof(FEOSEcomKeyImageInfo, Type) == 0x000008, "Member 'FEOSEcomKeyImageInfo::Type' has a wrong offset!");
static_assert(offsetof(FEOSEcomKeyImageInfo, URL) == 0x000018, "Member 'FEOSEcomKeyImageInfo::URL' has a wrong offset!");
static_assert(offsetof(FEOSEcomKeyImageInfo, Width) == 0x000028, "Member 'FEOSEcomKeyImageInfo::Width' has a wrong offset!");
static_assert(offsetof(FEOSEcomKeyImageInfo, Height) == 0x00002C, "Member 'FEOSEcomKeyImageInfo::Height' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsAcceptInviteCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSFriendsAcceptInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C5[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C6[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsAcceptInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSFriendsAcceptInviteCallbackInfo");
static_assert(sizeof(FEOSFriendsAcceptInviteCallbackInfo) == 0x000058, "Wrong size on FEOSFriendsAcceptInviteCallbackInfo");
static_assert(offsetof(FEOSFriendsAcceptInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSFriendsAcceptInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSFriendsAcceptInviteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSFriendsAcceptInviteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsAcceptInviteCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSFriendsAcceptInviteCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCreateUserCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectCreateUserCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C7[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C8[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectCreateUserCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectCreateUserCallbackInfo");
static_assert(sizeof(FEOSConnectCreateUserCallbackInfo) == 0x000038, "Wrong size on FEOSConnectCreateUserCallbackInfo");
static_assert(offsetof(FEOSConnectCreateUserCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectCreateUserCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectCreateUserCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectCreateUserCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyAudioInputStateOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAddNotifyAudioInputStateOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25C9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAddNotifyAudioInputStateOptions) == 0x000008, "Wrong alignment on FEOSAddNotifyAudioInputStateOptions");
static_assert(sizeof(FEOSAddNotifyAudioInputStateOptions) == 0x000038, "Wrong size on FEOSAddNotifyAudioInputStateOptions");
static_assert(offsetof(FEOSAddNotifyAudioInputStateOptions, LocalUserId) == 0x000000, "Member 'FEOSAddNotifyAudioInputStateOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyAudioInputStateOptions, RoomName) == 0x000028, "Member 'FEOSAddNotifyAudioInputStateOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsDeleteFriendCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSFriendsDeleteFriendCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25CA[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25CB[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsDeleteFriendCallbackInfo) == 0x000008, "Wrong alignment on FEOSFriendsDeleteFriendCallbackInfo");
static_assert(sizeof(FEOSFriendsDeleteFriendCallbackInfo) == 0x000058, "Wrong size on FEOSFriendsDeleteFriendCallbackInfo");
static_assert(offsetof(FEOSFriendsDeleteFriendCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSFriendsDeleteFriendCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSFriendsDeleteFriendCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSFriendsDeleteFriendCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsDeleteFriendCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSFriendsDeleteFriendCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PGetNATTypeOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PGetNATTypeOptions final
{
public:
	uint8                                         Pad_25CC[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PGetNATTypeOptions) == 0x000004, "Wrong alignment on FEOSP2PGetNATTypeOptions");
static_assert(sizeof(FEOSP2PGetNATTypeOptions) == 0x000004, "Wrong size on FEOSP2PGetNATTypeOptions");

// ScriptStruct EOSCore.EOSSessionDetailsCopySessionAttributeByKeyOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionDetailsCopySessionAttributeByKeyOptions final
{
public:
	class FString                                 AttrKey;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionDetailsCopySessionAttributeByKeyOptions) == 0x000008, "Wrong alignment on FEOSSessionDetailsCopySessionAttributeByKeyOptions");
static_assert(sizeof(FEOSSessionDetailsCopySessionAttributeByKeyOptions) == 0x000010, "Wrong size on FEOSSessionDetailsCopySessionAttributeByKeyOptions");
static_assert(offsetof(FEOSSessionDetailsCopySessionAttributeByKeyOptions, AttrKey) == 0x000000, "Member 'FEOSSessionDetailsCopySessionAttributeByKeyOptions::AttrKey' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesOnCustomInviteAcceptedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_25CD[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25CE[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomInviteId;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Payload;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo");
static_assert(sizeof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo) == 0x000070, "Wrong size on FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo, TargetUserId) == 0x000008, "Member 'FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo, LocalUserId) == 0x000029, "Member 'FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo, CustomInviteId) == 0x000050, "Member 'FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo::CustomInviteId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo, Payload) == 0x000060, "Member 'FEOSCustomInvitesOnCustomInviteAcceptedCallbackInfo::Payload' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesOnCustomInviteReceivedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo final
{
public:
	uint8                                         Pad_25CF[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D0[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomInviteId;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Payload;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo");
static_assert(sizeof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo) == 0x000070, "Wrong size on FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo, TargetUserId) == 0x000008, "Member 'FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo, LocalUserId) == 0x000029, "Member 'FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo, CustomInviteId) == 0x000050, "Member 'FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo::CustomInviteId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo, Payload) == 0x000060, "Member 'FEOSCustomInvitesOnCustomInviteReceivedCallbackInfo::Payload' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyLastRedeemedEntitlementByIndexOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSEcomCopyLastRedeemedEntitlementByIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D1[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RedeemedEntitlementIndex;                          // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyLastRedeemedEntitlementByIndexOptions) == 0x000004, "Wrong alignment on FEOSEcomCopyLastRedeemedEntitlementByIndexOptions");
static_assert(sizeof(FEOSEcomCopyLastRedeemedEntitlementByIndexOptions) == 0x000028, "Wrong size on FEOSEcomCopyLastRedeemedEntitlementByIndexOptions");
static_assert(offsetof(FEOSEcomCopyLastRedeemedEntitlementByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyLastRedeemedEntitlementByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyLastRedeemedEntitlementByIndexOptions, RedeemedEntitlementIndex) == 0x000024, "Member 'FEOSEcomCopyLastRedeemedEntitlementByIndexOptions::RedeemedEntitlementIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsGetAchievementDefinitionCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSAchievementsGetAchievementDefinitionCountOptions final
{
public:
	uint8                                         Pad_25D2[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsGetAchievementDefinitionCountOptions) == 0x000004, "Wrong alignment on FEOSAchievementsGetAchievementDefinitionCountOptions");
static_assert(sizeof(FEOSAchievementsGetAchievementDefinitionCountOptions) == 0x000004, "Wrong size on FEOSAchievementsGetAchievementDefinitionCountOptions");

// ScriptStruct EOSCore.EOSCustomInvitesCustomInviteRejectedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSCustomInvitesCustomInviteRejectedCallbackInfo final
{
public:
	uint8                                         Pad_25D3[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D4[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomInviteId;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Payload;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo) == 0x000008, "Wrong alignment on FEOSCustomInvitesCustomInviteRejectedCallbackInfo");
static_assert(sizeof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo) == 0x000070, "Wrong size on FEOSCustomInvitesCustomInviteRejectedCallbackInfo");
static_assert(offsetof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo, TargetUserId) == 0x000008, "Member 'FEOSCustomInvitesCustomInviteRejectedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo, LocalUserId) == 0x000029, "Member 'FEOSCustomInvitesCustomInviteRejectedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo, CustomInviteId) == 0x000050, "Member 'FEOSCustomInvitesCustomInviteRejectedCallbackInfo::CustomInviteId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesCustomInviteRejectedCallbackInfo, Payload) == 0x000060, "Member 'FEOSCustomInvitesCustomInviteRejectedCallbackInfo::Payload' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsRejectInviteCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSFriendsRejectInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D5[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D6[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsRejectInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSFriendsRejectInviteCallbackInfo");
static_assert(sizeof(FEOSFriendsRejectInviteCallbackInfo) == 0x000058, "Wrong size on FEOSFriendsRejectInviteCallbackInfo");
static_assert(offsetof(FEOSFriendsRejectInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSFriendsRejectInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSFriendsRejectInviteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSFriendsRejectInviteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsRejectInviteCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSFriendsRejectInviteCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyJoinLobbyAcceptedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbyAddNotifyJoinLobbyAcceptedOptions final
{
public:
	uint8                                         Pad_25D7[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyJoinLobbyAcceptedOptions) == 0x000004, "Wrong alignment on FEOSLobbyAddNotifyJoinLobbyAcceptedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyJoinLobbyAcceptedOptions) == 0x000004, "Wrong size on FEOSLobbyAddNotifyJoinLobbyAcceptedOptions");

// ScriptStruct EOSCore.EOSAntiCheatCommonVec3f
// 0x000C (0x000C - 0x0000)
struct FEOSAntiCheatCommonVec3f final
{
public:
	float                                         X;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonVec3f) == 0x000004, "Wrong alignment on FEOSAntiCheatCommonVec3f");
static_assert(sizeof(FEOSAntiCheatCommonVec3f) == 0x00000C, "Wrong size on FEOSAntiCheatCommonVec3f");
static_assert(offsetof(FEOSAntiCheatCommonVec3f, X) == 0x000000, "Member 'FEOSAntiCheatCommonVec3f::X' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonVec3f, Y) == 0x000004, "Member 'FEOSAntiCheatCommonVec3f::Y' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonVec3f, Z) == 0x000008, "Member 'FEOSAntiCheatCommonVec3f::Z' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesOnSendCustomInviteCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSCustomInvitesOnSendCustomInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D8[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25D9[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              TargetUserIds;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesOnSendCustomInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSCustomInvitesOnSendCustomInviteCallbackInfo");
static_assert(sizeof(FEOSCustomInvitesOnSendCustomInviteCallbackInfo) == 0x000048, "Wrong size on FEOSCustomInvitesOnSendCustomInviteCallbackInfo");
static_assert(offsetof(FEOSCustomInvitesOnSendCustomInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSCustomInvitesOnSendCustomInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnSendCustomInviteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSCustomInvitesOnSendCustomInviteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesOnSendCustomInviteCallbackInfo, TargetUserIds) == 0x000038, "Member 'FEOSCustomInvitesOnSendCustomInviteCallbackInfo::TargetUserIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomEntitlementName
// 0x0010 (0x0010 - 0x0000)
struct FEOSEcomEntitlementName final
{
public:
	class FString                                 Name;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomEntitlementName) == 0x000008, "Wrong alignment on FEOSEcomEntitlementName");
static_assert(sizeof(FEOSEcomEntitlementName) == 0x000010, "Wrong size on FEOSEcomEntitlementName");
static_assert(offsetof(FEOSEcomEntitlementName, Name) == 0x000000, "Member 'FEOSEcomEntitlementName::Name' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyEntitlementByNameAndIndexOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCopyEntitlementByNameAndIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25DA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEcomEntitlementName                EntitlementName;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         Index;                                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25DB[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomCopyEntitlementByNameAndIndexOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyEntitlementByNameAndIndexOptions");
static_assert(sizeof(FEOSEcomCopyEntitlementByNameAndIndexOptions) == 0x000040, "Wrong size on FEOSEcomCopyEntitlementByNameAndIndexOptions");
static_assert(offsetof(FEOSEcomCopyEntitlementByNameAndIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyEntitlementByNameAndIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyEntitlementByNameAndIndexOptions, EntitlementName) == 0x000028, "Member 'FEOSEcomCopyEntitlementByNameAndIndexOptions::EntitlementName' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyEntitlementByNameAndIndexOptions, Index) == 0x000038, "Member 'FEOSEcomCopyEntitlementByNameAndIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientAddNotifyMessageToPeerOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientAddNotifyMessageToPeerOptions final
{
public:
	uint8                                         Pad_25DC[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientAddNotifyMessageToPeerOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientAddNotifyMessageToPeerOptions");
static_assert(sizeof(FEOSAntiCheatClientAddNotifyMessageToPeerOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientAddNotifyMessageToPeerOptions");

// ScriptStruct EOSCore.EOSSessionModificationSetJoinInProgressAllowedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionModificationSetJoinInProgressAllowedOptions final
{
public:
	bool                                          bAllowJoinInProgress;                              // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetJoinInProgressAllowedOptions) == 0x000001, "Wrong alignment on FEOSSessionModificationSetJoinInProgressAllowedOptions");
static_assert(sizeof(FEOSSessionModificationSetJoinInProgressAllowedOptions) == 0x000001, "Wrong size on FEOSSessionModificationSetJoinInProgressAllowedOptions");
static_assert(offsetof(FEOSSessionModificationSetJoinInProgressAllowedOptions, bAllowJoinInProgress) == 0x000000, "Member 'FEOSSessionModificationSetJoinInProgressAllowedOptions::bAllowJoinInProgress' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDeleteFileCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPlayerDataStorageDeleteFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25DD[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25DE[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageDeleteFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageDeleteFileCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageDeleteFileCallbackInfo) == 0x000038, "Wrong size on FEOSPlayerDataStorageDeleteFileCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageDeleteFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageDeleteFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDeleteFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageDeleteFileCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsStatThresholds
// 0x0020 (0x0020 - 0x0000)
struct FEOSAchievementsStatThresholds final
{
public:
	uint8                                         Pad_25DF[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Threshold;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E0[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsStatThresholds) == 0x000008, "Wrong alignment on FEOSAchievementsStatThresholds");
static_assert(sizeof(FEOSAchievementsStatThresholds) == 0x000020, "Wrong size on FEOSAchievementsStatThresholds");
static_assert(offsetof(FEOSAchievementsStatThresholds, Name) == 0x000008, "Member 'FEOSAchievementsStatThresholds::Name' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsStatThresholds, Threshold) == 0x000018, "Member 'FEOSAchievementsStatThresholds::Threshold' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsDefinitionV2
// 0x00A0 (0x00A0 - 0x0000)
struct FEOSAchievementsDefinitionV2 final
{
public:
	uint8                                         Pad_25E1[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AchievementId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UnlockedDisplayName;                               // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UnlockedDescription;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LockedDisplayName;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LockedDescription;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FlavorText;                                        // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UnlockedIconURL;                                   // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LockedIconURL;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsHidden;                                         // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E2[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StatThresholdsCount;                               // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSAchievementsStatThresholds> StatThresholds;                                    // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsDefinitionV2) == 0x000008, "Wrong alignment on FEOSAchievementsDefinitionV2");
static_assert(sizeof(FEOSAchievementsDefinitionV2) == 0x0000A0, "Wrong size on FEOSAchievementsDefinitionV2");
static_assert(offsetof(FEOSAchievementsDefinitionV2, AchievementId) == 0x000008, "Member 'FEOSAchievementsDefinitionV2::AchievementId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, UnlockedDisplayName) == 0x000018, "Member 'FEOSAchievementsDefinitionV2::UnlockedDisplayName' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, UnlockedDescription) == 0x000028, "Member 'FEOSAchievementsDefinitionV2::UnlockedDescription' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, LockedDisplayName) == 0x000038, "Member 'FEOSAchievementsDefinitionV2::LockedDisplayName' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, LockedDescription) == 0x000048, "Member 'FEOSAchievementsDefinitionV2::LockedDescription' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, FlavorText) == 0x000058, "Member 'FEOSAchievementsDefinitionV2::FlavorText' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, UnlockedIconURL) == 0x000068, "Member 'FEOSAchievementsDefinitionV2::UnlockedIconURL' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, LockedIconURL) == 0x000078, "Member 'FEOSAchievementsDefinitionV2::LockedIconURL' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, bIsHidden) == 0x000088, "Member 'FEOSAchievementsDefinitionV2::bIsHidden' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, StatThresholdsCount) == 0x00008C, "Member 'FEOSAchievementsDefinitionV2::StatThresholdsCount' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsDefinitionV2, StatThresholds) == 0x000090, "Member 'FEOSAchievementsDefinitionV2::StatThresholds' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotDeleteSnapshotCallbackInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FEOSProgressionSnapshotDeleteSnapshotCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E3[0xE];                                     // 0x0022(0x000E)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSProgressionSnapshotDeleteSnapshotCallbackInfo) == 0x000008, "Wrong alignment on FEOSProgressionSnapshotDeleteSnapshotCallbackInfo");
static_assert(sizeof(FEOSProgressionSnapshotDeleteSnapshotCallbackInfo) == 0x000030, "Wrong size on FEOSProgressionSnapshotDeleteSnapshotCallbackInfo");
static_assert(offsetof(FEOSProgressionSnapshotDeleteSnapshotCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSProgressionSnapshotDeleteSnapshotCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSProgressionSnapshotDeleteSnapshotCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSProgressionSnapshotDeleteSnapshotCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCDisconnectedCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSRTCDisconnectedCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E4[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRTCDisconnectedCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCDisconnectedCallbackInfo");
static_assert(sizeof(FEOSRTCDisconnectedCallbackInfo) == 0x000048, "Wrong size on FEOSRTCDisconnectedCallbackInfo");
static_assert(offsetof(FEOSRTCDisconnectedCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCDisconnectedCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCDisconnectedCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCDisconnectedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCDisconnectedCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCDisconnectedCallbackInfo::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryEntitlementsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSEcomQueryEntitlementsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E7[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomQueryEntitlementsCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomQueryEntitlementsCallbackInfo");
static_assert(sizeof(FEOSEcomQueryEntitlementsCallbackInfo) == 0x000038, "Wrong size on FEOSEcomQueryEntitlementsCallbackInfo");
static_assert(offsetof(FEOSEcomQueryEntitlementsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomQueryEntitlementsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomQueryEntitlementsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceQueryPresenceOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSPresenceQueryPresenceOptions final
{
public:
	uint8                                         Pad_25E8[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25E9[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceQueryPresenceOptions) == 0x000004, "Wrong alignment on FEOSPresenceQueryPresenceOptions");
static_assert(sizeof(FEOSPresenceQueryPresenceOptions) == 0x000048, "Wrong size on FEOSPresenceQueryPresenceOptions");
static_assert(offsetof(FEOSPresenceQueryPresenceOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceQueryPresenceOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceQueryPresenceOptions, TargetUserId) == 0x000025, "Member 'FEOSPresenceQueryPresenceOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageQueryFileOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSTitleStorageQueryFileOptions final
{
public:
	uint8                                         Pad_25EA[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25EB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageQueryFileOptions) == 0x000008, "Wrong alignment on FEOSTitleStorageQueryFileOptions");
static_assert(sizeof(FEOSTitleStorageQueryFileOptions) == 0x000038, "Wrong size on FEOSTitleStorageQueryFileOptions");
static_assert(offsetof(FEOSTitleStorageQueryFileOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageQueryFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageQueryFileOptions, Filename) == 0x000028, "Member 'FEOSTitleStorageQueryFileOptions::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSReportsSendPlayerBehaviorReportCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25EC[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo");
static_assert(sizeof(FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSReportsSendPlayerBehaviorReportCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerProtectMessageOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSAntiCheatServerProtectMessageOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         DataLengthBytes;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25ED[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Data;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         OutBufferSizeBytes;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25EE[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerProtectMessageOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerProtectMessageOptions");
static_assert(sizeof(FEOSAntiCheatServerProtectMessageOptions) == 0x000028, "Wrong size on FEOSAntiCheatServerProtectMessageOptions");
static_assert(offsetof(FEOSAntiCheatServerProtectMessageOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerProtectMessageOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerProtectMessageOptions, DataLengthBytes) == 0x000008, "Member 'FEOSAntiCheatServerProtectMessageOptions::DataLengthBytes' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerProtectMessageOptions, Data) == 0x000010, "Member 'FEOSAntiCheatServerProtectMessageOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerProtectMessageOptions, OutBufferSizeBytes) == 0x000020, "Member 'FEOSAntiCheatServerProtectMessageOptions::OutBufferSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthDeletePersistentAuthOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAuthDeletePersistentAuthOptions final
{
public:
	class FString                                 RefreshToken;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthDeletePersistentAuthOptions) == 0x000008, "Wrong alignment on FEOSAuthDeletePersistentAuthOptions");
static_assert(sizeof(FEOSAuthDeletePersistentAuthOptions) == 0x000010, "Wrong size on FEOSAuthDeletePersistentAuthOptions");
static_assert(offsetof(FEOSAuthDeletePersistentAuthOptions, RefreshToken) == 0x000000, "Member 'FEOSAuthDeletePersistentAuthOptions::RefreshToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyRTCRoomConnectionChangedOptions
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSLobbyAddNotifyRTCRoomConnectionChangedOptions final
{
public:
	uint8                                         Pad_25EF[0x38];                                    // 0x0000(0x0038)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyRTCRoomConnectionChangedOptions) == 0x000008, "Wrong alignment on FEOSLobbyAddNotifyRTCRoomConnectionChangedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyRTCRoomConnectionChangedOptions) == 0x000038, "Wrong size on FEOSLobbyAddNotifyRTCRoomConnectionChangedOptions");

// ScriptStruct EOSCore.EOSEcomQueryOwnershipTokenCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSEcomQueryOwnershipTokenCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F0[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F1[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OwnershipToken;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryOwnershipTokenCallbackInfo) == 0x000008, "Wrong alignment on FEOSEcomQueryOwnershipTokenCallbackInfo");
static_assert(sizeof(FEOSEcomQueryOwnershipTokenCallbackInfo) == 0x000048, "Wrong size on FEOSEcomQueryOwnershipTokenCallbackInfo");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSEcomQueryOwnershipTokenCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSEcomQueryOwnershipTokenCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenCallbackInfo, OwnershipToken) == 0x000038, "Member 'FEOSEcomQueryOwnershipTokenCallbackInfo::OwnershipToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageFileTransferProgressCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSPlayerDataStorageFileTransferProgressCallbackInfo final
{
public:
	uint8                                         Pad_25F2[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BytesTransferred;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFileSizeBytes;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageFileTransferProgressCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo) == 0x000048, "Wrong size on FEOSPlayerDataStorageFileTransferProgressCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSPlayerDataStorageFileTransferProgressCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo, Filename) == 0x000030, "Member 'FEOSPlayerDataStorageFileTransferProgressCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo, BytesTransferred) == 0x000040, "Member 'FEOSPlayerDataStorageFileTransferProgressCallbackInfo::BytesTransferred' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileTransferProgressCallbackInfo, TotalFileSizeBytes) == 0x000044, "Member 'FEOSPlayerDataStorageFileTransferProgressCallbackInfo::TotalFileSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyTransactionByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSEcomCopyTransactionByIndexOptions final
{
public:
	uint8                                         Pad_25F4[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F5[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TransactionIndex;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyTransactionByIndexOptions) == 0x000004, "Wrong alignment on FEOSEcomCopyTransactionByIndexOptions");
static_assert(sizeof(FEOSEcomCopyTransactionByIndexOptions) == 0x00002C, "Wrong size on FEOSEcomCopyTransactionByIndexOptions");
static_assert(offsetof(FEOSEcomCopyTransactionByIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomCopyTransactionByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyTransactionByIndexOptions, TransactionIndex) == 0x000028, "Member 'FEOSEcomCopyTransactionByIndexOptions::TransactionIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsUnregisterPlayersCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSSessionsUnregisterPlayersCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              UnregisteredPlayers;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsUnregisterPlayersCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsUnregisterPlayersCallbackInfo");
static_assert(sizeof(FEOSSessionsUnregisterPlayersCallbackInfo) == 0x000020, "Wrong size on FEOSSessionsUnregisterPlayersCallbackInfo");
static_assert(offsetof(FEOSSessionsUnregisterPlayersCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsUnregisterPlayersCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSSessionsUnregisterPlayersCallbackInfo, UnregisteredPlayers) == 0x000010, "Member 'FEOSSessionsUnregisterPlayersCallbackInfo::UnregisteredPlayers' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateSendingVolumeCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSRTCAudioUpdateSendingVolumeCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F7[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25F9[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateSendingVolumeCallbackInfo");
static_assert(sizeof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo) == 0x000050, "Wrong size on FEOSRTCAudioUpdateSendingVolumeCallbackInfo");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCAudioUpdateSendingVolumeCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCAudioUpdateSendingVolumeCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCAudioUpdateSendingVolumeCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeCallbackInfo, Volume) == 0x000048, "Member 'FEOSRTCAudioUpdateSendingVolumeCallbackInfo::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectUnlinkAccountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSConnectUnlinkAccountOptions final
{
public:
	uint8                                         Pad_25FA[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25FB[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectUnlinkAccountOptions) == 0x000004, "Wrong alignment on FEOSConnectUnlinkAccountOptions");
static_assert(sizeof(FEOSConnectUnlinkAccountOptions) == 0x000028, "Wrong size on FEOSConnectUnlinkAccountOptions");
static_assert(offsetof(FEOSConnectUnlinkAccountOptions, LocalUserId) == 0x000004, "Member 'FEOSConnectUnlinkAccountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsQueryFriendsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSFriendsQueryFriendsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25FC[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_25FD[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsQueryFriendsCallbackInfo) == 0x000008, "Wrong alignment on FEOSFriendsQueryFriendsCallbackInfo");
static_assert(sizeof(FEOSFriendsQueryFriendsCallbackInfo) == 0x000038, "Wrong size on FEOSFriendsQueryFriendsCallbackInfo");
static_assert(offsetof(FEOSFriendsQueryFriendsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSFriendsQueryFriendsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSFriendsQueryFriendsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSFriendsQueryFriendsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions final
{
public:
	uint8                                         Pad_25FE[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions) == 0x000008, "Wrong alignment on FEOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions) == 0x000010, "Wrong size on FEOSLobbyAddNotifyLobbyMemberUpdateReceivedOptions");

// ScriptStruct EOSCore.EOSFriendsOnFriendsUpdateInfo
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FEOSFriendsOnFriendsUpdateInfo final
{
public:
	uint8                                         Pad_25FF[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEFriendsStatus                            PreviousStatus;                                    // 0x004A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEFriendsStatus                            CurrentStatus;                                     // 0x004B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2600[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsOnFriendsUpdateInfo) == 0x000008, "Wrong alignment on FEOSFriendsOnFriendsUpdateInfo");
static_assert(sizeof(FEOSFriendsOnFriendsUpdateInfo) == 0x000050, "Wrong size on FEOSFriendsOnFriendsUpdateInfo");
static_assert(offsetof(FEOSFriendsOnFriendsUpdateInfo, LocalUserId) == 0x000008, "Member 'FEOSFriendsOnFriendsUpdateInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsOnFriendsUpdateInfo, TargetUserId) == 0x000029, "Member 'FEOSFriendsOnFriendsUpdateInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsOnFriendsUpdateInfo, PreviousStatus) == 0x00004A, "Member 'FEOSFriendsOnFriendsUpdateInfo::PreviousStatus' has a wrong offset!");
static_assert(offsetof(FEOSFriendsOnFriendsUpdateInfo, CurrentStatus) == 0x00004B, "Member 'FEOSFriendsOnFriendsUpdateInfo::CurrentStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerSpawnOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerSpawnOptions final
{
public:
	uint8                                         Pad_2601[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        SpawnedPlayerHandle;                               // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         TeamId;                                            // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CharacterId;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerSpawnOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerSpawnOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerSpawnOptions) == 0x000018, "Wrong size on FEOSAntiCheatCommonLogPlayerSpawnOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerSpawnOptions, SpawnedPlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerSpawnOptions::SpawnedPlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerSpawnOptions, TeamId) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerSpawnOptions::TeamId' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerSpawnOptions, CharacterId) == 0x000014, "Member 'FEOSAntiCheatCommonLogPlayerSpawnOptions::CharacterId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsInfo
// 0x0058 (0x0058 - 0x0000)
struct FEOSLobbyDetailsInfo final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LobbyOwnerUserId;                                  // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELobbyPermissionLevel                     PermissionLevel;                                   // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2602[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AvailableSlots;                                    // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxMembers;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowInvites;                                     // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2603[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BucketId;                                          // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowHostMigration;                               // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRTCRoomEnabled;                                   // 0x0051(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinById;                                    // 0x0052(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRejoinAfterKickRequiresInvite;                    // 0x0053(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2604[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsInfo) == 0x000008, "Wrong alignment on FEOSLobbyDetailsInfo");
static_assert(sizeof(FEOSLobbyDetailsInfo) == 0x000058, "Wrong size on FEOSLobbyDetailsInfo");
static_assert(offsetof(FEOSLobbyDetailsInfo, LobbyID) == 0x000000, "Member 'FEOSLobbyDetailsInfo::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, LobbyOwnerUserId) == 0x000010, "Member 'FEOSLobbyDetailsInfo::LobbyOwnerUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, PermissionLevel) == 0x000031, "Member 'FEOSLobbyDetailsInfo::PermissionLevel' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, AvailableSlots) == 0x000034, "Member 'FEOSLobbyDetailsInfo::AvailableSlots' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, MaxMembers) == 0x000038, "Member 'FEOSLobbyDetailsInfo::MaxMembers' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, bAllowInvites) == 0x00003C, "Member 'FEOSLobbyDetailsInfo::bAllowInvites' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, BucketId) == 0x000040, "Member 'FEOSLobbyDetailsInfo::BucketId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, bAllowHostMigration) == 0x000050, "Member 'FEOSLobbyDetailsInfo::bAllowHostMigration' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, bRTCRoomEnabled) == 0x000051, "Member 'FEOSLobbyDetailsInfo::bRTCRoomEnabled' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, bAllowJoinById) == 0x000052, "Member 'FEOSLobbyDetailsInfo::bAllowJoinById' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsInfo, bRejoinAfterKickRequiresInvite) == 0x000053, "Member 'FEOSLobbyDetailsInfo::bRejoinAfterKickRequiresInvite' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyHardMuteMemberCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSLobbyHardMuteMemberCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2605[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0020(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2606[0x7];                                     // 0x0041(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyHardMuteMemberCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyHardMuteMemberCallbackInfo");
static_assert(sizeof(FEOSLobbyHardMuteMemberCallbackInfo) == 0x000048, "Wrong size on FEOSLobbyHardMuteMemberCallbackInfo");
static_assert(offsetof(FEOSLobbyHardMuteMemberCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyHardMuteMemberCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyHardMuteMemberCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyHardMuteMemberCallbackInfo::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyHardMuteMemberCallbackInfo, TargetUserId) == 0x000020, "Member 'FEOSLobbyHardMuteMemberCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionDetailsSettings
// 0x0018 (0x0018 - 0x0000)
struct FEOSSessionDetailsSettings final
{
public:
	class FString                                 BucketId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumPublicConnections;                              // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowJoinInProgress;                              // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEOnlineSessionPermissionLevel             PermissionLevel;                                   // 0x0015(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvitesAllowed;                                   // 0x0016(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSanctionsEnabled;                                 // 0x0017(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionDetailsSettings) == 0x000008, "Wrong alignment on FEOSSessionDetailsSettings");
static_assert(sizeof(FEOSSessionDetailsSettings) == 0x000018, "Wrong size on FEOSSessionDetailsSettings");
static_assert(offsetof(FEOSSessionDetailsSettings, BucketId) == 0x000000, "Member 'FEOSSessionDetailsSettings::BucketId' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsSettings, NumPublicConnections) == 0x000010, "Member 'FEOSSessionDetailsSettings::NumPublicConnections' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsSettings, bAllowJoinInProgress) == 0x000014, "Member 'FEOSSessionDetailsSettings::bAllowJoinInProgress' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsSettings, PermissionLevel) == 0x000015, "Member 'FEOSSessionDetailsSettings::PermissionLevel' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsSettings, bInvitesAllowed) == 0x000016, "Member 'FEOSSessionDetailsSettings::bInvitesAllowed' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsSettings, bSanctionsEnabled) == 0x000017, "Member 'FEOSSessionDetailsSettings::bSanctionsEnabled' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIHideFriendsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSUIHideFriendsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2607[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2608[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIHideFriendsCallbackInfo) == 0x000008, "Wrong alignment on FEOSUIHideFriendsCallbackInfo");
static_assert(sizeof(FEOSUIHideFriendsCallbackInfo) == 0x000038, "Wrong size on FEOSUIHideFriendsCallbackInfo");
static_assert(offsetof(FEOSUIHideFriendsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUIHideFriendsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUIHideFriendsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUIHideFriendsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsInstallModCallbackInfo
// 0x0088 (0x0088 - 0x0000)
struct FEOSModsInstallModCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2609[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0030(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModsInstallModCallbackInfo) == 0x000008, "Wrong alignment on FEOSModsInstallModCallbackInfo");
static_assert(sizeof(FEOSModsInstallModCallbackInfo) == 0x000088, "Wrong size on FEOSModsInstallModCallbackInfo");
static_assert(offsetof(FEOSModsInstallModCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSModsInstallModCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSModsInstallModCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSModsInstallModCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsInstallModCallbackInfo, Mod) == 0x000030, "Member 'FEOSModsInstallModCallbackInfo::Mod' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCatalogOffer
// 0x00D8 (0x00D8 - 0x0000)
struct FEOSEcomCatalogOffer final
{
public:
	int32                                         ServerIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CatalogNamespace;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TitleText;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DescriptionText;                                   // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LongDescriptionText;                               // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TechnicalDetailsText;                              // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 CurrencyCode;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSResult                                     PriceResult;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260B[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         OriginalPrice;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CurrentPrice;                                      // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DiscountPercentage;                                // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260C[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExpirationTimestamp;                               // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PurchaseLimit;                                     // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAvailableForPurchase;                             // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260D[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         OriginalPrice64;                                   // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         CurrentPrice64;                                    // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DecimalPoint;                                      // 0x00C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_260E[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         ReleaseDateTimestamp;                              // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         EffectiveDateTimestamp;                            // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCatalogOffer) == 0x000008, "Wrong alignment on FEOSEcomCatalogOffer");
static_assert(sizeof(FEOSEcomCatalogOffer) == 0x0000D8, "Wrong size on FEOSEcomCatalogOffer");
static_assert(offsetof(FEOSEcomCatalogOffer, ServerIndex) == 0x000000, "Member 'FEOSEcomCatalogOffer::ServerIndex' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, CatalogNamespace) == 0x000008, "Member 'FEOSEcomCatalogOffer::CatalogNamespace' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, ID) == 0x000018, "Member 'FEOSEcomCatalogOffer::ID' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, TitleText) == 0x000028, "Member 'FEOSEcomCatalogOffer::TitleText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, DescriptionText) == 0x000038, "Member 'FEOSEcomCatalogOffer::DescriptionText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, LongDescriptionText) == 0x000048, "Member 'FEOSEcomCatalogOffer::LongDescriptionText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, TechnicalDetailsText) == 0x000058, "Member 'FEOSEcomCatalogOffer::TechnicalDetailsText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, CurrencyCode) == 0x000068, "Member 'FEOSEcomCatalogOffer::CurrencyCode' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, PriceResult) == 0x000078, "Member 'FEOSEcomCatalogOffer::PriceResult' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, OriginalPrice) == 0x000080, "Member 'FEOSEcomCatalogOffer::OriginalPrice' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, CurrentPrice) == 0x000088, "Member 'FEOSEcomCatalogOffer::CurrentPrice' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, DiscountPercentage) == 0x000090, "Member 'FEOSEcomCatalogOffer::DiscountPercentage' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, ExpirationTimestamp) == 0x000098, "Member 'FEOSEcomCatalogOffer::ExpirationTimestamp' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, PurchaseLimit) == 0x0000A8, "Member 'FEOSEcomCatalogOffer::PurchaseLimit' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, bAvailableForPurchase) == 0x0000AC, "Member 'FEOSEcomCatalogOffer::bAvailableForPurchase' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, OriginalPrice64) == 0x0000B0, "Member 'FEOSEcomCatalogOffer::OriginalPrice64' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, CurrentPrice64) == 0x0000B8, "Member 'FEOSEcomCatalogOffer::CurrentPrice64' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, DecimalPoint) == 0x0000C0, "Member 'FEOSEcomCatalogOffer::DecimalPoint' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, ReleaseDateTimestamp) == 0x0000C8, "Member 'FEOSEcomCatalogOffer::ReleaseDateTimestamp' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogOffer, EffectiveDateTimestamp) == 0x0000D0, "Member 'FEOSEcomCatalogOffer::EffectiveDateTimestamp' has a wrong offset!");

// ScriptStruct EOSCore.EOSActiveSessionGetRegisteredPlayerByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSActiveSessionGetRegisteredPlayerByIndexOptions final
{
public:
	int32                                         PlayerIndex;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSActiveSessionGetRegisteredPlayerByIndexOptions) == 0x000004, "Wrong alignment on FEOSActiveSessionGetRegisteredPlayerByIndexOptions");
static_assert(sizeof(FEOSActiveSessionGetRegisteredPlayerByIndexOptions) == 0x000004, "Wrong size on FEOSActiveSessionGetRegisteredPlayerByIndexOptions");
static_assert(offsetof(FEOSActiveSessionGetRegisteredPlayerByIndexOptions, PlayerIndex) == 0x000000, "Member 'FEOSActiveSessionGetRegisteredPlayerByIndexOptions::PlayerIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIEventId
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSUIEventId final
{
public:
	uint8                                         Pad_260F[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIEventId) == 0x000008, "Wrong alignment on FEOSUIEventId");
static_assert(sizeof(FEOSUIEventId) == 0x000008, "Wrong size on FEOSUIEventId");

// ScriptStruct EOSCore.EOSLobbyJoinLobbyAcceptedCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyJoinLobbyAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_2610[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2611[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSUIEventId                          UiEventId;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyJoinLobbyAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyJoinLobbyAcceptedCallbackInfo");
static_assert(sizeof(FEOSLobbyJoinLobbyAcceptedCallbackInfo) == 0x000038, "Wrong size on FEOSLobbyJoinLobbyAcceptedCallbackInfo");
static_assert(offsetof(FEOSLobbyJoinLobbyAcceptedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSLobbyJoinLobbyAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyAcceptedCallbackInfo, UiEventId) == 0x000030, "Member 'FEOSLobbyJoinLobbyAcceptedCallbackInfo::UiEventId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyLocalRTCOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyLocalRTCOptions final
{
public:
	int32                                         Flags;                                             // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseManualAudioInput;                              // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseManualAudioOutput;                             // 0x0005(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLocalAudioDeviceInputStartsMuted;                 // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2612[0x1];                                     // 0x0007(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyLocalRTCOptions) == 0x000004, "Wrong alignment on FEOSLobbyLocalRTCOptions");
static_assert(sizeof(FEOSLobbyLocalRTCOptions) == 0x000008, "Wrong size on FEOSLobbyLocalRTCOptions");
static_assert(offsetof(FEOSLobbyLocalRTCOptions, Flags) == 0x000000, "Member 'FEOSLobbyLocalRTCOptions::Flags' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLocalRTCOptions, bUseManualAudioInput) == 0x000004, "Member 'FEOSLobbyLocalRTCOptions::bUseManualAudioInput' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLocalRTCOptions, bUseManualAudioOutput) == 0x000005, "Member 'FEOSLobbyLocalRTCOptions::bUseManualAudioOutput' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLocalRTCOptions, bLocalAudioDeviceInputStartsMuted) == 0x000006, "Member 'FEOSLobbyLocalRTCOptions::bLocalAudioDeviceInputStartsMuted' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyJoinLobbyByIdOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSLobbyJoinLobbyByIdOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresenceEnabled;                                  // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2613[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyLocalRTCOptions               LocalRTCOptions;                                   // 0x0034(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2614[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyJoinLobbyByIdOptions) == 0x000008, "Wrong alignment on FEOSLobbyJoinLobbyByIdOptions");
static_assert(sizeof(FEOSLobbyJoinLobbyByIdOptions) == 0x000040, "Wrong size on FEOSLobbyJoinLobbyByIdOptions");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyJoinLobbyByIdOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyJoinLobbyByIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdOptions, bPresenceEnabled) == 0x000031, "Member 'FEOSLobbyJoinLobbyByIdOptions::bPresenceEnabled' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdOptions, LocalRTCOptions) == 0x000034, "Member 'FEOSLobbyJoinLobbyByIdOptions::LocalRTCOptions' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyJoinLobbyByIdCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyJoinLobbyByIdCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2615[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyJoinLobbyByIdCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyJoinLobbyByIdCallbackInfo");
static_assert(sizeof(FEOSLobbyJoinLobbyByIdCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyJoinLobbyByIdCallbackInfo");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyJoinLobbyByIdCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyByIdCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyJoinLobbyByIdCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsCopyPlayerAchievementByIndexOptions
// 0x0050 (0x0050 - 0x0000)
struct FEOSAchievementsCopyPlayerAchievementByIndexOptions final
{
public:
	uint8                                         Pad_2616[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2617[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AchievementIndex;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x002C(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2618[0x3];                                     // 0x004D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsCopyPlayerAchievementByIndexOptions) == 0x000004, "Wrong alignment on FEOSAchievementsCopyPlayerAchievementByIndexOptions");
static_assert(sizeof(FEOSAchievementsCopyPlayerAchievementByIndexOptions) == 0x000050, "Wrong size on FEOSAchievementsCopyPlayerAchievementByIndexOptions");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByIndexOptions, TargetUserId) == 0x000004, "Member 'FEOSAchievementsCopyPlayerAchievementByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByIndexOptions, AchievementIndex) == 0x000028, "Member 'FEOSAchievementsCopyPlayerAchievementByIndexOptions::AchievementIndex' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByIndexOptions, LocalUserId) == 0x00002C, "Member 'FEOSAchievementsCopyPlayerAchievementByIndexOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsGetLeaderboardDefinitionCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLeaderboardsGetLeaderboardDefinitionCountOptions final
{
public:
	uint8                                         Pad_2619[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsGetLeaderboardDefinitionCountOptions) == 0x000004, "Wrong alignment on FEOSLeaderboardsGetLeaderboardDefinitionCountOptions");
static_assert(sizeof(FEOSLeaderboardsGetLeaderboardDefinitionCountOptions) == 0x000004, "Wrong size on FEOSLeaderboardsGetLeaderboardDefinitionCountOptions");

// ScriptStruct EOSCore.EOSRTCJoinRoomCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSRTCJoinRoomCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261A[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261B[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRTCJoinRoomCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCJoinRoomCallbackInfo");
static_assert(sizeof(FEOSRTCJoinRoomCallbackInfo) == 0x000048, "Wrong size on FEOSRTCJoinRoomCallbackInfo");
static_assert(offsetof(FEOSRTCJoinRoomCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCJoinRoomCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCJoinRoomCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCJoinRoomCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCJoinRoomCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCJoinRoomCallbackInfo::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSKickCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSKickCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261C[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSKickCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSKickCompleteCallbackInfo");
static_assert(sizeof(FEOSKickCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSKickCompleteCallbackInfo");
static_assert(offsetof(FEOSKickCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSKickCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCLeaveRoomCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x08) FEOSRTCLeaveRoomCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261D[0x47];                                    // 0x0001(0x0047)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCLeaveRoomCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCLeaveRoomCallbackInfo");
static_assert(sizeof(FEOSRTCLeaveRoomCallbackInfo) == 0x000048, "Wrong size on FEOSRTCLeaveRoomCallbackInfo");
static_assert(offsetof(FEOSRTCLeaveRoomCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCLeaveRoomCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsJoinSessionAcceptedCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct FEOSSessionsJoinSessionAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_261E[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_261F[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSUIEventId                          UiEventId;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsJoinSessionAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsJoinSessionAcceptedCallbackInfo");
static_assert(sizeof(FEOSSessionsJoinSessionAcceptedCallbackInfo) == 0x000038, "Wrong size on FEOSSessionsJoinSessionAcceptedCallbackInfo");
static_assert(offsetof(FEOSSessionsJoinSessionAcceptedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSSessionsJoinSessionAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsJoinSessionAcceptedCallbackInfo, UiEventId) == 0x000030, "Member 'FEOSSessionsJoinSessionAcceptedCallbackInfo::UiEventId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectLinkAccountCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectLinkAccountCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2620[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2621[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectLinkAccountCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectLinkAccountCallbackInfo");
static_assert(sizeof(FEOSConnectLinkAccountCallbackInfo) == 0x000038, "Wrong size on FEOSConnectLinkAccountCallbackInfo");
static_assert(offsetof(FEOSConnectLinkAccountCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectLinkAccountCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectLinkAccountCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectLinkAccountCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyCreateLobbyCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyCreateLobbyCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2622[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyCreateLobbyCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyCreateLobbyCallbackInfo");
static_assert(sizeof(FEOSLobbyCreateLobbyCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyCreateLobbyCallbackInfo");
static_assert(offsetof(FEOSLobbyCreateLobbyCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyCreateLobbyCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyCreateLobbyCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSHLobbyModification
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHLobbyModification final
{
public:
	uint8                                         Pad_2623[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHLobbyModification) == 0x000008, "Wrong alignment on FEOSHLobbyModification");
static_assert(sizeof(FEOSHLobbyModification) == 0x000008, "Wrong size on FEOSHLobbyModification");

// ScriptStruct EOSCore.EOSLobbyDestroyLobbyCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyDestroyLobbyCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2624[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDestroyLobbyCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyDestroyLobbyCallbackInfo");
static_assert(sizeof(FEOSLobbyDestroyLobbyCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyDestroyLobbyCallbackInfo");
static_assert(offsetof(FEOSLobbyDestroyLobbyCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyDestroyLobbyCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDestroyLobbyCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyDestroyLobbyCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsUpdateSessionCallbackInfo
// 0x0030 (0x0030 - 0x0000)
struct FEOSSessionsUpdateSessionCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2625[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SessionName;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SessionID;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsUpdateSessionCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsUpdateSessionCallbackInfo");
static_assert(sizeof(FEOSSessionsUpdateSessionCallbackInfo) == 0x000030, "Wrong size on FEOSSessionsUpdateSessionCallbackInfo");
static_assert(offsetof(FEOSSessionsUpdateSessionCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsUpdateSessionCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSSessionsUpdateSessionCallbackInfo, SessionName) == 0x000010, "Member 'FEOSSessionsUpdateSessionCallbackInfo::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsUpdateSessionCallbackInfo, SessionID) == 0x000020, "Member 'FEOSSessionsUpdateSessionCallbackInfo::SessionID' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsCopySessionHandleForPresenceOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSSessionsCopySessionHandleForPresenceOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsCopySessionHandleForPresenceOptions) == 0x000001, "Wrong alignment on FEOSSessionsCopySessionHandleForPresenceOptions");
static_assert(sizeof(FEOSSessionsCopySessionHandleForPresenceOptions) == 0x000021, "Wrong size on FEOSSessionsCopySessionHandleForPresenceOptions");
static_assert(offsetof(FEOSSessionsCopySessionHandleForPresenceOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionsCopySessionHandleForPresenceOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchFindCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLobbySearchFindCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2626[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchFindCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbySearchFindCallbackInfo");
static_assert(sizeof(FEOSLobbySearchFindCallbackInfo) == 0x000010, "Wrong size on FEOSLobbySearchFindCallbackInfo");
static_assert(offsetof(FEOSLobbySearchFindCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbySearchFindCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageReadFileCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSTitleStorageReadFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2627[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2628[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageReadFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageReadFileCallbackInfo");
static_assert(sizeof(FEOSTitleStorageReadFileCallbackInfo) == 0x000048, "Wrong size on FEOSTitleStorageReadFileCallbackInfo");
static_assert(offsetof(FEOSTitleStorageReadFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSTitleStorageReadFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSTitleStorageReadFileCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileCallbackInfo, Filename) == 0x000038, "Member 'FEOSTitleStorageReadFileCallbackInfo::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyInviteAcceptedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSLobbyInviteAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_2629[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0039(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_262A[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyInviteAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyInviteAcceptedCallbackInfo");
static_assert(sizeof(FEOSLobbyInviteAcceptedCallbackInfo) == 0x000070, "Wrong size on FEOSLobbyInviteAcceptedCallbackInfo");
static_assert(offsetof(FEOSLobbyInviteAcceptedCallbackInfo, InviteId) == 0x000008, "Member 'FEOSLobbyInviteAcceptedCallbackInfo::InviteId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyInviteAcceptedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSLobbyInviteAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyInviteAcceptedCallbackInfo, TargetUserId) == 0x000039, "Member 'FEOSLobbyInviteAcceptedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyInviteAcceptedCallbackInfo, LobbyID) == 0x000060, "Member 'FEOSLobbyInviteAcceptedCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyInviteReceivedCallbackInfo
// 0x0060 (0x0060 - 0x0000)
struct FEOSLobbyInviteReceivedCallbackInfo final
{
public:
	uint8                                         Pad_262B[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0039(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_262C[0x6];                                     // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyInviteReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyInviteReceivedCallbackInfo");
static_assert(sizeof(FEOSLobbyInviteReceivedCallbackInfo) == 0x000060, "Wrong size on FEOSLobbyInviteReceivedCallbackInfo");
static_assert(offsetof(FEOSLobbyInviteReceivedCallbackInfo, InviteId) == 0x000008, "Member 'FEOSLobbyInviteReceivedCallbackInfo::InviteId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyInviteReceivedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSLobbyInviteReceivedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyInviteReceivedCallbackInfo, TargetUserId) == 0x000039, "Member 'FEOSLobbyInviteReceivedCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyOfferImageInfoByIndexOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCopyOfferImageInfoByIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_262D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ImageInfoIndex;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_262E[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomCopyOfferImageInfoByIndexOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyOfferImageInfoByIndexOptions");
static_assert(sizeof(FEOSEcomCopyOfferImageInfoByIndexOptions) == 0x000040, "Wrong size on FEOSEcomCopyOfferImageInfoByIndexOptions");
static_assert(offsetof(FEOSEcomCopyOfferImageInfoByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyOfferImageInfoByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferImageInfoByIndexOptions, OfferId) == 0x000028, "Member 'FEOSEcomCopyOfferImageInfoByIndexOptions::OfferId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferImageInfoByIndexOptions, ImageInfoIndex) == 0x000038, "Member 'FEOSEcomCopyOfferImageInfoByIndexOptions::ImageInfoIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyLobbyInviteRejectedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSLobbyLobbyInviteRejectedCallbackInfo final
{
public:
	uint8                                         Pad_262F[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0039(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2630[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyLobbyInviteRejectedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyLobbyInviteRejectedCallbackInfo");
static_assert(sizeof(FEOSLobbyLobbyInviteRejectedCallbackInfo) == 0x000070, "Wrong size on FEOSLobbyLobbyInviteRejectedCallbackInfo");
static_assert(offsetof(FEOSLobbyLobbyInviteRejectedCallbackInfo, InviteId) == 0x000008, "Member 'FEOSLobbyLobbyInviteRejectedCallbackInfo::InviteId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLobbyInviteRejectedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSLobbyLobbyInviteRejectedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLobbyInviteRejectedCallbackInfo, TargetUserId) == 0x000039, "Member 'FEOSLobbyLobbyInviteRejectedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLobbyInviteRejectedCallbackInfo, LobbyID) == 0x000060, "Member 'FEOSLobbyLobbyInviteRejectedCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDestroyLobbyOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyDestroyLobbyOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2631[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDestroyLobbyOptions) == 0x000008, "Wrong alignment on FEOSLobbyDestroyLobbyOptions");
static_assert(sizeof(FEOSLobbyDestroyLobbyOptions) == 0x000038, "Wrong size on FEOSLobbyDestroyLobbyOptions");
static_assert(offsetof(FEOSLobbyDestroyLobbyOptions, LocalUserId) == 0x000000, "Member 'FEOSLobbyDestroyLobbyOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDestroyLobbyOptions, LobbyID) == 0x000028, "Member 'FEOSLobbyDestroyLobbyOptions::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyJoinLobbyCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyJoinLobbyCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2632[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyJoinLobbyCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyJoinLobbyCallbackInfo");
static_assert(sizeof(FEOSLobbyJoinLobbyCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyJoinLobbyCallbackInfo");
static_assert(offsetof(FEOSLobbyJoinLobbyCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyJoinLobbyCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyJoinLobbyCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyKickMemberCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyKickMemberCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2633[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyKickMemberCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyKickMemberCallbackInfo");
static_assert(sizeof(FEOSLobbyKickMemberCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyKickMemberCallbackInfo");
static_assert(offsetof(FEOSLobbyKickMemberCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyKickMemberCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyKickMemberCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyKickMemberCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetLastRedeemedEntitlementsCountOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSEcomGetLastRedeemedEntitlementsCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetLastRedeemedEntitlementsCountOptions) == 0x000001, "Wrong alignment on FEOSEcomGetLastRedeemedEntitlementsCountOptions");
static_assert(sizeof(FEOSEcomGetLastRedeemedEntitlementsCountOptions) == 0x000021, "Wrong size on FEOSEcomGetLastRedeemedEntitlementsCountOptions");
static_assert(offsetof(FEOSEcomGetLastRedeemedEntitlementsCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetLastRedeemedEntitlementsCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyLeaveLobbyCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyLeaveLobbyCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2634[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyLeaveLobbyCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyLeaveLobbyCallbackInfo");
static_assert(sizeof(FEOSLobbyLeaveLobbyCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyLeaveLobbyCallbackInfo");
static_assert(offsetof(FEOSLobbyLeaveLobbyCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyLeaveLobbyCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLeaveLobbyCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyLeaveLobbyCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyMemberStatusReceivedCallbackInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSLobbyMemberStatusReceivedCallbackInfo final
{
public:
	uint8                                         Pad_2635[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELobbyMemberStatus                        CurrentStatus;                                     // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2636[0x6];                                     // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyMemberStatusReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyMemberStatusReceivedCallbackInfo");
static_assert(sizeof(FEOSLobbyMemberStatusReceivedCallbackInfo) == 0x000040, "Wrong size on FEOSLobbyMemberStatusReceivedCallbackInfo");
static_assert(offsetof(FEOSLobbyMemberStatusReceivedCallbackInfo, LobbyID) == 0x000008, "Member 'FEOSLobbyMemberStatusReceivedCallbackInfo::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyMemberStatusReceivedCallbackInfo, TargetUserId) == 0x000018, "Member 'FEOSLobbyMemberStatusReceivedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyMemberStatusReceivedCallbackInfo, CurrentStatus) == 0x000039, "Member 'FEOSLobbyMemberStatusReceivedCallbackInfo::CurrentStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PGetRelayControlOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PGetRelayControlOptions final
{
public:
	uint8                                         Pad_2637[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PGetRelayControlOptions) == 0x000004, "Wrong alignment on FEOSP2PGetRelayControlOptions");
static_assert(sizeof(FEOSP2PGetRelayControlOptions) == 0x000004, "Wrong size on FEOSP2PGetRelayControlOptions");

// ScriptStruct EOSCore.EOSSessionSearchRemoveParameterOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSSessionSearchRemoveParameterOptions final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEComparisonOp                             ComparisonOp;                                      // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2638[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionSearchRemoveParameterOptions) == 0x000008, "Wrong alignment on FEOSSessionSearchRemoveParameterOptions");
static_assert(sizeof(FEOSSessionSearchRemoveParameterOptions) == 0x000018, "Wrong size on FEOSSessionSearchRemoveParameterOptions");
static_assert(offsetof(FEOSSessionSearchRemoveParameterOptions, Key) == 0x000000, "Member 'FEOSSessionSearchRemoveParameterOptions::Key' has a wrong offset!");
static_assert(offsetof(FEOSSessionSearchRemoveParameterOptions, ComparisonOp) == 0x000010, "Member 'FEOSSessionSearchRemoveParameterOptions::ComparisonOp' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyRejectInviteCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyRejectInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2639[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyRejectInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyRejectInviteCallbackInfo");
static_assert(sizeof(FEOSLobbyRejectInviteCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyRejectInviteCallbackInfo");
static_assert(offsetof(FEOSLobbyRejectInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyRejectInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyRejectInviteCallbackInfo, InviteId) == 0x000010, "Member 'FEOSLobbyRejectInviteCallbackInfo::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyMemberUpdateReceivedCallbackInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSLobbyMemberUpdateReceivedCallbackInfo final
{
public:
	uint8                                         Pad_263A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_263B[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyMemberUpdateReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyMemberUpdateReceivedCallbackInfo");
static_assert(sizeof(FEOSLobbyMemberUpdateReceivedCallbackInfo) == 0x000040, "Wrong size on FEOSLobbyMemberUpdateReceivedCallbackInfo");
static_assert(offsetof(FEOSLobbyMemberUpdateReceivedCallbackInfo, LobbyID) == 0x000008, "Member 'FEOSLobbyMemberUpdateReceivedCallbackInfo::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyMemberUpdateReceivedCallbackInfo, TargetUserId) == 0x000018, "Member 'FEOSLobbyMemberUpdateReceivedCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyPromoteMemberCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyPromoteMemberCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_263C[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyPromoteMemberCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyPromoteMemberCallbackInfo");
static_assert(sizeof(FEOSLobbyPromoteMemberCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyPromoteMemberCallbackInfo");
static_assert(offsetof(FEOSLobbyPromoteMemberCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyPromoteMemberCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyPromoteMemberCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyPromoteMemberCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsGetMemberByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyDetailsGetMemberByIndexOptions final
{
public:
	uint8                                         Pad_263D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MemberIndex;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDetailsGetMemberByIndexOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsGetMemberByIndexOptions");
static_assert(sizeof(FEOSLobbyDetailsGetMemberByIndexOptions) == 0x000008, "Wrong size on FEOSLobbyDetailsGetMemberByIndexOptions");
static_assert(offsetof(FEOSLobbyDetailsGetMemberByIndexOptions, MemberIndex) == 0x000004, "Member 'FEOSLobbyDetailsGetMemberByIndexOptions::MemberIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsUninstallModOptions
// 0x0080 (0x0080 - 0x0000)
struct FEOSModsUninstallModOptions final
{
public:
	uint8                                         Pad_263E[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_263F[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0028(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModsUninstallModOptions) == 0x000008, "Wrong alignment on FEOSModsUninstallModOptions");
static_assert(sizeof(FEOSModsUninstallModOptions) == 0x000080, "Wrong size on FEOSModsUninstallModOptions");
static_assert(offsetof(FEOSModsUninstallModOptions, LocalUserId) == 0x000004, "Member 'FEOSModsUninstallModOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsUninstallModOptions, Mod) == 0x000028, "Member 'FEOSModsUninstallModOptions::Mod' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsAttributeData
// 0x0020 (0x0020 - 0x0000)
struct alignas(0x08) FEOSSessionsAttributeData final
{
public:
	uint8                                         Pad_2640[0x20];                                    // 0x0000(0x0020)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsAttributeData) == 0x000008, "Wrong alignment on FEOSSessionsAttributeData");
static_assert(sizeof(FEOSSessionsAttributeData) == 0x000020, "Wrong size on FEOSSessionsAttributeData");

// ScriptStruct EOSCore.EOSSessionDetailsAttribute
// 0x0028 (0x0028 - 0x0000)
struct FEOSSessionDetailsAttribute final
{
public:
	struct FEOSSessionsAttributeData              Data;                                              // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSESessionAttributeAdvertisementType        AdvertisementType;                                 // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2641[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionDetailsAttribute) == 0x000008, "Wrong alignment on FEOSSessionDetailsAttribute");
static_assert(sizeof(FEOSSessionDetailsAttribute) == 0x000028, "Wrong size on FEOSSessionDetailsAttribute");
static_assert(offsetof(FEOSSessionDetailsAttribute, Data) == 0x000000, "Member 'FEOSSessionDetailsAttribute::Data' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsAttribute, AdvertisementType) == 0x000020, "Member 'FEOSSessionDetailsAttribute::AdvertisementType' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyQueryInvitesCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSLobbyQueryInvitesCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2642[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2643[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyQueryInvitesCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyQueryInvitesCallbackInfo");
static_assert(sizeof(FEOSLobbyQueryInvitesCallbackInfo) == 0x000038, "Wrong size on FEOSLobbyQueryInvitesCallbackInfo");
static_assert(offsetof(FEOSLobbyQueryInvitesCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyQueryInvitesCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyQueryInvitesCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSLobbyQueryInvitesCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIIsSocialOverlayPausedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSUIIsSocialOverlayPausedOptions final
{
public:
	uint8                                         Pad_2644[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIIsSocialOverlayPausedOptions) == 0x000001, "Wrong alignment on FEOSUIIsSocialOverlayPausedOptions");
static_assert(sizeof(FEOSUIIsSocialOverlayPausedOptions) == 0x000001, "Wrong size on FEOSUIIsSocialOverlayPausedOptions");

// ScriptStruct EOSCore.EOSLobbySendInviteCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbySendInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2645[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbySendInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbySendInviteCallbackInfo");
static_assert(sizeof(FEOSLobbySendInviteCallbackInfo) == 0x000020, "Wrong size on FEOSLobbySendInviteCallbackInfo");
static_assert(offsetof(FEOSLobbySendInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbySendInviteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendInviteCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbySendInviteCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyUpdateLobbyCallbackInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbyUpdateLobbyCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2646[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyUpdateLobbyCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyUpdateLobbyCallbackInfo");
static_assert(sizeof(FEOSLobbyUpdateLobbyCallbackInfo) == 0x000020, "Wrong size on FEOSLobbyUpdateLobbyCallbackInfo");
static_assert(offsetof(FEOSLobbyUpdateLobbyCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLobbyUpdateLobbyCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSLobbyUpdateLobbyCallbackInfo, LobbyID) == 0x000010, "Member 'FEOSLobbyUpdateLobbyCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsGetLeaderboardRecordCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLeaderboardsGetLeaderboardRecordCountOptions final
{
public:
	uint8                                         Pad_2647[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsGetLeaderboardRecordCountOptions) == 0x000004, "Wrong alignment on FEOSLeaderboardsGetLeaderboardRecordCountOptions");
static_assert(sizeof(FEOSLeaderboardsGetLeaderboardRecordCountOptions) == 0x000004, "Wrong size on FEOSLeaderboardsGetLeaderboardRecordCountOptions");

// ScriptStruct EOSCore.EOSLobbyUpdateReceivedCallbackInfo
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyUpdateReceivedCallbackInfo final
{
public:
	uint8                                         Pad_2648[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyUpdateReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyUpdateReceivedCallbackInfo");
static_assert(sizeof(FEOSLobbyUpdateReceivedCallbackInfo) == 0x000018, "Wrong size on FEOSLobbyUpdateReceivedCallbackInfo");
static_assert(offsetof(FEOSLobbyUpdateReceivedCallbackInfo, LobbyID) == 0x000008, "Member 'FEOSLobbyUpdateReceivedCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectLoginCallbackInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSConnectLoginCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2649[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContinuanceToken                      ContinuanceToken;                                  // 0x0038(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectLoginCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectLoginCallbackInfo");
static_assert(sizeof(FEOSConnectLoginCallbackInfo) == 0x000040, "Wrong size on FEOSConnectLoginCallbackInfo");
static_assert(offsetof(FEOSConnectLoginCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectLoginCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectLoginCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectLoginCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectLoginCallbackInfo, ContinuanceToken) == 0x000038, "Member 'FEOSConnectLoginCallbackInfo::ContinuanceToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectQueryExternalAccountMappingsOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectQueryExternalAccountMappingsOptions final
{
public:
	uint8                                         Pad_264B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264C[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ExternalAccountIds;                                // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectQueryExternalAccountMappingsOptions) == 0x000008, "Wrong alignment on FEOSConnectQueryExternalAccountMappingsOptions");
static_assert(sizeof(FEOSConnectQueryExternalAccountMappingsOptions) == 0x000038, "Wrong size on FEOSConnectQueryExternalAccountMappingsOptions");
static_assert(offsetof(FEOSConnectQueryExternalAccountMappingsOptions, LocalUserId) == 0x000004, "Member 'FEOSConnectQueryExternalAccountMappingsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectQueryExternalAccountMappingsOptions, AccountIdType) == 0x000025, "Member 'FEOSConnectQueryExternalAccountMappingsOptions::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSConnectQueryExternalAccountMappingsOptions, ExternalAccountIds) == 0x000028, "Member 'FEOSConnectQueryExternalAccountMappingsOptions::ExternalAccountIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsCopyStatByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSStatsCopyStatByIndexOptions final
{
public:
	uint8                                         Pad_264D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_264E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StatIndex;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSStatsCopyStatByIndexOptions) == 0x000004, "Wrong alignment on FEOSStatsCopyStatByIndexOptions");
static_assert(sizeof(FEOSStatsCopyStatByIndexOptions) == 0x00002C, "Wrong size on FEOSStatsCopyStatByIndexOptions");
static_assert(offsetof(FEOSStatsCopyStatByIndexOptions, TargetUserId) == 0x000004, "Member 'FEOSStatsCopyStatByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsCopyStatByIndexOptions, StatIndex) == 0x000028, "Member 'FEOSStatsCopyStatByIndexOptions::StatIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectLoginStatusChangedCallbackInfo
// 0x0030 (0x0030 - 0x0000)
struct alignas(0x08) FEOSConnectLoginStatusChangedCallbackInfo final
{
public:
	uint8                                         Pad_264F[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELoginStatus                              PreviousStatus;                                    // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELoginStatus                              CurrentStatus;                                     // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2650[0x5];                                     // 0x002B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectLoginStatusChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectLoginStatusChangedCallbackInfo");
static_assert(sizeof(FEOSConnectLoginStatusChangedCallbackInfo) == 0x000030, "Wrong size on FEOSConnectLoginStatusChangedCallbackInfo");
static_assert(offsetof(FEOSConnectLoginStatusChangedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSConnectLoginStatusChangedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectLoginStatusChangedCallbackInfo, PreviousStatus) == 0x000029, "Member 'FEOSConnectLoginStatusChangedCallbackInfo::PreviousStatus' has a wrong offset!");
static_assert(offsetof(FEOSConnectLoginStatusChangedCallbackInfo, CurrentStatus) == 0x00002A, "Member 'FEOSConnectLoginStatusChangedCallbackInfo::CurrentStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnPeerConnectionEstablishedInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSP2POnPeerConnectionEstablishedInfo final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2651[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EEOSEConnectionEstablishedType                ConnectionType;                                    // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSENetworkConnectionType                    NetworkType;                                       // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2652[0x6];                                     // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2POnPeerConnectionEstablishedInfo) == 0x000008, "Wrong alignment on FEOSP2POnPeerConnectionEstablishedInfo");
static_assert(sizeof(FEOSP2POnPeerConnectionEstablishedInfo) == 0x000068, "Wrong size on FEOSP2POnPeerConnectionEstablishedInfo");
static_assert(offsetof(FEOSP2POnPeerConnectionEstablishedInfo, LocalUserId) == 0x000000, "Member 'FEOSP2POnPeerConnectionEstablishedInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionEstablishedInfo, RemoteUserId) == 0x000021, "Member 'FEOSP2POnPeerConnectionEstablishedInfo::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionEstablishedInfo, SocketId) == 0x000048, "Member 'FEOSP2POnPeerConnectionEstablishedInfo::SocketId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionEstablishedInfo, ConnectionType) == 0x000060, "Member 'FEOSP2POnPeerConnectionEstablishedInfo::ConnectionType' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionEstablishedInfo, NetworkType) == 0x000061, "Member 'FEOSP2POnPeerConnectionEstablishedInfo::NetworkType' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnPeerConnectionInterruptedInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSP2POnPeerConnectionInterruptedInfo final
{
public:
	uint8                                         Pad_2653[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2654[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0050(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2POnPeerConnectionInterruptedInfo) == 0x000008, "Wrong alignment on FEOSP2POnPeerConnectionInterruptedInfo");
static_assert(sizeof(FEOSP2POnPeerConnectionInterruptedInfo) == 0x000068, "Wrong size on FEOSP2POnPeerConnectionInterruptedInfo");
static_assert(offsetof(FEOSP2POnPeerConnectionInterruptedInfo, LocalUserId) == 0x000008, "Member 'FEOSP2POnPeerConnectionInterruptedInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionInterruptedInfo, RemoteUserId) == 0x000029, "Member 'FEOSP2POnPeerConnectionInterruptedInfo::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnPeerConnectionInterruptedInfo, SocketId) == 0x000050, "Member 'FEOSP2POnPeerConnectionInterruptedInfo::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerSetClientNetworkStateOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAntiCheatServerSetClientNetworkStateOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsNetworkActive;                                  // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2655[0x7];                                     // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerSetClientNetworkStateOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerSetClientNetworkStateOptions");
static_assert(sizeof(FEOSAntiCheatServerSetClientNetworkStateOptions) == 0x000010, "Wrong size on FEOSAntiCheatServerSetClientNetworkStateOptions");
static_assert(offsetof(FEOSAntiCheatServerSetClientNetworkStateOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerSetClientNetworkStateOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerSetClientNetworkStateOptions, bIsNetworkActive) == 0x000008, "Member 'FEOSAntiCheatServerSetClientNetworkStateOptions::bIsNetworkActive' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomTransactionCopyEntitlementByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSEcomTransactionCopyEntitlementByIndexOptions final
{
public:
	uint8                                         Pad_2656[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EntitlementIndex;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomTransactionCopyEntitlementByIndexOptions) == 0x000004, "Wrong alignment on FEOSEcomTransactionCopyEntitlementByIndexOptions");
static_assert(sizeof(FEOSEcomTransactionCopyEntitlementByIndexOptions) == 0x000008, "Wrong size on FEOSEcomTransactionCopyEntitlementByIndexOptions");
static_assert(offsetof(FEOSEcomTransactionCopyEntitlementByIndexOptions, EntitlementIndex) == 0x000004, "Member 'FEOSEcomTransactionCopyEntitlementByIndexOptions::EntitlementIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnIncomingConnectionRequestInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSP2POnIncomingConnectionRequestInfo final
{
public:
	uint8                                         Pad_2657[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2658[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0050(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2POnIncomingConnectionRequestInfo) == 0x000008, "Wrong alignment on FEOSP2POnIncomingConnectionRequestInfo");
static_assert(sizeof(FEOSP2POnIncomingConnectionRequestInfo) == 0x000068, "Wrong size on FEOSP2POnIncomingConnectionRequestInfo");
static_assert(offsetof(FEOSP2POnIncomingConnectionRequestInfo, LocalUserId) == 0x000008, "Member 'FEOSP2POnIncomingConnectionRequestInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingConnectionRequestInfo, RemoteUserId) == 0x000029, "Member 'FEOSP2POnIncomingConnectionRequestInfo::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingConnectionRequestInfo, SocketId) == 0x000050, "Member 'FEOSP2POnIncomingConnectionRequestInfo::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnIncomingPacketQueueFullInfo
// 0x0058 (0x0058 - 0x0000)
struct FEOSP2POnIncomingPacketQueueFullInfo final
{
public:
	uint8                                         Pad_2659[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 PacketQueueMaxSizeBytes;                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PacketQueueCurrentSizeBytes;                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      OverflowPacketLocalUserId;                         // 0x0028(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265A[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OverflowPacketChannel;                             // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         OverflowPacketSizeBytes;                           // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265B[0x4];                                     // 0x0054(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2POnIncomingPacketQueueFullInfo) == 0x000008, "Wrong alignment on FEOSP2POnIncomingPacketQueueFullInfo");
static_assert(sizeof(FEOSP2POnIncomingPacketQueueFullInfo) == 0x000058, "Wrong size on FEOSP2POnIncomingPacketQueueFullInfo");
static_assert(offsetof(FEOSP2POnIncomingPacketQueueFullInfo, PacketQueueMaxSizeBytes) == 0x000008, "Member 'FEOSP2POnIncomingPacketQueueFullInfo::PacketQueueMaxSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingPacketQueueFullInfo, PacketQueueCurrentSizeBytes) == 0x000018, "Member 'FEOSP2POnIncomingPacketQueueFullInfo::PacketQueueCurrentSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingPacketQueueFullInfo, OverflowPacketLocalUserId) == 0x000028, "Member 'FEOSP2POnIncomingPacketQueueFullInfo::OverflowPacketLocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingPacketQueueFullInfo, OverflowPacketChannel) == 0x00004C, "Member 'FEOSP2POnIncomingPacketQueueFullInfo::OverflowPacketChannel' has a wrong offset!");
static_assert(offsetof(FEOSP2POnIncomingPacketQueueFullInfo, OverflowPacketSizeBytes) == 0x000050, "Member 'FEOSP2POnIncomingPacketQueueFullInfo::OverflowPacketSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerRegisterClientOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSAntiCheatServerRegisterClientOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientType                ClientType;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientPlatform            ClientPlatform;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265C[0x16];                                    // 0x000A(0x0016)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IpAddress;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      UserId;                                            // 0x0030(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265D[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerRegisterClientOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerRegisterClientOptions");
static_assert(sizeof(FEOSAntiCheatServerRegisterClientOptions) == 0x000058, "Wrong size on FEOSAntiCheatServerRegisterClientOptions");
static_assert(offsetof(FEOSAntiCheatServerRegisterClientOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerRegisterClientOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerRegisterClientOptions, ClientType) == 0x000008, "Member 'FEOSAntiCheatServerRegisterClientOptions::ClientType' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerRegisterClientOptions, ClientPlatform) == 0x000009, "Member 'FEOSAntiCheatServerRegisterClientOptions::ClientPlatform' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerRegisterClientOptions, IpAddress) == 0x000020, "Member 'FEOSAntiCheatServerRegisterClientOptions::IpAddress' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerRegisterClientOptions, UserId) == 0x000030, "Member 'FEOSAntiCheatServerRegisterClientOptions::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationSetPermissionLevelOptions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FEOSLobbyModificationSetPermissionLevelOptions final
{
public:
	uint8                                         Pad_265E[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSELobbyPermissionLevel                     PermissionLevel;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_265F[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyModificationSetPermissionLevelOptions) == 0x000004, "Wrong alignment on FEOSLobbyModificationSetPermissionLevelOptions");
static_assert(sizeof(FEOSLobbyModificationSetPermissionLevelOptions) == 0x000008, "Wrong size on FEOSLobbyModificationSetPermissionLevelOptions");
static_assert(offsetof(FEOSLobbyModificationSetPermissionLevelOptions, PermissionLevel) == 0x000004, "Member 'FEOSLobbyModificationSetPermissionLevelOptions::PermissionLevel' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnQueryNATTypeCompleteInfo
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FEOSP2POnQueryNATTypeCompleteInfo final
{
public:
	uint8                                         Pad_2660[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EOSResult                                     ResultCode;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2661[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSENATType                                  NATType;                                           // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2662[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2POnQueryNATTypeCompleteInfo) == 0x000008, "Wrong alignment on FEOSP2POnQueryNATTypeCompleteInfo");
static_assert(sizeof(FEOSP2POnQueryNATTypeCompleteInfo) == 0x000018, "Wrong size on FEOSP2POnQueryNATTypeCompleteInfo");
static_assert(offsetof(FEOSP2POnQueryNATTypeCompleteInfo, ResultCode) == 0x000004, "Member 'FEOSP2POnQueryNATTypeCompleteInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSP2POnQueryNATTypeCompleteInfo, NATType) == 0x000010, "Member 'FEOSP2POnQueryNATTypeCompleteInfo::NATType' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2POnRemoteConnectionClosedInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSP2POnRemoteConnectionClosedInfo final
{
public:
	uint8                                         Pad_2663[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2664[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0050(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	EEOSEConnectionClosedReason                   Reason;                                            // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2665[0x7];                                     // 0x0069(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2POnRemoteConnectionClosedInfo) == 0x000008, "Wrong alignment on FEOSP2POnRemoteConnectionClosedInfo");
static_assert(sizeof(FEOSP2POnRemoteConnectionClosedInfo) == 0x000070, "Wrong size on FEOSP2POnRemoteConnectionClosedInfo");
static_assert(offsetof(FEOSP2POnRemoteConnectionClosedInfo, LocalUserId) == 0x000008, "Member 'FEOSP2POnRemoteConnectionClosedInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnRemoteConnectionClosedInfo, RemoteUserId) == 0x000029, "Member 'FEOSP2POnRemoteConnectionClosedInfo::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnRemoteConnectionClosedInfo, SocketId) == 0x000050, "Member 'FEOSP2POnRemoteConnectionClosedInfo::SocketId' has a wrong offset!");
static_assert(offsetof(FEOSP2POnRemoteConnectionClosedInfo, Reason) == 0x000068, "Member 'FEOSP2POnRemoteConnectionClosedInfo::Reason' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCParticipantMetadata
// 0x0020 (0x0020 - 0x0000)
struct FEOSRTCParticipantMetadata final
{
public:
	class FString                                 Key;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRTCParticipantMetadata) == 0x000008, "Wrong alignment on FEOSRTCParticipantMetadata");
static_assert(sizeof(FEOSRTCParticipantMetadata) == 0x000020, "Wrong size on FEOSRTCParticipantMetadata");
static_assert(offsetof(FEOSRTCParticipantMetadata, Key) == 0x000000, "Member 'FEOSRTCParticipantMetadata::Key' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantMetadata, Value) == 0x000010, "Member 'FEOSRTCParticipantMetadata::Value' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCParticipantStatusChangedCallbackInfo
// 0x0080 (0x0080 - 0x0000)
struct FEOSRTCParticipantStatusChangedCallbackInfo final
{
public:
	uint8                                         Pad_2666[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2667[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0040(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCParticipantStatus                     ParticipantStatus;                                 // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2668[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSRTCParticipantMetadata>     ParticipantMetadata;                               // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bParticipantInBlocklist;                           // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2669[0x7];                                     // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCParticipantStatusChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCParticipantStatusChangedCallbackInfo");
static_assert(sizeof(FEOSRTCParticipantStatusChangedCallbackInfo) == 0x000080, "Wrong size on FEOSRTCParticipantStatusChangedCallbackInfo");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, RoomName) == 0x000030, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, ParticipantId) == 0x000040, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, ParticipantStatus) == 0x000061, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::ParticipantStatus' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, ParticipantMetadata) == 0x000068, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::ParticipantMetadata' has a wrong offset!");
static_assert(offsetof(FEOSRTCParticipantStatusChangedCallbackInfo, bParticipantInBlocklist) == 0x000078, "Member 'FEOSRTCParticipantStatusChangedCallbackInfo::bParticipantInBlocklist' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PPacketQueueInfo
// 0x0060 (0x0060 - 0x0000)
struct FEOSP2PPacketQueueInfo final
{
public:
	class FString                                 IncomingPacketQueueMaxSizeBytes;                   // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IncomingPacketQueueCurrentSizeBytes;               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IncomingPacketQueueCurrentPacketCount;             // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutgoingPacketQueueMaxSizeBytes;                   // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutgoingPacketQueueCurrentSizeBytes;               // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutgoingPacketQueueCurrentPacketCount;             // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PPacketQueueInfo) == 0x000008, "Wrong alignment on FEOSP2PPacketQueueInfo");
static_assert(sizeof(FEOSP2PPacketQueueInfo) == 0x000060, "Wrong size on FEOSP2PPacketQueueInfo");
static_assert(offsetof(FEOSP2PPacketQueueInfo, IncomingPacketQueueMaxSizeBytes) == 0x000000, "Member 'FEOSP2PPacketQueueInfo::IncomingPacketQueueMaxSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PPacketQueueInfo, IncomingPacketQueueCurrentSizeBytes) == 0x000010, "Member 'FEOSP2PPacketQueueInfo::IncomingPacketQueueCurrentSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PPacketQueueInfo, IncomingPacketQueueCurrentPacketCount) == 0x000020, "Member 'FEOSP2PPacketQueueInfo::IncomingPacketQueueCurrentPacketCount' has a wrong offset!");
static_assert(offsetof(FEOSP2PPacketQueueInfo, OutgoingPacketQueueMaxSizeBytes) == 0x000030, "Member 'FEOSP2PPacketQueueInfo::OutgoingPacketQueueMaxSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PPacketQueueInfo, OutgoingPacketQueueCurrentSizeBytes) == 0x000040, "Member 'FEOSP2PPacketQueueInfo::OutgoingPacketQueueCurrentSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PPacketQueueInfo, OutgoingPacketQueueCurrentPacketCount) == 0x000050, "Member 'FEOSP2PPacketQueueInfo::OutgoingPacketQueueCurrentPacketCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSJoinRoomCallbackInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSJoinRoomCallbackInfo final
{
public:
	uint8                                         Pad_266A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_266B[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0040(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSpeaking;                                         // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCAudioStatus                           AudioStatus;                                       // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_266C[0x5];                                     // 0x0063(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSJoinRoomCallbackInfo) == 0x000008, "Wrong alignment on FEOSJoinRoomCallbackInfo");
static_assert(sizeof(FEOSJoinRoomCallbackInfo) == 0x000068, "Wrong size on FEOSJoinRoomCallbackInfo");
static_assert(offsetof(FEOSJoinRoomCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSJoinRoomCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSJoinRoomCallbackInfo, RoomName) == 0x000030, "Member 'FEOSJoinRoomCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSJoinRoomCallbackInfo, ParticipantId) == 0x000040, "Member 'FEOSJoinRoomCallbackInfo::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSJoinRoomCallbackInfo, bSpeaking) == 0x000061, "Member 'FEOSJoinRoomCallbackInfo::bSpeaking' has a wrong offset!");
static_assert(offsetof(FEOSJoinRoomCallbackInfo, AudioStatus) == 0x000062, "Member 'FEOSJoinRoomCallbackInfo::AudioStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresencePresenceChangedCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct alignas(0x08) FEOSPresencePresenceChangedCallbackInfo final
{
public:
	uint8                                         Pad_266D[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      PresenceUserId;                                    // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_266E[0x6];                                     // 0x004A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresencePresenceChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSPresencePresenceChangedCallbackInfo");
static_assert(sizeof(FEOSPresencePresenceChangedCallbackInfo) == 0x000050, "Wrong size on FEOSPresencePresenceChangedCallbackInfo");
static_assert(offsetof(FEOSPresencePresenceChangedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSPresencePresenceChangedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresencePresenceChangedCallbackInfo, PresenceUserId) == 0x000029, "Member 'FEOSPresencePresenceChangedCallbackInfo::PresenceUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomHTransaction
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSEcomHTransaction final
{
public:
	uint8                                         Pad_266F[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomHTransaction) == 0x000008, "Wrong alignment on FEOSEcomHTransaction");
static_assert(sizeof(FEOSEcomHTransaction) == 0x000008, "Wrong size on FEOSEcomHTransaction");

// ScriptStruct EOSCore.EOSPresenceJoinGameAcceptedCallbackInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSPresenceJoinGameAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_2670[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 JoinInfo;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0039(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2671[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSUIEventId                          UiEventId;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceJoinGameAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSPresenceJoinGameAcceptedCallbackInfo");
static_assert(sizeof(FEOSPresenceJoinGameAcceptedCallbackInfo) == 0x000068, "Wrong size on FEOSPresenceJoinGameAcceptedCallbackInfo");
static_assert(offsetof(FEOSPresenceJoinGameAcceptedCallbackInfo, JoinInfo) == 0x000008, "Member 'FEOSPresenceJoinGameAcceptedCallbackInfo::JoinInfo' has a wrong offset!");
static_assert(offsetof(FEOSPresenceJoinGameAcceptedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSPresenceJoinGameAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceJoinGameAcceptedCallbackInfo, TargetUserId) == 0x000039, "Member 'FEOSPresenceJoinGameAcceptedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceJoinGameAcceptedCallbackInfo, UiEventId) == 0x000060, "Member 'FEOSPresenceJoinGameAcceptedCallbackInfo::UiEventId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceQueryPresenceCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSPresenceQueryPresenceCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2672[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2673[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceQueryPresenceCallbackInfo) == 0x000008, "Wrong alignment on FEOSPresenceQueryPresenceCallbackInfo");
static_assert(sizeof(FEOSPresenceQueryPresenceCallbackInfo) == 0x000058, "Wrong size on FEOSPresenceQueryPresenceCallbackInfo");
static_assert(offsetof(FEOSPresenceQueryPresenceCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPresenceQueryPresenceCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPresenceQueryPresenceCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPresenceQueryPresenceCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceQueryPresenceCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSPresenceQueryPresenceCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PAddNotifyPeerConnectionClosedOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSP2PAddNotifyPeerConnectionClosedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2674[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PAddNotifyPeerConnectionClosedOptions) == 0x000008, "Wrong alignment on FEOSP2PAddNotifyPeerConnectionClosedOptions");
static_assert(sizeof(FEOSP2PAddNotifyPeerConnectionClosedOptions) == 0x000040, "Wrong size on FEOSP2PAddNotifyPeerConnectionClosedOptions");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionClosedOptions, LocalUserId) == 0x000000, "Member 'FEOSP2PAddNotifyPeerConnectionClosedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionClosedOptions, SocketId) == 0x000028, "Member 'FEOSP2PAddNotifyPeerConnectionClosedOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceSetPresenceCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPresenceSetPresenceCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2675[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2676[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceSetPresenceCallbackInfo) == 0x000008, "Wrong alignment on FEOSPresenceSetPresenceCallbackInfo");
static_assert(sizeof(FEOSPresenceSetPresenceCallbackInfo) == 0x000038, "Wrong size on FEOSPresenceSetPresenceCallbackInfo");
static_assert(offsetof(FEOSPresenceSetPresenceCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPresenceSetPresenceCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPresenceSetPresenceCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPresenceSetPresenceCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSanctionsQueryActivePlayerSanctionsCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2677[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2678[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo) == 0x000008, "Wrong alignment on FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo");
static_assert(sizeof(FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo) == 0x000058, "Wrong size on FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo");
static_assert(offsetof(FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo, TargetUserId) == 0x000010, "Member 'FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo, LocalUserId) == 0x000031, "Member 'FEOSSanctionsQueryActivePlayerSanctionsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageQueryFileCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPlayerDataStorageQueryFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2679[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_267A[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageQueryFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageQueryFileCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageQueryFileCallbackInfo) == 0x000038, "Wrong size on FEOSPlayerDataStorageQueryFileCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageQueryFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageQueryFileCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCreateUserOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSConnectCreateUserOptions final
{
public:
	struct FContinuanceToken                      ContinuanceToken;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectCreateUserOptions) == 0x000008, "Wrong alignment on FEOSConnectCreateUserOptions");
static_assert(sizeof(FEOSConnectCreateUserOptions) == 0x000008, "Wrong size on FEOSConnectCreateUserOptions");
static_assert(offsetof(FEOSConnectCreateUserOptions, ContinuanceToken) == 0x000000, "Member 'FEOSConnectCreateUserOptions::ContinuanceToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageQueryFileListCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSPlayerDataStorageQueryFileListCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_267B[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_267C[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FileCount;                                         // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageQueryFileListCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageQueryFileListCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageQueryFileListCallbackInfo) == 0x000038, "Wrong size on FEOSPlayerDataStorageQueryFileListCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileListCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageQueryFileListCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileListCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageQueryFileListCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileListCallbackInfo, FileCount) == 0x000034, "Member 'FEOSPlayerDataStorageQueryFileListCallbackInfo::FileCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSQueryJoinRoomTokenCompleteCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct FEOSQueryJoinRoomTokenCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_267D[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientBaseUrl;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QueryId;                                           // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TokenCount;                                        // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSQueryJoinRoomTokenCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSQueryJoinRoomTokenCompleteCallbackInfo");
static_assert(sizeof(FEOSQueryJoinRoomTokenCompleteCallbackInfo) == 0x000038, "Wrong size on FEOSQueryJoinRoomTokenCompleteCallbackInfo");
static_assert(offsetof(FEOSQueryJoinRoomTokenCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSQueryJoinRoomTokenCompleteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenCompleteCallbackInfo, RoomName) == 0x000010, "Member 'FEOSQueryJoinRoomTokenCompleteCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenCompleteCallbackInfo, ClientBaseUrl) == 0x000020, "Member 'FEOSQueryJoinRoomTokenCompleteCallbackInfo::ClientBaseUrl' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenCompleteCallbackInfo, QueryId) == 0x000030, "Member 'FEOSQueryJoinRoomTokenCompleteCallbackInfo::QueryId' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenCompleteCallbackInfo, TokenCount) == 0x000034, "Member 'FEOSQueryJoinRoomTokenCompleteCallbackInfo::TokenCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsEndSessionOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsEndSessionOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsEndSessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsEndSessionOptions");
static_assert(sizeof(FEOSSessionsEndSessionOptions) == 0x000010, "Wrong size on FEOSSessionsEndSessionOptions");
static_assert(offsetof(FEOSSessionsEndSessionOptions, SessionName) == 0x000000, "Member 'FEOSSessionsEndSessionOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_267E[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo");
static_assert(sizeof(FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo");
static_assert(offsetof(FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLeaderboardsOnQueryLeaderboardDefinitionsCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoByDisplayNameOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSUserInfoQueryUserInfoByDisplayNameOptions final
{
public:
	uint8                                         Pad_267F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2680[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisplayName;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfoQueryUserInfoByDisplayNameOptions) == 0x000008, "Wrong alignment on FEOSUserInfoQueryUserInfoByDisplayNameOptions");
static_assert(sizeof(FEOSUserInfoQueryUserInfoByDisplayNameOptions) == 0x000038, "Wrong size on FEOSUserInfoQueryUserInfoByDisplayNameOptions");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameOptions, DisplayName) == 0x000028, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameOptions::DisplayName' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2681[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo");
static_assert(sizeof(FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo");
static_assert(offsetof(FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLeaderboardsOnQueryLeaderboardRanksCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyCreateLobbyOptions
// 0x0068 (0x0068 - 0x0000)
struct FEOSLobbyCreateLobbyOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2682[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxLobbyMembers;                                   // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELobbyPermissionLevel                     PermissionLevel;                                   // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresenceEnabled;                                  // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowInvites;                                     // 0x002A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2683[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BucketId;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableHostMigration;                             // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableRTCRoom;                                    // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2684[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyLocalRTCOptions               LocalRTCOptions;                                   // 0x0044(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2685[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableJoinById;                                   // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRejoinAfterKickRequiresInvite;                    // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2686[0x6];                                     // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyCreateLobbyOptions) == 0x000008, "Wrong alignment on FEOSLobbyCreateLobbyOptions");
static_assert(sizeof(FEOSLobbyCreateLobbyOptions) == 0x000068, "Wrong size on FEOSLobbyCreateLobbyOptions");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, LocalUserId) == 0x000000, "Member 'FEOSLobbyCreateLobbyOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, MaxLobbyMembers) == 0x000024, "Member 'FEOSLobbyCreateLobbyOptions::MaxLobbyMembers' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, PermissionLevel) == 0x000028, "Member 'FEOSLobbyCreateLobbyOptions::PermissionLevel' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bPresenceEnabled) == 0x000029, "Member 'FEOSLobbyCreateLobbyOptions::bPresenceEnabled' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bAllowInvites) == 0x00002A, "Member 'FEOSLobbyCreateLobbyOptions::bAllowInvites' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, BucketId) == 0x000030, "Member 'FEOSLobbyCreateLobbyOptions::BucketId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bDisableHostMigration) == 0x000040, "Member 'FEOSLobbyCreateLobbyOptions::bDisableHostMigration' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bEnableRTCRoom) == 0x000041, "Member 'FEOSLobbyCreateLobbyOptions::bEnableRTCRoom' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, LocalRTCOptions) == 0x000044, "Member 'FEOSLobbyCreateLobbyOptions::LocalRTCOptions' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, LobbyID) == 0x000050, "Member 'FEOSLobbyCreateLobbyOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bEnableJoinById) == 0x000060, "Member 'FEOSLobbyCreateLobbyOptions::bEnableJoinById' has a wrong offset!");
static_assert(offsetof(FEOSLobbyCreateLobbyOptions, bRejoinAfterKickRequiresInvite) == 0x000061, "Member 'FEOSLobbyCreateLobbyOptions::bRejoinAfterKickRequiresInvite' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2687[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo");
static_assert(sizeof(FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo");
static_assert(offsetof(FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSLeaderboardsOnQueryLeaderboardUserScoresCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsQueryDefinitionsOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSAchievementsQueryDefinitionsOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsQueryDefinitionsOptions) == 0x000001, "Wrong alignment on FEOSAchievementsQueryDefinitionsOptions");
static_assert(sizeof(FEOSAchievementsQueryDefinitionsOptions) == 0x000021, "Wrong size on FEOSAchievementsQueryDefinitionsOptions");
static_assert(offsetof(FEOSAchievementsQueryDefinitionsOptions, LocalUserId) == 0x000000, "Member 'FEOSAchievementsQueryDefinitionsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthQueryIdTokenOptions
// 0x0042 (0x0042 - 0x0000)
struct FEOSAuthQueryIdTokenOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetAccountId;                                   // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthQueryIdTokenOptions) == 0x000001, "Wrong alignment on FEOSAuthQueryIdTokenOptions");
static_assert(sizeof(FEOSAuthQueryIdTokenOptions) == 0x000042, "Wrong size on FEOSAuthQueryIdTokenOptions");
static_assert(offsetof(FEOSAuthQueryIdTokenOptions, LocalUserId) == 0x000000, "Member 'FEOSAuthQueryIdTokenOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAuthQueryIdTokenOptions, TargetAccountId) == 0x000021, "Member 'FEOSAuthQueryIdTokenOptions::TargetAccountId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectQueryProductUserIdMappingsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectQueryProductUserIdMappingsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2688[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2689[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectQueryProductUserIdMappingsCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectQueryProductUserIdMappingsCallbackInfo");
static_assert(sizeof(FEOSConnectQueryProductUserIdMappingsCallbackInfo) == 0x000038, "Wrong size on FEOSConnectQueryProductUserIdMappingsCallbackInfo");
static_assert(offsetof(FEOSConnectQueryProductUserIdMappingsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectQueryProductUserIdMappingsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectQueryProductUserIdMappingsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectQueryProductUserIdMappingsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoByDisplayNameCallbackInfo
// 0x0068 (0x0068 - 0x0000)
struct FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo final
{
public:
	uint8                                         Pad_268A[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EOSResult                                     ResultCode;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268B[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268C[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisplayName;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo) == 0x000008, "Wrong alignment on FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo");
static_assert(sizeof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo) == 0x000068, "Wrong size on FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo, ResultCode) == 0x000004, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo, DisplayName) == 0x000058, "Member 'FEOSUserInfoQueryUserInfoByDisplayNameCallbackInfo::DisplayName' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoByExternalAccountCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268D[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExternalAccountId;                                 // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountType;                                       // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0049(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_268F[0x6];                                     // 0x006A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo) == 0x000008, "Wrong alignment on FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo");
static_assert(sizeof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo) == 0x000070, "Wrong size on FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo, ExternalAccountId) == 0x000038, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo::ExternalAccountId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo, AccountType) == 0x000048, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo::AccountType' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo, TargetUserId) == 0x000049, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSUserInfoQueryUserInfoCallbackInfo final
{
public:
	uint8                                         Pad_2690[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EOSResult                                     ResultCode;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2691[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2692[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoQueryUserInfoCallbackInfo) == 0x000008, "Wrong alignment on FEOSUserInfoQueryUserInfoCallbackInfo");
static_assert(sizeof(FEOSUserInfoQueryUserInfoCallbackInfo) == 0x000058, "Wrong size on FEOSUserInfoQueryUserInfoCallbackInfo");
static_assert(offsetof(FEOSUserInfoQueryUserInfoCallbackInfo, ResultCode) == 0x000004, "Member 'FEOSUserInfoQueryUserInfoCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUserInfoQueryUserInfoCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSUserInfoQueryUserInfoCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageReadFileCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSPlayerDataStorageReadFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2693[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2694[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSHPlayerDataStorageFileTransferRequest Handle;                                            // 0x0048(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageReadFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageReadFileCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageReadFileCallbackInfo) == 0x000050, "Wrong size on FEOSPlayerDataStorageReadFileCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageReadFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageReadFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageReadFileCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileCallbackInfo, Filename) == 0x000038, "Member 'FEOSPlayerDataStorageReadFileCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileCallbackInfo, Handle) == 0x000048, "Member 'FEOSPlayerDataStorageReadFileCallbackInfo::Handle' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthAddNotifyLoginStatusChangedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSAuthAddNotifyLoginStatusChangedOptions final
{
public:
	uint8                                         Pad_2695[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthAddNotifyLoginStatusChangedOptions) == 0x000004, "Wrong alignment on FEOSAuthAddNotifyLoginStatusChangedOptions");
static_assert(sizeof(FEOSAuthAddNotifyLoginStatusChangedOptions) == 0x000004, "Wrong size on FEOSAuthAddNotifyLoginStatusChangedOptions");

// ScriptStruct EOSCore.BlockParticipantOptions
// 0x0060 (0x0060 - 0x0000)
struct FBlockParticipantOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2696[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0038(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlocked;                                          // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2697[0x6];                                     // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBlockParticipantOptions) == 0x000008, "Wrong alignment on FBlockParticipantOptions");
static_assert(sizeof(FBlockParticipantOptions) == 0x000060, "Wrong size on FBlockParticipantOptions");
static_assert(offsetof(FBlockParticipantOptions, LocalUserId) == 0x000000, "Member 'FBlockParticipantOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FBlockParticipantOptions, RoomName) == 0x000028, "Member 'FBlockParticipantOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FBlockParticipantOptions, ParticipantId) == 0x000038, "Member 'FBlockParticipantOptions::ParticipantId' has a wrong offset!");
static_assert(offsetof(FBlockParticipantOptions, bBlocked) == 0x000059, "Member 'FBlockParticipantOptions::bBlocked' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyRTCRoomConnectionChangedCallbackInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSLobbyRTCRoomConnectionChangedCallbackInfo final
{
public:
	uint8                                         Pad_2698[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsConnected;                                      // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSResult                                     DisconnectReason;                                  // 0x003A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2699[0x5];                                     // 0x003B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbyRTCRoomConnectionChangedCallbackInfo");
static_assert(sizeof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo) == 0x000040, "Wrong size on FEOSLobbyRTCRoomConnectionChangedCallbackInfo");
static_assert(offsetof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo, LobbyID) == 0x000008, "Member 'FEOSLobbyRTCRoomConnectionChangedCallbackInfo::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSLobbyRTCRoomConnectionChangedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo, bIsConnected) == 0x000039, "Member 'FEOSLobbyRTCRoomConnectionChangedCallbackInfo::bIsConnected' has a wrong offset!");
static_assert(offsetof(FEOSLobbyRTCRoomConnectionChangedCallbackInfo, DisconnectReason) == 0x00003A, "Member 'FEOSLobbyRTCRoomConnectionChangedCallbackInfo::DisconnectReason' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyItemReleaseByIndexOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCopyItemReleaseByIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReleaseIndex;                                      // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269B[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomCopyItemReleaseByIndexOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyItemReleaseByIndexOptions");
static_assert(sizeof(FEOSEcomCopyItemReleaseByIndexOptions) == 0x000040, "Wrong size on FEOSEcomCopyItemReleaseByIndexOptions");
static_assert(offsetof(FEOSEcomCopyItemReleaseByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyItemReleaseByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyItemReleaseByIndexOptions, ItemId) == 0x000028, "Member 'FEOSEcomCopyItemReleaseByIndexOptions::ItemId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyItemReleaseByIndexOptions, ReleaseIndex) == 0x000038, "Member 'FEOSEcomCopyItemReleaseByIndexOptions::ReleaseIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySendLobbyNativeInviteRequestedCallbackInfo
// 0x0060 (0x0060 - 0x0000)
struct FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo final
{
public:
	struct FEOSUIEventId                          UiEventId;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269C[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetNativeAccountType;                           // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TargetUserNativeAccountId;                         // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LobbyID;                                           // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo) == 0x000008, "Wrong alignment on FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo");
static_assert(sizeof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo) == 0x000060, "Wrong size on FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo");
static_assert(offsetof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo, UiEventId) == 0x000000, "Member 'FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo::UiEventId' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo, TargetNativeAccountType) == 0x000030, "Member 'FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo::TargetNativeAccountType' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo, TargetUserNativeAccountId) == 0x000040, "Member 'FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo::TargetUserNativeAccountId' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo, LobbyID) == 0x000050, "Member 'FEOSLobbySendLobbyNativeInviteRequestedCallbackInfo::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsDestroySessionCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsDestroySessionCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269D[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsDestroySessionCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsDestroySessionCallbackInfo");
static_assert(sizeof(FEOSSessionsDestroySessionCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsDestroySessionCallbackInfo");
static_assert(offsetof(FEOSSessionsDestroySessionCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsDestroySessionCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsEndSessionCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsEndSessionCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269E[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsEndSessionCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsEndSessionCallbackInfo");
static_assert(sizeof(FEOSSessionsEndSessionCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsEndSessionCallbackInfo");
static_assert(offsetof(FEOSSessionsEndSessionCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsEndSessionCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchFindCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionSearchFindCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_269F[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionSearchFindCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionSearchFindCallbackInfo");
static_assert(sizeof(FEOSSessionSearchFindCallbackInfo) == 0x000010, "Wrong size on FEOSSessionSearchFindCallbackInfo");
static_assert(offsetof(FEOSSessionSearchFindCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionSearchFindCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsSessionInviteAcceptedCallbackInfo
// 0x0070 (0x0070 - 0x0000)
struct FEOSSessionsSessionInviteAcceptedCallbackInfo final
{
public:
	uint8                                         Pad_26A0[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SessionID;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0039(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A1[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsSessionInviteAcceptedCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsSessionInviteAcceptedCallbackInfo");
static_assert(sizeof(FEOSSessionsSessionInviteAcceptedCallbackInfo) == 0x000070, "Wrong size on FEOSSessionsSessionInviteAcceptedCallbackInfo");
static_assert(offsetof(FEOSSessionsSessionInviteAcceptedCallbackInfo, SessionID) == 0x000008, "Member 'FEOSSessionsSessionInviteAcceptedCallbackInfo::SessionID' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSessionInviteAcceptedCallbackInfo, LocalUserId) == 0x000018, "Member 'FEOSSessionsSessionInviteAcceptedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSessionInviteAcceptedCallbackInfo, TargetUserId) == 0x000039, "Member 'FEOSSessionsSessionInviteAcceptedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSessionInviteAcceptedCallbackInfo, InviteId) == 0x000060, "Member 'FEOSSessionsSessionInviteAcceptedCallbackInfo::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogGameRoundEndOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSAntiCheatCommonLogGameRoundEndOptions final
{
public:
	uint8                                         Pad_26A2[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WinningTeamId;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogGameRoundEndOptions) == 0x000004, "Wrong alignment on FEOSAntiCheatCommonLogGameRoundEndOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogGameRoundEndOptions) == 0x000008, "Wrong size on FEOSAntiCheatCommonLogGameRoundEndOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogGameRoundEndOptions, WinningTeamId) == 0x000004, "Member 'FEOSAntiCheatCommonLogGameRoundEndOptions::WinningTeamId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsSessionInviteReceivedCallbackInfo
// 0x0060 (0x0060 - 0x0000)
struct FEOSSessionsSessionInviteReceivedCallbackInfo final
{
public:
	uint8                                         Pad_26A3[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0029(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A4[0x6];                                     // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsSessionInviteReceivedCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsSessionInviteReceivedCallbackInfo");
static_assert(sizeof(FEOSSessionsSessionInviteReceivedCallbackInfo) == 0x000060, "Wrong size on FEOSSessionsSessionInviteReceivedCallbackInfo");
static_assert(offsetof(FEOSSessionsSessionInviteReceivedCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSSessionsSessionInviteReceivedCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSessionInviteReceivedCallbackInfo, TargetUserId) == 0x000029, "Member 'FEOSSessionsSessionInviteReceivedCallbackInfo::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSessionInviteReceivedCallbackInfo, InviteId) == 0x000050, "Member 'FEOSSessionsSessionInviteReceivedCallbackInfo::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyUpdateLobbyModificationOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyUpdateLobbyModificationOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyUpdateLobbyModificationOptions) == 0x000008, "Wrong alignment on FEOSLobbyUpdateLobbyModificationOptions");
static_assert(sizeof(FEOSLobbyUpdateLobbyModificationOptions) == 0x000038, "Wrong size on FEOSLobbyUpdateLobbyModificationOptions");
static_assert(offsetof(FEOSLobbyUpdateLobbyModificationOptions, LocalUserId) == 0x000000, "Member 'FEOSLobbyUpdateLobbyModificationOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyUpdateLobbyModificationOptions, LobbyID) == 0x000028, "Member 'FEOSLobbyUpdateLobbyModificationOptions::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsJoinSessionCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsJoinSessionCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A6[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsJoinSessionCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsJoinSessionCallbackInfo");
static_assert(sizeof(FEOSSessionsJoinSessionCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsJoinSessionCallbackInfo");
static_assert(offsetof(FEOSSessionsJoinSessionCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsJoinSessionCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsQueryInvitesCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSSessionsQueryInvitesCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A7[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26A8[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsQueryInvitesCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsQueryInvitesCallbackInfo");
static_assert(sizeof(FEOSSessionsQueryInvitesCallbackInfo) == 0x000038, "Wrong size on FEOSSessionsQueryInvitesCallbackInfo");
static_assert(offsetof(FEOSSessionsQueryInvitesCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsQueryInvitesCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSSessionsQueryInvitesCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSSessionsQueryInvitesCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsAddNotifyFriendsUpdateOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSFriendsAddNotifyFriendsUpdateOptions final
{
public:
	uint8                                         Pad_26A9[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsAddNotifyFriendsUpdateOptions) == 0x000004, "Wrong alignment on FEOSFriendsAddNotifyFriendsUpdateOptions");
static_assert(sizeof(FEOSFriendsAddNotifyFriendsUpdateOptions) == 0x000004, "Wrong size on FEOSFriendsAddNotifyFriendsUpdateOptions");

// ScriptStruct EOSCore.EOSSessionsRegisterPlayersCallbackInfo
// 0x0030 (0x0030 - 0x0000)
struct FEOSSessionsRegisterPlayersCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AA[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              RegisteredPlayers;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FEOSProductUserId>              SanctionedPlayers;                                 // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsRegisterPlayersCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsRegisterPlayersCallbackInfo");
static_assert(sizeof(FEOSSessionsRegisterPlayersCallbackInfo) == 0x000030, "Wrong size on FEOSSessionsRegisterPlayersCallbackInfo");
static_assert(offsetof(FEOSSessionsRegisterPlayersCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsRegisterPlayersCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSSessionsRegisterPlayersCallbackInfo, RegisteredPlayers) == 0x000010, "Member 'FEOSSessionsRegisterPlayersCallbackInfo::RegisteredPlayers' has a wrong offset!");
static_assert(offsetof(FEOSSessionsRegisterPlayersCallbackInfo, SanctionedPlayers) == 0x000020, "Member 'FEOSSessionsRegisterPlayersCallbackInfo::SanctionedPlayers' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsRejectInviteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsRejectInviteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AB[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsRejectInviteCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsRejectInviteCallbackInfo");
static_assert(sizeof(FEOSSessionsRejectInviteCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsRejectInviteCallbackInfo");
static_assert(offsetof(FEOSSessionsRejectInviteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsRejectInviteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsStartSessionCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSessionsStartSessionCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AC[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsStartSessionCallbackInfo) == 0x000008, "Wrong alignment on FEOSSessionsStartSessionCallbackInfo");
static_assert(sizeof(FEOSSessionsStartSessionCallbackInfo) == 0x000010, "Wrong size on FEOSSessionsStartSessionCallbackInfo");
static_assert(offsetof(FEOSSessionsStartSessionCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSessionsStartSessionCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSSetParticipantHardMuteCompleteCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSSetParticipantHardMuteCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AD[0xF];                                     // 0x0001(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSetParticipantHardMuteCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSSetParticipantHardMuteCompleteCallbackInfo");
static_assert(sizeof(FEOSSetParticipantHardMuteCompleteCallbackInfo) == 0x000010, "Wrong size on FEOSSetParticipantHardMuteCompleteCallbackInfo");
static_assert(offsetof(FEOSSetParticipantHardMuteCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSSetParticipantHardMuteCompleteCallbackInfo::ResultCode' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateParticipantVolumeOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSRTCAudioUpdateParticipantVolumeOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0038(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26AF[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Volume;                                            // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRTCAudioUpdateParticipantVolumeOptions) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateParticipantVolumeOptions");
static_assert(sizeof(FEOSRTCAudioUpdateParticipantVolumeOptions) == 0x000060, "Wrong size on FEOSRTCAudioUpdateParticipantVolumeOptions");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeOptions, LocalUserId) == 0x000000, "Member 'FEOSRTCAudioUpdateParticipantVolumeOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeOptions, RoomName) == 0x000028, "Member 'FEOSRTCAudioUpdateParticipantVolumeOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeOptions, ParticipantId) == 0x000038, "Member 'FEOSRTCAudioUpdateParticipantVolumeOptions::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateParticipantVolumeOptions, Volume) == 0x00005C, "Member 'FEOSRTCAudioUpdateParticipantVolumeOptions::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIOnShowBlockPlayerCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSUIOnShowBlockPlayerCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B0[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B1[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIOnShowBlockPlayerCallbackInfo) == 0x000008, "Wrong alignment on FEOSUIOnShowBlockPlayerCallbackInfo");
static_assert(sizeof(FEOSUIOnShowBlockPlayerCallbackInfo) == 0x000058, "Wrong size on FEOSUIOnShowBlockPlayerCallbackInfo");
static_assert(offsetof(FEOSUIOnShowBlockPlayerCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUIOnShowBlockPlayerCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUIOnShowBlockPlayerCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUIOnShowBlockPlayerCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUIOnShowBlockPlayerCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSUIOnShowBlockPlayerCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageWriteFileOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSPlayerDataStorageWriteFileOptions final
{
public:
	uint8                                         Pad_26B2[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B3[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LocalFile;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RemoteFile;                                        // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ChunkLengthBytes;                                  // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B4[0x14];                                    // 0x004C(0x0014)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageWriteFileOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageWriteFileOptions");
static_assert(sizeof(FEOSPlayerDataStorageWriteFileOptions) == 0x000060, "Wrong size on FEOSPlayerDataStorageWriteFileOptions");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageWriteFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileOptions, LocalFile) == 0x000028, "Member 'FEOSPlayerDataStorageWriteFileOptions::LocalFile' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileOptions, RemoteFile) == 0x000038, "Member 'FEOSPlayerDataStorageWriteFileOptions::RemoteFile' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileOptions, ChunkLengthBytes) == 0x000048, "Member 'FEOSPlayerDataStorageWriteFileOptions::ChunkLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIShowFriendsCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSUIShowFriendsCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B5[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B6[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIShowFriendsCallbackInfo) == 0x000008, "Wrong alignment on FEOSUIShowFriendsCallbackInfo");
static_assert(sizeof(FEOSUIShowFriendsCallbackInfo) == 0x000038, "Wrong size on FEOSUIShowFriendsCallbackInfo");
static_assert(offsetof(FEOSUIShowFriendsCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUIShowFriendsCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUIShowFriendsCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUIShowFriendsCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlatformGetDesktopCrossplayStatusOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSPlatformGetDesktopCrossplayStatusOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlatformGetDesktopCrossplayStatusOptions) == 0x000001, "Wrong alignment on FEOSPlatformGetDesktopCrossplayStatusOptions");
static_assert(sizeof(FEOSPlatformGetDesktopCrossplayStatusOptions) == 0x000021, "Wrong size on FEOSPlatformGetDesktopCrossplayStatusOptions");
static_assert(offsetof(FEOSPlatformGetDesktopCrossplayStatusOptions, LocalUserId) == 0x000000, "Member 'FEOSPlatformGetDesktopCrossplayStatusOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIOnShowReportPlayerCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSUIOnShowReportPlayerCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B7[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B8[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIOnShowReportPlayerCallbackInfo) == 0x000008, "Wrong alignment on FEOSUIOnShowReportPlayerCallbackInfo");
static_assert(sizeof(FEOSUIOnShowReportPlayerCallbackInfo) == 0x000058, "Wrong size on FEOSUIOnShowReportPlayerCallbackInfo");
static_assert(offsetof(FEOSUIOnShowReportPlayerCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSUIOnShowReportPlayerCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSUIOnShowReportPlayerCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSUIOnShowReportPlayerCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUIOnShowReportPlayerCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSUIOnShowReportPlayerCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsIngestStatCompleteCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSStatsIngestStatCompleteCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26B9[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26BA[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsIngestStatCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSStatsIngestStatCompleteCallbackInfo");
static_assert(sizeof(FEOSStatsIngestStatCompleteCallbackInfo) == 0x000058, "Wrong size on FEOSStatsIngestStatCompleteCallbackInfo");
static_assert(offsetof(FEOSStatsIngestStatCompleteCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSStatsIngestStatCompleteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSStatsIngestStatCompleteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSStatsIngestStatCompleteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsIngestStatCompleteCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSStatsIngestStatCompleteCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsOnQueryStatsCompleteCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct alignas(0x08) FEOSStatsOnQueryStatsCompleteCallbackInfo final
{
public:
	uint8                                         Pad_26BB[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EOSResult                                     ResultCode;                                        // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26BC[0xB];                                     // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26BD[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsOnQueryStatsCompleteCallbackInfo) == 0x000008, "Wrong alignment on FEOSStatsOnQueryStatsCompleteCallbackInfo");
static_assert(sizeof(FEOSStatsOnQueryStatsCompleteCallbackInfo) == 0x000058, "Wrong size on FEOSStatsOnQueryStatsCompleteCallbackInfo");
static_assert(offsetof(FEOSStatsOnQueryStatsCompleteCallbackInfo, ResultCode) == 0x000004, "Member 'FEOSStatsOnQueryStatsCompleteCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSStatsOnQueryStatsCompleteCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSStatsOnQueryStatsCompleteCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsOnQueryStatsCompleteCallbackInfo, TargetUserId) == 0x000031, "Member 'FEOSStatsOnQueryStatsCompleteCallbackInfo::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesAddNotifyCustomInviteAcceptedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSCustomInvitesAddNotifyCustomInviteAcceptedOptions final
{
public:
	uint8                                         Pad_26BE[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSCustomInvitesAddNotifyCustomInviteAcceptedOptions) == 0x000001, "Wrong alignment on FEOSCustomInvitesAddNotifyCustomInviteAcceptedOptions");
static_assert(sizeof(FEOSCustomInvitesAddNotifyCustomInviteAcceptedOptions) == 0x000001, "Wrong size on FEOSCustomInvitesAddNotifyCustomInviteAcceptedOptions");

// ScriptStruct EOSCore.EOSP2PAddNotifyIncomingPacketQueueFullOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PAddNotifyIncomingPacketQueueFullOptions final
{
public:
	uint8                                         Pad_26BF[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PAddNotifyIncomingPacketQueueFullOptions) == 0x000004, "Wrong alignment on FEOSP2PAddNotifyIncomingPacketQueueFullOptions");
static_assert(sizeof(FEOSP2PAddNotifyIncomingPacketQueueFullOptions) == 0x000004, "Wrong size on FEOSP2PAddNotifyIncomingPacketQueueFullOptions");

// ScriptStruct EOSCore.EOSSessionsIsUserInSessionOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSSessionsIsUserInSessionOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C0[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsIsUserInSessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsIsUserInSessionOptions");
static_assert(sizeof(FEOSSessionsIsUserInSessionOptions) == 0x000038, "Wrong size on FEOSSessionsIsUserInSessionOptions");
static_assert(offsetof(FEOSSessionsIsUserInSessionOptions, SessionName) == 0x000000, "Member 'FEOSSessionsIsUserInSessionOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsIsUserInSessionOptions, TargetUserId) == 0x000010, "Member 'FEOSSessionsIsUserInSessionOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotSubmitSnapshotCallbackInfo
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSProgressionSnapshotSubmitSnapshotCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SnapshotId;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C2[0x8];                                     // 0x0008(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSProgressionSnapshotSubmitSnapshotCallbackInfo) == 0x000008, "Wrong alignment on FEOSProgressionSnapshotSubmitSnapshotCallbackInfo");
static_assert(sizeof(FEOSProgressionSnapshotSubmitSnapshotCallbackInfo) == 0x000010, "Wrong size on FEOSProgressionSnapshotSubmitSnapshotCallbackInfo");
static_assert(offsetof(FEOSProgressionSnapshotSubmitSnapshotCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSProgressionSnapshotSubmitSnapshotCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSProgressionSnapshotSubmitSnapshotCallbackInfo, SnapshotId) == 0x000004, "Member 'FEOSProgressionSnapshotSubmitSnapshotCallbackInfo::SnapshotId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsSendInviteOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSSessionsSendInviteOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C3[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsSendInviteOptions) == 0x000008, "Wrong alignment on FEOSSessionsSendInviteOptions");
static_assert(sizeof(FEOSSessionsSendInviteOptions) == 0x000058, "Wrong size on FEOSSessionsSendInviteOptions");
static_assert(offsetof(FEOSSessionsSendInviteOptions, SessionName) == 0x000000, "Member 'FEOSSessionsSendInviteOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSendInviteOptions, LocalUserId) == 0x000010, "Member 'FEOSSessionsSendInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsSendInviteOptions, TargetUserId) == 0x000031, "Member 'FEOSSessionsSendInviteOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageDeleteCacheCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSTitleStorageDeleteCacheCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C4[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C5[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageDeleteCacheCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageDeleteCacheCallbackInfo");
static_assert(sizeof(FEOSTitleStorageDeleteCacheCallbackInfo) == 0x000038, "Wrong size on FEOSTitleStorageDeleteCacheCallbackInfo");
static_assert(offsetof(FEOSTitleStorageDeleteCacheCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSTitleStorageDeleteCacheCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageDeleteCacheCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSTitleStorageDeleteCacheCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsAddNotifySessionInviteReceivedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionsAddNotifySessionInviteReceivedOptions final
{
public:
	uint8                                         Pad_26C6[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsAddNotifySessionInviteReceivedOptions) == 0x000001, "Wrong alignment on FEOSSessionsAddNotifySessionInviteReceivedOptions");
static_assert(sizeof(FEOSSessionsAddNotifySessionInviteReceivedOptions) == 0x000001, "Wrong size on FEOSSessionsAddNotifySessionInviteReceivedOptions");

// ScriptStruct EOSCore.EOSTitleStorageFileTransferProgressCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSTitleStorageFileTransferProgressCallbackInfo final
{
public:
	uint8                                         Pad_26C7[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         BytesTransferred;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFileSizeBytes;                                // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageFileTransferProgressCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageFileTransferProgressCallbackInfo");
static_assert(sizeof(FEOSTitleStorageFileTransferProgressCallbackInfo) == 0x000048, "Wrong size on FEOSTitleStorageFileTransferProgressCallbackInfo");
static_assert(offsetof(FEOSTitleStorageFileTransferProgressCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSTitleStorageFileTransferProgressCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageFileTransferProgressCallbackInfo, Filename) == 0x000030, "Member 'FEOSTitleStorageFileTransferProgressCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageFileTransferProgressCallbackInfo, BytesTransferred) == 0x000040, "Member 'FEOSTitleStorageFileTransferProgressCallbackInfo::BytesTransferred' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageFileTransferProgressCallbackInfo, TotalFileSizeBytes) == 0x000044, "Member 'FEOSTitleStorageFileTransferProgressCallbackInfo::TotalFileSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageQueryFileCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSTitleStorageQueryFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26C9[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26CA[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageQueryFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageQueryFileCallbackInfo");
static_assert(sizeof(FEOSTitleStorageQueryFileCallbackInfo) == 0x000038, "Wrong size on FEOSTitleStorageQueryFileCallbackInfo");
static_assert(offsetof(FEOSTitleStorageQueryFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSTitleStorageQueryFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageQueryFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSTitleStorageQueryFileCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomEntitlementId
// 0x0010 (0x0010 - 0x0000)
struct FEOSEcomEntitlementId final
{
public:
	class FString                                 EntitlementId;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomEntitlementId) == 0x000008, "Wrong alignment on FEOSEcomEntitlementId");
static_assert(sizeof(FEOSEcomEntitlementId) == 0x000010, "Wrong size on FEOSEcomEntitlementId");
static_assert(offsetof(FEOSEcomEntitlementId, EntitlementId) == 0x000000, "Member 'FEOSEcomEntitlementId::EntitlementId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyEntitlementByIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomCopyEntitlementByIdOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26CB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEcomEntitlementId                  EntitlementId;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyEntitlementByIdOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyEntitlementByIdOptions");
static_assert(sizeof(FEOSEcomCopyEntitlementByIdOptions) == 0x000038, "Wrong size on FEOSEcomCopyEntitlementByIdOptions");
static_assert(offsetof(FEOSEcomCopyEntitlementByIdOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyEntitlementByIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyEntitlementByIdOptions, EntitlementId) == 0x000028, "Member 'FEOSEcomCopyEntitlementByIdOptions::EntitlementId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageQueryFileListCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSTitleStorageQueryFileListCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26CC[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26CD[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FileCount;                                         // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageQueryFileListCallbackInfo) == 0x000008, "Wrong alignment on FEOSTitleStorageQueryFileListCallbackInfo");
static_assert(sizeof(FEOSTitleStorageQueryFileListCallbackInfo) == 0x000038, "Wrong size on FEOSTitleStorageQueryFileListCallbackInfo");
static_assert(offsetof(FEOSTitleStorageQueryFileListCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSTitleStorageQueryFileListCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageQueryFileListCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSTitleStorageQueryFileListCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageQueryFileListCallbackInfo, FileCount) == 0x000034, "Member 'FEOSTitleStorageQueryFileListCallbackInfo::FileCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsUninstallModCallbackInfo
// 0x0088 (0x0088 - 0x0000)
struct FEOSModsUninstallModCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26CE[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0030(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModsUninstallModCallbackInfo) == 0x000008, "Wrong alignment on FEOSModsUninstallModCallbackInfo");
static_assert(sizeof(FEOSModsUninstallModCallbackInfo) == 0x000088, "Wrong size on FEOSModsUninstallModCallbackInfo");
static_assert(offsetof(FEOSModsUninstallModCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSModsUninstallModCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSModsUninstallModCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSModsUninstallModCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsUninstallModCallbackInfo, Mod) == 0x000030, "Member 'FEOSModsUninstallModCallbackInfo::Mod' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PReceivePacketOptions
// 0x0030 (0x0030 - 0x0000)
struct FEOSP2PReceivePacketOptions final
{
public:
	uint8                                         Pad_26CF[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D0[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxDataSizeBytes;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RequestedChannel;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PReceivePacketOptions) == 0x000004, "Wrong alignment on FEOSP2PReceivePacketOptions");
static_assert(sizeof(FEOSP2PReceivePacketOptions) == 0x000030, "Wrong size on FEOSP2PReceivePacketOptions");
static_assert(offsetof(FEOSP2PReceivePacketOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PReceivePacketOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PReceivePacketOptions, MaxDataSizeBytes) == 0x000028, "Member 'FEOSP2PReceivePacketOptions::MaxDataSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PReceivePacketOptions, RequestedChannel) == 0x00002C, "Member 'FEOSP2PReceivePacketOptions::RequestedChannel' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectUnlinkAccountCallbackInfo
// 0x0038 (0x0038 - 0x0000)
struct alignas(0x08) FEOSConnectUnlinkAccountCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D1[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D2[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectUnlinkAccountCallbackInfo) == 0x000008, "Wrong alignment on FEOSConnectUnlinkAccountCallbackInfo");
static_assert(sizeof(FEOSConnectUnlinkAccountCallbackInfo) == 0x000038, "Wrong size on FEOSConnectUnlinkAccountCallbackInfo");
static_assert(offsetof(FEOSConnectUnlinkAccountCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSConnectUnlinkAccountCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSConnectUnlinkAccountCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSConnectUnlinkAccountCallbackInfo::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsUpdateModCallbackInfo
// 0x0088 (0x0088 - 0x0000)
struct FEOSModsUpdateModCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0001(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D3[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0030(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSModsUpdateModCallbackInfo) == 0x000008, "Wrong alignment on FEOSModsUpdateModCallbackInfo");
static_assert(sizeof(FEOSModsUpdateModCallbackInfo) == 0x000088, "Wrong size on FEOSModsUpdateModCallbackInfo");
static_assert(offsetof(FEOSModsUpdateModCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSModsUpdateModCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSModsUpdateModCallbackInfo, LocalUserId) == 0x000001, "Member 'FEOSModsUpdateModCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsUpdateModCallbackInfo, Mod) == 0x000030, "Member 'FEOSModsUpdateModCallbackInfo::Mod' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateReceivingVolumeCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSRTCAudioUpdateReceivingVolumeCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D4[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D5[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D6[0x4];                                     // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateReceivingVolumeCallbackInfo");
static_assert(sizeof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo) == 0x000050, "Wrong size on FEOSRTCAudioUpdateReceivingVolumeCallbackInfo");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSRTCAudioUpdateReceivingVolumeCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSRTCAudioUpdateReceivingVolumeCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo, RoomName) == 0x000038, "Member 'FEOSRTCAudioUpdateReceivingVolumeCallbackInfo::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeCallbackInfo, Volume) == 0x000048, "Member 'FEOSRTCAudioUpdateReceivingVolumeCallbackInfo::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAttributeData
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x08) FEOSLobbyAttributeData final
{
public:
	uint8                                         Pad_26D7[0x28];                                    // 0x0000(0x0028)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAttributeData) == 0x000008, "Wrong alignment on FEOSLobbyAttributeData");
static_assert(sizeof(FEOSLobbyAttributeData) == 0x000028, "Wrong size on FEOSLobbyAttributeData");

// ScriptStruct EOSCore.EOSLobbySearchSetParameterOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbySearchSetParameterOptions final
{
public:
	uint8                                         Pad_26D8[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyAttributeData                 Parameter;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEComparisonOp                             ComparisonOp;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26D9[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchSetParameterOptions) == 0x000008, "Wrong alignment on FEOSLobbySearchSetParameterOptions");
static_assert(sizeof(FEOSLobbySearchSetParameterOptions) == 0x000038, "Wrong size on FEOSLobbySearchSetParameterOptions");
static_assert(offsetof(FEOSLobbySearchSetParameterOptions, Parameter) == 0x000008, "Member 'FEOSLobbySearchSetParameterOptions::Parameter' has a wrong offset!");
static_assert(offsetof(FEOSLobbySearchSetParameterOptions, ComparisonOp) == 0x000030, "Member 'FEOSLobbySearchSetParameterOptions::ComparisonOp' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageWriteFileCallbackInfo
// 0x0050 (0x0050 - 0x0000)
struct FEOSPlayerDataStorageWriteFileCallbackInfo final
{
public:
	EOSResult                                     ResultCode;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26DA[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26DB[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSHPlayerDataStorageFileTransferRequest Handle;                                            // 0x0048(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageWriteFileCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageWriteFileCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageWriteFileCallbackInfo) == 0x000050, "Wrong size on FEOSPlayerDataStorageWriteFileCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileCallbackInfo, ResultCode) == 0x000000, "Member 'FEOSPlayerDataStorageWriteFileCallbackInfo::ResultCode' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileCallbackInfo, LocalUserId) == 0x000010, "Member 'FEOSPlayerDataStorageWriteFileCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileCallbackInfo, Filename) == 0x000038, "Member 'FEOSPlayerDataStorageWriteFileCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileCallbackInfo, Handle) == 0x000048, "Member 'FEOSPlayerDataStorageWriteFileCallbackInfo::Handle' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsPlayerStatInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSAchievementsPlayerStatInfo final
{
public:
	uint8                                         Pad_26DC[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         CurrentValue;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ThresholdValue;                                    // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsPlayerStatInfo) == 0x000008, "Wrong alignment on FEOSAchievementsPlayerStatInfo");
static_assert(sizeof(FEOSAchievementsPlayerStatInfo) == 0x000020, "Wrong size on FEOSAchievementsPlayerStatInfo");
static_assert(offsetof(FEOSAchievementsPlayerStatInfo, Name) == 0x000008, "Member 'FEOSAchievementsPlayerStatInfo::Name' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerStatInfo, CurrentValue) == 0x000018, "Member 'FEOSAchievementsPlayerStatInfo::CurrentValue' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerStatInfo, ThresholdValue) == 0x00001C, "Member 'FEOSAchievementsPlayerStatInfo::ThresholdValue' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationAddMemberAttributeOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyModificationAddMemberAttributeOptions final
{
public:
	uint8                                         Pad_26DD[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyAttributeData                 Attribute;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSELobbyAttributeVisibility                 Visibility;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26DE[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyModificationAddMemberAttributeOptions) == 0x000008, "Wrong alignment on FEOSLobbyModificationAddMemberAttributeOptions");
static_assert(sizeof(FEOSLobbyModificationAddMemberAttributeOptions) == 0x000038, "Wrong size on FEOSLobbyModificationAddMemberAttributeOptions");
static_assert(offsetof(FEOSLobbyModificationAddMemberAttributeOptions, Attribute) == 0x000008, "Member 'FEOSLobbyModificationAddMemberAttributeOptions::Attribute' has a wrong offset!");
static_assert(offsetof(FEOSLobbyModificationAddMemberAttributeOptions, Visibility) == 0x000030, "Member 'FEOSLobbyModificationAddMemberAttributeOptions::Visibility' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsCopyAchievementDefinitionV2ByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions final
{
public:
	int32                                         AchievementIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions) == 0x000004, "Wrong alignment on FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions");
static_assert(sizeof(FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions) == 0x000004, "Wrong size on FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions");
static_assert(offsetof(FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions, AchievementIndex) == 0x000000, "Member 'FEOSAchievementsCopyAchievementDefinitionV2ByIndexOptions::AchievementIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions final
{
public:
	class FString                                 AchievementId;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions) == 0x000008, "Wrong alignment on FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions");
static_assert(sizeof(FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions) == 0x000010, "Wrong size on FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions");
static_assert(offsetof(FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions, AchievementId) == 0x000000, "Member 'FEOSAchievementsCopyAchievementDefinitionV2ByAchievementIdOptions::AchievementId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCatalogRelease
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCatalogRelease final
{
public:
	uint8                                         Pad_26DF[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CompatibleAppIds;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E0[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CompatiblePlatforms;                               // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 ReleaseNote;                                       // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCatalogRelease) == 0x000008, "Wrong alignment on FEOSEcomCatalogRelease");
static_assert(sizeof(FEOSEcomCatalogRelease) == 0x000040, "Wrong size on FEOSEcomCatalogRelease");
static_assert(offsetof(FEOSEcomCatalogRelease, CompatibleAppIds) == 0x000008, "Member 'FEOSEcomCatalogRelease::CompatibleAppIds' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogRelease, CompatiblePlatforms) == 0x000020, "Member 'FEOSEcomCatalogRelease::CompatiblePlatforms' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogRelease, ReleaseNote) == 0x000030, "Member 'FEOSEcomCatalogRelease::ReleaseNote' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsQueryPlayerAchievementsOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSAchievementsQueryPlayerAchievementsOptions final
{
public:
	uint8                                         Pad_26E1[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E2[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsQueryPlayerAchievementsOptions) == 0x000004, "Wrong alignment on FEOSAchievementsQueryPlayerAchievementsOptions");
static_assert(sizeof(FEOSAchievementsQueryPlayerAchievementsOptions) == 0x000048, "Wrong size on FEOSAchievementsQueryPlayerAchievementsOptions");
static_assert(offsetof(FEOSAchievementsQueryPlayerAchievementsOptions, TargetUserId) == 0x000004, "Member 'FEOSAchievementsQueryPlayerAchievementsOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsQueryPlayerAchievementsOptions, LocalUserId) == 0x000025, "Member 'FEOSAchievementsQueryPlayerAchievementsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryOffersOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomQueryOffersOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E3[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OverrideCatalogNamespace;                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryOffersOptions) == 0x000008, "Wrong alignment on FEOSEcomQueryOffersOptions");
static_assert(sizeof(FEOSEcomQueryOffersOptions) == 0x000038, "Wrong size on FEOSEcomQueryOffersOptions");
static_assert(offsetof(FEOSEcomQueryOffersOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomQueryOffersOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOffersOptions, OverrideCatalogNamespace) == 0x000028, "Member 'FEOSEcomQueryOffersOptions::OverrideCatalogNamespace' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsPlayerAchievement
// 0x0088 (0x0088 - 0x0000)
struct FEOSAchievementsPlayerAchievement final
{
public:
	uint8                                         Pad_26E4[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AchievementId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Progress;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 UnlockTime;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StatInfoCount;                                     // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E6[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSAchievementsPlayerStatInfo> StatInfo;                                          // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Description;                                       // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 IconURL;                                           // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 FlavorText;                                        // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsPlayerAchievement) == 0x000008, "Wrong alignment on FEOSAchievementsPlayerAchievement");
static_assert(sizeof(FEOSAchievementsPlayerAchievement) == 0x000088, "Wrong size on FEOSAchievementsPlayerAchievement");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, AchievementId) == 0x000008, "Member 'FEOSAchievementsPlayerAchievement::AchievementId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, Progress) == 0x000018, "Member 'FEOSAchievementsPlayerAchievement::Progress' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, UnlockTime) == 0x000020, "Member 'FEOSAchievementsPlayerAchievement::UnlockTime' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, StatInfoCount) == 0x000030, "Member 'FEOSAchievementsPlayerAchievement::StatInfoCount' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, StatInfo) == 0x000038, "Member 'FEOSAchievementsPlayerAchievement::StatInfo' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, DisplayName) == 0x000048, "Member 'FEOSAchievementsPlayerAchievement::DisplayName' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, Description) == 0x000058, "Member 'FEOSAchievementsPlayerAchievement::Description' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, IconURL) == 0x000068, "Member 'FEOSAchievementsPlayerAchievement::IconURL' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsPlayerAchievement, FlavorText) == 0x000078, "Member 'FEOSAchievementsPlayerAchievement::FlavorText' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsGetPlayerAchievementCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSAchievementsGetPlayerAchievementCountOptions final
{
public:
	uint8                                         Pad_26E7[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26E8[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsGetPlayerAchievementCountOptions) == 0x000004, "Wrong alignment on FEOSAchievementsGetPlayerAchievementCountOptions");
static_assert(sizeof(FEOSAchievementsGetPlayerAchievementCountOptions) == 0x000028, "Wrong size on FEOSAchievementsGetPlayerAchievementCountOptions");
static_assert(offsetof(FEOSAchievementsGetPlayerAchievementCountOptions, UserId) == 0x000004, "Member 'FEOSAchievementsGetPlayerAchievementCountOptions::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsCopyPlayerAchievementByAchievementIdOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions final
{
public:
	uint8                                         Pad_26E9[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26EA[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AchievementId;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0038(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26EB[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions) == 0x000008, "Wrong alignment on FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions");
static_assert(sizeof(FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions) == 0x000060, "Wrong size on FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions, TargetUserId) == 0x000004, "Member 'FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions, AchievementId) == 0x000028, "Member 'FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions::AchievementId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions, LocalUserId) == 0x000038, "Member 'FEOSAchievementsCopyPlayerAchievementByAchievementIdOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSetAudioOutputSettingsOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSSetAudioOutputSettingsOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26EC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeviceID;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26ED[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSetAudioOutputSettingsOptions) == 0x000008, "Wrong alignment on FEOSSetAudioOutputSettingsOptions");
static_assert(sizeof(FEOSSetAudioOutputSettingsOptions) == 0x000040, "Wrong size on FEOSSetAudioOutputSettingsOptions");
static_assert(offsetof(FEOSSetAudioOutputSettingsOptions, LocalUserId) == 0x000000, "Member 'FEOSSetAudioOutputSettingsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSetAudioOutputSettingsOptions, DeviceID) == 0x000028, "Member 'FEOSSetAudioOutputSettingsOptions::DeviceID' has a wrong offset!");
static_assert(offsetof(FEOSSetAudioOutputSettingsOptions, Volume) == 0x000038, "Member 'FEOSSetAudioOutputSettingsOptions::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsUnlockAchievementsOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAchievementsUnlockAchievementsOptions final
{
public:
	uint8                                         Pad_26EE[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26EF[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         AchievementIds;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAchievementsUnlockAchievementsOptions) == 0x000008, "Wrong alignment on FEOSAchievementsUnlockAchievementsOptions");
static_assert(sizeof(FEOSAchievementsUnlockAchievementsOptions) == 0x000038, "Wrong size on FEOSAchievementsUnlockAchievementsOptions");
static_assert(offsetof(FEOSAchievementsUnlockAchievementsOptions, UserId) == 0x000004, "Member 'FEOSAchievementsUnlockAchievementsOptions::UserId' has a wrong offset!");
static_assert(offsetof(FEOSAchievementsUnlockAchievementsOptions, AchievementIds) == 0x000028, "Member 'FEOSAchievementsUnlockAchievementsOptions::AchievementIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSAchievementsAddNotifyAchievementsUnlockedV2Options
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSAchievementsAddNotifyAchievementsUnlockedV2Options final
{
public:
	uint8                                         Pad_26F0[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAchievementsAddNotifyAchievementsUnlockedV2Options) == 0x000004, "Wrong alignment on FEOSAchievementsAddNotifyAchievementsUnlockedV2Options");
static_assert(sizeof(FEOSAchievementsAddNotifyAchievementsUnlockedV2Options) == 0x000004, "Wrong size on FEOSAchievementsAddNotifyAchievementsUnlockedV2Options");

// ScriptStruct EOSCore.EOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions final
{
public:
	uint8                                         Pad_26F1[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions");
static_assert(sizeof(FEOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientAddNotifyClientIntegrityViolatedOptions");

// ScriptStruct EOSCore.EOSAntiCheatClientAddNotifyMessageToServerOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientAddNotifyMessageToServerOptions final
{
public:
	uint8                                         Pad_26F2[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientAddNotifyMessageToServerOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientAddNotifyMessageToServerOptions");
static_assert(sizeof(FEOSAntiCheatClientAddNotifyMessageToServerOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientAddNotifyMessageToServerOptions");

// ScriptStruct EOSCore.EOSAntiCheatClientAddNotifyPeerActionRequiredOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientAddNotifyPeerActionRequiredOptions final
{
public:
	uint8                                         Pad_26F3[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientAddNotifyPeerActionRequiredOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientAddNotifyPeerActionRequiredOptions");
static_assert(sizeof(FEOSAntiCheatClientAddNotifyPeerActionRequiredOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientAddNotifyPeerActionRequiredOptions");

// ScriptStruct EOSCore.EOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions final
{
public:
	uint8                                         Pad_26F4[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions");
static_assert(sizeof(FEOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientAddNotifyPeerAuthStatusChangedOptions");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions final
{
public:
	uint8                                         Pad_26F5[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26F6[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions) == 0x000038, "Wrong size on FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions, UserId) == 0x000004, "Member 'FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions::UserId' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions, StatName) == 0x000028, "Member 'FEOSLeaderboardsCopyLeaderboardUserScoreByUserIdOptions::StatName' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientBeginSessionOptions
// 0x0022 (0x0022 - 0x0000)
struct FEOSAntiCheatClientBeginSessionOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatClientMode                      Mode;                                              // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientBeginSessionOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientBeginSessionOptions");
static_assert(sizeof(FEOSAntiCheatClientBeginSessionOptions) == 0x000022, "Wrong size on FEOSAntiCheatClientBeginSessionOptions");
static_assert(offsetof(FEOSAntiCheatClientBeginSessionOptions, LocalUserId) == 0x000000, "Member 'FEOSAntiCheatClientBeginSessionOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientBeginSessionOptions, Mode) == 0x000021, "Member 'FEOSAntiCheatClientBeginSessionOptions::Mode' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateSendingVolumeOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSRTCAudioUpdateSendingVolumeOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26F7[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26F8[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCAudioUpdateSendingVolumeOptions) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateSendingVolumeOptions");
static_assert(sizeof(FEOSRTCAudioUpdateSendingVolumeOptions) == 0x000040, "Wrong size on FEOSRTCAudioUpdateSendingVolumeOptions");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeOptions, LocalUserId) == 0x000000, "Member 'FEOSRTCAudioUpdateSendingVolumeOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeOptions, RoomName) == 0x000028, "Member 'FEOSRTCAudioUpdateSendingVolumeOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateSendingVolumeOptions, Volume) == 0x000038, "Member 'FEOSRTCAudioUpdateSendingVolumeOptions::Volume' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetItemReleaseCountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomGetItemReleaseCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26F9[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetItemReleaseCountOptions) == 0x000008, "Wrong alignment on FEOSEcomGetItemReleaseCountOptions");
static_assert(sizeof(FEOSEcomGetItemReleaseCountOptions) == 0x000038, "Wrong size on FEOSEcomGetItemReleaseCountOptions");
static_assert(offsetof(FEOSEcomGetItemReleaseCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetItemReleaseCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomGetItemReleaseCountOptions, ItemId) == 0x000028, "Member 'FEOSEcomGetItemReleaseCountOptions::ItemId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientEndSessionOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatClientEndSessionOptions final
{
public:
	uint8                                         Pad_26FA[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientEndSessionOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatClientEndSessionOptions");
static_assert(sizeof(FEOSAntiCheatClientEndSessionOptions) == 0x000001, "Wrong size on FEOSAntiCheatClientEndSessionOptions");

// ScriptStruct EOSCore.EOSReportsSendPlayerBehaviorReportOptions
// 0x0068 (0x0068 - 0x0000)
struct FEOSReportsSendPlayerBehaviorReportOptions final
{
public:
	uint8                                         Pad_26FB[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      ReporterUserId;                                    // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ReportedUserId;                                    // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEPlayerReportsCategory                    ReportCategory;                                    // 0x0046(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26FC[0x1];                                     // 0x0047(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Message;                                           // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Context;                                           // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSReportsSendPlayerBehaviorReportOptions) == 0x000008, "Wrong alignment on FEOSReportsSendPlayerBehaviorReportOptions");
static_assert(sizeof(FEOSReportsSendPlayerBehaviorReportOptions) == 0x000068, "Wrong size on FEOSReportsSendPlayerBehaviorReportOptions");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportOptions, ReporterUserId) == 0x000004, "Member 'FEOSReportsSendPlayerBehaviorReportOptions::ReporterUserId' has a wrong offset!");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportOptions, ReportedUserId) == 0x000025, "Member 'FEOSReportsSendPlayerBehaviorReportOptions::ReportedUserId' has a wrong offset!");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportOptions, ReportCategory) == 0x000046, "Member 'FEOSReportsSendPlayerBehaviorReportOptions::ReportCategory' has a wrong offset!");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportOptions, Message) == 0x000048, "Member 'FEOSReportsSendPlayerBehaviorReportOptions::Message' has a wrong offset!");
static_assert(offsetof(FEOSReportsSendPlayerBehaviorReportOptions, Context) == 0x000058, "Member 'FEOSReportsSendPlayerBehaviorReportOptions::Context' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientPollStatusOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSAntiCheatClientPollStatusOptions final
{
public:
	int32                                         OutMessageLength;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientPollStatusOptions) == 0x000004, "Wrong alignment on FEOSAntiCheatClientPollStatusOptions");
static_assert(sizeof(FEOSAntiCheatClientPollStatusOptions) == 0x000004, "Wrong size on FEOSAntiCheatClientPollStatusOptions");
static_assert(offsetof(FEOSAntiCheatClientPollStatusOptions, OutMessageLength) == 0x000000, "Member 'FEOSAntiCheatClientPollStatusOptions::OutMessageLength' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientAddExternalIntegrityCatalogOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAntiCheatClientAddExternalIntegrityCatalogOptions final
{
public:
	class FString                                 PathToBinFile;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientAddExternalIntegrityCatalogOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientAddExternalIntegrityCatalogOptions");
static_assert(sizeof(FEOSAntiCheatClientAddExternalIntegrityCatalogOptions) == 0x000010, "Wrong size on FEOSAntiCheatClientAddExternalIntegrityCatalogOptions");
static_assert(offsetof(FEOSAntiCheatClientAddExternalIntegrityCatalogOptions, PathToBinFile) == 0x000000, "Member 'FEOSAntiCheatClientAddExternalIntegrityCatalogOptions::PathToBinFile' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientReceiveMessageFromServerOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAntiCheatClientReceiveMessageFromServerOptions final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientReceiveMessageFromServerOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientReceiveMessageFromServerOptions");
static_assert(sizeof(FEOSAntiCheatClientReceiveMessageFromServerOptions) == 0x000010, "Wrong size on FEOSAntiCheatClientReceiveMessageFromServerOptions");
static_assert(offsetof(FEOSAntiCheatClientReceiveMessageFromServerOptions, Data) == 0x000000, "Member 'FEOSAntiCheatClientReceiveMessageFromServerOptions::Data' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetOfferImageInfoCountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomGetOfferImageInfoCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26FD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetOfferImageInfoCountOptions) == 0x000008, "Wrong alignment on FEOSEcomGetOfferImageInfoCountOptions");
static_assert(sizeof(FEOSEcomGetOfferImageInfoCountOptions) == 0x000038, "Wrong size on FEOSEcomGetOfferImageInfoCountOptions");
static_assert(offsetof(FEOSEcomGetOfferImageInfoCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetOfferImageInfoCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomGetOfferImageInfoCountOptions, OfferId) == 0x000028, "Member 'FEOSEcomGetOfferImageInfoCountOptions::OfferId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientGetProtectMessageOutputLengthOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSAntiCheatClientGetProtectMessageOutputLengthOptions final
{
public:
	int32                                         DataLengthBytes;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientGetProtectMessageOutputLengthOptions) == 0x000004, "Wrong alignment on FEOSAntiCheatClientGetProtectMessageOutputLengthOptions");
static_assert(sizeof(FEOSAntiCheatClientGetProtectMessageOutputLengthOptions) == 0x000004, "Wrong size on FEOSAntiCheatClientGetProtectMessageOutputLengthOptions");
static_assert(offsetof(FEOSAntiCheatClientGetProtectMessageOutputLengthOptions, DataLengthBytes) == 0x000000, "Member 'FEOSAntiCheatClientGetProtectMessageOutputLengthOptions::DataLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientProtectMessageOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatClientProtectMessageOptions final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         OutBufferSizeBytes;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26FE[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientProtectMessageOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientProtectMessageOptions");
static_assert(sizeof(FEOSAntiCheatClientProtectMessageOptions) == 0x000018, "Wrong size on FEOSAntiCheatClientProtectMessageOptions");
static_assert(offsetof(FEOSAntiCheatClientProtectMessageOptions, Data) == 0x000000, "Member 'FEOSAntiCheatClientProtectMessageOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientProtectMessageOptions, OutBufferSizeBytes) == 0x000010, "Member 'FEOSAntiCheatClientProtectMessageOptions::OutBufferSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientUnprotectMessageOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatClientUnprotectMessageOptions final
{
public:
	TArray<uint8>                                 Data;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         OutBufferSizeBytes;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_26FF[0x4];                                     // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientUnprotectMessageOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientUnprotectMessageOptions");
static_assert(sizeof(FEOSAntiCheatClientUnprotectMessageOptions) == 0x000018, "Wrong size on FEOSAntiCheatClientUnprotectMessageOptions");
static_assert(offsetof(FEOSAntiCheatClientUnprotectMessageOptions, Data) == 0x000000, "Member 'FEOSAntiCheatClientUnprotectMessageOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientUnprotectMessageOptions, OutBufferSizeBytes) == 0x000010, "Member 'FEOSAntiCheatClientUnprotectMessageOptions::OutBufferSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomEntitlement
// 0x0050 (0x0050 - 0x0000)
struct FEOSEcomEntitlement final
{
public:
	uint8                                         Pad_2700[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEcomEntitlementName                EntitlementName;                                   // 0x0008(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FEOSEcomEntitlementId                  EntitlementId;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 CatalogItemId;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ServerIndex;                                       // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRedeemed;                                         // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2701[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EndTimestamp;                                      // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomEntitlement) == 0x000008, "Wrong alignment on FEOSEcomEntitlement");
static_assert(sizeof(FEOSEcomEntitlement) == 0x000050, "Wrong size on FEOSEcomEntitlement");
static_assert(offsetof(FEOSEcomEntitlement, EntitlementName) == 0x000008, "Member 'FEOSEcomEntitlement::EntitlementName' has a wrong offset!");
static_assert(offsetof(FEOSEcomEntitlement, EntitlementId) == 0x000018, "Member 'FEOSEcomEntitlement::EntitlementId' has a wrong offset!");
static_assert(offsetof(FEOSEcomEntitlement, CatalogItemId) == 0x000028, "Member 'FEOSEcomEntitlement::CatalogItemId' has a wrong offset!");
static_assert(offsetof(FEOSEcomEntitlement, ServerIndex) == 0x000038, "Member 'FEOSEcomEntitlement::ServerIndex' has a wrong offset!");
static_assert(offsetof(FEOSEcomEntitlement, bRedeemed) == 0x00003C, "Member 'FEOSEcomEntitlement::bRedeemed' has a wrong offset!");
static_assert(offsetof(FEOSEcomEntitlement, EndTimestamp) == 0x000040, "Member 'FEOSEcomEntitlement::EndTimestamp' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientRegisterPeerOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSAntiCheatClientRegisterPeerOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        PeerHandle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientType                ClientType;                                        // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientPlatform            ClientPlatform;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2702[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AuthenticationTimeout;                             // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2703[0x10];                                    // 0x0010(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IpAddress;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      PeerProductUserId;                                 // 0x0030(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2704[0x7];                                     // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatClientRegisterPeerOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientRegisterPeerOptions");
static_assert(sizeof(FEOSAntiCheatClientRegisterPeerOptions) == 0x000058, "Wrong size on FEOSAntiCheatClientRegisterPeerOptions");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, PeerHandle) == 0x000000, "Member 'FEOSAntiCheatClientRegisterPeerOptions::PeerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, ClientType) == 0x000008, "Member 'FEOSAntiCheatClientRegisterPeerOptions::ClientType' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, ClientPlatform) == 0x000009, "Member 'FEOSAntiCheatClientRegisterPeerOptions::ClientPlatform' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, AuthenticationTimeout) == 0x00000C, "Member 'FEOSAntiCheatClientRegisterPeerOptions::AuthenticationTimeout' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, IpAddress) == 0x000020, "Member 'FEOSAntiCheatClientRegisterPeerOptions::IpAddress' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientRegisterPeerOptions, PeerProductUserId) == 0x000030, "Member 'FEOSAntiCheatClientRegisterPeerOptions::PeerProductUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsSendInviteOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSFriendsSendInviteOptions final
{
public:
	uint8                                         Pad_2705[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2706[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsSendInviteOptions) == 0x000004, "Wrong alignment on FEOSFriendsSendInviteOptions");
static_assert(sizeof(FEOSFriendsSendInviteOptions) == 0x000048, "Wrong size on FEOSFriendsSendInviteOptions");
static_assert(offsetof(FEOSFriendsSendInviteOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsSendInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsSendInviteOptions, TargetUserId) == 0x000025, "Member 'FEOSFriendsSendInviteOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientUnregisterPeerOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSAntiCheatClientUnregisterPeerOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        PeerHandle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientUnregisterPeerOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientUnregisterPeerOptions");
static_assert(sizeof(FEOSAntiCheatClientUnregisterPeerOptions) == 0x000008, "Wrong size on FEOSAntiCheatClientUnregisterPeerOptions");
static_assert(offsetof(FEOSAntiCheatClientUnregisterPeerOptions, PeerHandle) == 0x000000, "Member 'FEOSAntiCheatClientUnregisterPeerOptions::PeerHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSUnregisterPlatformAudioUserOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSUnregisterPlatformAudioUserOptions final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUnregisterPlatformAudioUserOptions) == 0x000008, "Wrong alignment on FEOSUnregisterPlatformAudioUserOptions");
static_assert(sizeof(FEOSUnregisterPlatformAudioUserOptions) == 0x000010, "Wrong size on FEOSUnregisterPlatformAudioUserOptions");
static_assert(offsetof(FEOSUnregisterPlatformAudioUserOptions, UserId) == 0x000000, "Member 'FEOSUnregisterPlatformAudioUserOptions::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatClientReceiveMessageFromPeerOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatClientReceiveMessageFromPeerOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        PeerHandle;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatClientReceiveMessageFromPeerOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatClientReceiveMessageFromPeerOptions");
static_assert(sizeof(FEOSAntiCheatClientReceiveMessageFromPeerOptions) == 0x000018, "Wrong size on FEOSAntiCheatClientReceiveMessageFromPeerOptions");
static_assert(offsetof(FEOSAntiCheatClientReceiveMessageFromPeerOptions, PeerHandle) == 0x000000, "Member 'FEOSAntiCheatClientReceiveMessageFromPeerOptions::PeerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatClientReceiveMessageFromPeerOptions, Data) == 0x000008, "Member 'FEOSAntiCheatClientReceiveMessageFromPeerOptions::Data' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerAddNotifyMessageToClientOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatServerAddNotifyMessageToClientOptions final
{
public:
	uint8                                         Pad_2707[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerAddNotifyMessageToClientOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatServerAddNotifyMessageToClientOptions");
static_assert(sizeof(FEOSAntiCheatServerAddNotifyMessageToClientOptions) == 0x000001, "Wrong size on FEOSAntiCheatServerAddNotifyMessageToClientOptions");

// ScriptStruct EOSCore.EOSAntiCheatServerAddNotifyClientActionRequiredOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatServerAddNotifyClientActionRequiredOptions final
{
public:
	uint8                                         Pad_2708[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerAddNotifyClientActionRequiredOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatServerAddNotifyClientActionRequiredOptions");
static_assert(sizeof(FEOSAntiCheatServerAddNotifyClientActionRequiredOptions) == 0x000001, "Wrong size on FEOSAntiCheatServerAddNotifyClientActionRequiredOptions");

// ScriptStruct EOSCore.EOSLobbyAttribute
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyAttribute final
{
public:
	uint8                                         Pad_2709[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyAttributeData                 Data;                                              // 0x0008(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSELobbyAttributeVisibility                 Visbility;                                         // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_270A[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAttribute) == 0x000008, "Wrong alignment on FEOSLobbyAttribute");
static_assert(sizeof(FEOSLobbyAttribute) == 0x000038, "Wrong size on FEOSLobbyAttribute");
static_assert(offsetof(FEOSLobbyAttribute, Data) == 0x000008, "Member 'FEOSLobbyAttribute::Data' has a wrong offset!");
static_assert(offsetof(FEOSLobbyAttribute, Visbility) == 0x000030, "Member 'FEOSLobbyAttribute::Visbility' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions final
{
public:
	uint8                                         Pad_270B[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions");
static_assert(sizeof(FEOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions) == 0x000001, "Wrong size on FEOSAntiCheatServerAddNotifyClientAuthStatusChangedOptions");

// ScriptStruct EOSCore.EOSAntiCheatServerBeginSessionOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSAntiCheatServerBeginSessionOptions final
{
public:
	int32                                         RegisterTimeoutSeconds;                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_270C[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerName;                                        // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEnableGameplayData;                               // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0019(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_270D[0x6];                                     // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerBeginSessionOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerBeginSessionOptions");
static_assert(sizeof(FEOSAntiCheatServerBeginSessionOptions) == 0x000040, "Wrong size on FEOSAntiCheatServerBeginSessionOptions");
static_assert(offsetof(FEOSAntiCheatServerBeginSessionOptions, RegisterTimeoutSeconds) == 0x000000, "Member 'FEOSAntiCheatServerBeginSessionOptions::RegisterTimeoutSeconds' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerBeginSessionOptions, ServerName) == 0x000008, "Member 'FEOSAntiCheatServerBeginSessionOptions::ServerName' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerBeginSessionOptions, bEnableGameplayData) == 0x000018, "Member 'FEOSAntiCheatServerBeginSessionOptions::bEnableGameplayData' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerBeginSessionOptions, LocalUserId) == 0x000019, "Member 'FEOSAntiCheatServerBeginSessionOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerEndSessionOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAntiCheatServerEndSessionOptions final
{
public:
	uint8                                         Pad_270E[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerEndSessionOptions) == 0x000001, "Wrong alignment on FEOSAntiCheatServerEndSessionOptions");
static_assert(sizeof(FEOSAntiCheatServerEndSessionOptions) == 0x000001, "Wrong size on FEOSAntiCheatServerEndSessionOptions");

// ScriptStruct EOSCore.EOSEcomQueryEntitlementsOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomQueryEntitlementsOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_270F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSEcomEntitlementName>        EntitlementNames;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bIncludeRedeemed;                                  // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2710[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomQueryEntitlementsOptions) == 0x000008, "Wrong alignment on FEOSEcomQueryEntitlementsOptions");
static_assert(sizeof(FEOSEcomQueryEntitlementsOptions) == 0x000040, "Wrong size on FEOSEcomQueryEntitlementsOptions");
static_assert(offsetof(FEOSEcomQueryEntitlementsOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomQueryEntitlementsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementsOptions, EntitlementNames) == 0x000028, "Member 'FEOSEcomQueryEntitlementsOptions::EntitlementNames' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementsOptions, bIncludeRedeemed) == 0x000038, "Member 'FEOSEcomQueryEntitlementsOptions::bIncludeRedeemed' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsQueryLeaderboardDefinitionsOptions
// 0x0050 (0x0050 - 0x0000)
struct FEOSLeaderboardsQueryLeaderboardDefinitionsOptions final
{
public:
	uint8                                         Pad_2711[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StartTime;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0028(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2712[0x7];                                     // 0x0049(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsQueryLeaderboardDefinitionsOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsQueryLeaderboardDefinitionsOptions");
static_assert(sizeof(FEOSLeaderboardsQueryLeaderboardDefinitionsOptions) == 0x000050, "Wrong size on FEOSLeaderboardsQueryLeaderboardDefinitionsOptions");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardDefinitionsOptions, StartTime) == 0x000008, "Member 'FEOSLeaderboardsQueryLeaderboardDefinitionsOptions::StartTime' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardDefinitionsOptions, EndTime) == 0x000018, "Member 'FEOSLeaderboardsQueryLeaderboardDefinitionsOptions::EndTime' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardDefinitionsOptions, LocalUserId) == 0x000028, "Member 'FEOSLeaderboardsQueryLeaderboardDefinitionsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerUnregisterClientOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSAntiCheatServerUnregisterClientOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatServerUnregisterClientOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerUnregisterClientOptions");
static_assert(sizeof(FEOSAntiCheatServerUnregisterClientOptions) == 0x000008, "Wrong size on FEOSAntiCheatServerUnregisterClientOptions");
static_assert(offsetof(FEOSAntiCheatServerUnregisterClientOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerUnregisterClientOptions::ClientHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSAudioOutputDeviceInfo
// 0x0028 (0x0028 - 0x0000)
struct FEOSAudioOutputDeviceInfo final
{
public:
	bool                                          bDefaultDevice;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2713[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeviceID;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAudioOutputDeviceInfo) == 0x000008, "Wrong alignment on FEOSAudioOutputDeviceInfo");
static_assert(sizeof(FEOSAudioOutputDeviceInfo) == 0x000028, "Wrong size on FEOSAudioOutputDeviceInfo");
static_assert(offsetof(FEOSAudioOutputDeviceInfo, bDefaultDevice) == 0x000000, "Member 'FEOSAudioOutputDeviceInfo::bDefaultDevice' has a wrong offset!");
static_assert(offsetof(FEOSAudioOutputDeviceInfo, DeviceID) == 0x000008, "Member 'FEOSAudioOutputDeviceInfo::DeviceID' has a wrong offset!");
static_assert(offsetof(FEOSAudioOutputDeviceInfo, DeviceName) == 0x000018, "Member 'FEOSAudioOutputDeviceInfo::DeviceName' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerReceiveMessageFromClientOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatServerReceiveMessageFromClientOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	TArray<uint8>                                 Data;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatServerReceiveMessageFromClientOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerReceiveMessageFromClientOptions");
static_assert(sizeof(FEOSAntiCheatServerReceiveMessageFromClientOptions) == 0x000018, "Wrong size on FEOSAntiCheatServerReceiveMessageFromClientOptions");
static_assert(offsetof(FEOSAntiCheatServerReceiveMessageFromClientOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerReceiveMessageFromClientOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerReceiveMessageFromClientOptions, Data) == 0x000008, "Member 'FEOSAntiCheatServerReceiveMessageFromClientOptions::Data' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerGetProtectMessageOutputLengthOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSAntiCheatServerGetProtectMessageOutputLengthOptions final
{
public:
	int32                                         DataLengthBytes;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatServerGetProtectMessageOutputLengthOptions) == 0x000004, "Wrong alignment on FEOSAntiCheatServerGetProtectMessageOutputLengthOptions");
static_assert(sizeof(FEOSAntiCheatServerGetProtectMessageOutputLengthOptions) == 0x000004, "Wrong size on FEOSAntiCheatServerGetProtectMessageOutputLengthOptions");
static_assert(offsetof(FEOSAntiCheatServerGetProtectMessageOutputLengthOptions, DataLengthBytes) == 0x000000, "Member 'FEOSAntiCheatServerGetProtectMessageOutputLengthOptions::DataLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatServerUnprotectMessageOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSAntiCheatServerUnprotectMessageOptions final
{
public:
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         DataLengthBytes;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2714[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Data;                                              // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         OutBufferSizeBytes;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2715[0x4];                                     // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatServerUnprotectMessageOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatServerUnprotectMessageOptions");
static_assert(sizeof(FEOSAntiCheatServerUnprotectMessageOptions) == 0x000028, "Wrong size on FEOSAntiCheatServerUnprotectMessageOptions");
static_assert(offsetof(FEOSAntiCheatServerUnprotectMessageOptions, ClientHandle) == 0x000000, "Member 'FEOSAntiCheatServerUnprotectMessageOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerUnprotectMessageOptions, DataLengthBytes) == 0x000008, "Member 'FEOSAntiCheatServerUnprotectMessageOptions::DataLengthBytes' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerUnprotectMessageOptions, Data) == 0x000010, "Member 'FEOSAntiCheatServerUnprotectMessageOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatServerUnprotectMessageOptions, OutBufferSizeBytes) == 0x000020, "Member 'FEOSAntiCheatServerUnprotectMessageOptions::OutBufferSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthToken
// 0x00B0 (0x00B0 - 0x0000)
struct FEOSAuthToken final
{
public:
	class FString                                 App;                                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientId;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      AccountId;                                         // 0x0020(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2716[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccessToken;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExpiresIn;                                         // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ExpiresAt;                                         // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSEAuthTokenType                             AuthType;                                          // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2717[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RefreshToken;                                      // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RefreshExpiresIn;                                  // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RefreshExpiresAt;                                  // 0x00A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthToken) == 0x000008, "Wrong alignment on FEOSAuthToken");
static_assert(sizeof(FEOSAuthToken) == 0x0000B0, "Wrong size on FEOSAuthToken");
static_assert(offsetof(FEOSAuthToken, App) == 0x000000, "Member 'FEOSAuthToken::App' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, ClientId) == 0x000010, "Member 'FEOSAuthToken::ClientId' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, AccountId) == 0x000020, "Member 'FEOSAuthToken::AccountId' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, AccessToken) == 0x000048, "Member 'FEOSAuthToken::AccessToken' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, ExpiresIn) == 0x000058, "Member 'FEOSAuthToken::ExpiresIn' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, ExpiresAt) == 0x000068, "Member 'FEOSAuthToken::ExpiresAt' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, AuthType) == 0x000078, "Member 'FEOSAuthToken::AuthType' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, RefreshToken) == 0x000080, "Member 'FEOSAuthToken::RefreshToken' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, RefreshExpiresIn) == 0x000090, "Member 'FEOSAuthToken::RefreshExpiresIn' has a wrong offset!");
static_assert(offsetof(FEOSAuthToken, RefreshExpiresAt) == 0x0000A0, "Member 'FEOSAuthToken::RefreshExpiresAt' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyInviteAcceptedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSLobbyAddNotifyLobbyInviteAcceptedOptions final
{
public:
	uint8                                         Pad_2718[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyInviteAcceptedOptions) == 0x000001, "Wrong alignment on FEOSLobbyAddNotifyLobbyInviteAcceptedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyInviteAcceptedOptions) == 0x000001, "Wrong size on FEOSLobbyAddNotifyLobbyInviteAcceptedOptions");

// ScriptStruct EOSCore.EOSAuthCredentials
// 0x0030 (0x0030 - 0x0000)
struct FEOSAuthCredentials final
{
public:
	uint8                                         Pad_2719[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ID;                                                // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Token;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSLoginCredentialType                       Type;                                              // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalCredentialType                   ExternalType;                                      // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_271A[0x6];                                     // 0x002A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthCredentials) == 0x000008, "Wrong alignment on FEOSAuthCredentials");
static_assert(sizeof(FEOSAuthCredentials) == 0x000030, "Wrong size on FEOSAuthCredentials");
static_assert(offsetof(FEOSAuthCredentials, ID) == 0x000008, "Member 'FEOSAuthCredentials::ID' has a wrong offset!");
static_assert(offsetof(FEOSAuthCredentials, Token) == 0x000018, "Member 'FEOSAuthCredentials::Token' has a wrong offset!");
static_assert(offsetof(FEOSAuthCredentials, Type) == 0x000028, "Member 'FEOSAuthCredentials::Type' has a wrong offset!");
static_assert(offsetof(FEOSAuthCredentials, ExternalType) == 0x000029, "Member 'FEOSAuthCredentials::ExternalType' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchSetTargetUserIdOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLobbySearchSetTargetUserIdOptions final
{
public:
	uint8                                         Pad_271B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_271C[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchSetTargetUserIdOptions) == 0x000004, "Wrong alignment on FEOSLobbySearchSetTargetUserIdOptions");
static_assert(sizeof(FEOSLobbySearchSetTargetUserIdOptions) == 0x000028, "Wrong size on FEOSLobbySearchSetTargetUserIdOptions");
static_assert(offsetof(FEOSLobbySearchSetTargetUserIdOptions, TargetUserId) == 0x000004, "Member 'FEOSLobbySearchSetTargetUserIdOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLoginOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSAuthLoginOptions final
{
public:
	uint8                                         Pad_271D[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAuthCredentials                    Credentials;                                       // 0x0008(0x0030)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         ScopeFlags;                                        // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_271E[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLoginOptions) == 0x000008, "Wrong alignment on FEOSAuthLoginOptions");
static_assert(sizeof(FEOSAuthLoginOptions) == 0x000040, "Wrong size on FEOSAuthLoginOptions");
static_assert(offsetof(FEOSAuthLoginOptions, Credentials) == 0x000008, "Member 'FEOSAuthLoginOptions::Credentials' has a wrong offset!");
static_assert(offsetof(FEOSAuthLoginOptions, ScopeFlags) == 0x000038, "Member 'FEOSAuthLoginOptions::ScopeFlags' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLogoutOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSAuthLogoutOptions final
{
public:
	uint8                                         Pad_271F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2720[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLogoutOptions) == 0x000004, "Wrong alignment on FEOSAuthLogoutOptions");
static_assert(sizeof(FEOSAuthLogoutOptions) == 0x000028, "Wrong size on FEOSAuthLogoutOptions");
static_assert(offsetof(FEOSAuthLogoutOptions, LocalUserId) == 0x000004, "Member 'FEOSAuthLogoutOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthLinkAccountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAuthLinkAccountOptions final
{
public:
	uint8                                         Pad_2721[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSELinkAccountFlags                         LinkAccountFlags;                                  // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2722[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContinuanceToken                      ContinuanceToken;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2723[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthLinkAccountOptions) == 0x000008, "Wrong alignment on FEOSAuthLinkAccountOptions");
static_assert(sizeof(FEOSAuthLinkAccountOptions) == 0x000038, "Wrong size on FEOSAuthLinkAccountOptions");
static_assert(offsetof(FEOSAuthLinkAccountOptions, LinkAccountFlags) == 0x000004, "Member 'FEOSAuthLinkAccountOptions::LinkAccountFlags' has a wrong offset!");
static_assert(offsetof(FEOSAuthLinkAccountOptions, ContinuanceToken) == 0x000008, "Member 'FEOSAuthLinkAccountOptions::ContinuanceToken' has a wrong offset!");
static_assert(offsetof(FEOSAuthLinkAccountOptions, LocalUserId) == 0x000010, "Member 'FEOSAuthLinkAccountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsGetAttributeCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbyDetailsGetAttributeCountOptions final
{
public:
	uint8                                         Pad_2724[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsGetAttributeCountOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsGetAttributeCountOptions");
static_assert(sizeof(FEOSLobbyDetailsGetAttributeCountOptions) == 0x000004, "Wrong size on FEOSLobbyDetailsGetAttributeCountOptions");

// ScriptStruct EOSCore.EOSTitleStorageFileMetadata
// 0x0028 (0x0028 - 0x0000)
struct FEOSTitleStorageFileMetadata final
{
public:
	uint8                                         Pad_2725[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FileSizeBytes;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MD5Hash;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageFileMetadata) == 0x000008, "Wrong alignment on FEOSTitleStorageFileMetadata");
static_assert(sizeof(FEOSTitleStorageFileMetadata) == 0x000028, "Wrong size on FEOSTitleStorageFileMetadata");
static_assert(offsetof(FEOSTitleStorageFileMetadata, FileSizeBytes) == 0x000004, "Member 'FEOSTitleStorageFileMetadata::FileSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageFileMetadata, MD5Hash) == 0x000008, "Member 'FEOSTitleStorageFileMetadata::MD5Hash' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageFileMetadata, Filename) == 0x000018, "Member 'FEOSTitleStorageFileMetadata::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthVerifyUserAuthOptions
// 0x00B0 (0x00B0 - 0x0000)
struct FEOSAuthVerifyUserAuthOptions final
{
public:
	struct FEOSAuthToken                          AuthToken;                                         // 0x0000(0x00B0)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthVerifyUserAuthOptions) == 0x000008, "Wrong alignment on FEOSAuthVerifyUserAuthOptions");
static_assert(sizeof(FEOSAuthVerifyUserAuthOptions) == 0x0000B0, "Wrong size on FEOSAuthVerifyUserAuthOptions");
static_assert(offsetof(FEOSAuthVerifyUserAuthOptions, AuthToken) == 0x000000, "Member 'FEOSAuthVerifyUserAuthOptions::AuthToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationSetJoinInfoOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSPresenceModificationSetJoinInfoOptions final
{
public:
	uint8                                         Pad_2726[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 JoinInfo;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceModificationSetJoinInfoOptions) == 0x000008, "Wrong alignment on FEOSPresenceModificationSetJoinInfoOptions");
static_assert(sizeof(FEOSPresenceModificationSetJoinInfoOptions) == 0x000018, "Wrong size on FEOSPresenceModificationSetJoinInfoOptions");
static_assert(offsetof(FEOSPresenceModificationSetJoinInfoOptions, JoinInfo) == 0x000008, "Member 'FEOSPresenceModificationSetJoinInfoOptions::JoinInfo' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageFileTransferRequestHandle
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSTitleStorageFileTransferRequestHandle final
{
public:
	uint8                                         Pad_2727[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageFileTransferRequestHandle) == 0x000008, "Wrong alignment on FEOSTitleStorageFileTransferRequestHandle");
static_assert(sizeof(FEOSTitleStorageFileTransferRequestHandle) == 0x000008, "Wrong size on FEOSTitleStorageFileTransferRequestHandle");

// ScriptStruct EOSCore.EOSAuthCopyUserAuthTokenOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSAuthCopyUserAuthTokenOptions final
{
public:
	uint8                                         Pad_2728[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAuthCopyUserAuthTokenOptions) == 0x000004, "Wrong alignment on FEOSAuthCopyUserAuthTokenOptions");
static_assert(sizeof(FEOSAuthCopyUserAuthTokenOptions) == 0x000004, "Wrong size on FEOSAuthCopyUserAuthTokenOptions");

// ScriptStruct EOSCore.EOSHAuth
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHAuth final
{
public:
	uint8                                         Pad_2729[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHAuth) == 0x000008, "Wrong alignment on FEOSHAuth");
static_assert(sizeof(FEOSHAuth) == 0x000008, "Wrong size on FEOSHAuth");

// ScriptStruct EOSCore.EOSHLobbyDetails
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHLobbyDetails final
{
public:
	uint8                                         Pad_272A[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHLobbyDetails) == 0x000008, "Wrong alignment on FEOSHLobbyDetails");
static_assert(sizeof(FEOSHLobbyDetails) == 0x000008, "Wrong size on FEOSHLobbyDetails");

// ScriptStruct EOSCore.EOSAuthIdToken
// 0x0038 (0x0038 - 0x0000)
struct FEOSAuthIdToken final
{
public:
	struct FEOSEpicAccountId                      AccountId;                                         // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_272B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 JsonWebToken;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthIdToken) == 0x000008, "Wrong alignment on FEOSAuthIdToken");
static_assert(sizeof(FEOSAuthIdToken) == 0x000038, "Wrong size on FEOSAuthIdToken");
static_assert(offsetof(FEOSAuthIdToken, AccountId) == 0x000000, "Member 'FEOSAuthIdToken::AccountId' has a wrong offset!");
static_assert(offsetof(FEOSAuthIdToken, JsonWebToken) == 0x000028, "Member 'FEOSAuthIdToken::JsonWebToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthVerifyIdTokenOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAuthVerifyIdTokenOptions final
{
public:
	struct FEOSAuthIdToken                        IdToken;                                           // 0x0000(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthVerifyIdTokenOptions) == 0x000008, "Wrong alignment on FEOSAuthVerifyIdTokenOptions");
static_assert(sizeof(FEOSAuthVerifyIdTokenOptions) == 0x000038, "Wrong size on FEOSAuthVerifyIdTokenOptions");
static_assert(offsetof(FEOSAuthVerifyIdTokenOptions, IdToken) == 0x000000, "Member 'FEOSAuthVerifyIdTokenOptions::IdToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchFindOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLobbySearchFindOptions final
{
public:
	uint8                                         Pad_272C[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_272D[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchFindOptions) == 0x000004, "Wrong alignment on FEOSLobbySearchFindOptions");
static_assert(sizeof(FEOSLobbySearchFindOptions) == 0x000028, "Wrong size on FEOSLobbySearchFindOptions");
static_assert(offsetof(FEOSLobbySearchFindOptions, LocalUserId) == 0x000004, "Member 'FEOSLobbySearchFindOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageDeleteCacheOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSTitleStorageDeleteCacheOptions final
{
public:
	uint8                                         Pad_272E[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_272F[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageDeleteCacheOptions) == 0x000004, "Wrong alignment on FEOSTitleStorageDeleteCacheOptions");
static_assert(sizeof(FEOSTitleStorageDeleteCacheOptions) == 0x000028, "Wrong size on FEOSTitleStorageDeleteCacheOptions");
static_assert(offsetof(FEOSTitleStorageDeleteCacheOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageDeleteCacheOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAuthCopyIdTokenOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSAuthCopyIdTokenOptions final
{
public:
	struct FEOSEpicAccountId                      AccountId;                                         // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAuthCopyIdTokenOptions) == 0x000001, "Wrong alignment on FEOSAuthCopyIdTokenOptions");
static_assert(sizeof(FEOSAuthCopyIdTokenOptions) == 0x000021, "Wrong size on FEOSAuthCopyIdTokenOptions");
static_assert(offsetof(FEOSAuthCopyIdTokenOptions, AccountId) == 0x000000, "Member 'FEOSAuthCopyIdTokenOptions::AccountId' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotSubmitSnapshotOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSProgressionSnapshotSubmitSnapshotOptions final
{
public:
	int32                                         SnapshotId;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSProgressionSnapshotSubmitSnapshotOptions) == 0x000004, "Wrong alignment on FEOSProgressionSnapshotSubmitSnapshotOptions");
static_assert(sizeof(FEOSProgressionSnapshotSubmitSnapshotOptions) == 0x000004, "Wrong size on FEOSProgressionSnapshotSubmitSnapshotOptions");
static_assert(offsetof(FEOSProgressionSnapshotSubmitSnapshotOptions, SnapshotId) == 0x000000, "Member 'FEOSProgressionSnapshotSubmitSnapshotOptions::SnapshotId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIGetFriendsExclusiveInputOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSUIGetFriendsExclusiveInputOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUIGetFriendsExclusiveInputOptions) == 0x000001, "Wrong alignment on FEOSUIGetFriendsExclusiveInputOptions");
static_assert(sizeof(FEOSUIGetFriendsExclusiveInputOptions) == 0x000021, "Wrong size on FEOSUIGetFriendsExclusiveInputOptions");
static_assert(offsetof(FEOSUIGetFriendsExclusiveInputOptions, LocalUserId) == 0x000000, "Member 'FEOSUIGetFriendsExclusiveInputOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCredentials
// 0x0018 (0x0018 - 0x0000)
struct FEOSConnectCredentials final
{
public:
	class FString                                 AccessToken;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalCredentialType                   Type;                                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2730[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectCredentials) == 0x000008, "Wrong alignment on FEOSConnectCredentials");
static_assert(sizeof(FEOSConnectCredentials) == 0x000018, "Wrong size on FEOSConnectCredentials");
static_assert(offsetof(FEOSConnectCredentials, AccessToken) == 0x000000, "Member 'FEOSConnectCredentials::AccessToken' has a wrong offset!");
static_assert(offsetof(FEOSConnectCredentials, Type) == 0x000010, "Member 'FEOSConnectCredentials::Type' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectUserLoginInfo
// 0x0010 (0x0010 - 0x0000)
struct FEOSConnectUserLoginInfo final
{
public:
	class FString                                 DisplayName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectUserLoginInfo) == 0x000008, "Wrong alignment on FEOSConnectUserLoginInfo");
static_assert(sizeof(FEOSConnectUserLoginInfo) == 0x000010, "Wrong size on FEOSConnectUserLoginInfo");
static_assert(offsetof(FEOSConnectUserLoginInfo, DisplayName) == 0x000000, "Member 'FEOSConnectUserLoginInfo::DisplayName' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectLoginOptions
// 0x0030 (0x0030 - 0x0000)
struct FEOSConnectLoginOptions final
{
public:
	uint8                                         Pad_2731[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSConnectCredentials                 Credentials;                                       // 0x0008(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FEOSConnectUserLoginInfo               UserLoginInfo;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectLoginOptions) == 0x000008, "Wrong alignment on FEOSConnectLoginOptions");
static_assert(sizeof(FEOSConnectLoginOptions) == 0x000030, "Wrong size on FEOSConnectLoginOptions");
static_assert(offsetof(FEOSConnectLoginOptions, Credentials) == 0x000008, "Member 'FEOSConnectLoginOptions::Credentials' has a wrong offset!");
static_assert(offsetof(FEOSConnectLoginOptions, UserLoginInfo) == 0x000020, "Member 'FEOSConnectLoginOptions::UserLoginInfo' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDeleteFileOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSPlayerDataStorageDeleteFileOptions final
{
public:
	uint8                                         Pad_2732[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2733[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageDeleteFileOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageDeleteFileOptions");
static_assert(sizeof(FEOSPlayerDataStorageDeleteFileOptions) == 0x000038, "Wrong size on FEOSPlayerDataStorageDeleteFileOptions");
static_assert(offsetof(FEOSPlayerDataStorageDeleteFileOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageDeleteFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDeleteFileOptions, Filename) == 0x000028, "Member 'FEOSPlayerDataStorageDeleteFileOptions::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyLeaveLobbyOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyLeaveLobbyOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2734[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LobbyID;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyLeaveLobbyOptions) == 0x000008, "Wrong alignment on FEOSLobbyLeaveLobbyOptions");
static_assert(sizeof(FEOSLobbyLeaveLobbyOptions) == 0x000038, "Wrong size on FEOSLobbyLeaveLobbyOptions");
static_assert(offsetof(FEOSLobbyLeaveLobbyOptions, LocalUserId) == 0x000000, "Member 'FEOSLobbyLeaveLobbyOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyLeaveLobbyOptions, LobbyID) == 0x000028, "Member 'FEOSLobbyLeaveLobbyOptions::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectLinkAccountOptions
// 0x0030 (0x0030 - 0x0000)
struct FEOSConnectLinkAccountOptions final
{
public:
	uint8                                         Pad_2735[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2736[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContinuanceToken                      ContinuanceToken;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectLinkAccountOptions) == 0x000008, "Wrong alignment on FEOSConnectLinkAccountOptions");
static_assert(sizeof(FEOSConnectLinkAccountOptions) == 0x000030, "Wrong size on FEOSConnectLinkAccountOptions");
static_assert(offsetof(FEOSConnectLinkAccountOptions, LocalUserId) == 0x000004, "Member 'FEOSConnectLinkAccountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectLinkAccountOptions, ContinuanceToken) == 0x000028, "Member 'FEOSConnectLinkAccountOptions::ContinuanceToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCreateDeviceIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSConnectCreateDeviceIdOptions final
{
public:
	class FString                                 DeviceModel;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectCreateDeviceIdOptions) == 0x000008, "Wrong alignment on FEOSConnectCreateDeviceIdOptions");
static_assert(sizeof(FEOSConnectCreateDeviceIdOptions) == 0x000010, "Wrong size on FEOSConnectCreateDeviceIdOptions");
static_assert(offsetof(FEOSConnectCreateDeviceIdOptions, DeviceModel) == 0x000000, "Member 'FEOSConnectCreateDeviceIdOptions::DeviceModel' has a wrong offset!");

// ScriptStruct EOSCore.EOSHLobbySearch
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHLobbySearch final
{
public:
	uint8                                         Pad_2737[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHLobbySearch) == 0x000008, "Wrong alignment on FEOSHLobbySearch");
static_assert(sizeof(FEOSHLobbySearch) == 0x000008, "Wrong size on FEOSHLobbySearch");

// ScriptStruct EOSCore.EOSUIGetFriendsVisibleOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSUIGetFriendsVisibleOptions final
{
public:
	uint8                                         Pad_2738[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2739[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIGetFriendsVisibleOptions) == 0x000004, "Wrong alignment on FEOSUIGetFriendsVisibleOptions");
static_assert(sizeof(FEOSUIGetFriendsVisibleOptions) == 0x000028, "Wrong size on FEOSUIGetFriendsVisibleOptions");
static_assert(offsetof(FEOSUIGetFriendsVisibleOptions, LocalUserId) == 0x000004, "Member 'FEOSUIGetFriendsVisibleOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectDeleteDeviceIdOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSConnectDeleteDeviceIdOptions final
{
public:
	uint8                                         Pad_273A[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectDeleteDeviceIdOptions) == 0x000004, "Wrong alignment on FEOSConnectDeleteDeviceIdOptions");
static_assert(sizeof(FEOSConnectDeleteDeviceIdOptions) == 0x000004, "Wrong size on FEOSConnectDeleteDeviceIdOptions");

// ScriptStruct EOSCore.EOSModsCopyModInfoOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSModsCopyModInfoOptions final
{
public:
	uint8                                         Pad_273B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEModEnumerationType                       Type;                                              // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_273C[0x2];                                     // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSModsCopyModInfoOptions) == 0x000004, "Wrong alignment on FEOSModsCopyModInfoOptions");
static_assert(sizeof(FEOSModsCopyModInfoOptions) == 0x000028, "Wrong size on FEOSModsCopyModInfoOptions");
static_assert(offsetof(FEOSModsCopyModInfoOptions, LocalUserId) == 0x000004, "Member 'FEOSModsCopyModInfoOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsCopyModInfoOptions, Type) == 0x000025, "Member 'FEOSModsCopyModInfoOptions::Type' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIPauseSocialOverlayOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSUIPauseSocialOverlayOptions final
{
public:
	bool                                          bIsPaused;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUIPauseSocialOverlayOptions) == 0x000001, "Wrong alignment on FEOSUIPauseSocialOverlayOptions");
static_assert(sizeof(FEOSUIPauseSocialOverlayOptions) == 0x000001, "Wrong size on FEOSUIPauseSocialOverlayOptions");
static_assert(offsetof(FEOSUIPauseSocialOverlayOptions, bIsPaused) == 0x000000, "Member 'FEOSUIPauseSocialOverlayOptions::bIsPaused' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectTransferDeviceIdAccountOptions
// 0x0063 (0x0063 - 0x0000)
struct FEOSConnectTransferDeviceIdAccountOptions final
{
public:
	struct FEOSProductUserId                      PrimaryLocalUserId;                                // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalDeviceUserId;                                 // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ProductUserIdToPreserve;                           // 0x0042(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectTransferDeviceIdAccountOptions) == 0x000001, "Wrong alignment on FEOSConnectTransferDeviceIdAccountOptions");
static_assert(sizeof(FEOSConnectTransferDeviceIdAccountOptions) == 0x000063, "Wrong size on FEOSConnectTransferDeviceIdAccountOptions");
static_assert(offsetof(FEOSConnectTransferDeviceIdAccountOptions, PrimaryLocalUserId) == 0x000000, "Member 'FEOSConnectTransferDeviceIdAccountOptions::PrimaryLocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectTransferDeviceIdAccountOptions, LocalDeviceUserId) == 0x000021, "Member 'FEOSConnectTransferDeviceIdAccountOptions::LocalDeviceUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectTransferDeviceIdAccountOptions, ProductUserIdToPreserve) == 0x000042, "Member 'FEOSConnectTransferDeviceIdAccountOptions::ProductUserIdToPreserve' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectGetExternalAccountMappingsOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectGetExternalAccountMappingsOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0021(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_273D[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TargetExternalUserId;                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectGetExternalAccountMappingsOptions) == 0x000008, "Wrong alignment on FEOSConnectGetExternalAccountMappingsOptions");
static_assert(sizeof(FEOSConnectGetExternalAccountMappingsOptions) == 0x000038, "Wrong size on FEOSConnectGetExternalAccountMappingsOptions");
static_assert(offsetof(FEOSConnectGetExternalAccountMappingsOptions, LocalUserId) == 0x000000, "Member 'FEOSConnectGetExternalAccountMappingsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectGetExternalAccountMappingsOptions, AccountIdType) == 0x000021, "Member 'FEOSConnectGetExternalAccountMappingsOptions::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSConnectGetExternalAccountMappingsOptions, TargetExternalUserId) == 0x000028, "Member 'FEOSConnectGetExternalAccountMappingsOptions::TargetExternalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceDataRecord
// 0x0028 (0x0028 - 0x0000)
struct FEOSPresenceDataRecord final
{
public:
	uint8                                         Pad_273E[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceDataRecord) == 0x000008, "Wrong alignment on FEOSPresenceDataRecord");
static_assert(sizeof(FEOSPresenceDataRecord) == 0x000028, "Wrong size on FEOSPresenceDataRecord");
static_assert(offsetof(FEOSPresenceDataRecord, Key) == 0x000008, "Member 'FEOSPresenceDataRecord::Key' has a wrong offset!");
static_assert(offsetof(FEOSPresenceDataRecord, Value) == 0x000018, "Member 'FEOSPresenceDataRecord::Value' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectQueryProductUserIdMappingsOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectQueryProductUserIdMappingsOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_273F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              ProductUserIds;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectQueryProductUserIdMappingsOptions) == 0x000008, "Wrong alignment on FEOSConnectQueryProductUserIdMappingsOptions");
static_assert(sizeof(FEOSConnectQueryProductUserIdMappingsOptions) == 0x000038, "Wrong size on FEOSConnectQueryProductUserIdMappingsOptions");
static_assert(offsetof(FEOSConnectQueryProductUserIdMappingsOptions, LocalUserId) == 0x000000, "Member 'FEOSConnectQueryProductUserIdMappingsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectQueryProductUserIdMappingsOptions, ProductUserIds) == 0x000028, "Member 'FEOSConnectQueryProductUserIdMappingsOptions::ProductUserIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyInviteReceivedOptions
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLobbyAddNotifyLobbyInviteReceivedOptions final
{
public:
	uint8                                         Pad_2740[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyInviteReceivedOptions) == 0x000008, "Wrong alignment on FEOSLobbyAddNotifyLobbyInviteReceivedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyInviteReceivedOptions) == 0x000010, "Wrong size on FEOSLobbyAddNotifyLobbyInviteReceivedOptions");

// ScriptStruct EOSCore.EOSConnectGetProductUserIdMappingOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSConnectGetProductUserIdMappingOptions final
{
public:
	uint8                                         Pad_2741[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetProductUserId;                               // 0x0026(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2742[0x1];                                     // 0x0047(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectGetProductUserIdMappingOptions) == 0x000004, "Wrong alignment on FEOSConnectGetProductUserIdMappingOptions");
static_assert(sizeof(FEOSConnectGetProductUserIdMappingOptions) == 0x000048, "Wrong size on FEOSConnectGetProductUserIdMappingOptions");
static_assert(offsetof(FEOSConnectGetProductUserIdMappingOptions, LocalUserId) == 0x000004, "Member 'FEOSConnectGetProductUserIdMappingOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectGetProductUserIdMappingOptions, AccountIdType) == 0x000025, "Member 'FEOSConnectGetProductUserIdMappingOptions::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSConnectGetProductUserIdMappingOptions, TargetProductUserId) == 0x000026, "Member 'FEOSConnectGetProductUserIdMappingOptions::TargetProductUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectGetProductUserExternalAccountCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSConnectGetProductUserExternalAccountCountOptions final
{
public:
	uint8                                         Pad_2743[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2744[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectGetProductUserExternalAccountCountOptions) == 0x000004, "Wrong alignment on FEOSConnectGetProductUserExternalAccountCountOptions");
static_assert(sizeof(FEOSConnectGetProductUserExternalAccountCountOptions) == 0x000028, "Wrong size on FEOSConnectGetProductUserExternalAccountCountOptions");
static_assert(offsetof(FEOSConnectGetProductUserExternalAccountCountOptions, TargetUserId) == 0x000004, "Member 'FEOSConnectGetProductUserExternalAccountCountOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCopyProductUserExternalAccountByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSConnectCopyProductUserExternalAccountByIndexOptions final
{
public:
	uint8                                         Pad_2745[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2746[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ExternalAccountInfoIndex;                          // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectCopyProductUserExternalAccountByIndexOptions) == 0x000004, "Wrong alignment on FEOSConnectCopyProductUserExternalAccountByIndexOptions");
static_assert(sizeof(FEOSConnectCopyProductUserExternalAccountByIndexOptions) == 0x00002C, "Wrong size on FEOSConnectCopyProductUserExternalAccountByIndexOptions");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByIndexOptions, TargetUserId) == 0x000004, "Member 'FEOSConnectCopyProductUserExternalAccountByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByIndexOptions, ExternalAccountInfoIndex) == 0x000028, "Member 'FEOSConnectCopyProductUserExternalAccountByIndexOptions::ExternalAccountInfoIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyJoinLobbyOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyJoinLobbyOptions final
{
public:
	struct FEOSHLobbyDetails                      LobbyDetailsHandle;                                // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresenceEnabled;                                  // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2747[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyLocalRTCOptions               LocalRTCOptions;                                   // 0x002C(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2748[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyJoinLobbyOptions) == 0x000008, "Wrong alignment on FEOSLobbyJoinLobbyOptions");
static_assert(sizeof(FEOSLobbyJoinLobbyOptions) == 0x000038, "Wrong size on FEOSLobbyJoinLobbyOptions");
static_assert(offsetof(FEOSLobbyJoinLobbyOptions, LobbyDetailsHandle) == 0x000000, "Member 'FEOSLobbyJoinLobbyOptions::LobbyDetailsHandle' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyOptions, LocalUserId) == 0x000008, "Member 'FEOSLobbyJoinLobbyOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyOptions, bPresenceEnabled) == 0x000029, "Member 'FEOSLobbyJoinLobbyOptions::bPresenceEnabled' has a wrong offset!");
static_assert(offsetof(FEOSLobbyJoinLobbyOptions, LocalRTCOptions) == 0x00002C, "Member 'FEOSLobbyJoinLobbyOptions::LocalRTCOptions' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyKickMemberOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSLobbyKickMemberOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2749[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyKickMemberOptions) == 0x000008, "Wrong alignment on FEOSLobbyKickMemberOptions");
static_assert(sizeof(FEOSLobbyKickMemberOptions) == 0x000058, "Wrong size on FEOSLobbyKickMemberOptions");
static_assert(offsetof(FEOSLobbyKickMemberOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyKickMemberOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyKickMemberOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyKickMemberOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyKickMemberOptions, TargetUserId) == 0x000031, "Member 'FEOSLobbyKickMemberOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCopyProductUserExternalAccountByAccountIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectCopyProductUserExternalAccountByAccountIdOptions final
{
public:
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_274A[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountId;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectCopyProductUserExternalAccountByAccountIdOptions) == 0x000008, "Wrong alignment on FEOSConnectCopyProductUserExternalAccountByAccountIdOptions");
static_assert(sizeof(FEOSConnectCopyProductUserExternalAccountByAccountIdOptions) == 0x000038, "Wrong size on FEOSConnectCopyProductUserExternalAccountByAccountIdOptions");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByAccountIdOptions, TargetUserId) == 0x000000, "Member 'FEOSConnectCopyProductUserExternalAccountByAccountIdOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectCopyProductUserExternalAccountByAccountIdOptions, AccountId) == 0x000028, "Member 'FEOSConnectCopyProductUserExternalAccountByAccountIdOptions::AccountId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectCopyProductUserInfoOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSConnectCopyProductUserInfoOptions final
{
public:
	uint8                                         Pad_274B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_274C[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectCopyProductUserInfoOptions) == 0x000004, "Wrong alignment on FEOSConnectCopyProductUserInfoOptions");
static_assert(sizeof(FEOSConnectCopyProductUserInfoOptions) == 0x000028, "Wrong size on FEOSConnectCopyProductUserInfoOptions");
static_assert(offsetof(FEOSConnectCopyProductUserInfoOptions, TargetUserId) == 0x000004, "Member 'FEOSConnectCopyProductUserInfoOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectExternalAccountInfo
// 0x0060 (0x0060 - 0x0000)
struct FEOSConnectExternalAccountInfo final
{
public:
	uint8                                         Pad_274D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      ProductUserId;                                     // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_274E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DisplayName;                                       // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 AccountId;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountIdType;                                     // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_274F[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LastLoginTime;                                     // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectExternalAccountInfo) == 0x000008, "Wrong alignment on FEOSConnectExternalAccountInfo");
static_assert(sizeof(FEOSConnectExternalAccountInfo) == 0x000060, "Wrong size on FEOSConnectExternalAccountInfo");
static_assert(offsetof(FEOSConnectExternalAccountInfo, ProductUserId) == 0x000004, "Member 'FEOSConnectExternalAccountInfo::ProductUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectExternalAccountInfo, DisplayName) == 0x000028, "Member 'FEOSConnectExternalAccountInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FEOSConnectExternalAccountInfo, AccountId) == 0x000038, "Member 'FEOSConnectExternalAccountInfo::AccountId' has a wrong offset!");
static_assert(offsetof(FEOSConnectExternalAccountInfo, AccountIdType) == 0x000048, "Member 'FEOSConnectExternalAccountInfo::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSConnectExternalAccountInfo, LastLoginTime) == 0x000050, "Member 'FEOSConnectExternalAccountInfo::LastLoginTime' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsCopyMemberAttributeByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSLobbyDetailsCopyMemberAttributeByIndexOptions final
{
public:
	uint8                                         Pad_2750[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2751[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AttrIndex;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDetailsCopyMemberAttributeByIndexOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsCopyMemberAttributeByIndexOptions");
static_assert(sizeof(FEOSLobbyDetailsCopyMemberAttributeByIndexOptions) == 0x00002C, "Wrong size on FEOSLobbyDetailsCopyMemberAttributeByIndexOptions");
static_assert(offsetof(FEOSLobbyDetailsCopyMemberAttributeByIndexOptions, TargetUserId) == 0x000004, "Member 'FEOSLobbyDetailsCopyMemberAttributeByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyDetailsCopyMemberAttributeByIndexOptions, AttrIndex) == 0x000028, "Member 'FEOSLobbyDetailsCopyMemberAttributeByIndexOptions::AttrIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectAddNotifyAuthExpirationOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSConnectAddNotifyAuthExpirationOptions final
{
public:
	uint8                                         Pad_2752[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectAddNotifyAuthExpirationOptions) == 0x000004, "Wrong alignment on FEOSConnectAddNotifyAuthExpirationOptions");
static_assert(sizeof(FEOSConnectAddNotifyAuthExpirationOptions) == 0x000004, "Wrong size on FEOSConnectAddNotifyAuthExpirationOptions");

// ScriptStruct EOSCore.EOSEcomCopyOfferByIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomCopyOfferByIdOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2753[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyOfferByIdOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyOfferByIdOptions");
static_assert(sizeof(FEOSEcomCopyOfferByIdOptions) == 0x000038, "Wrong size on FEOSEcomCopyOfferByIdOptions");
static_assert(offsetof(FEOSEcomCopyOfferByIdOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyOfferByIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferByIdOptions, OfferId) == 0x000028, "Member 'FEOSEcomCopyOfferByIdOptions::OfferId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectAddNotifyLoginStatusChangedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSConnectAddNotifyLoginStatusChangedOptions final
{
public:
	uint8                                         Pad_2754[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSConnectAddNotifyLoginStatusChangedOptions) == 0x000004, "Wrong alignment on FEOSConnectAddNotifyLoginStatusChangedOptions");
static_assert(sizeof(FEOSConnectAddNotifyLoginStatusChangedOptions) == 0x000004, "Wrong size on FEOSConnectAddNotifyLoginStatusChangedOptions");

// ScriptStruct EOSCore.EOSConnectCopyIdTokenOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSConnectCopyIdTokenOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectCopyIdTokenOptions) == 0x000001, "Wrong alignment on FEOSConnectCopyIdTokenOptions");
static_assert(sizeof(FEOSConnectCopyIdTokenOptions) == 0x000021, "Wrong size on FEOSConnectCopyIdTokenOptions");
static_assert(offsetof(FEOSConnectCopyIdTokenOptions, LocalUserId) == 0x000000, "Member 'FEOSConnectCopyIdTokenOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectIdToken
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectIdToken final
{
public:
	struct FEOSProductUserId                      ProductUserId;                                     // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2755[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 JsonWebToken;                                      // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectIdToken) == 0x000008, "Wrong alignment on FEOSConnectIdToken");
static_assert(sizeof(FEOSConnectIdToken) == 0x000038, "Wrong size on FEOSConnectIdToken");
static_assert(offsetof(FEOSConnectIdToken, ProductUserId) == 0x000000, "Member 'FEOSConnectIdToken::ProductUserId' has a wrong offset!");
static_assert(offsetof(FEOSConnectIdToken, JsonWebToken) == 0x000028, "Member 'FEOSConnectIdToken::JsonWebToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomRedeemEntitlementsOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomRedeemEntitlementsOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2756[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSEcomEntitlementId>          EntitlementIds;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomRedeemEntitlementsOptions) == 0x000008, "Wrong alignment on FEOSEcomRedeemEntitlementsOptions");
static_assert(sizeof(FEOSEcomRedeemEntitlementsOptions) == 0x000038, "Wrong size on FEOSEcomRedeemEntitlementsOptions");
static_assert(offsetof(FEOSEcomRedeemEntitlementsOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomRedeemEntitlementsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomRedeemEntitlementsOptions, EntitlementIds) == 0x000028, "Member 'FEOSEcomRedeemEntitlementsOptions::EntitlementIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSConnectVerifyIdTokenOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSConnectVerifyIdTokenOptions final
{
public:
	struct FEOSConnectIdToken                     IdToken;                                           // 0x0000(0x0038)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSConnectVerifyIdTokenOptions) == 0x000008, "Wrong alignment on FEOSConnectVerifyIdTokenOptions");
static_assert(sizeof(FEOSConnectVerifyIdTokenOptions) == 0x000038, "Wrong size on FEOSConnectVerifyIdTokenOptions");
static_assert(offsetof(FEOSConnectVerifyIdTokenOptions, IdToken) == 0x000000, "Member 'FEOSConnectVerifyIdTokenOptions::IdToken' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonQuat
// 0x0010 (0x0010 - 0x0000)
struct FEOSAntiCheatCommonQuat final
{
public:
	float                                         W;                                                 // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         X;                                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Y;                                                 // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Z;                                                 // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonQuat) == 0x000004, "Wrong alignment on FEOSAntiCheatCommonQuat");
static_assert(sizeof(FEOSAntiCheatCommonQuat) == 0x000010, "Wrong size on FEOSAntiCheatCommonQuat");
static_assert(offsetof(FEOSAntiCheatCommonQuat, W) == 0x000000, "Member 'FEOSAntiCheatCommonQuat::W' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonQuat, X) == 0x000004, "Member 'FEOSAntiCheatCommonQuat::X' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonQuat, Y) == 0x000008, "Member 'FEOSAntiCheatCommonQuat::Y' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonQuat, Z) == 0x00000C, "Member 'FEOSAntiCheatCommonQuat::Z' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonSetClientDetailsOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonSetClientDetailsOptions final
{
public:
	uint8                                         Pad_2757[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientFlags               ClientFlags;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonClientInput               ClientInputMethod;                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2758[0x6];                                     // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonSetClientDetailsOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonSetClientDetailsOptions");
static_assert(sizeof(FEOSAntiCheatCommonSetClientDetailsOptions) == 0x000018, "Wrong size on FEOSAntiCheatCommonSetClientDetailsOptions");
static_assert(offsetof(FEOSAntiCheatCommonSetClientDetailsOptions, ClientHandle) == 0x000008, "Member 'FEOSAntiCheatCommonSetClientDetailsOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonSetClientDetailsOptions, ClientFlags) == 0x000010, "Member 'FEOSAntiCheatCommonSetClientDetailsOptions::ClientFlags' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonSetClientDetailsOptions, ClientInputMethod) == 0x000011, "Member 'FEOSAntiCheatCommonSetClientDetailsOptions::ClientInputMethod' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchRemoveParameterOptions
// 0x0020 (0x0020 - 0x0000)
struct FEOSLobbySearchRemoveParameterOptions final
{
public:
	uint8                                         Pad_2759[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEComparisonOp                             ComparisonOp;                                      // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_275A[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchRemoveParameterOptions) == 0x000008, "Wrong alignment on FEOSLobbySearchRemoveParameterOptions");
static_assert(sizeof(FEOSLobbySearchRemoveParameterOptions) == 0x000020, "Wrong size on FEOSLobbySearchRemoveParameterOptions");
static_assert(offsetof(FEOSLobbySearchRemoveParameterOptions, Key) == 0x000008, "Member 'FEOSLobbySearchRemoveParameterOptions::Key' has a wrong offset!");
static_assert(offsetof(FEOSLobbySearchRemoveParameterOptions, ComparisonOp) == 0x000018, "Member 'FEOSLobbySearchRemoveParameterOptions::ComparisonOp' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonSetGameSessionIdOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonSetGameSessionIdOptions final
{
public:
	uint8                                         Pad_275B[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 GameSessionId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonSetGameSessionIdOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonSetGameSessionIdOptions");
static_assert(sizeof(FEOSAntiCheatCommonSetGameSessionIdOptions) == 0x000018, "Wrong size on FEOSAntiCheatCommonSetGameSessionIdOptions");
static_assert(offsetof(FEOSAntiCheatCommonSetGameSessionIdOptions, GameSessionId) == 0x000008, "Member 'FEOSAntiCheatCommonSetGameSessionIdOptions::GameSessionId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyGetInviteIdByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSLobbyGetInviteIdByIndexOptions final
{
public:
	uint8                                         Pad_275C[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_275D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyGetInviteIdByIndexOptions) == 0x000004, "Wrong alignment on FEOSLobbyGetInviteIdByIndexOptions");
static_assert(sizeof(FEOSLobbyGetInviteIdByIndexOptions) == 0x00002C, "Wrong size on FEOSLobbyGetInviteIdByIndexOptions");
static_assert(offsetof(FEOSLobbyGetInviteIdByIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSLobbyGetInviteIdByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyGetInviteIdByIndexOptions, Index) == 0x000028, "Member 'FEOSLobbyGetInviteIdByIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonRegisterEventParamDef
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonRegisterEventParamDef final
{
public:
	class FString                                 ParamName;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonEventParamType            ParamType;                                         // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_275E[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonRegisterEventParamDef) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonRegisterEventParamDef");
static_assert(sizeof(FEOSAntiCheatCommonRegisterEventParamDef) == 0x000018, "Wrong size on FEOSAntiCheatCommonRegisterEventParamDef");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventParamDef, ParamName) == 0x000000, "Member 'FEOSAntiCheatCommonRegisterEventParamDef::ParamName' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventParamDef, ParamType) == 0x000010, "Member 'FEOSAntiCheatCommonRegisterEventParamDef::ParamType' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonRegisterEventOptions
// 0x0030 (0x0030 - 0x0000)
struct FEOSAntiCheatCommonRegisterEventOptions final
{
public:
	uint8                                         Pad_275F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EventId;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EventName;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonEventType                 EventType;                                         // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2760[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSAntiCheatCommonRegisterEventParamDef> ParamDefs;                                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonRegisterEventOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonRegisterEventOptions");
static_assert(sizeof(FEOSAntiCheatCommonRegisterEventOptions) == 0x000030, "Wrong size on FEOSAntiCheatCommonRegisterEventOptions");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventOptions, EventId) == 0x000004, "Member 'FEOSAntiCheatCommonRegisterEventOptions::EventId' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventOptions, EventName) == 0x000008, "Member 'FEOSAntiCheatCommonRegisterEventOptions::EventName' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventOptions, EventType) == 0x000018, "Member 'FEOSAntiCheatCommonRegisterEventOptions::EventType' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonRegisterEventOptions, ParamDefs) == 0x000020, "Member 'FEOSAntiCheatCommonRegisterEventOptions::ParamDefs' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogEventParamPair
// 0x0018 (0x0018 - 0x0000)
struct alignas(0x08) FEOSAntiCheatCommonLogEventParamPair final
{
public:
	uint8                                         Pad_2761[0x18];                                    // 0x0000(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonLogEventParamPair) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogEventParamPair");
static_assert(sizeof(FEOSAntiCheatCommonLogEventParamPair) == 0x000018, "Wrong size on FEOSAntiCheatCommonLogEventParamPair");

// ScriptStruct EOSCore.EOSEcomGetOfferCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSEcomGetOfferCountOptions final
{
public:
	uint8                                         Pad_2762[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2763[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomGetOfferCountOptions) == 0x000004, "Wrong alignment on FEOSEcomGetOfferCountOptions");
static_assert(sizeof(FEOSEcomGetOfferCountOptions) == 0x000028, "Wrong size on FEOSEcomGetOfferCountOptions");
static_assert(offsetof(FEOSEcomGetOfferCountOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomGetOfferCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogEventOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSAntiCheatCommonLogEventOptions final
{
public:
	uint8                                         Pad_2764[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        ClientHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	int32                                         EventId;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2765[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSAntiCheatCommonLogEventParamPair> Params;                                            // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogEventOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogEventOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogEventOptions) == 0x000028, "Wrong size on FEOSAntiCheatCommonLogEventOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogEventOptions, ClientHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogEventOptions::ClientHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogEventOptions, EventId) == 0x000010, "Member 'FEOSAntiCheatCommonLogEventOptions::EventId' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogEventOptions, Params) == 0x000018, "Member 'FEOSAntiCheatCommonLogEventOptions::Params' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySendInviteOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSLobbySendInviteOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2766[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySendInviteOptions) == 0x000008, "Wrong alignment on FEOSLobbySendInviteOptions");
static_assert(sizeof(FEOSLobbySendInviteOptions) == 0x000058, "Wrong size on FEOSLobbySendInviteOptions");
static_assert(offsetof(FEOSLobbySendInviteOptions, LobbyID) == 0x000000, "Member 'FEOSLobbySendInviteOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendInviteOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbySendInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbySendInviteOptions, TargetUserId) == 0x000031, "Member 'FEOSLobbySendInviteOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogGameRoundStartOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSAntiCheatCommonLogGameRoundStartOptions final
{
public:
	uint8                                         Pad_2767[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SessionIdentifier;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LevelName;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ModeName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         RoundTimeSeconds;                                  // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2768[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonLogGameRoundStartOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogGameRoundStartOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogGameRoundStartOptions) == 0x000040, "Wrong size on FEOSAntiCheatCommonLogGameRoundStartOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogGameRoundStartOptions, SessionIdentifier) == 0x000008, "Member 'FEOSAntiCheatCommonLogGameRoundStartOptions::SessionIdentifier' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogGameRoundStartOptions, LevelName) == 0x000018, "Member 'FEOSAntiCheatCommonLogGameRoundStartOptions::LevelName' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogGameRoundStartOptions, ModeName) == 0x000028, "Member 'FEOSAntiCheatCommonLogGameRoundStartOptions::ModeName' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogGameRoundStartOptions, RoundTimeSeconds) == 0x000038, "Member 'FEOSAntiCheatCommonLogGameRoundStartOptions::RoundTimeSeconds' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerDespawnOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerDespawnOptions final
{
public:
	uint8                                         Pad_2769[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        DespawnedPlayerHandle;                             // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerDespawnOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerDespawnOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerDespawnOptions) == 0x000010, "Wrong size on FEOSAntiCheatCommonLogPlayerDespawnOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerDespawnOptions, DespawnedPlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerDespawnOptions::DespawnedPlayerHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationAddAttributeOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyModificationAddAttributeOptions final
{
public:
	uint8                                         Pad_276A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSLobbyAttributeData                 Attribute;                                         // 0x0008(0x0028)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSELobbyAttributeVisibility                 Visibility;                                        // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_276B[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyModificationAddAttributeOptions) == 0x000008, "Wrong alignment on FEOSLobbyModificationAddAttributeOptions");
static_assert(sizeof(FEOSLobbyModificationAddAttributeOptions) == 0x000038, "Wrong size on FEOSLobbyModificationAddAttributeOptions");
static_assert(offsetof(FEOSLobbyModificationAddAttributeOptions, Attribute) == 0x000008, "Member 'FEOSLobbyModificationAddAttributeOptions::Attribute' has a wrong offset!");
static_assert(offsetof(FEOSLobbyModificationAddAttributeOptions, Visibility) == 0x000030, "Member 'FEOSLobbyModificationAddAttributeOptions::Visibility' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerReviveOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerReviveOptions final
{
public:
	uint8                                         Pad_276C[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        RevivedPlayerHandle;                               // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonClientHandle        ReviverPlayerHandle;                               // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerReviveOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerReviveOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerReviveOptions) == 0x000018, "Wrong size on FEOSAntiCheatCommonLogPlayerReviveOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerReviveOptions, RevivedPlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerReviveOptions::RevivedPlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerReviveOptions, ReviverPlayerHandle) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerReviveOptions::ReviverPlayerHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerTickOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerTickOptions final
{
public:
	uint8                                         Pad_276D[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        PlayerHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonVec3f               PlayerPosition;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonQuat                PlayerViewRotation;                                // 0x001C(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerViewZoomed;                               // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_276E[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         PlayerHealth;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonPlayerMovementState       PlayerMovementState;                               // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_276F[0x3];                                     // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerTickOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerTickOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerTickOptions) == 0x000038, "Wrong size on FEOSAntiCheatCommonLogPlayerTickOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, PlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::PlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, PlayerPosition) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::PlayerPosition' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, PlayerViewRotation) == 0x00001C, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::PlayerViewRotation' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, bIsPlayerViewZoomed) == 0x00002C, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::bIsPlayerViewZoomed' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, PlayerHealth) == 0x000030, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::PlayerHealth' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTickOptions, PlayerMovementState) == 0x000034, "Member 'FEOSAntiCheatCommonLogPlayerTickOptions::PlayerMovementState' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerUseWeaponData
// 0x0040 (0x0040 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerUseWeaponData final
{
public:
	uint8                                         Pad_2770[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        PlayerHandle;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonVec3f               PlayerPosition;                                    // 0x0010(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonQuat                PlayerViewRotation;                                // 0x001C(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsPlayerViewZoomed;                               // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsMeleeAttack;                                    // 0x002D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2771[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 WeaponName;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerUseWeaponData) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerUseWeaponData");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerUseWeaponData) == 0x000040, "Wrong size on FEOSAntiCheatCommonLogPlayerUseWeaponData");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, PlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::PlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, PlayerPosition) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::PlayerPosition' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, PlayerViewRotation) == 0x00001C, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::PlayerViewRotation' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, bIsPlayerViewZoomed) == 0x00002C, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::bIsPlayerViewZoomed' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, bIsMeleeAttack) == 0x00002D, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::bIsMeleeAttack' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponData, WeaponName) == 0x000030, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponData::WeaponName' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetItemImageInfoCountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomGetItemImageInfoCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2772[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetItemImageInfoCountOptions) == 0x000008, "Wrong alignment on FEOSEcomGetItemImageInfoCountOptions");
static_assert(sizeof(FEOSEcomGetItemImageInfoCountOptions) == 0x000038, "Wrong size on FEOSEcomGetItemImageInfoCountOptions");
static_assert(offsetof(FEOSEcomGetItemImageInfoCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetItemImageInfoCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomGetItemImageInfoCountOptions, ItemId) == 0x000028, "Member 'FEOSEcomGetItemImageInfoCountOptions::ItemId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerUseWeaponOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerUseWeaponOptions final
{
public:
	uint8                                         Pad_2773[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonLogPlayerUseWeaponData UseWeaponData;                                     // 0x0008(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerUseWeaponOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerUseWeaponOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerUseWeaponOptions) == 0x000048, "Wrong size on FEOSAntiCheatCommonLogPlayerUseWeaponOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerUseWeaponOptions, UseWeaponData) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerUseWeaponOptions::UseWeaponData' has a wrong offset!");

// ScriptStruct EOSCore.EOSAntiCheatCommonLogPlayerTakeDamageOptions
// 0x00B0 (0x00B0 - 0x0000)
struct FEOSAntiCheatCommonLogPlayerTakeDamageOptions final
{
public:
	uint8                                         Pad_2774[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        VictimPlayerHandle;                                // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonVec3f               VictimPlayerPosition;                              // 0x0010(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonQuat                VictimPlayerViewRotation;                          // 0x001C(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2775[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonClientHandle        AttackerPlayerHandle;                              // 0x0030(0x0008)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonVec3f               AttackerPlayerPosition;                            // 0x0038(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FEOSAntiCheatCommonQuat                AttackerPlayerViewRotation;                        // 0x0044(0x0010)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          bIsHitscanAttack;                                  // 0x0054(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHasLineOfSight;                                   // 0x0055(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsCriticalHit;                                    // 0x0056(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2776[0x1];                                     // 0x0057(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DamageTaken;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         HealthRemaining;                                   // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonPlayerTakeDamageSource    DamageSource;                                      // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonPlayerTakeDamageType      DamageType;                                        // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEAntiCheatCommonPlayerTakeDamageResult    DamageResult;                                      // 0x0062(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2777[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSAntiCheatCommonLogPlayerUseWeaponData PlayerUseWeaponData;                               // 0x0068(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         TimeSincePlayerUseWeaponMs;                        // 0x00A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2778[0x4];                                     // 0x00AC(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions) == 0x000008, "Wrong alignment on FEOSAntiCheatCommonLogPlayerTakeDamageOptions");
static_assert(sizeof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions) == 0x0000B0, "Wrong size on FEOSAntiCheatCommonLogPlayerTakeDamageOptions");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, VictimPlayerHandle) == 0x000008, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::VictimPlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, VictimPlayerPosition) == 0x000010, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::VictimPlayerPosition' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, VictimPlayerViewRotation) == 0x00001C, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::VictimPlayerViewRotation' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, AttackerPlayerHandle) == 0x000030, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::AttackerPlayerHandle' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, AttackerPlayerPosition) == 0x000038, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::AttackerPlayerPosition' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, AttackerPlayerViewRotation) == 0x000044, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::AttackerPlayerViewRotation' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, bIsHitscanAttack) == 0x000054, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::bIsHitscanAttack' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, bHasLineOfSight) == 0x000055, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::bHasLineOfSight' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, bIsCriticalHit) == 0x000056, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::bIsCriticalHit' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, DamageTaken) == 0x000058, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::DamageTaken' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, HealthRemaining) == 0x00005C, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::HealthRemaining' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, DamageSource) == 0x000060, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::DamageSource' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, DamageType) == 0x000061, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::DamageType' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, DamageResult) == 0x000062, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::DamageResult' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, PlayerUseWeaponData) == 0x000068, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::PlayerUseWeaponData' has a wrong offset!");
static_assert(offsetof(FEOSAntiCheatCommonLogPlayerTakeDamageOptions, TimeSincePlayerUseWeaponMs) == 0x0000A8, "Member 'FEOSAntiCheatCommonLogPlayerTakeDamageOptions::TimeSincePlayerUseWeaponMs' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesSetCustomInviteOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSCustomInvitesSetCustomInviteOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2779[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Payload;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesSetCustomInviteOptions) == 0x000008, "Wrong alignment on FEOSCustomInvitesSetCustomInviteOptions");
static_assert(sizeof(FEOSCustomInvitesSetCustomInviteOptions) == 0x000038, "Wrong size on FEOSCustomInvitesSetCustomInviteOptions");
static_assert(offsetof(FEOSCustomInvitesSetCustomInviteOptions, LocalUserId) == 0x000000, "Member 'FEOSCustomInvitesSetCustomInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesSetCustomInviteOptions, Payload) == 0x000028, "Member 'FEOSCustomInvitesSetCustomInviteOptions::Payload' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyUpdateLobbyOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSLobbyUpdateLobbyOptions final
{
public:
	uint8                                         Pad_277A[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSHLobbyModification                 LobbyModificationHandle;                           // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyUpdateLobbyOptions) == 0x000008, "Wrong alignment on FEOSLobbyUpdateLobbyOptions");
static_assert(sizeof(FEOSLobbyUpdateLobbyOptions) == 0x000010, "Wrong size on FEOSLobbyUpdateLobbyOptions");
static_assert(offsetof(FEOSLobbyUpdateLobbyOptions, LobbyModificationHandle) == 0x000008, "Member 'FEOSLobbyUpdateLobbyOptions::LobbyModificationHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesSendCustomInviteOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSCustomInvitesSendCustomInviteOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_277B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSProductUserId>              TargetUserIds;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCustomInvitesSendCustomInviteOptions) == 0x000008, "Wrong alignment on FEOSCustomInvitesSendCustomInviteOptions");
static_assert(sizeof(FEOSCustomInvitesSendCustomInviteOptions) == 0x000038, "Wrong size on FEOSCustomInvitesSendCustomInviteOptions");
static_assert(offsetof(FEOSCustomInvitesSendCustomInviteOptions, LocalUserId) == 0x000000, "Member 'FEOSCustomInvitesSendCustomInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesSendCustomInviteOptions, TargetUserIds) == 0x000028, "Member 'FEOSCustomInvitesSendCustomInviteOptions::TargetUserIds' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsCopyAttributeByKeyOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyDetailsCopyAttributeByKeyOptions final
{
public:
	uint8                                         Pad_277C[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AttrKey;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyDetailsCopyAttributeByKeyOptions) == 0x000008, "Wrong alignment on FEOSLobbyDetailsCopyAttributeByKeyOptions");
static_assert(sizeof(FEOSLobbyDetailsCopyAttributeByKeyOptions) == 0x000018, "Wrong size on FEOSLobbyDetailsCopyAttributeByKeyOptions");
static_assert(offsetof(FEOSLobbyDetailsCopyAttributeByKeyOptions, AttrKey) == 0x000008, "Member 'FEOSLobbyDetailsCopyAttributeByKeyOptions::AttrKey' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesAddNotifyCustomInviteReceivedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSCustomInvitesAddNotifyCustomInviteReceivedOptions final
{
public:
	uint8                                         Pad_277D[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSCustomInvitesAddNotifyCustomInviteReceivedOptions) == 0x000001, "Wrong alignment on FEOSCustomInvitesAddNotifyCustomInviteReceivedOptions");
static_assert(sizeof(FEOSCustomInvitesAddNotifyCustomInviteReceivedOptions) == 0x000001, "Wrong size on FEOSCustomInvitesAddNotifyCustomInviteReceivedOptions");

// ScriptStruct EOSCore.EOSCustomInvitesAddNotifyCustomInviteRejectedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSCustomInvitesAddNotifyCustomInviteRejectedOptions final
{
public:
	uint8                                         Pad_277E[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSCustomInvitesAddNotifyCustomInviteRejectedOptions) == 0x000001, "Wrong alignment on FEOSCustomInvitesAddNotifyCustomInviteRejectedOptions");
static_assert(sizeof(FEOSCustomInvitesAddNotifyCustomInviteRejectedOptions) == 0x000001, "Wrong size on FEOSCustomInvitesAddNotifyCustomInviteRejectedOptions");

// ScriptStruct EOSCore.EOSLobbyModificationSetMaxMembersOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyModificationSetMaxMembersOptions final
{
public:
	uint8                                         Pad_277F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxMembers;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyModificationSetMaxMembersOptions) == 0x000004, "Wrong alignment on FEOSLobbyModificationSetMaxMembersOptions");
static_assert(sizeof(FEOSLobbyModificationSetMaxMembersOptions) == 0x000008, "Wrong size on FEOSLobbyModificationSetMaxMembersOptions");
static_assert(offsetof(FEOSLobbyModificationSetMaxMembersOptions, MaxMembers) == 0x000004, "Member 'FEOSLobbyModificationSetMaxMembersOptions::MaxMembers' has a wrong offset!");

// ScriptStruct EOSCore.EOSCustomInvitesFinalizeInviteOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSCustomInvitesFinalizeInviteOptions final
{
public:
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2780[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CustomInviteId;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSResult                                     ProcessingResult;                                  // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2781[0x7];                                     // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSCustomInvitesFinalizeInviteOptions) == 0x000008, "Wrong alignment on FEOSCustomInvitesFinalizeInviteOptions");
static_assert(sizeof(FEOSCustomInvitesFinalizeInviteOptions) == 0x000060, "Wrong size on FEOSCustomInvitesFinalizeInviteOptions");
static_assert(offsetof(FEOSCustomInvitesFinalizeInviteOptions, TargetUserId) == 0x000000, "Member 'FEOSCustomInvitesFinalizeInviteOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesFinalizeInviteOptions, LocalUserId) == 0x000021, "Member 'FEOSCustomInvitesFinalizeInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesFinalizeInviteOptions, CustomInviteId) == 0x000048, "Member 'FEOSCustomInvitesFinalizeInviteOptions::CustomInviteId' has a wrong offset!");
static_assert(offsetof(FEOSCustomInvitesFinalizeInviteOptions, ProcessingResult) == 0x000058, "Member 'FEOSCustomInvitesFinalizeInviteOptions::ProcessingResult' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCatalogItem
// 0x00A0 (0x00A0 - 0x0000)
struct FEOSEcomCatalogItem final
{
public:
	uint8                                         Pad_2782[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CatalogNamespace;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEcomEntitlementName                EntitlementName;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 TitleText;                                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DescriptionText;                                   // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LongDescriptionText;                               // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 TechnicalDetailsText;                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeveloperText;                                     // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEEcomItemType                             ItemType;                                          // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2783[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 EntitlementEndTimestamp;                           // 0x0090(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCatalogItem) == 0x000008, "Wrong alignment on FEOSEcomCatalogItem");
static_assert(sizeof(FEOSEcomCatalogItem) == 0x0000A0, "Wrong size on FEOSEcomCatalogItem");
static_assert(offsetof(FEOSEcomCatalogItem, CatalogNamespace) == 0x000008, "Member 'FEOSEcomCatalogItem::CatalogNamespace' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, ID) == 0x000018, "Member 'FEOSEcomCatalogItem::ID' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, EntitlementName) == 0x000028, "Member 'FEOSEcomCatalogItem::EntitlementName' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, TitleText) == 0x000038, "Member 'FEOSEcomCatalogItem::TitleText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, DescriptionText) == 0x000048, "Member 'FEOSEcomCatalogItem::DescriptionText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, LongDescriptionText) == 0x000058, "Member 'FEOSEcomCatalogItem::LongDescriptionText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, TechnicalDetailsText) == 0x000068, "Member 'FEOSEcomCatalogItem::TechnicalDetailsText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, DeveloperText) == 0x000078, "Member 'FEOSEcomCatalogItem::DeveloperText' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, ItemType) == 0x000088, "Member 'FEOSEcomCatalogItem::ItemType' has a wrong offset!");
static_assert(offsetof(FEOSEcomCatalogItem, EntitlementEndTimestamp) == 0x000090, "Member 'FEOSEcomCatalogItem::EntitlementEndTimestamp' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryOwnershipOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSEcomQueryOwnershipOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2784[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CatalogItemIds;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 CatalogNamespace;                                  // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryOwnershipOptions) == 0x000008, "Wrong alignment on FEOSEcomQueryOwnershipOptions");
static_assert(sizeof(FEOSEcomQueryOwnershipOptions) == 0x000048, "Wrong size on FEOSEcomQueryOwnershipOptions");
static_assert(offsetof(FEOSEcomQueryOwnershipOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomQueryOwnershipOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipOptions, CatalogItemIds) == 0x000028, "Member 'FEOSEcomQueryOwnershipOptions::CatalogItemIds' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipOptions, CatalogNamespace) == 0x000038, "Member 'FEOSEcomQueryOwnershipOptions::CatalogNamespace' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryOwnershipTokenOptions
// 0x0050 (0x0050 - 0x0000)
struct FEOSEcomQueryOwnershipTokenOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2785[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CatalogItemIds;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2786[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CatalogNamespace;                                  // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryOwnershipTokenOptions) == 0x000008, "Wrong alignment on FEOSEcomQueryOwnershipTokenOptions");
static_assert(sizeof(FEOSEcomQueryOwnershipTokenOptions) == 0x000050, "Wrong size on FEOSEcomQueryOwnershipTokenOptions");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomQueryOwnershipTokenOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenOptions, CatalogItemIds) == 0x000028, "Member 'FEOSEcomQueryOwnershipTokenOptions::CatalogItemIds' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryOwnershipTokenOptions, CatalogNamespace) == 0x000040, "Member 'FEOSEcomQueryOwnershipTokenOptions::CatalogNamespace' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomQueryEntitlementTokenOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomQueryEntitlementTokenOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2787[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSEcomEntitlementName>        EntitlementNames;                                  // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomQueryEntitlementTokenOptions) == 0x000008, "Wrong alignment on FEOSEcomQueryEntitlementTokenOptions");
static_assert(sizeof(FEOSEcomQueryEntitlementTokenOptions) == 0x000038, "Wrong size on FEOSEcomQueryEntitlementTokenOptions");
static_assert(offsetof(FEOSEcomQueryEntitlementTokenOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomQueryEntitlementTokenOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomQueryEntitlementTokenOptions, EntitlementNames) == 0x000028, "Member 'FEOSEcomQueryEntitlementTokenOptions::EntitlementNames' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCheckoutOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSEcomCheckoutOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2788[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OverrideCatalogNamespace;                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSEcomCheckoutEntry>          Entries;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCheckoutOptions) == 0x000008, "Wrong alignment on FEOSEcomCheckoutOptions");
static_assert(sizeof(FEOSEcomCheckoutOptions) == 0x000048, "Wrong size on FEOSEcomCheckoutOptions");
static_assert(offsetof(FEOSEcomCheckoutOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCheckoutOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCheckoutOptions, OverrideCatalogNamespace) == 0x000028, "Member 'FEOSEcomCheckoutOptions::OverrideCatalogNamespace' has a wrong offset!");
static_assert(offsetof(FEOSEcomCheckoutOptions, Entries) == 0x000038, "Member 'FEOSEcomCheckoutOptions::Entries' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetEntitlementsCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSEcomGetEntitlementsCountOptions final
{
public:
	uint8                                         Pad_2789[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278A[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomGetEntitlementsCountOptions) == 0x000004, "Wrong alignment on FEOSEcomGetEntitlementsCountOptions");
static_assert(sizeof(FEOSEcomGetEntitlementsCountOptions) == 0x000028, "Wrong size on FEOSEcomGetEntitlementsCountOptions");
static_assert(offsetof(FEOSEcomGetEntitlementsCountOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomGetEntitlementsCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetEntitlementsByNameCountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomGetEntitlementsByNameCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEcomEntitlementName                EntitlementName;                                   // 0x0028(0x0010)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetEntitlementsByNameCountOptions) == 0x000008, "Wrong alignment on FEOSEcomGetEntitlementsByNameCountOptions");
static_assert(sizeof(FEOSEcomGetEntitlementsByNameCountOptions) == 0x000038, "Wrong size on FEOSEcomGetEntitlementsByNameCountOptions");
static_assert(offsetof(FEOSEcomGetEntitlementsByNameCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetEntitlementsByNameCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomGetEntitlementsByNameCountOptions, EntitlementName) == 0x000028, "Member 'FEOSEcomGetEntitlementsByNameCountOptions::EntitlementName' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyEntitlementByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSEcomCopyEntitlementByIndexOptions final
{
public:
	uint8                                         Pad_278C[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278D[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         EntitlementIndex;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyEntitlementByIndexOptions) == 0x000004, "Wrong alignment on FEOSEcomCopyEntitlementByIndexOptions");
static_assert(sizeof(FEOSEcomCopyEntitlementByIndexOptions) == 0x00002C, "Wrong size on FEOSEcomCopyEntitlementByIndexOptions");
static_assert(offsetof(FEOSEcomCopyEntitlementByIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomCopyEntitlementByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyEntitlementByIndexOptions, EntitlementIndex) == 0x000028, "Member 'FEOSEcomCopyEntitlementByIndexOptions::EntitlementIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetOfferItemCountOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomGetOfferItemCountOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomGetOfferItemCountOptions) == 0x000008, "Wrong alignment on FEOSEcomGetOfferItemCountOptions");
static_assert(sizeof(FEOSEcomGetOfferItemCountOptions) == 0x000038, "Wrong size on FEOSEcomGetOfferItemCountOptions");
static_assert(offsetof(FEOSEcomGetOfferItemCountOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomGetOfferItemCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomGetOfferItemCountOptions, OfferId) == 0x000028, "Member 'FEOSEcomGetOfferItemCountOptions::OfferId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyOfferItemByIndexOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCopyOfferItemByIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_278F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OfferId;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ItemIndex;                                         // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2790[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomCopyOfferItemByIndexOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyOfferItemByIndexOptions");
static_assert(sizeof(FEOSEcomCopyOfferItemByIndexOptions) == 0x000040, "Wrong size on FEOSEcomCopyOfferItemByIndexOptions");
static_assert(offsetof(FEOSEcomCopyOfferItemByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyOfferItemByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferItemByIndexOptions, OfferId) == 0x000028, "Member 'FEOSEcomCopyOfferItemByIndexOptions::OfferId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyOfferItemByIndexOptions, ItemIndex) == 0x000038, "Member 'FEOSEcomCopyOfferItemByIndexOptions::ItemIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyItemByIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomCopyItemByIdOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2791[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyItemByIdOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyItemByIdOptions");
static_assert(sizeof(FEOSEcomCopyItemByIdOptions) == 0x000038, "Wrong size on FEOSEcomCopyItemByIdOptions");
static_assert(offsetof(FEOSEcomCopyItemByIdOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyItemByIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyItemByIdOptions, ItemId) == 0x000028, "Member 'FEOSEcomCopyItemByIdOptions::ItemId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyItemImageInfoByIndexOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSEcomCopyItemImageInfoByIndexOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2792[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ItemId;                                            // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ImageInfoIndex;                                    // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2793[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomCopyItemImageInfoByIndexOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyItemImageInfoByIndexOptions");
static_assert(sizeof(FEOSEcomCopyItemImageInfoByIndexOptions) == 0x000040, "Wrong size on FEOSEcomCopyItemImageInfoByIndexOptions");
static_assert(offsetof(FEOSEcomCopyItemImageInfoByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyItemImageInfoByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyItemImageInfoByIndexOptions, ItemId) == 0x000028, "Member 'FEOSEcomCopyItemImageInfoByIndexOptions::ItemId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyItemImageInfoByIndexOptions, ImageInfoIndex) == 0x000038, "Member 'FEOSEcomCopyItemImageInfoByIndexOptions::ImageInfoIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomGetTransactionCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSEcomGetTransactionCountOptions final
{
public:
	uint8                                         Pad_2794[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2795[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomGetTransactionCountOptions) == 0x000004, "Wrong alignment on FEOSEcomGetTransactionCountOptions");
static_assert(sizeof(FEOSEcomGetTransactionCountOptions) == 0x000028, "Wrong size on FEOSEcomGetTransactionCountOptions");
static_assert(offsetof(FEOSEcomGetTransactionCountOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomGetTransactionCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomCopyTransactionByIdOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSEcomCopyTransactionByIdOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2796[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 TransactionId;                                     // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSEcomCopyTransactionByIdOptions) == 0x000008, "Wrong alignment on FEOSEcomCopyTransactionByIdOptions");
static_assert(sizeof(FEOSEcomCopyTransactionByIdOptions) == 0x000038, "Wrong size on FEOSEcomCopyTransactionByIdOptions");
static_assert(offsetof(FEOSEcomCopyTransactionByIdOptions, LocalUserId) == 0x000000, "Member 'FEOSEcomCopyTransactionByIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSEcomCopyTransactionByIdOptions, TransactionId) == 0x000028, "Member 'FEOSEcomCopyTransactionByIdOptions::TransactionId' has a wrong offset!");

// ScriptStruct EOSCore.EOSEcomTransactionGetEntitlementsCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSEcomTransactionGetEntitlementsCountOptions final
{
public:
	uint8                                         Pad_2797[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2798[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSEcomTransactionGetEntitlementsCountOptions) == 0x000004, "Wrong alignment on FEOSEcomTransactionGetEntitlementsCountOptions");
static_assert(sizeof(FEOSEcomTransactionGetEntitlementsCountOptions) == 0x000028, "Wrong size on FEOSEcomTransactionGetEntitlementsCountOptions");
static_assert(offsetof(FEOSEcomTransactionGetEntitlementsCountOptions, LocalUserId) == 0x000004, "Member 'FEOSEcomTransactionGetEntitlementsCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsQueryFriendsOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSFriendsQueryFriendsOptions final
{
public:
	uint8                                         Pad_2799[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_279A[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsQueryFriendsOptions) == 0x000004, "Wrong alignment on FEOSFriendsQueryFriendsOptions");
static_assert(sizeof(FEOSFriendsQueryFriendsOptions) == 0x000028, "Wrong size on FEOSFriendsQueryFriendsOptions");
static_assert(offsetof(FEOSFriendsQueryFriendsOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsQueryFriendsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsRejectInviteOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSFriendsRejectInviteOptions final
{
public:
	uint8                                         Pad_279B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_279C[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsRejectInviteOptions) == 0x000004, "Wrong alignment on FEOSFriendsRejectInviteOptions");
static_assert(sizeof(FEOSFriendsRejectInviteOptions) == 0x000048, "Wrong size on FEOSFriendsRejectInviteOptions");
static_assert(offsetof(FEOSFriendsRejectInviteOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsRejectInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsRejectInviteOptions, TargetUserId) == 0x000025, "Member 'FEOSFriendsRejectInviteOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsDeleteFriendOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSFriendsDeleteFriendOptions final
{
public:
	uint8                                         Pad_279D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_279E[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsDeleteFriendOptions) == 0x000004, "Wrong alignment on FEOSFriendsDeleteFriendOptions");
static_assert(sizeof(FEOSFriendsDeleteFriendOptions) == 0x000048, "Wrong size on FEOSFriendsDeleteFriendOptions");
static_assert(offsetof(FEOSFriendsDeleteFriendOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsDeleteFriendOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsDeleteFriendOptions, TargetUserId) == 0x000025, "Member 'FEOSFriendsDeleteFriendOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsGetFriendsCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSFriendsGetFriendsCountOptions final
{
public:
	uint8                                         Pad_279F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A0[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsGetFriendsCountOptions) == 0x000004, "Wrong alignment on FEOSFriendsGetFriendsCountOptions");
static_assert(sizeof(FEOSFriendsGetFriendsCountOptions) == 0x000028, "Wrong size on FEOSFriendsGetFriendsCountOptions");
static_assert(offsetof(FEOSFriendsGetFriendsCountOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsGetFriendsCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSFriendsGetStatusOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSFriendsGetStatusOptions final
{
public:
	uint8                                         Pad_27A1[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A2[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSFriendsGetStatusOptions) == 0x000004, "Wrong alignment on FEOSFriendsGetStatusOptions");
static_assert(sizeof(FEOSFriendsGetStatusOptions) == 0x000048, "Wrong size on FEOSFriendsGetStatusOptions");
static_assert(offsetof(FEOSFriendsGetStatusOptions, LocalUserId) == 0x000004, "Member 'FEOSFriendsGetStatusOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSFriendsGetStatusOptions, TargetUserId) == 0x000025, "Member 'FEOSFriendsGetStatusOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsDefinition
// 0x0050 (0x0050 - 0x0000)
struct FEOSLeaderboardsDefinition final
{
public:
	uint8                                         Pad_27A3[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LeaderboardId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StatName;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSELeaderboardAggregation                   Aggregation;                                       // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StartTime;                                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsDefinition) == 0x000008, "Wrong alignment on FEOSLeaderboardsDefinition");
static_assert(sizeof(FEOSLeaderboardsDefinition) == 0x000050, "Wrong size on FEOSLeaderboardsDefinition");
static_assert(offsetof(FEOSLeaderboardsDefinition, LeaderboardId) == 0x000008, "Member 'FEOSLeaderboardsDefinition::LeaderboardId' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsDefinition, StatName) == 0x000018, "Member 'FEOSLeaderboardsDefinition::StatName' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsDefinition, Aggregation) == 0x000028, "Member 'FEOSLeaderboardsDefinition::Aggregation' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsDefinition, StartTime) == 0x000030, "Member 'FEOSLeaderboardsDefinition::StartTime' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsDefinition, EndTime) == 0x000040, "Member 'FEOSLeaderboardsDefinition::EndTime' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions final
{
public:
	uint8                                         Pad_27A5[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LeaderboardIndex;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions) == 0x000004, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions) == 0x000008, "Wrong size on FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions, LeaderboardIndex) == 0x000004, "Member 'FEOSLeaderboardsCopyLeaderboardDefinitionByIndexOptions::LeaderboardIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions final
{
public:
	uint8                                         Pad_27A6[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LeaderboardId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions) == 0x000018, "Wrong size on FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions, LeaderboardId) == 0x000008, "Member 'FEOSLeaderboardsCopyLeaderboardDefinitionByLeaderboardIdOptions::LeaderboardId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions final
{
public:
	uint8                                         Pad_27A7[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LeaderboardUserScoreIndex;                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StatName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions) == 0x000018, "Wrong size on FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions, LeaderboardUserScoreIndex) == 0x000004, "Member 'FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions::LeaderboardUserScoreIndex' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions, StatName) == 0x000008, "Member 'FEOSLeaderboardsCopyLeaderboardUserScoreByIndexOptions::StatName' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsQueryLeaderboardRanksOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSLeaderboardsQueryLeaderboardRanksOptions final
{
public:
	uint8                                         Pad_27A8[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 LeaderboardId;                                     // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27A9[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsQueryLeaderboardRanksOptions) == 0x000008, "Wrong alignment on FEOSLeaderboardsQueryLeaderboardRanksOptions");
static_assert(sizeof(FEOSLeaderboardsQueryLeaderboardRanksOptions) == 0x000040, "Wrong size on FEOSLeaderboardsQueryLeaderboardRanksOptions");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardRanksOptions, LeaderboardId) == 0x000008, "Member 'FEOSLeaderboardsQueryLeaderboardRanksOptions::LeaderboardId' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsQueryLeaderboardRanksOptions, LocalUserId) == 0x000018, "Member 'FEOSLeaderboardsQueryLeaderboardRanksOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsLeaderboardRecord
// 0x0040 (0x0040 - 0x0000)
struct FEOSLeaderboardsLeaderboardRecord final
{
public:
	uint8                                         Pad_27AA[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27AB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Rank;                                              // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Score;                                             // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 UserDisplayName;                                   // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsLeaderboardRecord) == 0x000008, "Wrong alignment on FEOSLeaderboardsLeaderboardRecord");
static_assert(sizeof(FEOSLeaderboardsLeaderboardRecord) == 0x000040, "Wrong size on FEOSLeaderboardsLeaderboardRecord");
static_assert(offsetof(FEOSLeaderboardsLeaderboardRecord, UserId) == 0x000004, "Member 'FEOSLeaderboardsLeaderboardRecord::UserId' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsLeaderboardRecord, Rank) == 0x000028, "Member 'FEOSLeaderboardsLeaderboardRecord::Rank' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsLeaderboardRecord, Score) == 0x00002C, "Member 'FEOSLeaderboardsLeaderboardRecord::Score' has a wrong offset!");
static_assert(offsetof(FEOSLeaderboardsLeaderboardRecord, UserDisplayName) == 0x000030, "Member 'FEOSLeaderboardsLeaderboardRecord::UserDisplayName' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardRecordByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions final
{
public:
	uint8                                         Pad_27AC[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LeaderboardRecordIndex;                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions) == 0x000004, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions) == 0x000008, "Wrong size on FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions, LeaderboardRecordIndex) == 0x000004, "Member 'FEOSLeaderboardsCopyLeaderboardRecordByIndexOptions::LeaderboardRecordIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSLeaderboardsCopyLeaderboardRecordByUserIdOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions final
{
public:
	uint8                                         Pad_27AD[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      UserId;                                            // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27AE[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions) == 0x000004, "Wrong alignment on FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions");
static_assert(sizeof(FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions) == 0x000028, "Wrong size on FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions");
static_assert(offsetof(FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions, UserId) == 0x000004, "Member 'FEOSLeaderboardsCopyLeaderboardRecordByUserIdOptions::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyPromoteMemberOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSLobbyPromoteMemberOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27AF[0x6];                                     // 0x0052(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyPromoteMemberOptions) == 0x000008, "Wrong alignment on FEOSLobbyPromoteMemberOptions");
static_assert(sizeof(FEOSLobbyPromoteMemberOptions) == 0x000058, "Wrong size on FEOSLobbyPromoteMemberOptions");
static_assert(offsetof(FEOSLobbyPromoteMemberOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyPromoteMemberOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyPromoteMemberOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyPromoteMemberOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyPromoteMemberOptions, TargetUserId) == 0x000031, "Member 'FEOSLobbyPromoteMemberOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyUpdateReceivedOptions
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLobbyAddNotifyLobbyUpdateReceivedOptions final
{
public:
	uint8                                         Pad_27B0[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyUpdateReceivedOptions) == 0x000008, "Wrong alignment on FEOSLobbyAddNotifyLobbyUpdateReceivedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyUpdateReceivedOptions) == 0x000010, "Wrong size on FEOSLobbyAddNotifyLobbyUpdateReceivedOptions");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyMemberStatusReceivedOptions
// 0x0010 (0x0010 - 0x0000)
struct alignas(0x08) FEOSLobbyAddNotifyLobbyMemberStatusReceivedOptions final
{
public:
	uint8                                         Pad_27B1[0x10];                                    // 0x0000(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyMemberStatusReceivedOptions) == 0x000008, "Wrong alignment on FEOSLobbyAddNotifyLobbyMemberStatusReceivedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyMemberStatusReceivedOptions) == 0x000010, "Wrong size on FEOSLobbyAddNotifyLobbyMemberStatusReceivedOptions");

// ScriptStruct EOSCore.EOSLobbyHardMuteMemberOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSLobbyHardMuteMemberOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0031(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bHardMute;                                         // 0x0052(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27B2[0x5];                                     // 0x0053(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyHardMuteMemberOptions) == 0x000008, "Wrong alignment on FEOSLobbyHardMuteMemberOptions");
static_assert(sizeof(FEOSLobbyHardMuteMemberOptions) == 0x000058, "Wrong size on FEOSLobbyHardMuteMemberOptions");
static_assert(offsetof(FEOSLobbyHardMuteMemberOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyHardMuteMemberOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyHardMuteMemberOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyHardMuteMemberOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyHardMuteMemberOptions, TargetUserId) == 0x000031, "Member 'FEOSLobbyHardMuteMemberOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyHardMuteMemberOptions, bHardMute) == 0x000052, "Member 'FEOSLobbyHardMuteMemberOptions::bHardMute' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifyLobbyInviteRejectedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSLobbyAddNotifyLobbyInviteRejectedOptions final
{
public:
	uint8                                         Pad_27B3[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifyLobbyInviteRejectedOptions) == 0x000001, "Wrong alignment on FEOSLobbyAddNotifyLobbyInviteRejectedOptions");
static_assert(sizeof(FEOSLobbyAddNotifyLobbyInviteRejectedOptions) == 0x000001, "Wrong size on FEOSLobbyAddNotifyLobbyInviteRejectedOptions");

// ScriptStruct EOSCore.EOSLobbyCopyLobbyDetailsHandleByInviteIdOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions final
{
public:
	uint8                                         Pad_27B4[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions) == 0x000008, "Wrong alignment on FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions");
static_assert(sizeof(FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions) == 0x000018, "Wrong size on FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions");
static_assert(offsetof(FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions, InviteId) == 0x000008, "Member 'FEOSLobbyCopyLobbyDetailsHandleByInviteIdOptions::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions final
{
public:
	struct FEOSUIEventId                          UiEventId;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions) == 0x000008, "Wrong alignment on FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions");
static_assert(sizeof(FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions) == 0x000008, "Wrong size on FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions");
static_assert(offsetof(FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions, UiEventId) == 0x000000, "Member 'FEOSLobbyCopyLobbyDetailsHandleByUiEventIdOptions::UiEventId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyIsRTCRoomConnectedOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSLobbyIsRTCRoomConnectedOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27B5[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyIsRTCRoomConnectedOptions) == 0x000008, "Wrong alignment on FEOSLobbyIsRTCRoomConnectedOptions");
static_assert(sizeof(FEOSLobbyIsRTCRoomConnectedOptions) == 0x000038, "Wrong size on FEOSLobbyIsRTCRoomConnectedOptions");
static_assert(offsetof(FEOSLobbyIsRTCRoomConnectedOptions, LobbyID) == 0x000000, "Member 'FEOSLobbyIsRTCRoomConnectedOptions::LobbyID' has a wrong offset!");
static_assert(offsetof(FEOSLobbyIsRTCRoomConnectedOptions, LocalUserId) == 0x000010, "Member 'FEOSLobbyIsRTCRoomConnectedOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions final
{
public:
	uint8                                         Pad_27B6[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions) == 0x000001, "Wrong alignment on FEOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions");
static_assert(sizeof(FEOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions) == 0x000001, "Wrong size on FEOSLobbyAddNotifySendLobbyNativeInviteRequestedOptions");

// ScriptStruct EOSCore.EOSLobbyCreateLobbySearchOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbyCreateLobbySearchOptions final
{
public:
	uint8                                         Pad_27B7[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxResults;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyCreateLobbySearchOptions) == 0x000004, "Wrong alignment on FEOSLobbyCreateLobbySearchOptions");
static_assert(sizeof(FEOSLobbyCreateLobbySearchOptions) == 0x000008, "Wrong size on FEOSLobbyCreateLobbySearchOptions");
static_assert(offsetof(FEOSLobbyCreateLobbySearchOptions, MaxResults) == 0x000004, "Member 'FEOSLobbyCreateLobbySearchOptions::MaxResults' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyRejectInviteOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSLobbyRejectInviteOptions final
{
public:
	uint8                                         Pad_27B8[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27B9[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyRejectInviteOptions) == 0x000008, "Wrong alignment on FEOSLobbyRejectInviteOptions");
static_assert(sizeof(FEOSLobbyRejectInviteOptions) == 0x000040, "Wrong size on FEOSLobbyRejectInviteOptions");
static_assert(offsetof(FEOSLobbyRejectInviteOptions, InviteId) == 0x000008, "Member 'FEOSLobbyRejectInviteOptions::InviteId' has a wrong offset!");
static_assert(offsetof(FEOSLobbyRejectInviteOptions, LocalUserId) == 0x000018, "Member 'FEOSLobbyRejectInviteOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyQueryInvitesOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLobbyQueryInvitesOptions final
{
public:
	uint8                                         Pad_27BA[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27BB[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyQueryInvitesOptions) == 0x000004, "Wrong alignment on FEOSLobbyQueryInvitesOptions");
static_assert(sizeof(FEOSLobbyQueryInvitesOptions) == 0x000028, "Wrong size on FEOSLobbyQueryInvitesOptions");
static_assert(offsetof(FEOSLobbyQueryInvitesOptions, LocalUserId) == 0x000004, "Member 'FEOSLobbyQueryInvitesOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyGetInviteCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLobbyGetInviteCountOptions final
{
public:
	uint8                                         Pad_27BC[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27BD[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyGetInviteCountOptions) == 0x000004, "Wrong alignment on FEOSLobbyGetInviteCountOptions");
static_assert(sizeof(FEOSLobbyGetInviteCountOptions) == 0x000028, "Wrong size on FEOSLobbyGetInviteCountOptions");
static_assert(offsetof(FEOSLobbyGetInviteCountOptions, LocalUserId) == 0x000004, "Member 'FEOSLobbyGetInviteCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationSetBucketIdOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyModificationSetBucketIdOptions final
{
public:
	uint8                                         Pad_27BE[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 BucketId;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyModificationSetBucketIdOptions) == 0x000008, "Wrong alignment on FEOSLobbyModificationSetBucketIdOptions");
static_assert(sizeof(FEOSLobbyModificationSetBucketIdOptions) == 0x000018, "Wrong size on FEOSLobbyModificationSetBucketIdOptions");
static_assert(offsetof(FEOSLobbyModificationSetBucketIdOptions, BucketId) == 0x000008, "Member 'FEOSLobbyModificationSetBucketIdOptions::BucketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationSetInvitesAllowedOptions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FEOSLobbyModificationSetInvitesAllowedOptions final
{
public:
	uint8                                         Pad_27BF[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bInvitesAllowed;                                   // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27C0[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyModificationSetInvitesAllowedOptions) == 0x000004, "Wrong alignment on FEOSLobbyModificationSetInvitesAllowedOptions");
static_assert(sizeof(FEOSLobbyModificationSetInvitesAllowedOptions) == 0x000008, "Wrong size on FEOSLobbyModificationSetInvitesAllowedOptions");
static_assert(offsetof(FEOSLobbyModificationSetInvitesAllowedOptions, bInvitesAllowed) == 0x000004, "Member 'FEOSLobbyModificationSetInvitesAllowedOptions::bInvitesAllowed' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyModificationRemoveMemberAttributeOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSLobbyModificationRemoveMemberAttributeOptions final
{
public:
	uint8                                         Pad_27C1[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbyModificationRemoveMemberAttributeOptions) == 0x000008, "Wrong alignment on FEOSLobbyModificationRemoveMemberAttributeOptions");
static_assert(sizeof(FEOSLobbyModificationRemoveMemberAttributeOptions) == 0x000018, "Wrong size on FEOSLobbyModificationRemoveMemberAttributeOptions");
static_assert(offsetof(FEOSLobbyModificationRemoveMemberAttributeOptions, Key) == 0x000008, "Member 'FEOSLobbyModificationRemoveMemberAttributeOptions::Key' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsGetLobbyOwnerOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbyDetailsGetLobbyOwnerOptions final
{
public:
	uint8                                         Pad_27C2[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsGetLobbyOwnerOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsGetLobbyOwnerOptions");
static_assert(sizeof(FEOSLobbyDetailsGetLobbyOwnerOptions) == 0x000004, "Wrong size on FEOSLobbyDetailsGetLobbyOwnerOptions");

// ScriptStruct EOSCore.EOSLobbyDetailsCopyInfoOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbyDetailsCopyInfoOptions final
{
public:
	uint8                                         Pad_27C3[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsCopyInfoOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsCopyInfoOptions");
static_assert(sizeof(FEOSLobbyDetailsCopyInfoOptions) == 0x000004, "Wrong size on FEOSLobbyDetailsCopyInfoOptions");

// ScriptStruct EOSCore.EOSLobbyDetailsGetMemberAttributeCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSLobbyDetailsGetMemberAttributeCountOptions final
{
public:
	uint8                                         Pad_27C4[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27C5[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsGetMemberAttributeCountOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsGetMemberAttributeCountOptions");
static_assert(sizeof(FEOSLobbyDetailsGetMemberAttributeCountOptions) == 0x000028, "Wrong size on FEOSLobbyDetailsGetMemberAttributeCountOptions");
static_assert(offsetof(FEOSLobbyDetailsGetMemberAttributeCountOptions, TargetUserId) == 0x000004, "Member 'FEOSLobbyDetailsGetMemberAttributeCountOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbyDetailsGetMemberCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbyDetailsGetMemberCountOptions final
{
public:
	uint8                                         Pad_27C6[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbyDetailsGetMemberCountOptions) == 0x000004, "Wrong alignment on FEOSLobbyDetailsGetMemberCountOptions");
static_assert(sizeof(FEOSLobbyDetailsGetMemberCountOptions) == 0x000004, "Wrong size on FEOSLobbyDetailsGetMemberCountOptions");

// ScriptStruct EOSCore.EOSLobbySearchSetLobbyIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSLobbySearchSetLobbyIdOptions final
{
public:
	class FString                                 LobbyID;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbySearchSetLobbyIdOptions) == 0x000008, "Wrong alignment on FEOSLobbySearchSetLobbyIdOptions");
static_assert(sizeof(FEOSLobbySearchSetLobbyIdOptions) == 0x000010, "Wrong size on FEOSLobbySearchSetLobbyIdOptions");
static_assert(offsetof(FEOSLobbySearchSetLobbyIdOptions, LobbyID) == 0x000000, "Member 'FEOSLobbySearchSetLobbyIdOptions::LobbyID' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchSetMaxResultsOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbySearchSetMaxResultsOptions final
{
public:
	uint8                                         Pad_27C7[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxResults;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbySearchSetMaxResultsOptions) == 0x000004, "Wrong alignment on FEOSLobbySearchSetMaxResultsOptions");
static_assert(sizeof(FEOSLobbySearchSetMaxResultsOptions) == 0x000008, "Wrong size on FEOSLobbySearchSetMaxResultsOptions");
static_assert(offsetof(FEOSLobbySearchSetMaxResultsOptions, MaxResults) == 0x000004, "Member 'FEOSLobbySearchSetMaxResultsOptions::MaxResults' has a wrong offset!");

// ScriptStruct EOSCore.EOSLobbySearchGetSearchResultCountOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSLobbySearchGetSearchResultCountOptions final
{
public:
	uint8                                         Pad_27C8[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSLobbySearchGetSearchResultCountOptions) == 0x000004, "Wrong alignment on FEOSLobbySearchGetSearchResultCountOptions");
static_assert(sizeof(FEOSLobbySearchGetSearchResultCountOptions) == 0x000004, "Wrong size on FEOSLobbySearchGetSearchResultCountOptions");

// ScriptStruct EOSCore.EOSLobbySearchCopySearchResultByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSLobbySearchCopySearchResultByIndexOptions final
{
public:
	uint8                                         Pad_27C9[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         LobbyIndex;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSLobbySearchCopySearchResultByIndexOptions) == 0x000004, "Wrong alignment on FEOSLobbySearchCopySearchResultByIndexOptions");
static_assert(sizeof(FEOSLobbySearchCopySearchResultByIndexOptions) == 0x000008, "Wrong size on FEOSLobbySearchCopySearchResultByIndexOptions");
static_assert(offsetof(FEOSLobbySearchCopySearchResultByIndexOptions, LobbyIndex) == 0x000004, "Member 'FEOSLobbySearchCopySearchResultByIndexOptions::LobbyIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSMetricsBeginPlayerSessionOptions
// 0x0070 (0x0070 - 0x0000)
struct FEOSMetricsBeginPlayerSessionOptions final
{
public:
	uint8                                         Pad_27CA[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSEMetricsAccountIdType                     AccountIdType;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      Epic;                                              // 0x0005(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27CB[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 External;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEUserControllerType                       ControllerType;                                    // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27CC[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ServerIp;                                          // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 GameSessionId;                                     // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSMetricsBeginPlayerSessionOptions) == 0x000008, "Wrong alignment on FEOSMetricsBeginPlayerSessionOptions");
static_assert(sizeof(FEOSMetricsBeginPlayerSessionOptions) == 0x000070, "Wrong size on FEOSMetricsBeginPlayerSessionOptions");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, AccountIdType) == 0x000004, "Member 'FEOSMetricsBeginPlayerSessionOptions::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, Epic) == 0x000005, "Member 'FEOSMetricsBeginPlayerSessionOptions::Epic' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, External) == 0x000028, "Member 'FEOSMetricsBeginPlayerSessionOptions::External' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, DisplayName) == 0x000038, "Member 'FEOSMetricsBeginPlayerSessionOptions::DisplayName' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, ControllerType) == 0x000048, "Member 'FEOSMetricsBeginPlayerSessionOptions::ControllerType' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, ServerIp) == 0x000050, "Member 'FEOSMetricsBeginPlayerSessionOptions::ServerIp' has a wrong offset!");
static_assert(offsetof(FEOSMetricsBeginPlayerSessionOptions, GameSessionId) == 0x000060, "Member 'FEOSMetricsBeginPlayerSessionOptions::GameSessionId' has a wrong offset!");

// ScriptStruct EOSCore.EOSMetricsEndPlayerSessionOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSMetricsEndPlayerSessionOptions final
{
public:
	uint8                                         Pad_27CD[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSEMetricsAccountIdType                     AccountIdType;                                     // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      Epic;                                              // 0x0005(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27CE[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 External;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSMetricsEndPlayerSessionOptions) == 0x000008, "Wrong alignment on FEOSMetricsEndPlayerSessionOptions");
static_assert(sizeof(FEOSMetricsEndPlayerSessionOptions) == 0x000038, "Wrong size on FEOSMetricsEndPlayerSessionOptions");
static_assert(offsetof(FEOSMetricsEndPlayerSessionOptions, AccountIdType) == 0x000004, "Member 'FEOSMetricsEndPlayerSessionOptions::AccountIdType' has a wrong offset!");
static_assert(offsetof(FEOSMetricsEndPlayerSessionOptions, Epic) == 0x000005, "Member 'FEOSMetricsEndPlayerSessionOptions::Epic' has a wrong offset!");
static_assert(offsetof(FEOSMetricsEndPlayerSessionOptions, External) == 0x000028, "Member 'FEOSMetricsEndPlayerSessionOptions::External' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsInstallModOptions
// 0x0088 (0x0088 - 0x0000)
struct FEOSModsInstallModOptions final
{
public:
	uint8                                         Pad_27CF[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D0[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSModIdentifier                      Mod;                                               // 0x0028(0x0058)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	bool                                          bRemoveAfterExit;                                  // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D1[0x7];                                     // 0x0081(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSModsInstallModOptions) == 0x000008, "Wrong alignment on FEOSModsInstallModOptions");
static_assert(sizeof(FEOSModsInstallModOptions) == 0x000088, "Wrong size on FEOSModsInstallModOptions");
static_assert(offsetof(FEOSModsInstallModOptions, LocalUserId) == 0x000004, "Member 'FEOSModsInstallModOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsInstallModOptions, Mod) == 0x000028, "Member 'FEOSModsInstallModOptions::Mod' has a wrong offset!");
static_assert(offsetof(FEOSModsInstallModOptions, bRemoveAfterExit) == 0x000080, "Member 'FEOSModsInstallModOptions::bRemoveAfterExit' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsEnumerateModsOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSModsEnumerateModsOptions final
{
public:
	uint8                                         Pad_27D2[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEModEnumerationType                       Type;                                              // 0x0025(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D3[0x2];                                     // 0x0026(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSModsEnumerateModsOptions) == 0x000004, "Wrong alignment on FEOSModsEnumerateModsOptions");
static_assert(sizeof(FEOSModsEnumerateModsOptions) == 0x000028, "Wrong size on FEOSModsEnumerateModsOptions");
static_assert(offsetof(FEOSModsEnumerateModsOptions, LocalUserId) == 0x000004, "Member 'FEOSModsEnumerateModsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSModsEnumerateModsOptions, Type) == 0x000025, "Member 'FEOSModsEnumerateModsOptions::Type' has a wrong offset!");

// ScriptStruct EOSCore.EOSModsModInfo
// 0x0020 (0x0020 - 0x0000)
struct FEOSModsModInfo final
{
public:
	uint8                                         Pad_27D4[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSModIdentifier>              Mods;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	EEOSEModEnumerationType                       Type;                                              // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D5[0x7];                                     // 0x0019(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSModsModInfo) == 0x000008, "Wrong alignment on FEOSModsModInfo");
static_assert(sizeof(FEOSModsModInfo) == 0x000020, "Wrong size on FEOSModsModInfo");
static_assert(offsetof(FEOSModsModInfo, Mods) == 0x000008, "Member 'FEOSModsModInfo::Mods' has a wrong offset!");
static_assert(offsetof(FEOSModsModInfo, Type) == 0x000018, "Member 'FEOSModsModInfo::Type' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PSendPacketOptions
// 0x0080 (0x0080 - 0x0000)
struct FEOSP2PSendPacketOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D6[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	int32                                         Channel;                                           // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D7[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<uint8>                                 Data;                                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bAllowDelayedDelivery;                             // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEPacketReliability                        Reliability;                                       // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDisableAutoAcceptConnection;                      // 0x007A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27D8[0x5];                                     // 0x007B(0x0005)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PSendPacketOptions) == 0x000008, "Wrong alignment on FEOSP2PSendPacketOptions");
static_assert(sizeof(FEOSP2PSendPacketOptions) == 0x000080, "Wrong size on FEOSP2PSendPacketOptions");
static_assert(offsetof(FEOSP2PSendPacketOptions, LocalUserId) == 0x000000, "Member 'FEOSP2PSendPacketOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, RemoteUserId) == 0x000021, "Member 'FEOSP2PSendPacketOptions::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, SocketId) == 0x000048, "Member 'FEOSP2PSendPacketOptions::SocketId' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, Channel) == 0x000060, "Member 'FEOSP2PSendPacketOptions::Channel' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, Data) == 0x000068, "Member 'FEOSP2PSendPacketOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, bAllowDelayedDelivery) == 0x000078, "Member 'FEOSP2PSendPacketOptions::bAllowDelayedDelivery' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, Reliability) == 0x000079, "Member 'FEOSP2PSendPacketOptions::Reliability' has a wrong offset!");
static_assert(offsetof(FEOSP2PSendPacketOptions, bDisableAutoAcceptConnection) == 0x00007A, "Member 'FEOSP2PSendPacketOptions::bDisableAutoAcceptConnection' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PGetNextReceivedPacketSizeOptions
// 0x002C (0x002C - 0x0000)
struct FEOSP2PGetNextReceivedPacketSizeOptions final
{
public:
	uint8                                         Pad_27D9[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27DA[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RequestedChannel;                                  // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PGetNextReceivedPacketSizeOptions) == 0x000004, "Wrong alignment on FEOSP2PGetNextReceivedPacketSizeOptions");
static_assert(sizeof(FEOSP2PGetNextReceivedPacketSizeOptions) == 0x00002C, "Wrong size on FEOSP2PGetNextReceivedPacketSizeOptions");
static_assert(offsetof(FEOSP2PGetNextReceivedPacketSizeOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PGetNextReceivedPacketSizeOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PGetNextReceivedPacketSizeOptions, RequestedChannel) == 0x000028, "Member 'FEOSP2PGetNextReceivedPacketSizeOptions::RequestedChannel' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PAddNotifyPeerConnectionRequestOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSP2PAddNotifyPeerConnectionRequestOptions final
{
public:
	uint8                                         Pad_27DB[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27DC[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PAddNotifyPeerConnectionRequestOptions) == 0x000008, "Wrong alignment on FEOSP2PAddNotifyPeerConnectionRequestOptions");
static_assert(sizeof(FEOSP2PAddNotifyPeerConnectionRequestOptions) == 0x000040, "Wrong size on FEOSP2PAddNotifyPeerConnectionRequestOptions");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionRequestOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PAddNotifyPeerConnectionRequestOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionRequestOptions, SocketId) == 0x000028, "Member 'FEOSP2PAddNotifyPeerConnectionRequestOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PAddNotifyPeerConnectionEstablishedOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSP2PAddNotifyPeerConnectionEstablishedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27DD[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PAddNotifyPeerConnectionEstablishedOptions) == 0x000008, "Wrong alignment on FEOSP2PAddNotifyPeerConnectionEstablishedOptions");
static_assert(sizeof(FEOSP2PAddNotifyPeerConnectionEstablishedOptions) == 0x000040, "Wrong size on FEOSP2PAddNotifyPeerConnectionEstablishedOptions");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionEstablishedOptions, LocalUserId) == 0x000000, "Member 'FEOSP2PAddNotifyPeerConnectionEstablishedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAddNotifyPeerConnectionEstablishedOptions, SocketId) == 0x000028, "Member 'FEOSP2PAddNotifyPeerConnectionEstablishedOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PAcceptConnectionOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSP2PAcceptConnectionOptions final
{
public:
	uint8                                         Pad_27DE[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27DF[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PAcceptConnectionOptions) == 0x000008, "Wrong alignment on FEOSP2PAcceptConnectionOptions");
static_assert(sizeof(FEOSP2PAcceptConnectionOptions) == 0x000060, "Wrong size on FEOSP2PAcceptConnectionOptions");
static_assert(offsetof(FEOSP2PAcceptConnectionOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PAcceptConnectionOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAcceptConnectionOptions, RemoteUserId) == 0x000025, "Member 'FEOSP2PAcceptConnectionOptions::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PAcceptConnectionOptions, SocketId) == 0x000048, "Member 'FEOSP2PAcceptConnectionOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PCloseConnectionOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSP2PCloseConnectionOptions final
{
public:
	uint8                                         Pad_27E0[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      RemoteUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27E1[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0048(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PCloseConnectionOptions) == 0x000008, "Wrong alignment on FEOSP2PCloseConnectionOptions");
static_assert(sizeof(FEOSP2PCloseConnectionOptions) == 0x000060, "Wrong size on FEOSP2PCloseConnectionOptions");
static_assert(offsetof(FEOSP2PCloseConnectionOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PCloseConnectionOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PCloseConnectionOptions, RemoteUserId) == 0x000025, "Member 'FEOSP2PCloseConnectionOptions::RemoteUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PCloseConnectionOptions, SocketId) == 0x000048, "Member 'FEOSP2PCloseConnectionOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PCloseConnectionsOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSP2PCloseConnectionsOptions final
{
public:
	uint8                                         Pad_27E2[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27E3[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSP2PSocketId                        SocketId;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PCloseConnectionsOptions) == 0x000008, "Wrong alignment on FEOSP2PCloseConnectionsOptions");
static_assert(sizeof(FEOSP2PCloseConnectionsOptions) == 0x000040, "Wrong size on FEOSP2PCloseConnectionsOptions");
static_assert(offsetof(FEOSP2PCloseConnectionsOptions, LocalUserId) == 0x000004, "Member 'FEOSP2PCloseConnectionsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSP2PCloseConnectionsOptions, SocketId) == 0x000028, "Member 'FEOSP2PCloseConnectionsOptions::SocketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PQueryNATTypeOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PQueryNATTypeOptions final
{
public:
	uint8                                         Pad_27E4[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PQueryNATTypeOptions) == 0x000004, "Wrong alignment on FEOSP2PQueryNATTypeOptions");
static_assert(sizeof(FEOSP2PQueryNATTypeOptions) == 0x000004, "Wrong size on FEOSP2PQueryNATTypeOptions");

// ScriptStruct EOSCore.EOSP2PSetRelayControlOptions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FEOSP2PSetRelayControlOptions final
{
public:
	uint8                                         Pad_27E5[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSERelayControl                             RelayControl;                                      // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27E6[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PSetRelayControlOptions) == 0x000004, "Wrong alignment on FEOSP2PSetRelayControlOptions");
static_assert(sizeof(FEOSP2PSetRelayControlOptions) == 0x000008, "Wrong size on FEOSP2PSetRelayControlOptions");
static_assert(offsetof(FEOSP2PSetRelayControlOptions, RelayControl) == 0x000004, "Member 'FEOSP2PSetRelayControlOptions::RelayControl' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PSetPortRangeOptions
// 0x000C (0x000C - 0x0000)
struct FEOSP2PSetPortRangeOptions final
{
public:
	uint8                                         Pad_27E7[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Port;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxAdditionalPortsToTry;                           // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PSetPortRangeOptions) == 0x000004, "Wrong alignment on FEOSP2PSetPortRangeOptions");
static_assert(sizeof(FEOSP2PSetPortRangeOptions) == 0x00000C, "Wrong size on FEOSP2PSetPortRangeOptions");
static_assert(offsetof(FEOSP2PSetPortRangeOptions, Port) == 0x000004, "Member 'FEOSP2PSetPortRangeOptions::Port' has a wrong offset!");
static_assert(offsetof(FEOSP2PSetPortRangeOptions, MaxAdditionalPortsToTry) == 0x000008, "Member 'FEOSP2PSetPortRangeOptions::MaxAdditionalPortsToTry' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PGetPortRangeOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PGetPortRangeOptions final
{
public:
	uint8                                         Pad_27E8[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PGetPortRangeOptions) == 0x000004, "Wrong alignment on FEOSP2PGetPortRangeOptions");
static_assert(sizeof(FEOSP2PGetPortRangeOptions) == 0x000004, "Wrong size on FEOSP2PGetPortRangeOptions");

// ScriptStruct EOSCore.EOSP2PSetPacketQueueSizeOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSP2PSetPacketQueueSizeOptions final
{
public:
	uint8                                         Pad_27E9[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 IncomingPacketQueueMaxSizeBytes;                   // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutgoingPacketQueueMaxSizeBytes;                   // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSP2PSetPacketQueueSizeOptions) == 0x000008, "Wrong alignment on FEOSP2PSetPacketQueueSizeOptions");
static_assert(sizeof(FEOSP2PSetPacketQueueSizeOptions) == 0x000028, "Wrong size on FEOSP2PSetPacketQueueSizeOptions");
static_assert(offsetof(FEOSP2PSetPacketQueueSizeOptions, IncomingPacketQueueMaxSizeBytes) == 0x000008, "Member 'FEOSP2PSetPacketQueueSizeOptions::IncomingPacketQueueMaxSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSP2PSetPacketQueueSizeOptions, OutgoingPacketQueueMaxSizeBytes) == 0x000018, "Member 'FEOSP2PSetPacketQueueSizeOptions::OutgoingPacketQueueMaxSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSP2PGetPacketQueueInfoOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSP2PGetPacketQueueInfoOptions final
{
public:
	uint8                                         Pad_27EA[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSP2PGetPacketQueueInfoOptions) == 0x000004, "Wrong alignment on FEOSP2PGetPacketQueueInfoOptions");
static_assert(sizeof(FEOSP2PGetPacketQueueInfoOptions) == 0x000004, "Wrong size on FEOSP2PGetPacketQueueInfoOptions");

// ScriptStruct EOSCore.EOSPlayerDataStorageFileMetadata
// 0x0038 (0x0038 - 0x0000)
struct FEOSPlayerDataStorageFileMetadata final
{
public:
	uint8                                         Pad_27EB[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FileSizeBytes;                                     // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 MD5Hash;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Filename;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              LastModifiedTime;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         UnencryptedDataSizeBytes;                          // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27EC[0x4];                                     // 0x0034(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageFileMetadata) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageFileMetadata");
static_assert(sizeof(FEOSPlayerDataStorageFileMetadata) == 0x000038, "Wrong size on FEOSPlayerDataStorageFileMetadata");
static_assert(offsetof(FEOSPlayerDataStorageFileMetadata, FileSizeBytes) == 0x000004, "Member 'FEOSPlayerDataStorageFileMetadata::FileSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileMetadata, MD5Hash) == 0x000008, "Member 'FEOSPlayerDataStorageFileMetadata::MD5Hash' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileMetadata, Filename) == 0x000018, "Member 'FEOSPlayerDataStorageFileMetadata::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileMetadata, LastModifiedTime) == 0x000028, "Member 'FEOSPlayerDataStorageFileMetadata::LastModifiedTime' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageFileMetadata, UnencryptedDataSizeBytes) == 0x000030, "Member 'FEOSPlayerDataStorageFileMetadata::UnencryptedDataSizeBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageQueryFileOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSPlayerDataStorageQueryFileOptions final
{
public:
	uint8                                         Pad_27ED[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27EE[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageQueryFileOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageQueryFileOptions");
static_assert(sizeof(FEOSPlayerDataStorageQueryFileOptions) == 0x000038, "Wrong size on FEOSPlayerDataStorageQueryFileOptions");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageQueryFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileOptions, Filename) == 0x000028, "Member 'FEOSPlayerDataStorageQueryFileOptions::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageQueryFileListOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSPlayerDataStorageQueryFileListOptions final
{
public:
	uint8                                         Pad_27EF[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F0[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageQueryFileListOptions) == 0x000004, "Wrong alignment on FEOSPlayerDataStorageQueryFileListOptions");
static_assert(sizeof(FEOSPlayerDataStorageQueryFileListOptions) == 0x000028, "Wrong size on FEOSPlayerDataStorageQueryFileListOptions");
static_assert(offsetof(FEOSPlayerDataStorageQueryFileListOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageQueryFileListOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageGetFileMetadataCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSPlayerDataStorageGetFileMetadataCountOptions final
{
public:
	uint8                                         Pad_27F1[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F2[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageGetFileMetadataCountOptions) == 0x000004, "Wrong alignment on FEOSPlayerDataStorageGetFileMetadataCountOptions");
static_assert(sizeof(FEOSPlayerDataStorageGetFileMetadataCountOptions) == 0x000028, "Wrong size on FEOSPlayerDataStorageGetFileMetadataCountOptions");
static_assert(offsetof(FEOSPlayerDataStorageGetFileMetadataCountOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageGetFileMetadataCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageCopyFileMetadataAtIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions final
{
public:
	uint8                                         Pad_27F3[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F4[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions) == 0x000004, "Wrong alignment on FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions");
static_assert(sizeof(FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions) == 0x00002C, "Wrong size on FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions");
static_assert(offsetof(FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions, Index) == 0x000028, "Member 'FEOSPlayerDataStorageCopyFileMetadataAtIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDuplicateFileOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSPlayerDataStorageDuplicateFileOptions final
{
public:
	uint8                                         Pad_27F5[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F6[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SourceFilename;                                    // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DestinationFilename;                               // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlayerDataStorageDuplicateFileOptions) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageDuplicateFileOptions");
static_assert(sizeof(FEOSPlayerDataStorageDuplicateFileOptions) == 0x000048, "Wrong size on FEOSPlayerDataStorageDuplicateFileOptions");
static_assert(offsetof(FEOSPlayerDataStorageDuplicateFileOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageDuplicateFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDuplicateFileOptions, SourceFilename) == 0x000028, "Member 'FEOSPlayerDataStorageDuplicateFileOptions::SourceFilename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageDuplicateFileOptions, DestinationFilename) == 0x000038, "Member 'FEOSPlayerDataStorageDuplicateFileOptions::DestinationFilename' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageReadFileDataCallbackInfo
// 0x0058 (0x0058 - 0x0000)
struct FEOSPlayerDataStorageReadFileDataCallbackInfo final
{
public:
	uint8                                         Pad_27F7[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F8[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         TotalFileSizeBytes;                                // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLastChunk;                                      // 0x0044(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27F9[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DataChunkLengthBytes;                              // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27FA[0xC];                                     // 0x004C(0x000C)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageReadFileDataCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageReadFileDataCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageReadFileDataCallbackInfo) == 0x000058, "Wrong size on FEOSPlayerDataStorageReadFileDataCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageReadFileDataCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSPlayerDataStorageReadFileDataCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileDataCallbackInfo, Filename) == 0x000030, "Member 'FEOSPlayerDataStorageReadFileDataCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileDataCallbackInfo, TotalFileSizeBytes) == 0x000040, "Member 'FEOSPlayerDataStorageReadFileDataCallbackInfo::TotalFileSizeBytes' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileDataCallbackInfo, bIsLastChunk) == 0x000044, "Member 'FEOSPlayerDataStorageReadFileDataCallbackInfo::bIsLastChunk' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageReadFileDataCallbackInfo, DataChunkLengthBytes) == 0x000048, "Member 'FEOSPlayerDataStorageReadFileDataCallbackInfo::DataChunkLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageWriteFileDataCallbackInfo
// 0x0048 (0x0048 - 0x0000)
struct FEOSPlayerDataStorageWriteFileDataCallbackInfo final
{
public:
	uint8                                         Pad_27FB[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0008(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27FC[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         DataBufferLengthBytes;                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27FD[0x4];                                     // 0x0044(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageWriteFileDataCallbackInfo) == 0x000008, "Wrong alignment on FEOSPlayerDataStorageWriteFileDataCallbackInfo");
static_assert(sizeof(FEOSPlayerDataStorageWriteFileDataCallbackInfo) == 0x000048, "Wrong size on FEOSPlayerDataStorageWriteFileDataCallbackInfo");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileDataCallbackInfo, LocalUserId) == 0x000008, "Member 'FEOSPlayerDataStorageWriteFileDataCallbackInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileDataCallbackInfo, Filename) == 0x000030, "Member 'FEOSPlayerDataStorageWriteFileDataCallbackInfo::Filename' has a wrong offset!");
static_assert(offsetof(FEOSPlayerDataStorageWriteFileDataCallbackInfo, DataBufferLengthBytes) == 0x000040, "Member 'FEOSPlayerDataStorageWriteFileDataCallbackInfo::DataBufferLengthBytes' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlayerDataStorageDeleteCacheOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSPlayerDataStorageDeleteCacheOptions final
{
public:
	uint8                                         Pad_27FE[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_27FF[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPlayerDataStorageDeleteCacheOptions) == 0x000004, "Wrong alignment on FEOSPlayerDataStorageDeleteCacheOptions");
static_assert(sizeof(FEOSPlayerDataStorageDeleteCacheOptions) == 0x000028, "Wrong size on FEOSPlayerDataStorageDeleteCacheOptions");
static_assert(offsetof(FEOSPlayerDataStorageDeleteCacheOptions, LocalUserId) == 0x000004, "Member 'FEOSPlayerDataStorageDeleteCacheOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSHPresence
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHPresence final
{
public:
	uint8                                         Pad_2800[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHPresence) == 0x000008, "Wrong alignment on FEOSHPresence");
static_assert(sizeof(FEOSHPresence) == 0x000008, "Wrong size on FEOSHPresence");

// ScriptStruct EOSCore.EOSHPresenceModification
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHPresenceModification final
{
public:
	uint8                                         Pad_2801[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHPresenceModification) == 0x000008, "Wrong alignment on FEOSHPresenceModification");
static_assert(sizeof(FEOSHPresenceModification) == 0x000008, "Wrong size on FEOSHPresenceModification");

// ScriptStruct EOSCore.EOSPresenceInfo
// 0x0090 (0x0090 - 0x0000)
struct FEOSPresenceInfo final
{
public:
	uint8                                         Pad_2802[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSPresenceEStatus                           Status;                                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      UserId;                                            // 0x0005(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2803[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ProductId;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProductVersion;                                    // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Platform;                                          // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 RichText;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2804[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSPresenceDataRecord>         Records;                                           // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	class FString                                 ProductName;                                       // 0x0080(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceInfo) == 0x000008, "Wrong alignment on FEOSPresenceInfo");
static_assert(sizeof(FEOSPresenceInfo) == 0x000090, "Wrong size on FEOSPresenceInfo");
static_assert(offsetof(FEOSPresenceInfo, Status) == 0x000004, "Member 'FEOSPresenceInfo::Status' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, UserId) == 0x000005, "Member 'FEOSPresenceInfo::UserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, ProductId) == 0x000028, "Member 'FEOSPresenceInfo::ProductId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, ProductVersion) == 0x000038, "Member 'FEOSPresenceInfo::ProductVersion' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, Platform) == 0x000048, "Member 'FEOSPresenceInfo::Platform' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, RichText) == 0x000058, "Member 'FEOSPresenceInfo::RichText' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, Records) == 0x000070, "Member 'FEOSPresenceInfo::Records' has a wrong offset!");
static_assert(offsetof(FEOSPresenceInfo, ProductName) == 0x000080, "Member 'FEOSPresenceInfo::ProductName' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceHasPresenceOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSPresenceHasPresenceOptions final
{
public:
	uint8                                         Pad_2805[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2806[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceHasPresenceOptions) == 0x000004, "Wrong alignment on FEOSPresenceHasPresenceOptions");
static_assert(sizeof(FEOSPresenceHasPresenceOptions) == 0x000048, "Wrong size on FEOSPresenceHasPresenceOptions");
static_assert(offsetof(FEOSPresenceHasPresenceOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceHasPresenceOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceHasPresenceOptions, TargetUserId) == 0x000025, "Member 'FEOSPresenceHasPresenceOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceCopyPresenceOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSPresenceCopyPresenceOptions final
{
public:
	uint8                                         Pad_2807[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2808[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceCopyPresenceOptions) == 0x000004, "Wrong alignment on FEOSPresenceCopyPresenceOptions");
static_assert(sizeof(FEOSPresenceCopyPresenceOptions) == 0x000048, "Wrong size on FEOSPresenceCopyPresenceOptions");
static_assert(offsetof(FEOSPresenceCopyPresenceOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceCopyPresenceOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceCopyPresenceOptions, TargetUserId) == 0x000025, "Member 'FEOSPresenceCopyPresenceOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceCreatePresenceModificationOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSPresenceCreatePresenceModificationOptions final
{
public:
	uint8                                         Pad_2809[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_280A[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceCreatePresenceModificationOptions) == 0x000004, "Wrong alignment on FEOSPresenceCreatePresenceModificationOptions");
static_assert(sizeof(FEOSPresenceCreatePresenceModificationOptions) == 0x000028, "Wrong size on FEOSPresenceCreatePresenceModificationOptions");
static_assert(offsetof(FEOSPresenceCreatePresenceModificationOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceCreatePresenceModificationOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceSetPresenceOptions
// 0x0030 (0x0030 - 0x0000)
struct FEOSPresenceSetPresenceOptions final
{
public:
	uint8                                         Pad_280B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_280C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSHPresenceModification              PresenceModificationHandle;                        // 0x0028(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceSetPresenceOptions) == 0x000008, "Wrong alignment on FEOSPresenceSetPresenceOptions");
static_assert(sizeof(FEOSPresenceSetPresenceOptions) == 0x000030, "Wrong size on FEOSPresenceSetPresenceOptions");
static_assert(offsetof(FEOSPresenceSetPresenceOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceSetPresenceOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceSetPresenceOptions, PresenceModificationHandle) == 0x000028, "Member 'FEOSPresenceSetPresenceOptions::PresenceModificationHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceAddNotifyOnPresenceChangedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSPresenceAddNotifyOnPresenceChangedOptions final
{
public:
	uint8                                         Pad_280D[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceAddNotifyOnPresenceChangedOptions) == 0x000004, "Wrong alignment on FEOSPresenceAddNotifyOnPresenceChangedOptions");
static_assert(sizeof(FEOSPresenceAddNotifyOnPresenceChangedOptions) == 0x000004, "Wrong size on FEOSPresenceAddNotifyOnPresenceChangedOptions");

// ScriptStruct EOSCore.EOSPresenceAddNotifyJoinGameAcceptedOptions
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FEOSPresenceAddNotifyJoinGameAcceptedOptions final
{
public:
	uint8                                         Pad_280E[0x4];                                     // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceAddNotifyJoinGameAcceptedOptions) == 0x000004, "Wrong alignment on FEOSPresenceAddNotifyJoinGameAcceptedOptions");
static_assert(sizeof(FEOSPresenceAddNotifyJoinGameAcceptedOptions) == 0x000004, "Wrong size on FEOSPresenceAddNotifyJoinGameAcceptedOptions");

// ScriptStruct EOSCore.EOSPresenceGetJoinInfoOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSPresenceGetJoinInfoOptions final
{
public:
	uint8                                         Pad_280F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2810[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceGetJoinInfoOptions) == 0x000004, "Wrong alignment on FEOSPresenceGetJoinInfoOptions");
static_assert(sizeof(FEOSPresenceGetJoinInfoOptions) == 0x000048, "Wrong size on FEOSPresenceGetJoinInfoOptions");
static_assert(offsetof(FEOSPresenceGetJoinInfoOptions, LocalUserId) == 0x000004, "Member 'FEOSPresenceGetJoinInfoOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSPresenceGetJoinInfoOptions, TargetUserId) == 0x000025, "Member 'FEOSPresenceGetJoinInfoOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationSetStatusOptions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FEOSPresenceModificationSetStatusOptions final
{
public:
	uint8                                         Pad_2811[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSPresenceEStatus                           Status;                                            // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2812[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSPresenceModificationSetStatusOptions) == 0x000004, "Wrong alignment on FEOSPresenceModificationSetStatusOptions");
static_assert(sizeof(FEOSPresenceModificationSetStatusOptions) == 0x000008, "Wrong size on FEOSPresenceModificationSetStatusOptions");
static_assert(offsetof(FEOSPresenceModificationSetStatusOptions, Status) == 0x000004, "Member 'FEOSPresenceModificationSetStatusOptions::Status' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationSetRawRichTextOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSPresenceModificationSetRawRichTextOptions final
{
public:
	uint8                                         Pad_2813[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RichText;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceModificationSetRawRichTextOptions) == 0x000008, "Wrong alignment on FEOSPresenceModificationSetRawRichTextOptions");
static_assert(sizeof(FEOSPresenceModificationSetRawRichTextOptions) == 0x000018, "Wrong size on FEOSPresenceModificationSetRawRichTextOptions");
static_assert(offsetof(FEOSPresenceModificationSetRawRichTextOptions, RichText) == 0x000008, "Member 'FEOSPresenceModificationSetRawRichTextOptions::RichText' has a wrong offset!");

// ScriptStruct EOSCore.EOSPresenceModificationSetDataOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSPresenceModificationSetDataOptions final
{
public:
	uint8                                         Pad_2814[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSPresenceDataRecord>         Records;                                           // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPresenceModificationSetDataOptions) == 0x000008, "Wrong alignment on FEOSPresenceModificationSetDataOptions");
static_assert(sizeof(FEOSPresenceModificationSetDataOptions) == 0x000018, "Wrong size on FEOSPresenceModificationSetDataOptions");
static_assert(offsetof(FEOSPresenceModificationSetDataOptions, Records) == 0x000008, "Member 'FEOSPresenceModificationSetDataOptions::Records' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotAddProgressionOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSProgressionSnapshotAddProgressionOptions final
{
public:
	int32                                         SnapshotId;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2815[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Key;                                               // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSProgressionSnapshotAddProgressionOptions) == 0x000008, "Wrong alignment on FEOSProgressionSnapshotAddProgressionOptions");
static_assert(sizeof(FEOSProgressionSnapshotAddProgressionOptions) == 0x000028, "Wrong size on FEOSProgressionSnapshotAddProgressionOptions");
static_assert(offsetof(FEOSProgressionSnapshotAddProgressionOptions, SnapshotId) == 0x000000, "Member 'FEOSProgressionSnapshotAddProgressionOptions::SnapshotId' has a wrong offset!");
static_assert(offsetof(FEOSProgressionSnapshotAddProgressionOptions, Key) == 0x000008, "Member 'FEOSProgressionSnapshotAddProgressionOptions::Key' has a wrong offset!");
static_assert(offsetof(FEOSProgressionSnapshotAddProgressionOptions, Value) == 0x000018, "Member 'FEOSProgressionSnapshotAddProgressionOptions::Value' has a wrong offset!");

// ScriptStruct EOSCore.EOSProgressionSnapshotDeleteSnapshotOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSProgressionSnapshotDeleteSnapshotOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSProgressionSnapshotDeleteSnapshotOptions) == 0x000001, "Wrong alignment on FEOSProgressionSnapshotDeleteSnapshotOptions");
static_assert(sizeof(FEOSProgressionSnapshotDeleteSnapshotOptions) == 0x000021, "Wrong size on FEOSProgressionSnapshotDeleteSnapshotOptions");
static_assert(offsetof(FEOSProgressionSnapshotDeleteSnapshotOptions, LocalUserId) == 0x000000, "Member 'FEOSProgressionSnapshotDeleteSnapshotOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSQueryJoinRoomTokenOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSQueryJoinRoomTokenOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2816[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSProductUserId>              TargetUserIds;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<class FString>                         TargetUserIpAddresses;                             // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSQueryJoinRoomTokenOptions) == 0x000008, "Wrong alignment on FEOSQueryJoinRoomTokenOptions");
static_assert(sizeof(FEOSQueryJoinRoomTokenOptions) == 0x000058, "Wrong size on FEOSQueryJoinRoomTokenOptions");
static_assert(offsetof(FEOSQueryJoinRoomTokenOptions, LocalUserId) == 0x000000, "Member 'FEOSQueryJoinRoomTokenOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenOptions, RoomName) == 0x000028, "Member 'FEOSQueryJoinRoomTokenOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenOptions, TargetUserIds) == 0x000038, "Member 'FEOSQueryJoinRoomTokenOptions::TargetUserIds' has a wrong offset!");
static_assert(offsetof(FEOSQueryJoinRoomTokenOptions, TargetUserIpAddresses) == 0x000048, "Member 'FEOSQueryJoinRoomTokenOptions::TargetUserIpAddresses' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserToken
// 0x0038 (0x0038 - 0x0000)
struct FEOSUserToken final
{
public:
	struct FEOSProductUserId                      ProductUserId;                                     // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2817[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Token;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserToken) == 0x000008, "Wrong alignment on FEOSUserToken");
static_assert(sizeof(FEOSUserToken) == 0x000038, "Wrong size on FEOSUserToken");
static_assert(offsetof(FEOSUserToken, ProductUserId) == 0x000000, "Member 'FEOSUserToken::ProductUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserToken, Token) == 0x000028, "Member 'FEOSUserToken::Token' has a wrong offset!");

// ScriptStruct EOSCore.EOSCopyUserTokenByIndexOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSCopyUserTokenByIndexOptions final
{
public:
	int32                                         UserTokenIndex;                                    // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         QueryId;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCopyUserTokenByIndexOptions) == 0x000004, "Wrong alignment on FEOSCopyUserTokenByIndexOptions");
static_assert(sizeof(FEOSCopyUserTokenByIndexOptions) == 0x000008, "Wrong size on FEOSCopyUserTokenByIndexOptions");
static_assert(offsetof(FEOSCopyUserTokenByIndexOptions, UserTokenIndex) == 0x000000, "Member 'FEOSCopyUserTokenByIndexOptions::UserTokenIndex' has a wrong offset!");
static_assert(offsetof(FEOSCopyUserTokenByIndexOptions, QueryId) == 0x000004, "Member 'FEOSCopyUserTokenByIndexOptions::QueryId' has a wrong offset!");

// ScriptStruct EOSCore.EOSCopyUserTokenByUserIdOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSCopyUserTokenByUserIdOptions final
{
public:
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2818[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QueryId;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSCopyUserTokenByUserIdOptions) == 0x000004, "Wrong alignment on FEOSCopyUserTokenByUserIdOptions");
static_assert(sizeof(FEOSCopyUserTokenByUserIdOptions) == 0x000028, "Wrong size on FEOSCopyUserTokenByUserIdOptions");
static_assert(offsetof(FEOSCopyUserTokenByUserIdOptions, TargetUserId) == 0x000000, "Member 'FEOSCopyUserTokenByUserIdOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSCopyUserTokenByUserIdOptions, QueryId) == 0x000024, "Member 'FEOSCopyUserTokenByUserIdOptions::QueryId' has a wrong offset!");

// ScriptStruct EOSCore.EOSKickOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSKickOptions final
{
public:
	class FString                                 RoomName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2819[0x7];                                     // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSKickOptions) == 0x000008, "Wrong alignment on FEOSKickOptions");
static_assert(sizeof(FEOSKickOptions) == 0x000038, "Wrong size on FEOSKickOptions");
static_assert(offsetof(FEOSKickOptions, RoomName) == 0x000000, "Member 'FEOSKickOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSKickOptions, TargetUserId) == 0x000010, "Member 'FEOSKickOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSetParticipantHardMuteOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSSetParticipantHardMuteOptions final
{
public:
	class FString                                 RoomName;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMute;                                             // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281A[0x6];                                     // 0x0032(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSetParticipantHardMuteOptions) == 0x000008, "Wrong alignment on FEOSSetParticipantHardMuteOptions");
static_assert(sizeof(FEOSSetParticipantHardMuteOptions) == 0x000038, "Wrong size on FEOSSetParticipantHardMuteOptions");
static_assert(offsetof(FEOSSetParticipantHardMuteOptions, RoomName) == 0x000000, "Member 'FEOSSetParticipantHardMuteOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSSetParticipantHardMuteOptions, TargetUserId) == 0x000010, "Member 'FEOSSetParticipantHardMuteOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSetParticipantHardMuteOptions, bMute) == 0x000031, "Member 'FEOSSetParticipantHardMuteOptions::bMute' has a wrong offset!");

// ScriptStruct EOSCore.EOSRegisterPlatformAudioUserOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSRegisterPlatformAudioUserOptions final
{
public:
	class FString                                 UserId;                                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSRegisterPlatformAudioUserOptions) == 0x000008, "Wrong alignment on FEOSRegisterPlatformAudioUserOptions");
static_assert(sizeof(FEOSRegisterPlatformAudioUserOptions) == 0x000010, "Wrong size on FEOSRegisterPlatformAudioUserOptions");
static_assert(offsetof(FEOSRegisterPlatformAudioUserOptions, UserId) == 0x000000, "Member 'FEOSRegisterPlatformAudioUserOptions::UserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyParticipantUpdatedOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAddNotifyParticipantUpdatedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAddNotifyParticipantUpdatedOptions) == 0x000008, "Wrong alignment on FEOSAddNotifyParticipantUpdatedOptions");
static_assert(sizeof(FEOSAddNotifyParticipantUpdatedOptions) == 0x000038, "Wrong size on FEOSAddNotifyParticipantUpdatedOptions");
static_assert(offsetof(FEOSAddNotifyParticipantUpdatedOptions, LocalUserId) == 0x000000, "Member 'FEOSAddNotifyParticipantUpdatedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyParticipantUpdatedOptions, RoomName) == 0x000028, "Member 'FEOSAddNotifyParticipantUpdatedOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyAudioDevicesChangedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSAddNotifyAudioDevicesChangedOptions final
{
public:
	uint8                                         Pad_281C[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAddNotifyAudioDevicesChangedOptions) == 0x000001, "Wrong alignment on FEOSAddNotifyAudioDevicesChangedOptions");
static_assert(sizeof(FEOSAddNotifyAudioDevicesChangedOptions) == 0x000001, "Wrong size on FEOSAddNotifyAudioDevicesChangedOptions");

// ScriptStruct EOSCore.EOSGetAudioInputDevicesCountOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSGetAudioInputDevicesCountOptions final
{
public:
	uint8                                         Pad_281D[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSGetAudioInputDevicesCountOptions) == 0x000001, "Wrong alignment on FEOSGetAudioInputDevicesCountOptions");
static_assert(sizeof(FEOSGetAudioInputDevicesCountOptions) == 0x000001, "Wrong size on FEOSGetAudioInputDevicesCountOptions");

// ScriptStruct EOSCore.EOSGetAudioInputDeviceByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSGetAudioInputDeviceByIndexOptions final
{
public:
	int32                                         DeviceInfoIndex;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSGetAudioInputDeviceByIndexOptions) == 0x000004, "Wrong alignment on FEOSGetAudioInputDeviceByIndexOptions");
static_assert(sizeof(FEOSGetAudioInputDeviceByIndexOptions) == 0x000004, "Wrong size on FEOSGetAudioInputDeviceByIndexOptions");
static_assert(offsetof(FEOSGetAudioInputDeviceByIndexOptions, DeviceInfoIndex) == 0x000000, "Member 'FEOSGetAudioInputDeviceByIndexOptions::DeviceInfoIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSAudioInputDeviceInfo
// 0x0028 (0x0028 - 0x0000)
struct FEOSAudioInputDeviceInfo final
{
public:
	bool                                          bDefaultDevice;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_281E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeviceID;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DeviceName;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAudioInputDeviceInfo) == 0x000008, "Wrong alignment on FEOSAudioInputDeviceInfo");
static_assert(sizeof(FEOSAudioInputDeviceInfo) == 0x000028, "Wrong size on FEOSAudioInputDeviceInfo");
static_assert(offsetof(FEOSAudioInputDeviceInfo, bDefaultDevice) == 0x000000, "Member 'FEOSAudioInputDeviceInfo::bDefaultDevice' has a wrong offset!");
static_assert(offsetof(FEOSAudioInputDeviceInfo, DeviceID) == 0x000008, "Member 'FEOSAudioInputDeviceInfo::DeviceID' has a wrong offset!");
static_assert(offsetof(FEOSAudioInputDeviceInfo, DeviceName) == 0x000018, "Member 'FEOSAudioInputDeviceInfo::DeviceName' has a wrong offset!");

// ScriptStruct EOSCore.EOSGetAudioOutputDevicesCountOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSGetAudioOutputDevicesCountOptions final
{
public:
	uint8                                         Pad_281F[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSGetAudioOutputDevicesCountOptions) == 0x000001, "Wrong alignment on FEOSGetAudioOutputDevicesCountOptions");
static_assert(sizeof(FEOSGetAudioOutputDevicesCountOptions) == 0x000001, "Wrong size on FEOSGetAudioOutputDevicesCountOptions");

// ScriptStruct EOSCore.EOSGetAudioOutputDeviceByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSGetAudioOutputDeviceByIndexOptions final
{
public:
	int32                                         DeviceInfoIndex;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSGetAudioOutputDeviceByIndexOptions) == 0x000004, "Wrong alignment on FEOSGetAudioOutputDeviceByIndexOptions");
static_assert(sizeof(FEOSGetAudioOutputDeviceByIndexOptions) == 0x000004, "Wrong size on FEOSGetAudioOutputDeviceByIndexOptions");
static_assert(offsetof(FEOSGetAudioOutputDeviceByIndexOptions, DeviceInfoIndex) == 0x000000, "Member 'FEOSGetAudioOutputDeviceByIndexOptions::DeviceInfoIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSSetAudioInputSettingsOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSSetAudioInputSettingsOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2820[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 DeviceID;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPlatformAEC;                                      // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2821[0x3];                                     // 0x003D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSetAudioInputSettingsOptions) == 0x000008, "Wrong alignment on FEOSSetAudioInputSettingsOptions");
static_assert(sizeof(FEOSSetAudioInputSettingsOptions) == 0x000040, "Wrong size on FEOSSetAudioInputSettingsOptions");
static_assert(offsetof(FEOSSetAudioInputSettingsOptions, LocalUserId) == 0x000000, "Member 'FEOSSetAudioInputSettingsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSetAudioInputSettingsOptions, DeviceID) == 0x000028, "Member 'FEOSSetAudioInputSettingsOptions::DeviceID' has a wrong offset!");
static_assert(offsetof(FEOSSetAudioInputSettingsOptions, Volume) == 0x000038, "Member 'FEOSSetAudioInputSettingsOptions::Volume' has a wrong offset!");
static_assert(offsetof(FEOSSetAudioInputSettingsOptions, bPlatformAEC) == 0x00003C, "Member 'FEOSSetAudioInputSettingsOptions::bPlatformAEC' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyAudioOutputStateOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAddNotifyAudioOutputStateOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2822[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAddNotifyAudioOutputStateOptions) == 0x000008, "Wrong alignment on FEOSAddNotifyAudioOutputStateOptions");
static_assert(sizeof(FEOSAddNotifyAudioOutputStateOptions) == 0x000038, "Wrong size on FEOSAddNotifyAudioOutputStateOptions");
static_assert(offsetof(FEOSAddNotifyAudioOutputStateOptions, LocalUserId) == 0x000000, "Member 'FEOSAddNotifyAudioOutputStateOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyAudioOutputStateOptions, RoomName) == 0x000028, "Member 'FEOSAddNotifyAudioOutputStateOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyAudioBeforeSendOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSAddNotifyAudioBeforeSendOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2823[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSAddNotifyAudioBeforeSendOptions) == 0x000008, "Wrong alignment on FEOSAddNotifyAudioBeforeSendOptions");
static_assert(sizeof(FEOSAddNotifyAudioBeforeSendOptions) == 0x000038, "Wrong size on FEOSAddNotifyAudioBeforeSendOptions");
static_assert(offsetof(FEOSAddNotifyAudioBeforeSendOptions, LocalUserId) == 0x000000, "Member 'FEOSAddNotifyAudioBeforeSendOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyAudioBeforeSendOptions, RoomName) == 0x000028, "Member 'FEOSAddNotifyAudioBeforeSendOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSAddNotifyAudioBeforeRenderOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSAddNotifyAudioBeforeRenderOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2824[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUnmixedAudio;                                     // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2825[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSAddNotifyAudioBeforeRenderOptions) == 0x000008, "Wrong alignment on FEOSAddNotifyAudioBeforeRenderOptions");
static_assert(sizeof(FEOSAddNotifyAudioBeforeRenderOptions) == 0x000040, "Wrong size on FEOSAddNotifyAudioBeforeRenderOptions");
static_assert(offsetof(FEOSAddNotifyAudioBeforeRenderOptions, LocalUserId) == 0x000000, "Member 'FEOSAddNotifyAudioBeforeRenderOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyAudioBeforeRenderOptions, RoomName) == 0x000028, "Member 'FEOSAddNotifyAudioBeforeRenderOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSAddNotifyAudioBeforeRenderOptions, bUnmixedAudio) == 0x000038, "Member 'FEOSAddNotifyAudioBeforeRenderOptions::bUnmixedAudio' has a wrong offset!");

// ScriptStruct EOSCore.EOSSendAudioOptions
// 0x0048 (0x0048 - 0x0000)
struct FEOSSendAudioOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2826[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSRTCAudioAudioBuffer                Buffer;                                            // 0x0038(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSendAudioOptions) == 0x000008, "Wrong alignment on FEOSSendAudioOptions");
static_assert(sizeof(FEOSSendAudioOptions) == 0x000048, "Wrong size on FEOSSendAudioOptions");
static_assert(offsetof(FEOSSendAudioOptions, LocalUserId) == 0x000000, "Member 'FEOSSendAudioOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSendAudioOptions, RoomName) == 0x000028, "Member 'FEOSSendAudioOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSSendAudioOptions, Buffer) == 0x000038, "Member 'FEOSSendAudioOptions::Buffer' has a wrong offset!");

// ScriptStruct EOSCore.EOSUpdateSendingOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSUpdateSendingOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2827[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSERTCAudioStatus                           AudioStatus;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2828[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUpdateSendingOptions) == 0x000008, "Wrong alignment on FEOSUpdateSendingOptions");
static_assert(sizeof(FEOSUpdateSendingOptions) == 0x000040, "Wrong size on FEOSUpdateSendingOptions");
static_assert(offsetof(FEOSUpdateSendingOptions, LocalUserId) == 0x000000, "Member 'FEOSUpdateSendingOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateSendingOptions, RoomName) == 0x000028, "Member 'FEOSUpdateSendingOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSUpdateSendingOptions, AudioStatus) == 0x000038, "Member 'FEOSUpdateSendingOptions::AudioStatus' has a wrong offset!");

// ScriptStruct EOSCore.EOSUpdateReceivingOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSUpdateReceivingOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2829[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0038(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAudioEnabled;                                     // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282A[0x6];                                     // 0x005A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUpdateReceivingOptions) == 0x000008, "Wrong alignment on FEOSUpdateReceivingOptions");
static_assert(sizeof(FEOSUpdateReceivingOptions) == 0x000060, "Wrong size on FEOSUpdateReceivingOptions");
static_assert(offsetof(FEOSUpdateReceivingOptions, LocalUserId) == 0x000000, "Member 'FEOSUpdateReceivingOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingOptions, RoomName) == 0x000028, "Member 'FEOSUpdateReceivingOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingOptions, ParticipantId) == 0x000038, "Member 'FEOSUpdateReceivingOptions::ParticipantId' has a wrong offset!");
static_assert(offsetof(FEOSUpdateReceivingOptions, bAudioEnabled) == 0x000059, "Member 'FEOSUpdateReceivingOptions::bAudioEnabled' has a wrong offset!");

// ScriptStruct EOSCore.EOSRTCAudioUpdateReceivingVolumeOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSRTCAudioUpdateReceivingVolumeOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282C[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSRTCAudioUpdateReceivingVolumeOptions) == 0x000008, "Wrong alignment on FEOSRTCAudioUpdateReceivingVolumeOptions");
static_assert(sizeof(FEOSRTCAudioUpdateReceivingVolumeOptions) == 0x000040, "Wrong size on FEOSRTCAudioUpdateReceivingVolumeOptions");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeOptions, LocalUserId) == 0x000000, "Member 'FEOSRTCAudioUpdateReceivingVolumeOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeOptions, RoomName) == 0x000028, "Member 'FEOSRTCAudioUpdateReceivingVolumeOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FEOSRTCAudioUpdateReceivingVolumeOptions, Volume) == 0x000038, "Member 'FEOSRTCAudioUpdateReceivingVolumeOptions::Volume' has a wrong offset!");

// ScriptStruct EOSCore.JoinRoomOptions
// 0x0088 (0x0088 - 0x0000)
struct FJoinRoomOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282D[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ClientBaseUrl;                                     // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ParticipantToken;                                  // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      ParticipantId;                                     // 0x0058(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282E[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Flags;                                             // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bManualAudioInputEnabled;                          // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bManualAudioOutputEnabled;                         // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_282F[0x6];                                     // 0x0082(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FJoinRoomOptions) == 0x000008, "Wrong alignment on FJoinRoomOptions");
static_assert(sizeof(FJoinRoomOptions) == 0x000088, "Wrong size on FJoinRoomOptions");
static_assert(offsetof(FJoinRoomOptions, LocalUserId) == 0x000000, "Member 'FJoinRoomOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, RoomName) == 0x000028, "Member 'FJoinRoomOptions::RoomName' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, ClientBaseUrl) == 0x000038, "Member 'FJoinRoomOptions::ClientBaseUrl' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, ParticipantToken) == 0x000048, "Member 'FJoinRoomOptions::ParticipantToken' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, ParticipantId) == 0x000058, "Member 'FJoinRoomOptions::ParticipantId' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, Flags) == 0x00007C, "Member 'FJoinRoomOptions::Flags' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, bManualAudioInputEnabled) == 0x000080, "Member 'FJoinRoomOptions::bManualAudioInputEnabled' has a wrong offset!");
static_assert(offsetof(FJoinRoomOptions, bManualAudioOutputEnabled) == 0x000081, "Member 'FJoinRoomOptions::bManualAudioOutputEnabled' has a wrong offset!");

// ScriptStruct EOSCore.LeaveRoomOptions
// 0x0038 (0x0038 - 0x0000)
struct FLeaveRoomOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2830[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FLeaveRoomOptions) == 0x000008, "Wrong alignment on FLeaveRoomOptions");
static_assert(sizeof(FLeaveRoomOptions) == 0x000038, "Wrong size on FLeaveRoomOptions");
static_assert(offsetof(FLeaveRoomOptions, LocalUserId) == 0x000000, "Member 'FLeaveRoomOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FLeaveRoomOptions, RoomName) == 0x000028, "Member 'FLeaveRoomOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.AddNotifyDisconnectedOptions
// 0x0038 (0x0038 - 0x0000)
struct FAddNotifyDisconnectedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2831[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAddNotifyDisconnectedOptions) == 0x000008, "Wrong alignment on FAddNotifyDisconnectedOptions");
static_assert(sizeof(FAddNotifyDisconnectedOptions) == 0x000038, "Wrong size on FAddNotifyDisconnectedOptions");
static_assert(offsetof(FAddNotifyDisconnectedOptions, LocalUserId) == 0x000000, "Member 'FAddNotifyDisconnectedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FAddNotifyDisconnectedOptions, RoomName) == 0x000028, "Member 'FAddNotifyDisconnectedOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.AddNotifyParticipantStatusChangedOptions
// 0x0038 (0x0038 - 0x0000)
struct FAddNotifyParticipantStatusChangedOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2832[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 RoomName;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAddNotifyParticipantStatusChangedOptions) == 0x000008, "Wrong alignment on FAddNotifyParticipantStatusChangedOptions");
static_assert(sizeof(FAddNotifyParticipantStatusChangedOptions) == 0x000038, "Wrong size on FAddNotifyParticipantStatusChangedOptions");
static_assert(offsetof(FAddNotifyParticipantStatusChangedOptions, LocalUserId) == 0x000000, "Member 'FAddNotifyParticipantStatusChangedOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FAddNotifyParticipantStatusChangedOptions, RoomName) == 0x000028, "Member 'FAddNotifyParticipantStatusChangedOptions::RoomName' has a wrong offset!");

// ScriptStruct EOSCore.EOSSanctionsQueryActivePlayerSanctionsOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSSanctionsQueryActivePlayerSanctionsOptions final
{
public:
	uint8                                         Pad_2833[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2834[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSanctionsQueryActivePlayerSanctionsOptions) == 0x000004, "Wrong alignment on FEOSSanctionsQueryActivePlayerSanctionsOptions");
static_assert(sizeof(FEOSSanctionsQueryActivePlayerSanctionsOptions) == 0x000048, "Wrong size on FEOSSanctionsQueryActivePlayerSanctionsOptions");
static_assert(offsetof(FEOSSanctionsQueryActivePlayerSanctionsOptions, TargetUserId) == 0x000004, "Member 'FEOSSanctionsQueryActivePlayerSanctionsOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSanctionsQueryActivePlayerSanctionsOptions, LocalUserId) == 0x000025, "Member 'FEOSSanctionsQueryActivePlayerSanctionsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSanctionsGetPlayerSanctionCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSSanctionsGetPlayerSanctionCountOptions final
{
public:
	uint8                                         Pad_2835[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2836[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSanctionsGetPlayerSanctionCountOptions) == 0x000004, "Wrong alignment on FEOSSanctionsGetPlayerSanctionCountOptions");
static_assert(sizeof(FEOSSanctionsGetPlayerSanctionCountOptions) == 0x000028, "Wrong size on FEOSSanctionsGetPlayerSanctionCountOptions");
static_assert(offsetof(FEOSSanctionsGetPlayerSanctionCountOptions, TargetUserId) == 0x000004, "Member 'FEOSSanctionsGetPlayerSanctionCountOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSanctionsCopyPlayerSanctionByIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSSanctionsCopyPlayerSanctionByIndexOptions final
{
public:
	uint8                                         Pad_2837[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2838[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SanctionIndex;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSanctionsCopyPlayerSanctionByIndexOptions) == 0x000004, "Wrong alignment on FEOSSanctionsCopyPlayerSanctionByIndexOptions");
static_assert(sizeof(FEOSSanctionsCopyPlayerSanctionByIndexOptions) == 0x00002C, "Wrong size on FEOSSanctionsCopyPlayerSanctionByIndexOptions");
static_assert(offsetof(FEOSSanctionsCopyPlayerSanctionByIndexOptions, TargetUserId) == 0x000004, "Member 'FEOSSanctionsCopyPlayerSanctionByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSSanctionsCopyPlayerSanctionByIndexOptions, SanctionIndex) == 0x000028, "Member 'FEOSSanctionsCopyPlayerSanctionByIndexOptions::SanctionIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSHSessions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHSessions final
{
public:
	uint8                                         Pad_2839[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHSessions) == 0x000008, "Wrong alignment on FEOSHSessions");
static_assert(sizeof(FEOSHSessions) == 0x000008, "Wrong size on FEOSHSessions");

// ScriptStruct EOSCore.EOSHSessionModification
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHSessionModification final
{
public:
	uint8                                         Pad_283A[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHSessionModification) == 0x000008, "Wrong alignment on FEOSHSessionModification");
static_assert(sizeof(FEOSHSessionModification) == 0x000008, "Wrong size on FEOSHSessionModification");

// ScriptStruct EOSCore.EOSHActiveSession
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHActiveSession final
{
public:
	uint8                                         Pad_283B[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHActiveSession) == 0x000008, "Wrong alignment on FEOSHActiveSession");
static_assert(sizeof(FEOSHActiveSession) == 0x000008, "Wrong size on FEOSHActiveSession");

// ScriptStruct EOSCore.EOSHSessionDetails
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHSessionDetails final
{
public:
	uint8                                         Pad_283C[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHSessionDetails) == 0x000008, "Wrong alignment on FEOSHSessionDetails");
static_assert(sizeof(FEOSHSessionDetails) == 0x000008, "Wrong size on FEOSHSessionDetails");

// ScriptStruct EOSCore.EOSHSessionSearch
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHSessionSearch final
{
public:
	uint8                                         Pad_283D[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHSessionSearch) == 0x000008, "Wrong alignment on FEOSHSessionSearch");
static_assert(sizeof(FEOSHSessionSearch) == 0x000008, "Wrong size on FEOSHSessionSearch");

// ScriptStruct EOSCore.EOSSessionsUpdateSessionModificationOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsUpdateSessionModificationOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsUpdateSessionModificationOptions) == 0x000008, "Wrong alignment on FEOSSessionsUpdateSessionModificationOptions");
static_assert(sizeof(FEOSSessionsUpdateSessionModificationOptions) == 0x000010, "Wrong size on FEOSSessionsUpdateSessionModificationOptions");
static_assert(offsetof(FEOSSessionsUpdateSessionModificationOptions, SessionName) == 0x000000, "Member 'FEOSSessionsUpdateSessionModificationOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsRejectInviteOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSSessionsRejectInviteOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283E[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 InviteId;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsRejectInviteOptions) == 0x000008, "Wrong alignment on FEOSSessionsRejectInviteOptions");
static_assert(sizeof(FEOSSessionsRejectInviteOptions) == 0x000038, "Wrong size on FEOSSessionsRejectInviteOptions");
static_assert(offsetof(FEOSSessionsRejectInviteOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionsRejectInviteOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsRejectInviteOptions, InviteId) == 0x000028, "Member 'FEOSSessionsRejectInviteOptions::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsQueryInvitesOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSSessionsQueryInvitesOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsQueryInvitesOptions) == 0x000001, "Wrong alignment on FEOSSessionsQueryInvitesOptions");
static_assert(sizeof(FEOSSessionsQueryInvitesOptions) == 0x000021, "Wrong size on FEOSSessionsQueryInvitesOptions");
static_assert(offsetof(FEOSSessionsQueryInvitesOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionsQueryInvitesOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsGetInviteIdByIndexOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSSessionsGetInviteIdByIndexOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_283F[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsGetInviteIdByIndexOptions) == 0x000004, "Wrong alignment on FEOSSessionsGetInviteIdByIndexOptions");
static_assert(sizeof(FEOSSessionsGetInviteIdByIndexOptions) == 0x000028, "Wrong size on FEOSSessionsGetInviteIdByIndexOptions");
static_assert(offsetof(FEOSSessionsGetInviteIdByIndexOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionsGetInviteIdByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsGetInviteIdByIndexOptions, Index) == 0x000024, "Member 'FEOSSessionsGetInviteIdByIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsUpdateSessionOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSSessionsUpdateSessionOptions final
{
public:
	struct FEOSHSessionModification               SessionModificationHandle;                         // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsUpdateSessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsUpdateSessionOptions");
static_assert(sizeof(FEOSSessionsUpdateSessionOptions) == 0x000008, "Wrong size on FEOSSessionsUpdateSessionOptions");
static_assert(offsetof(FEOSSessionsUpdateSessionOptions, SessionModificationHandle) == 0x000000, "Member 'FEOSSessionsUpdateSessionOptions::SessionModificationHandle' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsDestroySessionOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsDestroySessionOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsDestroySessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsDestroySessionOptions");
static_assert(sizeof(FEOSSessionsDestroySessionOptions) == 0x000010, "Wrong size on FEOSSessionsDestroySessionOptions");
static_assert(offsetof(FEOSSessionsDestroySessionOptions, SessionName) == 0x000000, "Member 'FEOSSessionsDestroySessionOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsJoinSessionOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSSessionsJoinSessionOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSHSessionDetails                    SessionHandle;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0018(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPresenceEnabled;                                  // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2840[0x6];                                     // 0x003A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsJoinSessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsJoinSessionOptions");
static_assert(sizeof(FEOSSessionsJoinSessionOptions) == 0x000040, "Wrong size on FEOSSessionsJoinSessionOptions");
static_assert(offsetof(FEOSSessionsJoinSessionOptions, SessionName) == 0x000000, "Member 'FEOSSessionsJoinSessionOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsJoinSessionOptions, SessionHandle) == 0x000010, "Member 'FEOSSessionsJoinSessionOptions::SessionHandle' has a wrong offset!");
static_assert(offsetof(FEOSSessionsJoinSessionOptions, LocalUserId) == 0x000018, "Member 'FEOSSessionsJoinSessionOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSSessionsJoinSessionOptions, bPresenceEnabled) == 0x000039, "Member 'FEOSSessionsJoinSessionOptions::bPresenceEnabled' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsStartSessionOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsStartSessionOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsStartSessionOptions) == 0x000008, "Wrong alignment on FEOSSessionsStartSessionOptions");
static_assert(sizeof(FEOSSessionsStartSessionOptions) == 0x000010, "Wrong size on FEOSSessionsStartSessionOptions");
static_assert(offsetof(FEOSSessionsStartSessionOptions, SessionName) == 0x000000, "Member 'FEOSSessionsStartSessionOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsRegisterPlayersOptions
// 0x0020 (0x0020 - 0x0000)
struct FEOSSessionsRegisterPlayersOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSProductUserId>              PlayersToRegister;                                 // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsRegisterPlayersOptions) == 0x000008, "Wrong alignment on FEOSSessionsRegisterPlayersOptions");
static_assert(sizeof(FEOSSessionsRegisterPlayersOptions) == 0x000020, "Wrong size on FEOSSessionsRegisterPlayersOptions");
static_assert(offsetof(FEOSSessionsRegisterPlayersOptions, SessionName) == 0x000000, "Member 'FEOSSessionsRegisterPlayersOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsRegisterPlayersOptions, PlayersToRegister) == 0x000010, "Member 'FEOSSessionsRegisterPlayersOptions::PlayersToRegister' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsUnregisterPlayersOptions
// 0x0020 (0x0020 - 0x0000)
struct FEOSSessionsUnregisterPlayersOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEOSProductUserId>              PlayersToUnregister;                               // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsUnregisterPlayersOptions) == 0x000008, "Wrong alignment on FEOSSessionsUnregisterPlayersOptions");
static_assert(sizeof(FEOSSessionsUnregisterPlayersOptions) == 0x000020, "Wrong size on FEOSSessionsUnregisterPlayersOptions");
static_assert(offsetof(FEOSSessionsUnregisterPlayersOptions, SessionName) == 0x000000, "Member 'FEOSSessionsUnregisterPlayersOptions::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSSessionsUnregisterPlayersOptions, PlayersToUnregister) == 0x000010, "Member 'FEOSSessionsUnregisterPlayersOptions::PlayersToUnregister' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationSetBucketIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionModificationSetBucketIdOptions final
{
public:
	class FString                                 BucketId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetBucketIdOptions) == 0x000008, "Wrong alignment on FEOSSessionModificationSetBucketIdOptions");
static_assert(sizeof(FEOSSessionModificationSetBucketIdOptions) == 0x000010, "Wrong size on FEOSSessionModificationSetBucketIdOptions");
static_assert(offsetof(FEOSSessionModificationSetBucketIdOptions, BucketId) == 0x000000, "Member 'FEOSSessionModificationSetBucketIdOptions::BucketId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationSetPermissionLevelOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionModificationSetPermissionLevelOptions final
{
public:
	EEOSEOnlineSessionPermissionLevel             PermissionLevel;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetPermissionLevelOptions) == 0x000001, "Wrong alignment on FEOSSessionModificationSetPermissionLevelOptions");
static_assert(sizeof(FEOSSessionModificationSetPermissionLevelOptions) == 0x000001, "Wrong size on FEOSSessionModificationSetPermissionLevelOptions");
static_assert(offsetof(FEOSSessionModificationSetPermissionLevelOptions, PermissionLevel) == 0x000000, "Member 'FEOSSessionModificationSetPermissionLevelOptions::PermissionLevel' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationSetMaxPlayersOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSSessionModificationSetMaxPlayersOptions final
{
public:
	int32                                         MaxPlayers;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetMaxPlayersOptions) == 0x000004, "Wrong alignment on FEOSSessionModificationSetMaxPlayersOptions");
static_assert(sizeof(FEOSSessionModificationSetMaxPlayersOptions) == 0x000004, "Wrong size on FEOSSessionModificationSetMaxPlayersOptions");
static_assert(offsetof(FEOSSessionModificationSetMaxPlayersOptions, MaxPlayers) == 0x000000, "Member 'FEOSSessionModificationSetMaxPlayersOptions::MaxPlayers' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionModificationSetInvitesAllowedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionModificationSetInvitesAllowedOptions final
{
public:
	bool                                          bInvitesAllowed;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionModificationSetInvitesAllowedOptions) == 0x000001, "Wrong alignment on FEOSSessionModificationSetInvitesAllowedOptions");
static_assert(sizeof(FEOSSessionModificationSetInvitesAllowedOptions) == 0x000001, "Wrong size on FEOSSessionModificationSetInvitesAllowedOptions");
static_assert(offsetof(FEOSSessionModificationSetInvitesAllowedOptions, bInvitesAllowed) == 0x000000, "Member 'FEOSSessionModificationSetInvitesAllowedOptions::bInvitesAllowed' has a wrong offset!");

// ScriptStruct EOSCore.EOSActiveSessionCopyInfoOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSActiveSessionCopyInfoOptions final
{
public:
	uint8                                         Pad_2841[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSActiveSessionCopyInfoOptions) == 0x000001, "Wrong alignment on FEOSActiveSessionCopyInfoOptions");
static_assert(sizeof(FEOSActiveSessionCopyInfoOptions) == 0x000001, "Wrong size on FEOSActiveSessionCopyInfoOptions");

// ScriptStruct EOSCore.EOSActiveSessionGetRegisteredPlayerCountOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSActiveSessionGetRegisteredPlayerCountOptions final
{
public:
	uint8                                         Pad_2842[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSActiveSessionGetRegisteredPlayerCountOptions) == 0x000001, "Wrong alignment on FEOSActiveSessionGetRegisteredPlayerCountOptions");
static_assert(sizeof(FEOSActiveSessionGetRegisteredPlayerCountOptions) == 0x000001, "Wrong size on FEOSActiveSessionGetRegisteredPlayerCountOptions");

// ScriptStruct EOSCore.EOSSessionModificationAddAttributeOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSSessionModificationAddAttributeOptions final
{
public:
	struct FEOSSessionsAttributeData              Data;                                              // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSESessionAttributeAdvertisementType        AdvertisementType;                                 // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2843[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionModificationAddAttributeOptions) == 0x000008, "Wrong alignment on FEOSSessionModificationAddAttributeOptions");
static_assert(sizeof(FEOSSessionModificationAddAttributeOptions) == 0x000028, "Wrong size on FEOSSessionModificationAddAttributeOptions");
static_assert(offsetof(FEOSSessionModificationAddAttributeOptions, Data) == 0x000000, "Member 'FEOSSessionModificationAddAttributeOptions::Data' has a wrong offset!");
static_assert(offsetof(FEOSSessionModificationAddAttributeOptions, AdvertisementType) == 0x000020, "Member 'FEOSSessionModificationAddAttributeOptions::AdvertisementType' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchFindOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSSessionSearchFindOptions final
{
public:
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionSearchFindOptions) == 0x000001, "Wrong alignment on FEOSSessionSearchFindOptions");
static_assert(sizeof(FEOSSessionSearchFindOptions) == 0x000021, "Wrong size on FEOSSessionSearchFindOptions");
static_assert(offsetof(FEOSSessionSearchFindOptions, LocalUserId) == 0x000000, "Member 'FEOSSessionSearchFindOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchGetSearchResultCountOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionSearchGetSearchResultCountOptions final
{
public:
	uint8                                         Pad_2844[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionSearchGetSearchResultCountOptions) == 0x000001, "Wrong alignment on FEOSSessionSearchGetSearchResultCountOptions");
static_assert(sizeof(FEOSSessionSearchGetSearchResultCountOptions) == 0x000001, "Wrong size on FEOSSessionSearchGetSearchResultCountOptions");

// ScriptStruct EOSCore.EOSSessionSearchCopySearchResultByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSSessionSearchCopySearchResultByIndexOptions final
{
public:
	int32                                         SessionIndex;                                      // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionSearchCopySearchResultByIndexOptions) == 0x000004, "Wrong alignment on FEOSSessionSearchCopySearchResultByIndexOptions");
static_assert(sizeof(FEOSSessionSearchCopySearchResultByIndexOptions) == 0x000004, "Wrong size on FEOSSessionSearchCopySearchResultByIndexOptions");
static_assert(offsetof(FEOSSessionSearchCopySearchResultByIndexOptions, SessionIndex) == 0x000000, "Member 'FEOSSessionSearchCopySearchResultByIndexOptions::SessionIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchSetSessionIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionSearchSetSessionIdOptions final
{
public:
	class FString                                 SessionID;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionSearchSetSessionIdOptions) == 0x000008, "Wrong alignment on FEOSSessionSearchSetSessionIdOptions");
static_assert(sizeof(FEOSSessionSearchSetSessionIdOptions) == 0x000010, "Wrong size on FEOSSessionSearchSetSessionIdOptions");
static_assert(offsetof(FEOSSessionSearchSetSessionIdOptions, SessionID) == 0x000000, "Member 'FEOSSessionSearchSetSessionIdOptions::SessionID' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchSetTargetUserIdOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSSessionSearchSetTargetUserIdOptions final
{
public:
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionSearchSetTargetUserIdOptions) == 0x000001, "Wrong alignment on FEOSSessionSearchSetTargetUserIdOptions");
static_assert(sizeof(FEOSSessionSearchSetTargetUserIdOptions) == 0x000021, "Wrong size on FEOSSessionSearchSetTargetUserIdOptions");
static_assert(offsetof(FEOSSessionSearchSetTargetUserIdOptions, TargetUserId) == 0x000000, "Member 'FEOSSessionSearchSetTargetUserIdOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionSearchSetParameterOptions
// 0x0028 (0x0028 - 0x0000)
struct FEOSSessionSearchSetParameterOptions final
{
public:
	struct FEOSSessionsAttributeData              Parameter;                                         // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	EEOSEComparisonOp                             ComparisonOp;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2845[0x7];                                     // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionSearchSetParameterOptions) == 0x000008, "Wrong alignment on FEOSSessionSearchSetParameterOptions");
static_assert(sizeof(FEOSSessionSearchSetParameterOptions) == 0x000028, "Wrong size on FEOSSessionSearchSetParameterOptions");
static_assert(offsetof(FEOSSessionSearchSetParameterOptions, Parameter) == 0x000000, "Member 'FEOSSessionSearchSetParameterOptions::Parameter' has a wrong offset!");
static_assert(offsetof(FEOSSessionSearchSetParameterOptions, ComparisonOp) == 0x000020, "Member 'FEOSSessionSearchSetParameterOptions::ComparisonOp' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionDetailsInfo
// 0x0040 (0x0040 - 0x0000)
struct FEOSSessionDetailsInfo final
{
public:
	class FString                                 SessionID;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 HostAddress;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         NumOpenPublicConnections;                          // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2846[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSSessionDetailsSettings             Settings;                                          // 0x0028(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionDetailsInfo) == 0x000008, "Wrong alignment on FEOSSessionDetailsInfo");
static_assert(sizeof(FEOSSessionDetailsInfo) == 0x000040, "Wrong size on FEOSSessionDetailsInfo");
static_assert(offsetof(FEOSSessionDetailsInfo, SessionID) == 0x000000, "Member 'FEOSSessionDetailsInfo::SessionID' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsInfo, HostAddress) == 0x000010, "Member 'FEOSSessionDetailsInfo::HostAddress' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsInfo, NumOpenPublicConnections) == 0x000020, "Member 'FEOSSessionDetailsInfo::NumOpenPublicConnections' has a wrong offset!");
static_assert(offsetof(FEOSSessionDetailsInfo, Settings) == 0x000028, "Member 'FEOSSessionDetailsInfo::Settings' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionDetailsCopyInfoOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionDetailsCopyInfoOptions final
{
public:
	uint8                                         Pad_2847[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionDetailsCopyInfoOptions) == 0x000001, "Wrong alignment on FEOSSessionDetailsCopyInfoOptions");
static_assert(sizeof(FEOSSessionDetailsCopyInfoOptions) == 0x000001, "Wrong size on FEOSSessionDetailsCopyInfoOptions");

// ScriptStruct EOSCore.EOSSessionDetailsGetSessionAttributeCountOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionDetailsGetSessionAttributeCountOptions final
{
public:
	uint8                                         Pad_2848[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionDetailsGetSessionAttributeCountOptions) == 0x000001, "Wrong alignment on FEOSSessionDetailsGetSessionAttributeCountOptions");
static_assert(sizeof(FEOSSessionDetailsGetSessionAttributeCountOptions) == 0x000001, "Wrong size on FEOSSessionDetailsGetSessionAttributeCountOptions");

// ScriptStruct EOSCore.EOSSessionDetailsCopySessionAttributeByIndexOptions
// 0x0004 (0x0004 - 0x0000)
struct FEOSSessionDetailsCopySessionAttributeByIndexOptions final
{
public:
	int32                                         AttrIndex;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionDetailsCopySessionAttributeByIndexOptions) == 0x000004, "Wrong alignment on FEOSSessionDetailsCopySessionAttributeByIndexOptions");
static_assert(sizeof(FEOSSessionDetailsCopySessionAttributeByIndexOptions) == 0x000004, "Wrong size on FEOSSessionDetailsCopySessionAttributeByIndexOptions");
static_assert(offsetof(FEOSSessionDetailsCopySessionAttributeByIndexOptions, AttrIndex) == 0x000000, "Member 'FEOSSessionDetailsCopySessionAttributeByIndexOptions::AttrIndex' has a wrong offset!");

// ScriptStruct EOSCore.EOSActiveSessionInfo
// 0x0078 (0x0078 - 0x0000)
struct FEOSActiveSessionInfo final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0010(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEOnlineSessionState                       State;                                             // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2849[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSSessionDetailsInfo                 SessionDetails;                                    // 0x0038(0x0040)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSActiveSessionInfo) == 0x000008, "Wrong alignment on FEOSActiveSessionInfo");
static_assert(sizeof(FEOSActiveSessionInfo) == 0x000078, "Wrong size on FEOSActiveSessionInfo");
static_assert(offsetof(FEOSActiveSessionInfo, SessionName) == 0x000000, "Member 'FEOSActiveSessionInfo::SessionName' has a wrong offset!");
static_assert(offsetof(FEOSActiveSessionInfo, LocalUserId) == 0x000010, "Member 'FEOSActiveSessionInfo::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSActiveSessionInfo, State) == 0x000031, "Member 'FEOSActiveSessionInfo::State' has a wrong offset!");
static_assert(offsetof(FEOSActiveSessionInfo, SessionDetails) == 0x000038, "Member 'FEOSActiveSessionInfo::SessionDetails' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsCopyActiveSessionHandleOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsCopyActiveSessionHandleOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsCopyActiveSessionHandleOptions) == 0x000008, "Wrong alignment on FEOSSessionsCopyActiveSessionHandleOptions");
static_assert(sizeof(FEOSSessionsCopyActiveSessionHandleOptions) == 0x000010, "Wrong size on FEOSSessionsCopyActiveSessionHandleOptions");
static_assert(offsetof(FEOSSessionsCopyActiveSessionHandleOptions, SessionName) == 0x000000, "Member 'FEOSSessionsCopyActiveSessionHandleOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsAddNotifySessionInviteAcceptedOptions
// 0x0001 (0x0001 - 0x0000)
struct FEOSSessionsAddNotifySessionInviteAcceptedOptions final
{
public:
	uint8                                         Pad_284A[0x1];                                     // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSSessionsAddNotifySessionInviteAcceptedOptions) == 0x000001, "Wrong alignment on FEOSSessionsAddNotifySessionInviteAcceptedOptions");
static_assert(sizeof(FEOSSessionsAddNotifySessionInviteAcceptedOptions) == 0x000001, "Wrong size on FEOSSessionsAddNotifySessionInviteAcceptedOptions");

// ScriptStruct EOSCore.EOSSessionsCopySessionHandleByInviteIdOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsCopySessionHandleByInviteIdOptions final
{
public:
	class FString                                 InviteId;                                          // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsCopySessionHandleByInviteIdOptions) == 0x000008, "Wrong alignment on FEOSSessionsCopySessionHandleByInviteIdOptions");
static_assert(sizeof(FEOSSessionsCopySessionHandleByInviteIdOptions) == 0x000010, "Wrong size on FEOSSessionsCopySessionHandleByInviteIdOptions");
static_assert(offsetof(FEOSSessionsCopySessionHandleByInviteIdOptions, InviteId) == 0x000000, "Member 'FEOSSessionsCopySessionHandleByInviteIdOptions::InviteId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsCopySessionHandleByUiEventIdOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSSessionsCopySessionHandleByUiEventIdOptions final
{
public:
	struct FEOSUIEventId                          UiEventId;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsCopySessionHandleByUiEventIdOptions) == 0x000008, "Wrong alignment on FEOSSessionsCopySessionHandleByUiEventIdOptions");
static_assert(sizeof(FEOSSessionsCopySessionHandleByUiEventIdOptions) == 0x000008, "Wrong size on FEOSSessionsCopySessionHandleByUiEventIdOptions");
static_assert(offsetof(FEOSSessionsCopySessionHandleByUiEventIdOptions, UiEventId) == 0x000000, "Member 'FEOSSessionsCopySessionHandleByUiEventIdOptions::UiEventId' has a wrong offset!");

// ScriptStruct EOSCore.EOSSessionsDumpSessionStateOptions
// 0x0010 (0x0010 - 0x0000)
struct FEOSSessionsDumpSessionStateOptions final
{
public:
	class FString                                 SessionName;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSSessionsDumpSessionStateOptions) == 0x000008, "Wrong alignment on FEOSSessionsDumpSessionStateOptions");
static_assert(sizeof(FEOSSessionsDumpSessionStateOptions) == 0x000010, "Wrong size on FEOSSessionsDumpSessionStateOptions");
static_assert(offsetof(FEOSSessionsDumpSessionStateOptions, SessionName) == 0x000000, "Member 'FEOSSessionsDumpSessionStateOptions::SessionName' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsIngestData
// 0x0020 (0x0020 - 0x0000)
struct FEOSStatsIngestData final
{
public:
	uint8                                         Pad_284B[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StatName;                                          // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         IngestAmount;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_284C[0x4];                                     // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsIngestData) == 0x000008, "Wrong alignment on FEOSStatsIngestData");
static_assert(sizeof(FEOSStatsIngestData) == 0x000020, "Wrong size on FEOSStatsIngestData");
static_assert(offsetof(FEOSStatsIngestData, StatName) == 0x000008, "Member 'FEOSStatsIngestData::StatName' has a wrong offset!");
static_assert(offsetof(FEOSStatsIngestData, IngestAmount) == 0x000018, "Member 'FEOSStatsIngestData::IngestAmount' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsIngestStatOptions
// 0x0060 (0x0060 - 0x0000)
struct FEOSStatsIngestStatOptions final
{
public:
	uint8                                         Pad_284D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_284E[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FEOSStatsIngestData>            Stats;                                             // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_284F[0x4];                                     // 0x0038(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x003C(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2850[0x3];                                     // 0x005D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsIngestStatOptions) == 0x000008, "Wrong alignment on FEOSStatsIngestStatOptions");
static_assert(sizeof(FEOSStatsIngestStatOptions) == 0x000060, "Wrong size on FEOSStatsIngestStatOptions");
static_assert(offsetof(FEOSStatsIngestStatOptions, LocalUserId) == 0x000004, "Member 'FEOSStatsIngestStatOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsIngestStatOptions, Stats) == 0x000028, "Member 'FEOSStatsIngestStatOptions::Stats' has a wrong offset!");
static_assert(offsetof(FEOSStatsIngestStatOptions, TargetUserId) == 0x00003C, "Member 'FEOSStatsIngestStatOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsQueryStatsOptions
// 0x0080 (0x0080 - 0x0000)
struct FEOSStatsQueryStatsOptions final
{
public:
	uint8                                         Pad_2851[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2852[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 StartTime;                                         // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         StatNames;                                         // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_2853[0x4];                                     // 0x0058(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x005C(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2854[0x3];                                     // 0x007D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsQueryStatsOptions) == 0x000008, "Wrong alignment on FEOSStatsQueryStatsOptions");
static_assert(sizeof(FEOSStatsQueryStatsOptions) == 0x000080, "Wrong size on FEOSStatsQueryStatsOptions");
static_assert(offsetof(FEOSStatsQueryStatsOptions, LocalUserId) == 0x000004, "Member 'FEOSStatsQueryStatsOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsQueryStatsOptions, StartTime) == 0x000028, "Member 'FEOSStatsQueryStatsOptions::StartTime' has a wrong offset!");
static_assert(offsetof(FEOSStatsQueryStatsOptions, EndTime) == 0x000038, "Member 'FEOSStatsQueryStatsOptions::EndTime' has a wrong offset!");
static_assert(offsetof(FEOSStatsQueryStatsOptions, StatNames) == 0x000048, "Member 'FEOSStatsQueryStatsOptions::StatNames' has a wrong offset!");
static_assert(offsetof(FEOSStatsQueryStatsOptions, TargetUserId) == 0x00005C, "Member 'FEOSStatsQueryStatsOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsStat
// 0x0040 (0x0040 - 0x0000)
struct FEOSStatsStat final
{
public:
	uint8                                         Pad_2855[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 StartTime;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 EndTime;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Value;                                             // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2856[0x4];                                     // 0x003C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsStat) == 0x000008, "Wrong alignment on FEOSStatsStat");
static_assert(sizeof(FEOSStatsStat) == 0x000040, "Wrong size on FEOSStatsStat");
static_assert(offsetof(FEOSStatsStat, Name) == 0x000008, "Member 'FEOSStatsStat::Name' has a wrong offset!");
static_assert(offsetof(FEOSStatsStat, StartTime) == 0x000018, "Member 'FEOSStatsStat::StartTime' has a wrong offset!");
static_assert(offsetof(FEOSStatsStat, EndTime) == 0x000028, "Member 'FEOSStatsStat::EndTime' has a wrong offset!");
static_assert(offsetof(FEOSStatsStat, Value) == 0x000038, "Member 'FEOSStatsStat::Value' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsGetStatCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSStatsGetStatCountOptions final
{
public:
	uint8                                         Pad_2857[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2858[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSStatsGetStatCountOptions) == 0x000004, "Wrong alignment on FEOSStatsGetStatCountOptions");
static_assert(sizeof(FEOSStatsGetStatCountOptions) == 0x000028, "Wrong size on FEOSStatsGetStatCountOptions");
static_assert(offsetof(FEOSStatsGetStatCountOptions, TargetUserId) == 0x000004, "Member 'FEOSStatsGetStatCountOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSStatsCopyStatByNameOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSStatsCopyStatByNameOptions final
{
public:
	uint8                                         Pad_2859[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      TargetUserId;                                      // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_285A[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Name;                                              // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSStatsCopyStatByNameOptions) == 0x000008, "Wrong alignment on FEOSStatsCopyStatByNameOptions");
static_assert(sizeof(FEOSStatsCopyStatByNameOptions) == 0x000038, "Wrong size on FEOSStatsCopyStatByNameOptions");
static_assert(offsetof(FEOSStatsCopyStatByNameOptions, TargetUserId) == 0x000004, "Member 'FEOSStatsCopyStatByNameOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSStatsCopyStatByNameOptions, Name) == 0x000028, "Member 'FEOSStatsCopyStatByNameOptions::Name' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageQueryFileListOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSTitleStorageQueryFileListOptions final
{
public:
	uint8                                         Pad_285B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_285C[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         ListOfTags;                                        // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageQueryFileListOptions) == 0x000008, "Wrong alignment on FEOSTitleStorageQueryFileListOptions");
static_assert(sizeof(FEOSTitleStorageQueryFileListOptions) == 0x000038, "Wrong size on FEOSTitleStorageQueryFileListOptions");
static_assert(offsetof(FEOSTitleStorageQueryFileListOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageQueryFileListOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageQueryFileListOptions, ListOfTags) == 0x000028, "Member 'FEOSTitleStorageQueryFileListOptions::ListOfTags' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageGetFileMetadataCountOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSTitleStorageGetFileMetadataCountOptions final
{
public:
	uint8                                         Pad_285D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_285E[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageGetFileMetadataCountOptions) == 0x000004, "Wrong alignment on FEOSTitleStorageGetFileMetadataCountOptions");
static_assert(sizeof(FEOSTitleStorageGetFileMetadataCountOptions) == 0x000028, "Wrong size on FEOSTitleStorageGetFileMetadataCountOptions");
static_assert(offsetof(FEOSTitleStorageGetFileMetadataCountOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageGetFileMetadataCountOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageCopyFileMetadataAtIndexOptions
// 0x002C (0x002C - 0x0000)
struct FEOSTitleStorageCopyFileMetadataAtIndexOptions final
{
public:
	uint8                                         Pad_285F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2860[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageCopyFileMetadataAtIndexOptions) == 0x000004, "Wrong alignment on FEOSTitleStorageCopyFileMetadataAtIndexOptions");
static_assert(sizeof(FEOSTitleStorageCopyFileMetadataAtIndexOptions) == 0x00002C, "Wrong size on FEOSTitleStorageCopyFileMetadataAtIndexOptions");
static_assert(offsetof(FEOSTitleStorageCopyFileMetadataAtIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageCopyFileMetadataAtIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageCopyFileMetadataAtIndexOptions, Index) == 0x000028, "Member 'FEOSTitleStorageCopyFileMetadataAtIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageCopyFileMetadataByFilenameOptions
// 0x0038 (0x0038 - 0x0000)
struct FEOSTitleStorageCopyFileMetadataByFilenameOptions final
{
public:
	uint8                                         Pad_2861[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2862[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSTitleStorageCopyFileMetadataByFilenameOptions) == 0x000008, "Wrong alignment on FEOSTitleStorageCopyFileMetadataByFilenameOptions");
static_assert(sizeof(FEOSTitleStorageCopyFileMetadataByFilenameOptions) == 0x000038, "Wrong size on FEOSTitleStorageCopyFileMetadataByFilenameOptions");
static_assert(offsetof(FEOSTitleStorageCopyFileMetadataByFilenameOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageCopyFileMetadataByFilenameOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageCopyFileMetadataByFilenameOptions, Filename) == 0x000028, "Member 'FEOSTitleStorageCopyFileMetadataByFilenameOptions::Filename' has a wrong offset!");

// ScriptStruct EOSCore.EOSTitleStorageReadFileOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSTitleStorageReadFileOptions final
{
public:
	uint8                                         Pad_2863[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSProductUserId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2864[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Filename;                                          // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SaveFileName;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2865[0x10];                                    // 0x0048(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSTitleStorageReadFileOptions) == 0x000008, "Wrong alignment on FEOSTitleStorageReadFileOptions");
static_assert(sizeof(FEOSTitleStorageReadFileOptions) == 0x000058, "Wrong size on FEOSTitleStorageReadFileOptions");
static_assert(offsetof(FEOSTitleStorageReadFileOptions, LocalUserId) == 0x000004, "Member 'FEOSTitleStorageReadFileOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileOptions, Filename) == 0x000028, "Member 'FEOSTitleStorageReadFileOptions::Filename' has a wrong offset!");
static_assert(offsetof(FEOSTitleStorageReadFileOptions, SaveFileName) == 0x000038, "Member 'FEOSTitleStorageReadFileOptions::SaveFileName' has a wrong offset!");

// ScriptStruct EOSCore.EOSHRTCAudio
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x08) FEOSHRTCAudio final
{
public:
	uint8                                         Pad_2866[0x8];                                     // 0x0000(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSHRTCAudio) == 0x000008, "Wrong alignment on FEOSHRTCAudio");
static_assert(sizeof(FEOSHRTCAudio) == 0x000008, "Wrong size on FEOSHRTCAudio");

// ScriptStruct EOSCore.EOSPageQuery
// 0x0008 (0x0008 - 0x0000)
struct FEOSPageQuery final
{
public:
	int32                                         StartIndex;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         MaxCount;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPageQuery) == 0x000004, "Wrong alignment on FEOSPageQuery");
static_assert(sizeof(FEOSPageQuery) == 0x000008, "Wrong size on FEOSPageQuery");
static_assert(offsetof(FEOSPageQuery, StartIndex) == 0x000000, "Member 'FEOSPageQuery::StartIndex' has a wrong offset!");
static_assert(offsetof(FEOSPageQuery, MaxCount) == 0x000004, "Member 'FEOSPageQuery::MaxCount' has a wrong offset!");

// ScriptStruct EOSCore.EOSPlatformGetDesktopCrossplayStatusInfo
// 0x0008 (0x0008 - 0x0000)
struct FEOSPlatformGetDesktopCrossplayStatusInfo final
{
public:
	EEOSEDesktopCrossplayStatus                   Status;                                            // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2867[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ServiceInitResult;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSPlatformGetDesktopCrossplayStatusInfo) == 0x000004, "Wrong alignment on FEOSPlatformGetDesktopCrossplayStatusInfo");
static_assert(sizeof(FEOSPlatformGetDesktopCrossplayStatusInfo) == 0x000008, "Wrong size on FEOSPlatformGetDesktopCrossplayStatusInfo");
static_assert(offsetof(FEOSPlatformGetDesktopCrossplayStatusInfo, Status) == 0x000000, "Member 'FEOSPlatformGetDesktopCrossplayStatusInfo::Status' has a wrong offset!");
static_assert(offsetof(FEOSPlatformGetDesktopCrossplayStatusInfo, ServiceInitResult) == 0x000004, "Member 'FEOSPlatformGetDesktopCrossplayStatusInfo::ServiceInitResult' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIShowFriendsOptions
// 0x0021 (0x0021 - 0x0000)
struct FEOSUIShowFriendsOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUIShowFriendsOptions) == 0x000001, "Wrong alignment on FEOSUIShowFriendsOptions");
static_assert(sizeof(FEOSUIShowFriendsOptions) == 0x000021, "Wrong size on FEOSUIShowFriendsOptions");
static_assert(offsetof(FEOSUIShowFriendsOptions, LocalUserId) == 0x000000, "Member 'FEOSUIShowFriendsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIHideFriendsOptions
// 0x0028 (0x0028 - 0x0000)
struct alignas(0x04) FEOSUIHideFriendsOptions final
{
public:
	uint8                                         Pad_2868[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2869[0x3];                                     // 0x0025(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIHideFriendsOptions) == 0x000004, "Wrong alignment on FEOSUIHideFriendsOptions");
static_assert(sizeof(FEOSUIHideFriendsOptions) == 0x000028, "Wrong size on FEOSUIHideFriendsOptions");
static_assert(offsetof(FEOSUIHideFriendsOptions, LocalUserId) == 0x000004, "Member 'FEOSUIHideFriendsOptions::LocalUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUISetToggleFriendsKeyOptions
// 0x0008 (0x0008 - 0x0000)
struct FEOSUISetToggleFriendsKeyOptions final
{
public:
	uint8                                         Pad_286A[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         KeyCombination;                                    // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUISetToggleFriendsKeyOptions) == 0x000004, "Wrong alignment on FEOSUISetToggleFriendsKeyOptions");
static_assert(sizeof(FEOSUISetToggleFriendsKeyOptions) == 0x000008, "Wrong size on FEOSUISetToggleFriendsKeyOptions");
static_assert(offsetof(FEOSUISetToggleFriendsKeyOptions, KeyCombination) == 0x000004, "Member 'FEOSUISetToggleFriendsKeyOptions::KeyCombination' has a wrong offset!");

// ScriptStruct EOSCore.EOSUISetDisplayPreferenceOptions
// 0x0008 (0x0008 - 0x0000)
struct alignas(0x04) FEOSUISetDisplayPreferenceOptions final
{
public:
	uint8                                         Pad_286B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSUIENotificationLocation                   NotificationLocation;                              // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_286C[0x3];                                     // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUISetDisplayPreferenceOptions) == 0x000004, "Wrong alignment on FEOSUISetDisplayPreferenceOptions");
static_assert(sizeof(FEOSUISetDisplayPreferenceOptions) == 0x000008, "Wrong size on FEOSUISetDisplayPreferenceOptions");
static_assert(offsetof(FEOSUISetDisplayPreferenceOptions, NotificationLocation) == 0x000004, "Member 'FEOSUISetDisplayPreferenceOptions::NotificationLocation' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIAcknowledgeEventIdOptions
// 0x0018 (0x0018 - 0x0000)
struct FEOSUIAcknowledgeEventIdOptions final
{
public:
	uint8                                         Pad_286D[0x8];                                     // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSUIEventId                          UiEventId;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EOSResult                                     Result;                                            // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_286E[0x7];                                     // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUIAcknowledgeEventIdOptions) == 0x000008, "Wrong alignment on FEOSUIAcknowledgeEventIdOptions");
static_assert(sizeof(FEOSUIAcknowledgeEventIdOptions) == 0x000018, "Wrong size on FEOSUIAcknowledgeEventIdOptions");
static_assert(offsetof(FEOSUIAcknowledgeEventIdOptions, UiEventId) == 0x000008, "Member 'FEOSUIAcknowledgeEventIdOptions::UiEventId' has a wrong offset!");
static_assert(offsetof(FEOSUIAcknowledgeEventIdOptions, Result) == 0x000010, "Member 'FEOSUIAcknowledgeEventIdOptions::Result' has a wrong offset!");

// ScriptStruct EOSCore.EOSUIShowBlockPlayerOptions
// 0x0042 (0x0042 - 0x0000)
struct FEOSUIShowBlockPlayerOptions final
{
public:
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0021(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUIShowBlockPlayerOptions) == 0x000001, "Wrong alignment on FEOSUIShowBlockPlayerOptions");
static_assert(sizeof(FEOSUIShowBlockPlayerOptions) == 0x000042, "Wrong size on FEOSUIShowBlockPlayerOptions");
static_assert(offsetof(FEOSUIShowBlockPlayerOptions, LocalUserId) == 0x000000, "Member 'FEOSUIShowBlockPlayerOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUIShowBlockPlayerOptions, TargetUserId) == 0x000021, "Member 'FEOSUIShowBlockPlayerOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSUserInfoQueryUserInfoOptions final
{
public:
	uint8                                         Pad_286F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2870[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoQueryUserInfoOptions) == 0x000004, "Wrong alignment on FEOSUserInfoQueryUserInfoOptions");
static_assert(sizeof(FEOSUserInfoQueryUserInfoOptions) == 0x000048, "Wrong size on FEOSUserInfoQueryUserInfoOptions");
static_assert(offsetof(FEOSUserInfoQueryUserInfoOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoQueryUserInfoOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoQueryUserInfoOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoQueryUserInfoByExternalAccountOptions
// 0x0040 (0x0040 - 0x0000)
struct FEOSUserInfoQueryUserInfoByExternalAccountOptions final
{
public:
	uint8                                         Pad_2871[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2872[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ExternalAccountId;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountType;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2873[0x7];                                     // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoQueryUserInfoByExternalAccountOptions) == 0x000008, "Wrong alignment on FEOSUserInfoQueryUserInfoByExternalAccountOptions");
static_assert(sizeof(FEOSUserInfoQueryUserInfoByExternalAccountOptions) == 0x000040, "Wrong size on FEOSUserInfoQueryUserInfoByExternalAccountOptions");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountOptions, ExternalAccountId) == 0x000028, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountOptions::ExternalAccountId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoQueryUserInfoByExternalAccountOptions, AccountType) == 0x000038, "Member 'FEOSUserInfoQueryUserInfoByExternalAccountOptions::AccountType' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfo
// 0x0078 (0x0078 - 0x0000)
struct FEOSUserInfo final
{
public:
	struct FEOSEpicAccountId                      UserId;                                            // 0x0000(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2874[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Country;                                           // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PreferredLanguage;                                 // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Nickname;                                          // 0x0058(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayNameSanitized;                              // 0x0068(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfo) == 0x000008, "Wrong alignment on FEOSUserInfo");
static_assert(sizeof(FEOSUserInfo) == 0x000078, "Wrong size on FEOSUserInfo");
static_assert(offsetof(FEOSUserInfo, UserId) == 0x000000, "Member 'FEOSUserInfo::UserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfo, Country) == 0x000028, "Member 'FEOSUserInfo::Country' has a wrong offset!");
static_assert(offsetof(FEOSUserInfo, DisplayName) == 0x000038, "Member 'FEOSUserInfo::DisplayName' has a wrong offset!");
static_assert(offsetof(FEOSUserInfo, PreferredLanguage) == 0x000048, "Member 'FEOSUserInfo::PreferredLanguage' has a wrong offset!");
static_assert(offsetof(FEOSUserInfo, Nickname) == 0x000058, "Member 'FEOSUserInfo::Nickname' has a wrong offset!");
static_assert(offsetof(FEOSUserInfo, DisplayNameSanitized) == 0x000068, "Member 'FEOSUserInfo::DisplayNameSanitized' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoCopyUserInfoOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSUserInfoCopyUserInfoOptions final
{
public:
	uint8                                         Pad_2875[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2876[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoCopyUserInfoOptions) == 0x000004, "Wrong alignment on FEOSUserInfoCopyUserInfoOptions");
static_assert(sizeof(FEOSUserInfoCopyUserInfoOptions) == 0x000048, "Wrong size on FEOSUserInfoCopyUserInfoOptions");
static_assert(offsetof(FEOSUserInfoCopyUserInfoOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoCopyUserInfoOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyUserInfoOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoCopyUserInfoOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoExternalUserInfo
// 0x0028 (0x0028 - 0x0000)
struct FEOSUserInfoExternalUserInfo final
{
public:
	uint8                                         Pad_2877[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	EEOSEExternalAccountType                      AccountType;                                       // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2878[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountId;                                         // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DisplayName;                                       // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfoExternalUserInfo) == 0x000008, "Wrong alignment on FEOSUserInfoExternalUserInfo");
static_assert(sizeof(FEOSUserInfoExternalUserInfo) == 0x000028, "Wrong size on FEOSUserInfoExternalUserInfo");
static_assert(offsetof(FEOSUserInfoExternalUserInfo, AccountType) == 0x000004, "Member 'FEOSUserInfoExternalUserInfo::AccountType' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoExternalUserInfo, AccountId) == 0x000008, "Member 'FEOSUserInfoExternalUserInfo::AccountId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoExternalUserInfo, DisplayName) == 0x000018, "Member 'FEOSUserInfoExternalUserInfo::DisplayName' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoGetExternalUserInfoCountOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSUserInfoGetExternalUserInfoCountOptions final
{
public:
	uint8                                         Pad_2879[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_287A[0x2];                                     // 0x0046(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoGetExternalUserInfoCountOptions) == 0x000004, "Wrong alignment on FEOSUserInfoGetExternalUserInfoCountOptions");
static_assert(sizeof(FEOSUserInfoGetExternalUserInfoCountOptions) == 0x000048, "Wrong size on FEOSUserInfoGetExternalUserInfoCountOptions");
static_assert(offsetof(FEOSUserInfoGetExternalUserInfoCountOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoGetExternalUserInfoCountOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoGetExternalUserInfoCountOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoGetExternalUserInfoCountOptions::TargetUserId' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoCopyExternalUserInfoByIndexOptions
// 0x004C (0x004C - 0x0000)
struct FEOSUserInfoCopyExternalUserInfoByIndexOptions final
{
public:
	uint8                                         Pad_287B[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_287C[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Index;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfoCopyExternalUserInfoByIndexOptions) == 0x000004, "Wrong alignment on FEOSUserInfoCopyExternalUserInfoByIndexOptions");
static_assert(sizeof(FEOSUserInfoCopyExternalUserInfoByIndexOptions) == 0x00004C, "Wrong size on FEOSUserInfoCopyExternalUserInfoByIndexOptions");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByIndexOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoCopyExternalUserInfoByIndexOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByIndexOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoCopyExternalUserInfoByIndexOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByIndexOptions, Index) == 0x000048, "Member 'FEOSUserInfoCopyExternalUserInfoByIndexOptions::Index' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoCopyExternalUserInfoByAccountTypeOptions
// 0x0048 (0x0048 - 0x0000)
struct alignas(0x04) FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions final
{
public:
	uint8                                         Pad_287D[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EEOSEExternalAccountType                      AccountType;                                       // 0x0046(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_287E[0x1];                                     // 0x0047(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions) == 0x000004, "Wrong alignment on FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions");
static_assert(sizeof(FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions) == 0x000048, "Wrong size on FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions, AccountType) == 0x000046, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountTypeOptions::AccountType' has a wrong offset!");

// ScriptStruct EOSCore.EOSUserInfoCopyExternalUserInfoByAccountIdOptions
// 0x0058 (0x0058 - 0x0000)
struct FEOSUserInfoCopyExternalUserInfoByAccountIdOptions final
{
public:
	uint8                                         Pad_287F[0x4];                                     // 0x0000(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEOSEpicAccountId                      LocalUserId;                                       // 0x0004(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FEOSEpicAccountId                      TargetUserId;                                      // 0x0025(0x0021)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2880[0x2];                                     // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AccountId;                                         // 0x0048(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FEOSUserInfoCopyExternalUserInfoByAccountIdOptions) == 0x000008, "Wrong alignment on FEOSUserInfoCopyExternalUserInfoByAccountIdOptions");
static_assert(sizeof(FEOSUserInfoCopyExternalUserInfoByAccountIdOptions) == 0x000058, "Wrong size on FEOSUserInfoCopyExternalUserInfoByAccountIdOptions");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountIdOptions, LocalUserId) == 0x000004, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountIdOptions::LocalUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountIdOptions, TargetUserId) == 0x000025, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountIdOptions::TargetUserId' has a wrong offset!");
static_assert(offsetof(FEOSUserInfoCopyExternalUserInfoByAccountIdOptions, AccountId) == 0x000048, "Member 'FEOSUserInfoCopyExternalUserInfoByAccountIdOptions::AccountId' has a wrong offset!");

}

