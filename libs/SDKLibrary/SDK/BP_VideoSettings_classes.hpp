#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VideoSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_MasterMenuPanel_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_VideoSettings.BP_VideoSettings_C
// 0x0170 (0x0470 - 0x0300)
class UBP_VideoSettings_C final : public UBP_MasterMenuPanel_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_VideoSettings_C;                 // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_ScalerSetting_C*                    AntiMinusAliasingSelector;                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Backround;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    BP_ScalerSetting_1;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    BP_ScalerSetting_2;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    BP_ScalerSetting_3;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    BP_ScalerSetting_4;                                // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    BP_ScalerSetting_5;                                // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    MaxFPSSelector;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    MaxFPSSelector_1;                                  // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                RefreshButton;                                     // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ResolutionSetting_C*                ResolutionSelector;                                // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Subtitle;                                          // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    VMinusSyncSelector;                                // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_ScalerSetting_C*                    WindowModeSelector;                                // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           BackroundColor;                                    // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0390(0x0018)(Edit, BlueprintVisible)
	class FText                                   SubtitleText;                                      // 0x03A8(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         TitleFont;                                         // 0x03C0(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         SubtitleFont;                                      // 0x0418(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)

public:
	void BndEvt__RefreshButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void ExecuteUbergraph_BP_VideoSettings(int32 EntryPoint);
	bool Get_ResolutionSelector_bIsEnabled_0();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VideoSettings_C">();
	}
	static class UBP_VideoSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_VideoSettings_C>();
	}
};
static_assert(alignof(UBP_VideoSettings_C) == 0x000008, "Wrong alignment on UBP_VideoSettings_C");
static_assert(sizeof(UBP_VideoSettings_C) == 0x000470, "Wrong size on UBP_VideoSettings_C");
static_assert(offsetof(UBP_VideoSettings_C, UberGraphFrame_BP_VideoSettings_C) == 0x000300, "Member 'UBP_VideoSettings_C::UberGraphFrame_BP_VideoSettings_C' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, AntiMinusAliasingSelector) == 0x000308, "Member 'UBP_VideoSettings_C::AntiMinusAliasingSelector' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, Backround) == 0x000310, "Member 'UBP_VideoSettings_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BP_ScalerSetting_1) == 0x000318, "Member 'UBP_VideoSettings_C::BP_ScalerSetting_1' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BP_ScalerSetting_2) == 0x000320, "Member 'UBP_VideoSettings_C::BP_ScalerSetting_2' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BP_ScalerSetting_3) == 0x000328, "Member 'UBP_VideoSettings_C::BP_ScalerSetting_3' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BP_ScalerSetting_4) == 0x000330, "Member 'UBP_VideoSettings_C::BP_ScalerSetting_4' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BP_ScalerSetting_5) == 0x000338, "Member 'UBP_VideoSettings_C::BP_ScalerSetting_5' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, MaxFPSSelector) == 0x000340, "Member 'UBP_VideoSettings_C::MaxFPSSelector' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, MaxFPSSelector_1) == 0x000348, "Member 'UBP_VideoSettings_C::MaxFPSSelector_1' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, RefreshButton) == 0x000350, "Member 'UBP_VideoSettings_C::RefreshButton' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, ResolutionSelector) == 0x000358, "Member 'UBP_VideoSettings_C::ResolutionSelector' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, Subtitle) == 0x000360, "Member 'UBP_VideoSettings_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, Title) == 0x000368, "Member 'UBP_VideoSettings_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, VMinusSyncSelector) == 0x000370, "Member 'UBP_VideoSettings_C::VMinusSyncSelector' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, WindowModeSelector) == 0x000378, "Member 'UBP_VideoSettings_C::WindowModeSelector' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, BackroundColor) == 0x000380, "Member 'UBP_VideoSettings_C::BackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, TitleText) == 0x000390, "Member 'UBP_VideoSettings_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, SubtitleText) == 0x0003A8, "Member 'UBP_VideoSettings_C::SubtitleText' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, TitleFont) == 0x0003C0, "Member 'UBP_VideoSettings_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UBP_VideoSettings_C, SubtitleFont) == 0x000418, "Member 'UBP_VideoSettings_C::SubtitleFont' has a wrong offset!");

}

