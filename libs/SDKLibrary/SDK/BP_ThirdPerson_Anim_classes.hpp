#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThirdPerson_Anim

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_AimOffset_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "E_AnimationMode_structs.hpp"
#include "BP_ThirdPerson_Anim_structs.hpp"
#include "S_HoldableAnims_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_AnimationState_structs.hpp"
#include "S_AimOffsets_structs.hpp"
#include "S_UpperBodyAnims_structs.hpp"
#include "S_LowerBodyAnims_structs.hpp"
#include "PhysicsCore_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_ThirdPerson_Anim.BP_ThirdPerson_Anim_C
// 0x64B0 (0x6800 - 0x0350)
class UBP_ThirdPerson_Anim_C final : public UAnimInstance
{
public:
	uint8                                         Pad_51A0[0x8];                                     // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct BP_ThirdPerson_Anim::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x00A4)(HasGetValueTypeHash)
	uint8                                         Pad_51A1[0x4];                                     // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0400(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0408(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0410(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_4;                  // 0x0430(0x00E0)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_9;                    // 0x0510(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_23;                    // 0x0618(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_10;                       // 0x0640(0x0128)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_27;                 // 0x0768(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_26;                 // 0x0790(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_25;                 // 0x07B8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_24;                 // 0x07E0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_23;                 // 0x0808(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_22;                 // 0x0830(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_21;                 // 0x0858(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_20;                 // 0x0880(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_19;                 // 0x08A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_18;                 // 0x08D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_17;                 // 0x08F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_16;                 // 0x0920(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_15;                 // 0x0948(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_14;                 // 0x0970(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_11;                 // 0x0998(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_10;                 // 0x0A08(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_9;                  // 0x0A78(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_35;                  // 0x0AE8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_34;                  // 0x0B30(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_8;                  // 0x0B78(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_7;                  // 0x0BE8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_6;                  // 0x0C58(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_33;                  // 0x0CC8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_13;                      // 0x0D10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_71;                   // 0x0D30(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_70;                   // 0x0D78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_69;                   // 0x0DC0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_32;                  // 0x0E08(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_31;                  // 0x0E50(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_68;                   // 0x0E98(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_67;                   // 0x0EE0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_66;                   // 0x0F28(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_30;                  // 0x0F70(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_12;                      // 0x0FB8(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x0FD8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x1048(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x10B8(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_29;                  // 0x1128(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_28;                  // 0x1170(0x0048)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x11B8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1228(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x1298(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_27;                  // 0x1308(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_11;                      // 0x1350(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_65;                   // 0x1370(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_64;                   // 0x13B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_63;                   // 0x1400(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_62;                   // 0x1448(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_26;                  // 0x1490(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_10;                      // 0x14D8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_61;                   // 0x14F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_60;                   // 0x1540(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_59;                   // 0x1588(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_58;                   // 0x15D0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_25;                  // 0x1618(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_9;                       // 0x1660(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_57;                   // 0x1680(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_56;                   // 0x16C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_55;                   // 0x1710(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_54;                   // 0x1758(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_24;                  // 0x17A0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_8;                       // 0x17E8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_53;                   // 0x1808(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_52;                   // 0x1850(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_51;                   // 0x1898(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_23;                  // 0x18E0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_22;                  // 0x1928(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_50;                   // 0x1970(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_49;                   // 0x19B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_48;                   // 0x1A00(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_21;                  // 0x1A48(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x1A90(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x1AB0(0x00C8)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_4;                              // 0x1B78(0x0048)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_8;                    // 0x1BC0(0x0108)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_4;             // 0x1CC8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_7;                    // 0x1CE8(0x0108)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_5;                   // 0x1DF0(0x0048)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_3;                  // 0x1E38(0x00E0)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_3;          // 0x1F18(0x0118)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_13;                 // 0x2030(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_12;                 // 0x2058(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_11;                 // 0x2080(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_10;                 // 0x20A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_9;                  // 0x20D0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_8;                  // 0x20F8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_7;                  // 0x2120(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_6;                  // 0x2148(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x2170(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x2198(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x21C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x21E8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x2210(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x2238(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_47;                   // 0x2260(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_46;                   // 0x22A8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_45;                   // 0x22F0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_20;                  // 0x2338(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_44;                   // 0x2380(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_43;                   // 0x23C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_42;                   // 0x2410(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_19;                  // 0x2458(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_18;                  // 0x24A0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_41;                   // 0x24E8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_40;                   // 0x2530(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_39;                   // 0x2578(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_17;                  // 0x25C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x2608(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_38;                   // 0x2628(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_37;                   // 0x2670(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_36;                   // 0x26B8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_16;                  // 0x2700(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_35;                   // 0x2748(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_34;                   // 0x2790(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_33;                   // 0x27D8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_15;                  // 0x2820(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_14;                  // 0x2868(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_32;                   // 0x28B0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_31;                   // 0x28F8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_30;                   // 0x2940(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_13;                  // 0x2988(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x29D0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_29;                   // 0x29F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_28;                   // 0x2A38(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_27;                   // 0x2A80(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_26;                   // 0x2AC8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_25;                   // 0x2B10(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_12;                  // 0x2B58(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_24;                   // 0x2BA0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_23;                   // 0x2BE8(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_11;                  // 0x2C30(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_10;                  // 0x2C78(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_22;                   // 0x2CC0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_21;                   // 0x2D08(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_9;                   // 0x2D50(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x2D98(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_20;                   // 0x2DB8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_19;                   // 0x2E00(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_18;                   // 0x2E48(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_17;                   // 0x2E90(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_8;                   // 0x2ED8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x2F20(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_16;                   // 0x2F40(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_15;                   // 0x2F88(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_14;                   // 0x2FD0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_13;                   // 0x3018(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_7;                   // 0x3060(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x30A8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_12;                   // 0x30C8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_11;                   // 0x3110(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_10;                   // 0x3158(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_9;                    // 0x31A0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_6;                   // 0x31E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x3230(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_8;                    // 0x3250(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_7;                    // 0x3298(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_6;                    // 0x32E0(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_5;                   // 0x3328(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x3370(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x33B8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x3400(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_4;                   // 0x3448(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_3;                   // 0x3490(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x34D8(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x3520(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x3568(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_2;                   // 0x35B0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x35F8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x3618(0x00C8)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_6;                    // 0x36E0(0x0108)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_3;                              // 0x37E8(0x0048)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_2;                              // 0x3830(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_22;                    // 0x3878(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_21;                    // 0x38A0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_20;                    // 0x38C8(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_19;                    // 0x38F0(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_9;                        // 0x3918(0x0128)()
	struct FAnimNode_Fabrik                       AnimGraphNode_Fabrik;                              // 0x3A40(0x01F0)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_2;                         // 0x3C30(0x0270)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_8;                        // 0x3EA0(0x0128)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_5;                    // 0x3FC8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_18;                    // 0x40D0(0x0028)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_3;             // 0x40F8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_4;             // 0x4118(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_4;                    // 0x4138(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_17;                    // 0x4240(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x4268(0x0048)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_2;          // 0x42B0(0x0118)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_16;                    // 0x43C8(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace_1;          // 0x43F0(0x0118)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_4;                   // 0x4508(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x4550(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_15;                    // 0x4598(0x0028)()
	struct FAnimNode_RotationOffsetBlendSpace     AnimGraphNode_RotationOffsetBlendSpace;            // 0x45C0(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_3;                    // 0x46D8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_14;                    // 0x47E0(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_13;                    // 0x4808(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_2;                    // 0x4830(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_12;                    // 0x4938(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot_1;                              // 0x4960(0x0048)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_2;             // 0x49A8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_3;             // 0x49C8(0x0020)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_7;                        // 0x49E8(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_6;                        // 0x4B10(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_5;                        // 0x4C38(0x0128)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_2;             // 0x4D60(0x0020)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_11;                    // 0x4D80(0x0028)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_4;                        // 0x4DA8(0x0128)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_3;                   // 0x4ED0(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_10;                    // 0x4F18(0x0028)()
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK_1;                         // 0x4F40(0x0270)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_3;                        // 0x51B0(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x52D8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x52F8(0x0020)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose_1;                    // 0x5318(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_9;                     // 0x5420(0x0028)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x5448(0x0048)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone_1;                    // 0x5490(0x00A8)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_8;                     // 0x5538(0x0028)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_2;                  // 0x5560(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_7;                     // 0x5640(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_2;                   // 0x5668(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_6;                     // 0x56B0(0x0028)()
	uint8                                         Pad_51A2[0x8];                                     // 0x56D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_TwoBoneIK                    AnimGraphNode_TwoBoneIK;                           // 0x56E0(0x0270)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend_1;                  // 0x5950(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_5;                     // 0x5A30(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool_1;                   // 0x5A58(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_4;                     // 0x5AA0(0x0028)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x5AC8(0x0048)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_3;                     // 0x5B10(0x0028)()
	struct FAnimNode_RotateRootBone               AnimGraphNode_RotateRootBone;                      // 0x5B38(0x00A8)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_2;                        // 0x5BE0(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_1;                        // 0x5D08(0x0128)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone;                          // 0x5E30(0x0128)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x5F58(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x5F78(0x0020)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x5F98(0x00E0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_2;                     // 0x6078(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x60A0(0x0028)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x60C8(0x0108)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x61D0(0x0028)()
	bool                                          IsInAir_;                                          // 0x61F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCrouched;                                        // 0x61F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAccelerating;                                    // 0x61FA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAimOffset;                                      // 0x61FB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseRightHandIK;                                    // 0x61FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLeftHandIK;                                     // 0x61FD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A3[0x2];                                     // 0x61FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             OwningPawn;                                        // 0x6200(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimOffset;                                         // 0x6208(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              LookAtRotation;                                    // 0x6220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x6230(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Direction;                                         // 0x6238(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimPitch;                                          // 0x6240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimYaw;                                            // 0x6248(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RootYawOffset;                                     // 0x6250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawLastTick;                                       // 0x6258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Yaw;                                               // 0x6260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YawChangeOverFrame;                                // 0x6268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurveValue;                                        // 0x6270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurveValueLastFrame;                               // 0x6278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EmptyHandsTurnRight;                               // 0x6280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EmptyHandsTurnLeft;                                // 0x6288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EmptyHandsCrouchTurnRight;                         // 0x6290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           EmptyHandsCrouchTurnLeft;                          // 0x6298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        MaxTurnInPlaceAngle;                               // 0x62A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A4[0x8];                                     // 0x62A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LeftHandIKTransform;                               // 0x62B0(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             RightHandIKTransform;                              // 0x6310(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             SightTransform;                                    // 0x6370(0x0060)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InAction;                                          // 0x63D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A5[0x7];                                     // 0x63D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RightHandIKLocationOffsetADS;                      // 0x63D8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CurrentTurnAnim;                                   // 0x63F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_AnimationMode                               CurrentAnimMode;                                   // 0x63F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A6[0x7];                                     // 0x63F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAimOffsetBlendSpace*                   EmptyHandsAimOffset;                               // 0x6400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JumpingStart;                                      // 0x6408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JumpingLoop;                                       // 0x6410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          JumpLand;                                          // 0x6418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x6420(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterComponent_C*               CharacterComponent;                                // 0x6428(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SightOffset;                                       // 0x6430(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_HoldableAnims                       HoldableAnims1;                                    // 0x6448(0x00D8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FS_HoldableAnims                       HoldableAnims2;                                    // 0x6520(0x00D8)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_AimOffset                                   AimOffsetType;                                     // 0x65F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              AnimationState;                                    // 0x65F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A7[0x6];                                     // 0x65FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               RightHandSway;                                     // 0x6600(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        Lean;                                              // 0x6618(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeaponCollision;                                   // 0x6620(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSway;                                           // 0x6628(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A8[0x7];                                     // 0x6629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RightHandIkEnabled;                                // 0x6630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Sprinting;                                         // 0x6638(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51A9[0x7];                                     // 0x6639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               ClippingRotation;                                  // 0x6640(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseRightHandADSOffset;                             // 0x6658(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AA[0x7];                                     // 0x6659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpecalAO;                                          // 0x6660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLock;                                             // 0x6668(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HeadAO;                                            // 0x6669(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AB[0x6];                                     // 0x666A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LeftHandIkEnabled;                                 // 0x6670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine2AOAlpha;                                     // 0x6678(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LeftHandIK;                                        // 0x6680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowHandIKs;                                      // 0x6681(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AC[0x6];                                     // 0x6682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeadAOAlpha;                                       // 0x6688(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UsingShadowDummy;                                  // 0x6690(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AD[0x7];                                     // 0x6691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Spine3AOAlpha;                                     // 0x6698(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spine1AOAlpha;                                     // 0x66A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightElbowOffset;                                  // 0x66A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightHandIK;                                       // 0x66C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AE[0x7];                                     // 0x66C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AimOffsets                          HoldableAimOffsets;                                // 0x66C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterHoldable_C*                   HoldingItem;                                       // 0x66E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHoldingItem;                                     // 0x66E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51AF[0x7];                                     // 0x66E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HoldingItemMesh;                                   // 0x66F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_UpperBodyAnims                      EmptyHandsUpperBody;                               // 0x66F8(0x0078)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_LowerBodyAnims                      EmptyHandsLowerBody;                               // 0x6770(0x0040)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 DummyMesh;                                         // 0x67B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SprintLeftHand;                                    // 0x67B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51B0[0x7];                                     // 0x67B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LeftElbowOffset;                                   // 0x67C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TurnLeft;                                          // 0x67D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TurnRight;                                         // 0x67E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TurnLeftCrouch;                                    // 0x67E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           TurnRightCrouch;                                   // 0x67F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* Param_AnimGraph);
	void AnimNotify_AttachWeaponAttachment();
	void AnimNotify_ChamberWeaponAmmo();
	void AnimNotify_DestroyAttachment();
	void AnimNotify_DisableHandIK();
	void AnimNotify_EnableHandIK();
	void AnimNotify_EndAnimInAction();
	void AnimNotify_EndMeleeCollision();
	void AnimNotify_LeftFootStep();
	void AnimNotify_RemoveAttachment();
	void AnimNotify_RightFootStep();
	void AnimNotify_SpawnHoldable();
	void AnimNotify_SpawnWeaponAttachment();
	void AnimNotify_StartAnimInAction();
	void AnimNotify_StartMeleeCollision();
	void AnimNotify_ThrowChargeEnd();
	void AnimNotify_ThrowRelease();
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void CalculateAimOffset();
	void CheckTurnInPlace();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_ModifyBone_2477814B49D5D999E7EB058C57B0D5A5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_ModifyBone_2F9D70344354FD076E887DB02A618139();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_0F534A184E8D9D8F0A1E1BAB164F11D1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_132040C74FCFD105CC9D5A83BD65F76F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_178859F4400EFDA8291993888EA36736();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_1CBCAB874C880DB2AFA95088D191F889();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_357D58B44E36460305944492121A4129();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_376C5E474E053C7A837DE781AF136F87();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_3AFEE7EC471667CAA0E65C9E7A7EE6D6();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_4B1FB5DE409FB0CF8667879520B6F4ED();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_4FF0E84F4DA05A04B9845EA75EF08F3D();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_6D076105434C3FCD78241EB8B687B2EC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_78E2EA9349BC85FDEAA5518EF405698F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_9F74FE8A47350A7D3F5623921093DF60();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_AAAAE79944B6406A217E1191977E00A8();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_BD11C52640C7F25E8CB94C932914BB9A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_E3561F3B4AC98181AED3929B7A164002();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_EC95A5844D669DB87529079EA6FC6E01();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_F13BD9A947E91F687458A8ABA9BAFF3F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TransitionResult_F7D46AB84FA462FB6143FEAA83D7DAB0();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TwoBoneIK_52AE4A5045987AAB7C54C9A7806CD9A1();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TwoBoneIK_D91CC3BA4325B70779753D9538068129();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_BP_ThirdPerson_Anim_AnimGraphNode_TwoBoneIK_EEAB781341E266BAF43B1895FCDB05A0();
	void ExecuteUbergraph_BP_ThirdPerson_Anim(int32 EntryPoint);
	void ResetCurveInPlace();
	void ResetFirstCurve();
	void SelectAnims(TArray<struct FS_HoldableAnims>& AllAnims, bool* AnimsFound, struct FS_HoldableAnims* Anims);
	void SGK_EndChamberMontage();
	void SGK_UpdateAnimationState(E_AnimationState Param_AnimationState);
	void SGK_UpdateHoldableAnimations(class ABP_MasterHoldable_C* Holdable);
	void TurnInPlaceAnimPlaying();
	void TurnInPlaceMontage(bool Right, class UAnimMontage** Montage);
	void UpdateAOWeights();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ThirdPerson_Anim_C">();
	}
	static class UBP_ThirdPerson_Anim_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ThirdPerson_Anim_C>();
	}
};
static_assert(alignof(UBP_ThirdPerson_Anim_C) == 0x000010, "Wrong alignment on UBP_ThirdPerson_Anim_C");
static_assert(sizeof(UBP_ThirdPerson_Anim_C) == 0x006800, "Wrong size on UBP_ThirdPerson_Anim_C");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UberGraphFrame) == 0x000350, "Member 'UBP_ThirdPerson_Anim_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, __AnimBlueprintMutables) == 0x000358, "Member 'UBP_ThirdPerson_Anim_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimBlueprintExtension_PropertyAccess) == 0x000400, "Member 'UBP_ThirdPerson_Anim_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimBlueprintExtension_Base) == 0x000408, "Member 'UBP_ThirdPerson_Anim_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Root) == 0x000410, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LayeredBoneBlend_4) == 0x000430, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LayeredBoneBlend_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_9) == 0x000510, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_23) == 0x000618, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_23' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_10) == 0x000640, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_27) == 0x000768, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_27' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_26) == 0x000790, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_26' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_25) == 0x0007B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_25' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_24) == 0x0007E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_24' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_23) == 0x000808, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_23' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_22) == 0x000830, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_22' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_21) == 0x000858, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_21' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_20) == 0x000880, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_20' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_19) == 0x0008A8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_19' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_18) == 0x0008D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_18' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_17) == 0x0008F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_17' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_16) == 0x000920, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_16' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_15) == 0x000948, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_15' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_14) == 0x000970, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_14' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_11) == 0x000998, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_10) == 0x000A08, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_9) == 0x000A78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_35) == 0x000AE8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_35' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_34) == 0x000B30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_34' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_8) == 0x000B78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_7) == 0x000BE8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_6) == 0x000C58, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_33) == 0x000CC8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_33' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_13) == 0x000D10, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_13' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_71) == 0x000D30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_71' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_70) == 0x000D78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_70' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_69) == 0x000DC0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_69' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_32) == 0x000E08, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_32' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_31) == 0x000E50, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_31' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_68) == 0x000E98, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_68' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_67) == 0x000EE0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_67' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_66) == 0x000F28, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_66' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_30) == 0x000F70, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_30' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_12) == 0x000FB8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_12' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_5) == 0x000FD8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_4) == 0x001048, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_3) == 0x0010B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_29) == 0x001128, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_29' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_28) == 0x001170, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_28' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0011B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001228, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendSpacePlayer) == 0x001298, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_27) == 0x001308, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_27' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_11) == 0x001350, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_65) == 0x001370, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_65' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_64) == 0x0013B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_64' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_63) == 0x001400, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_63' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_62) == 0x001448, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_62' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_26) == 0x001490, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_26' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_10) == 0x0014D8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_61) == 0x0014F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_61' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_60) == 0x001540, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_60' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_59) == 0x001588, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_59' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_58) == 0x0015D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_58' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_25) == 0x001618, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_25' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_9) == 0x001660, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_57) == 0x001680, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_57' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_56) == 0x0016C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_56' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_55) == 0x001710, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_55' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_54) == 0x001758, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_54' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_24) == 0x0017A0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_24' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_8) == 0x0017E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_53) == 0x001808, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_53' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_52) == 0x001850, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_52' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_51) == 0x001898, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_51' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_23) == 0x0018E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_23' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_22) == 0x001928, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_22' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_50) == 0x001970, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_50' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_49) == 0x0019B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_49' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_48) == 0x001A00, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_48' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_21) == 0x001A48, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_21' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_7) == 0x001A90, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateMachine_1) == 0x001AB0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Slot_4) == 0x001B78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Slot_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_8) == 0x001BC0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LocalToComponentSpace_4) == 0x001CC8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LocalToComponentSpace_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_7) == 0x001CE8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool_5) == 0x001DF0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LayeredBoneBlend_3) == 0x001E38, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LayeredBoneBlend_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotationOffsetBlendSpace_3) == 0x001F18, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotationOffsetBlendSpace_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_13) == 0x002030, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_13' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_12) == 0x002058, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_12' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_11) == 0x002080, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_10) == 0x0020A8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_9) == 0x0020D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_8) == 0x0020F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_7) == 0x002120, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_6) == 0x002148, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_5) == 0x002170, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_4) == 0x002198, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_3) == 0x0021C0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_2) == 0x0021E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult_1) == 0x002210, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TransitionResult) == 0x002238, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_47) == 0x002260, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_47' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_46) == 0x0022A8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_46' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_45) == 0x0022F0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_45' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_20) == 0x002338, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_20' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_44) == 0x002380, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_44' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_43) == 0x0023C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_43' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_42) == 0x002410, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_42' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_19) == 0x002458, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_19' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_18) == 0x0024A0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_18' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_41) == 0x0024E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_41' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_40) == 0x002530, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_40' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_39) == 0x002578, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_39' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_17) == 0x0025C0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_17' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_6) == 0x002608, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_38) == 0x002628, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_38' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_37) == 0x002670, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_37' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_36) == 0x0026B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_36' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_16) == 0x002700, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_16' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_35) == 0x002748, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_35' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_34) == 0x002790, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_34' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_33) == 0x0027D8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_33' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_15) == 0x002820, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_15' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_14) == 0x002868, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_14' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_32) == 0x0028B0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_32' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_31) == 0x0028F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_31' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_30) == 0x002940, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_30' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_13) == 0x002988, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_13' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_5) == 0x0029D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_29) == 0x0029F0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_29' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_28) == 0x002A38, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_28' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_27) == 0x002A80, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_27' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_26) == 0x002AC8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_26' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_25) == 0x002B10, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_25' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_12) == 0x002B58, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_12' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_24) == 0x002BA0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_24' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_23) == 0x002BE8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_23' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_11) == 0x002C30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_10) == 0x002C78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_22) == 0x002CC0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_22' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_21) == 0x002D08, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_21' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_9) == 0x002D50, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_4) == 0x002D98, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_20) == 0x002DB8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_20' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_19) == 0x002E00, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_19' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_18) == 0x002E48, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_18' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_17) == 0x002E90, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_17' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_8) == 0x002ED8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_3) == 0x002F20, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_16) == 0x002F40, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_16' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_15) == 0x002F88, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_15' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_14) == 0x002FD0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_14' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_13) == 0x003018, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_13' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_7) == 0x003060, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_2) == 0x0030A8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_12) == 0x0030C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_12' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_11) == 0x003110, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_10) == 0x003158, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_9) == 0x0031A0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_6) == 0x0031E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult_1) == 0x003230, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_8) == 0x003250, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_7) == 0x003298, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_6) == 0x0032E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_5) == 0x003328, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_5) == 0x003370, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_4) == 0x0033B8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_3) == 0x003400, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_4) == 0x003448, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_3) == 0x003490, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_2) == 0x0034D8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer_1) == 0x003520, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SequencePlayer) == 0x003568, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_2) == 0x0035B0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateResult) == 0x0035F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_StateMachine) == 0x003618, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_6) == 0x0036E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Slot_3) == 0x0037E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Slot_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Slot_2) == 0x003830, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Slot_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_22) == 0x003878, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_22' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_21) == 0x0038A0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_21' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_20) == 0x0038C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_20' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_19) == 0x0038F0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_19' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_9) == 0x003918, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Fabrik) == 0x003A40, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Fabrik' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TwoBoneIK_2) == 0x003C30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TwoBoneIK_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_8) == 0x003EA0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_5) == 0x003FC8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_18) == 0x0040D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_18' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LocalToComponentSpace_3) == 0x0040F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LocalToComponentSpace_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ComponentToLocalSpace_4) == 0x004118, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ComponentToLocalSpace_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_4) == 0x004138, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_17) == 0x004240, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_17' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum_1) == 0x004268, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotationOffsetBlendSpace_2) == 0x0042B0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotationOffsetBlendSpace_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_16) == 0x0043C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_16' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotationOffsetBlendSpace_1) == 0x0043F0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotationOffsetBlendSpace_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool_4) == 0x004508, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByEnum) == 0x004550, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_15) == 0x004598, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_15' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotationOffsetBlendSpace) == 0x0045C0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotationOffsetBlendSpace' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_3) == 0x0046D8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_14) == 0x0047E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_14' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_13) == 0x004808, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_13' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_2) == 0x004830, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_12) == 0x004938, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_12' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Slot_1) == 0x004960, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Slot_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LocalToComponentSpace_2) == 0x0049A8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LocalToComponentSpace_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ComponentToLocalSpace_3) == 0x0049C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ComponentToLocalSpace_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_7) == 0x0049E8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_6) == 0x004B10, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_5) == 0x004C38, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ComponentToLocalSpace_2) == 0x004D60, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ComponentToLocalSpace_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_11) == 0x004D80, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_11' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_4) == 0x004DA8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool_3) == 0x004ED0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_10) == 0x004F18, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_10' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TwoBoneIK_1) == 0x004F40, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TwoBoneIK_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_3) == 0x0051B0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LocalToComponentSpace_1) == 0x0052D8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x0052F8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose_1) == 0x005318, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_9) == 0x005420, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_9' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_Slot) == 0x005448, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotateRootBone_1) == 0x005490, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotateRootBone_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_8) == 0x005538, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_8' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LayeredBoneBlend_2) == 0x005560, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LayeredBoneBlend_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_7) == 0x005640, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_7' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool_2) == 0x005668, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_6) == 0x0056B0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_6' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_TwoBoneIK) == 0x0056E0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_TwoBoneIK' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LayeredBoneBlend_1) == 0x005950, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LayeredBoneBlend_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_5) == 0x005A30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_5' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool_1) == 0x005A58, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_4) == 0x005AA0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_4' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_BlendListByBool) == 0x005AC8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_3) == 0x005B10, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_3' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_RotateRootBone) == 0x005B38, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_RotateRootBone' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_2) == 0x005BE0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone_1) == 0x005D08, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ModifyBone) == 0x005E30, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ModifyBone' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LocalToComponentSpace) == 0x005F58, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_ComponentToLocalSpace) == 0x005F78, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_LayeredBoneBlend) == 0x005F98, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_2) == 0x006078, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose_1) == 0x0060A0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_SaveCachedPose) == 0x0060C8, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimGraphNode_UseCachedPose) == 0x0061D0, "Member 'UBP_ThirdPerson_Anim_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, IsInAir_) == 0x0061F8, "Member 'UBP_ThirdPerson_Anim_C::IsInAir_' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, IsCrouched) == 0x0061F9, "Member 'UBP_ThirdPerson_Anim_C::IsCrouched' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, IsAccelerating) == 0x0061FA, "Member 'UBP_ThirdPerson_Anim_C::IsAccelerating' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UseAimOffset) == 0x0061FB, "Member 'UBP_ThirdPerson_Anim_C::UseAimOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UseRightHandIK) == 0x0061FC, "Member 'UBP_ThirdPerson_Anim_C::UseRightHandIK' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UseLeftHandIK) == 0x0061FD, "Member 'UBP_ThirdPerson_Anim_C::UseLeftHandIK' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, OwningPawn) == 0x006200, "Member 'UBP_ThirdPerson_Anim_C::OwningPawn' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AimOffset) == 0x006208, "Member 'UBP_ThirdPerson_Anim_C::AimOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, LookAtRotation) == 0x006220, "Member 'UBP_ThirdPerson_Anim_C::LookAtRotation' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Speed) == 0x006230, "Member 'UBP_ThirdPerson_Anim_C::Speed' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Direction) == 0x006238, "Member 'UBP_ThirdPerson_Anim_C::Direction' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AimPitch) == 0x006240, "Member 'UBP_ThirdPerson_Anim_C::AimPitch' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AimYaw) == 0x006248, "Member 'UBP_ThirdPerson_Anim_C::AimYaw' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RootYawOffset) == 0x006250, "Member 'UBP_ThirdPerson_Anim_C::RootYawOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, YawLastTick) == 0x006258, "Member 'UBP_ThirdPerson_Anim_C::YawLastTick' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Yaw) == 0x006260, "Member 'UBP_ThirdPerson_Anim_C::Yaw' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, YawChangeOverFrame) == 0x006268, "Member 'UBP_ThirdPerson_Anim_C::YawChangeOverFrame' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, CurveValue) == 0x006270, "Member 'UBP_ThirdPerson_Anim_C::CurveValue' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, CurveValueLastFrame) == 0x006278, "Member 'UBP_ThirdPerson_Anim_C::CurveValueLastFrame' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsTurnRight) == 0x006280, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsTurnRight' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsTurnLeft) == 0x006288, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsTurnLeft' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsCrouchTurnRight) == 0x006290, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsCrouchTurnRight' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsCrouchTurnLeft) == 0x006298, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsCrouchTurnLeft' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, MaxTurnInPlaceAngle) == 0x0062A0, "Member 'UBP_ThirdPerson_Anim_C::MaxTurnInPlaceAngle' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, LeftHandIKTransform) == 0x0062B0, "Member 'UBP_ThirdPerson_Anim_C::LeftHandIKTransform' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightHandIKTransform) == 0x006310, "Member 'UBP_ThirdPerson_Anim_C::RightHandIKTransform' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, SightTransform) == 0x006370, "Member 'UBP_ThirdPerson_Anim_C::SightTransform' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, InAction) == 0x0063D0, "Member 'UBP_ThirdPerson_Anim_C::InAction' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightHandIKLocationOffsetADS) == 0x0063D8, "Member 'UBP_ThirdPerson_Anim_C::RightHandIKLocationOffsetADS' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, CurrentTurnAnim) == 0x0063F0, "Member 'UBP_ThirdPerson_Anim_C::CurrentTurnAnim' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, CurrentAnimMode) == 0x0063F8, "Member 'UBP_ThirdPerson_Anim_C::CurrentAnimMode' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsAimOffset) == 0x006400, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsAimOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, JumpingStart) == 0x006408, "Member 'UBP_ThirdPerson_Anim_C::JumpingStart' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, JumpingLoop) == 0x006410, "Member 'UBP_ThirdPerson_Anim_C::JumpingLoop' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, JumpLand) == 0x006418, "Member 'UBP_ThirdPerson_Anim_C::JumpLand' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, PlayerInventory) == 0x006420, "Member 'UBP_ThirdPerson_Anim_C::PlayerInventory' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, CharacterComponent) == 0x006428, "Member 'UBP_ThirdPerson_Anim_C::CharacterComponent' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, SightOffset) == 0x006430, "Member 'UBP_ThirdPerson_Anim_C::SightOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HoldableAnims1) == 0x006448, "Member 'UBP_ThirdPerson_Anim_C::HoldableAnims1' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HoldableAnims2) == 0x006520, "Member 'UBP_ThirdPerson_Anim_C::HoldableAnims2' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AimOffsetType) == 0x0065F8, "Member 'UBP_ThirdPerson_Anim_C::AimOffsetType' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AnimationState) == 0x0065F9, "Member 'UBP_ThirdPerson_Anim_C::AnimationState' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightHandSway) == 0x006600, "Member 'UBP_ThirdPerson_Anim_C::RightHandSway' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Lean) == 0x006618, "Member 'UBP_ThirdPerson_Anim_C::Lean' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, WeaponCollision) == 0x006620, "Member 'UBP_ThirdPerson_Anim_C::WeaponCollision' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UseSway) == 0x006628, "Member 'UBP_ThirdPerson_Anim_C::UseSway' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightHandIkEnabled) == 0x006630, "Member 'UBP_ThirdPerson_Anim_C::RightHandIkEnabled' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Sprinting) == 0x006638, "Member 'UBP_ThirdPerson_Anim_C::Sprinting' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, ClippingRotation) == 0x006640, "Member 'UBP_ThirdPerson_Anim_C::ClippingRotation' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UseRightHandADSOffset) == 0x006658, "Member 'UBP_ThirdPerson_Anim_C::UseRightHandADSOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, SpecalAO) == 0x006660, "Member 'UBP_ThirdPerson_Anim_C::SpecalAO' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, bLock) == 0x006668, "Member 'UBP_ThirdPerson_Anim_C::bLock' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HeadAO) == 0x006669, "Member 'UBP_ThirdPerson_Anim_C::HeadAO' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, LeftHandIkEnabled) == 0x006670, "Member 'UBP_ThirdPerson_Anim_C::LeftHandIkEnabled' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Spine2AOAlpha) == 0x006678, "Member 'UBP_ThirdPerson_Anim_C::Spine2AOAlpha' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, LeftHandIK) == 0x006680, "Member 'UBP_ThirdPerson_Anim_C::LeftHandIK' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, AllowHandIKs) == 0x006681, "Member 'UBP_ThirdPerson_Anim_C::AllowHandIKs' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HeadAOAlpha) == 0x006688, "Member 'UBP_ThirdPerson_Anim_C::HeadAOAlpha' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, UsingShadowDummy) == 0x006690, "Member 'UBP_ThirdPerson_Anim_C::UsingShadowDummy' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Spine3AOAlpha) == 0x006698, "Member 'UBP_ThirdPerson_Anim_C::Spine3AOAlpha' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, Spine1AOAlpha) == 0x0066A0, "Member 'UBP_ThirdPerson_Anim_C::Spine1AOAlpha' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightElbowOffset) == 0x0066A8, "Member 'UBP_ThirdPerson_Anim_C::RightElbowOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, RightHandIK) == 0x0066C0, "Member 'UBP_ThirdPerson_Anim_C::RightHandIK' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HoldableAimOffsets) == 0x0066C8, "Member 'UBP_ThirdPerson_Anim_C::HoldableAimOffsets' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HoldingItem) == 0x0066E0, "Member 'UBP_ThirdPerson_Anim_C::HoldingItem' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, IsHoldingItem) == 0x0066E8, "Member 'UBP_ThirdPerson_Anim_C::IsHoldingItem' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, HoldingItemMesh) == 0x0066F0, "Member 'UBP_ThirdPerson_Anim_C::HoldingItemMesh' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsUpperBody) == 0x0066F8, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsUpperBody' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, EmptyHandsLowerBody) == 0x006770, "Member 'UBP_ThirdPerson_Anim_C::EmptyHandsLowerBody' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, DummyMesh) == 0x0067B0, "Member 'UBP_ThirdPerson_Anim_C::DummyMesh' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, SprintLeftHand) == 0x0067B8, "Member 'UBP_ThirdPerson_Anim_C::SprintLeftHand' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, LeftElbowOffset) == 0x0067C0, "Member 'UBP_ThirdPerson_Anim_C::LeftElbowOffset' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, TurnLeft) == 0x0067D8, "Member 'UBP_ThirdPerson_Anim_C::TurnLeft' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, TurnRight) == 0x0067E0, "Member 'UBP_ThirdPerson_Anim_C::TurnRight' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, TurnLeftCrouch) == 0x0067E8, "Member 'UBP_ThirdPerson_Anim_C::TurnLeftCrouch' has a wrong offset!");
static_assert(offsetof(UBP_ThirdPerson_Anim_C, TurnRightCrouch) == 0x0067F0, "Member 'UBP_ThirdPerson_Anim_C::TurnRightCrouch' has a wrong offset!");

}

