#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InputRow

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InputRow.InputRow_C
// 0x0060 (0x02D8 - 0x0278)
class UInputRow_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                AlternatingRowBorder;                              // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content1;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content2;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content2_1;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             Content2_2;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LabelText;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   Label;                                             // 0x02B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Index_InputRow_C;                                  // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3715[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinDesiredWidth;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_InputRow(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InputRow_C">();
	}
	static class UInputRow_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInputRow_C>();
	}
};
static_assert(alignof(UInputRow_C) == 0x000008, "Wrong alignment on UInputRow_C");
static_assert(sizeof(UInputRow_C) == 0x0002D8, "Wrong size on UInputRow_C");
static_assert(offsetof(UInputRow_C, UberGraphFrame) == 0x000278, "Member 'UInputRow_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInputRow_C, AlternatingRowBorder) == 0x000280, "Member 'UInputRow_C::AlternatingRowBorder' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Content1) == 0x000288, "Member 'UInputRow_C::Content1' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Content2) == 0x000290, "Member 'UInputRow_C::Content2' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Content2_1) == 0x000298, "Member 'UInputRow_C::Content2_1' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Content2_2) == 0x0002A0, "Member 'UInputRow_C::Content2_2' has a wrong offset!");
static_assert(offsetof(UInputRow_C, LabelText) == 0x0002A8, "Member 'UInputRow_C::LabelText' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Label) == 0x0002B0, "Member 'UInputRow_C::Label' has a wrong offset!");
static_assert(offsetof(UInputRow_C, Index_InputRow_C) == 0x0002C8, "Member 'UInputRow_C::Index_InputRow_C' has a wrong offset!");
static_assert(offsetof(UInputRow_C, MinDesiredWidth) == 0x0002D0, "Member 'UInputRow_C::MinDesiredWidth' has a wrong offset!");

}

