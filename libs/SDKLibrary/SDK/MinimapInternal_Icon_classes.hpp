#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Icon

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "MinimapPlugin_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MinimapInternal_Icon.MinimapInternal_Icon_C
// 0x0118 (0x0390 - 0x0278)
class UMinimapInternal_Icon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Icon;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMinimapInternal_IconMouseCapture_C*    Widget_MouseCapture;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapIconComponent*                      MapIconComp;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMapViewComponent*                      MapViewComp;                                       // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMapTrackerComponent*                   MapTrackerComp;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CanvasSlot_Outer;                                  // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CanvasSlot_Icon;                                   // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CanvasSlot_MouseDetect;                            // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TickHandle;                                        // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsShowingArrow;                                   // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3772[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               IconMatInst;                                       // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ArrowMatInst;                                      // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMinimapInternal_Tooltip_C*             Tooltip;                                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        EffectStartTime;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCircular;                                       // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3773[0x7];                                     // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              IconOuterRadiusUV;                                 // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              ArrowInnerRadiusUV;                                // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_AboveFog;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_BelowFog;                                   // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FGeometry                              MinimapGeo;                                        // 0x0328(0x0040)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	struct FVector2D                              MinimapSize;                                       // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        MinimapIconScale;                                  // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnBoxSelect;                                       // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AlwaysTick();
	void CleanupListeners();
	void CleanupViewListener();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_MinimapInternal_Icon(int32 EntryPoint);
	void InitSlots();
	void OnAppearanceChanged(class UMapIconComponent* MapIcon);
	void OnBoxSelect__DelegateSignature(const struct FVector2D& StartUV, const struct FVector2D& EndUV, bool IsLeftMouseButton, bool IsShiftSelect, bool IsCtrlSelect);
	struct FEventReply OnIconClicked(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnIconDestroyed(class UMapIconComponent* MapIcon);
	void OnIconMaterialChanged(class UMapIconComponent* MapIcon);
	void OnMouseClick_Event_0(bool IsLeftMouseButton);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnViewSizeChanged_Event_0(class UMapViewComponent* MapView);
	void Precompute();
	void SetTooltipShown(bool bNewShown);
	void SetupBoxSelect(bool bEnableBoxSelect, const struct FLinearColor& BoxSelectColor);
	void SetupListeners();
	void SetupViewListener();
	void TickIcon();
	void UpdateAppearance();
	void UpdateArrow();
	void UpdateDrawColor();
	void UpdateIcon();
	void UpdateInteractability();
	void UpdateMaterial();
	void UpdateOuterCanvas();
	void UpdateSize();
	void UpdateTooltip();
	void UpdateVisibility();
	void UpdateZOrder();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MinimapInternal_Icon_C">();
	}
	static class UMinimapInternal_Icon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMinimapInternal_Icon_C>();
	}
};
static_assert(alignof(UMinimapInternal_Icon_C) == 0x000008, "Wrong alignment on UMinimapInternal_Icon_C");
static_assert(sizeof(UMinimapInternal_Icon_C) == 0x000390, "Wrong size on UMinimapInternal_Icon_C");
static_assert(offsetof(UMinimapInternal_Icon_C, UberGraphFrame) == 0x000278, "Member 'UMinimapInternal_Icon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, Image_Icon) == 0x000280, "Member 'UMinimapInternal_Icon_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, Widget_MouseCapture) == 0x000288, "Member 'UMinimapInternal_Icon_C::Widget_MouseCapture' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MapIconComp) == 0x000290, "Member 'UMinimapInternal_Icon_C::MapIconComp' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MapViewComp) == 0x000298, "Member 'UMinimapInternal_Icon_C::MapViewComp' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MapTrackerComp) == 0x0002A0, "Member 'UMinimapInternal_Icon_C::MapTrackerComp' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, CanvasSlot_Outer) == 0x0002A8, "Member 'UMinimapInternal_Icon_C::CanvasSlot_Outer' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, CanvasSlot_Icon) == 0x0002B0, "Member 'UMinimapInternal_Icon_C::CanvasSlot_Icon' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, CanvasSlot_MouseDetect) == 0x0002B8, "Member 'UMinimapInternal_Icon_C::CanvasSlot_MouseDetect' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, TickHandle) == 0x0002C0, "Member 'UMinimapInternal_Icon_C::TickHandle' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, bIsShowingArrow) == 0x0002C8, "Member 'UMinimapInternal_Icon_C::bIsShowingArrow' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, IconMatInst) == 0x0002D0, "Member 'UMinimapInternal_Icon_C::IconMatInst' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, ArrowMatInst) == 0x0002D8, "Member 'UMinimapInternal_Icon_C::ArrowMatInst' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, Tooltip) == 0x0002E0, "Member 'UMinimapInternal_Icon_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, EffectStartTime) == 0x0002E8, "Member 'UMinimapInternal_Icon_C::EffectStartTime' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, bIsCircular) == 0x0002F0, "Member 'UMinimapInternal_Icon_C::bIsCircular' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, IconOuterRadiusUV) == 0x0002F8, "Member 'UMinimapInternal_Icon_C::IconOuterRadiusUV' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, ArrowInnerRadiusUV) == 0x000308, "Member 'UMinimapInternal_Icon_C::ArrowInnerRadiusUV' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, Canvas_AboveFog) == 0x000318, "Member 'UMinimapInternal_Icon_C::Canvas_AboveFog' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, Canvas_BelowFog) == 0x000320, "Member 'UMinimapInternal_Icon_C::Canvas_BelowFog' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MinimapGeo) == 0x000328, "Member 'UMinimapInternal_Icon_C::MinimapGeo' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MinimapSize) == 0x000368, "Member 'UMinimapInternal_Icon_C::MinimapSize' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, MinimapIconScale) == 0x000378, "Member 'UMinimapInternal_Icon_C::MinimapIconScale' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Icon_C, OnBoxSelect) == 0x000380, "Member 'UMinimapInternal_Icon_C::OnBoxSelect' has a wrong offset!");

}

