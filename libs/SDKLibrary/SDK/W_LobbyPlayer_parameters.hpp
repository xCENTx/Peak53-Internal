#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LobbyPlayer

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_LobbyPlayer.W_LobbyPlayer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_LobbyPlayer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LobbyPlayer_C_PreConstruct) == 0x000001, "Wrong alignment on W_LobbyPlayer_C_PreConstruct");
static_assert(sizeof(W_LobbyPlayer_C_PreConstruct) == 0x000001, "Wrong size on W_LobbyPlayer_C_PreConstruct");
static_assert(offsetof(W_LobbyPlayer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_LobbyPlayer_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.Get_PlayerTag_Visibility
// 0x0001 (0x0001 - 0x0000)
struct W_LobbyPlayer_C_Get_PlayerTag_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_LobbyPlayer_C_Get_PlayerTag_Visibility) == 0x000001, "Wrong alignment on W_LobbyPlayer_C_Get_PlayerTag_Visibility");
static_assert(sizeof(W_LobbyPlayer_C_Get_PlayerTag_Visibility) == 0x000001, "Wrong size on W_LobbyPlayer_C_Get_PlayerTag_Visibility");
static_assert(offsetof(W_LobbyPlayer_C_Get_PlayerTag_Visibility, ReturnValue) == 0x000000, "Member 'W_LobbyPlayer_C_Get_PlayerTag_Visibility::ReturnValue' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.Get_PlayerRank_Text
// 0x0018 (0x0018 - 0x0000)
struct W_LobbyPlayer_C_Get_PlayerRank_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_LobbyPlayer_C_Get_PlayerRank_Text) == 0x000008, "Wrong alignment on W_LobbyPlayer_C_Get_PlayerRank_Text");
static_assert(sizeof(W_LobbyPlayer_C_Get_PlayerRank_Text) == 0x000018, "Wrong size on W_LobbyPlayer_C_Get_PlayerRank_Text");
static_assert(offsetof(W_LobbyPlayer_C_Get_PlayerRank_Text, ReturnValue) == 0x000000, "Member 'W_LobbyPlayer_C_Get_PlayerRank_Text::ReturnValue' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.Get_Insignia_Brush
// 0x00D0 (0x00D0 - 0x0000)
struct W_LobbyPlayer_C_Get_Insignia_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_LobbyPlayer_C_Get_Insignia_Brush) == 0x000010, "Wrong alignment on W_LobbyPlayer_C_Get_Insignia_Brush");
static_assert(sizeof(W_LobbyPlayer_C_Get_Insignia_Brush) == 0x0000D0, "Wrong size on W_LobbyPlayer_C_Get_Insignia_Brush");
static_assert(offsetof(W_LobbyPlayer_C_Get_Insignia_Brush, ReturnValue) == 0x000000, "Member 'W_LobbyPlayer_C_Get_Insignia_Brush::ReturnValue' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.Get_Insignia_2_Brush
// 0x00D0 (0x00D0 - 0x0000)
struct W_LobbyPlayer_C_Get_Insignia_2_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_LobbyPlayer_C_Get_Insignia_2_Brush) == 0x000010, "Wrong alignment on W_LobbyPlayer_C_Get_Insignia_2_Brush");
static_assert(sizeof(W_LobbyPlayer_C_Get_Insignia_2_Brush) == 0x0000D0, "Wrong size on W_LobbyPlayer_C_Get_Insignia_2_Brush");
static_assert(offsetof(W_LobbyPlayer_C_Get_Insignia_2_Brush, ReturnValue) == 0x000000, "Member 'W_LobbyPlayer_C_Get_Insignia_2_Brush::ReturnValue' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.Get_Insignia_1_Brush
// 0x00D0 (0x00D0 - 0x0000)
struct W_LobbyPlayer_C_Get_Insignia_1_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(W_LobbyPlayer_C_Get_Insignia_1_Brush) == 0x000010, "Wrong alignment on W_LobbyPlayer_C_Get_Insignia_1_Brush");
static_assert(sizeof(W_LobbyPlayer_C_Get_Insignia_1_Brush) == 0x0000D0, "Wrong size on W_LobbyPlayer_C_Get_Insignia_1_Brush");
static_assert(offsetof(W_LobbyPlayer_C_Get_Insignia_1_Brush, ReturnValue) == 0x000000, "Member 'W_LobbyPlayer_C_Get_Insignia_1_Brush::ReturnValue' has a wrong offset!");

// Function W_LobbyPlayer.W_LobbyPlayer_C.ExecuteUbergraph_W_LobbyPlayer
// 0x0044 (0x0044 - 0x0000)
struct W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_510E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0008(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x001C(0x0014)()
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0030(0x0014)()
};
static_assert(alignof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer) == 0x000004, "Wrong alignment on W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer");
static_assert(sizeof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer) == 0x000044, "Wrong size on W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, EntryPoint) == 0x000000, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, Temp_bool_Variable) == 0x000004, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, K2Node_Event_IsDesignTime) == 0x000005, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, K2Node_MakeStruct_SlateColor) == 0x000008, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, K2Node_MakeStruct_SlateColor_1) == 0x00001C, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer, K2Node_Select_Default) == 0x000030, "Member 'W_LobbyPlayer_C_ExecuteUbergraph_W_LobbyPlayer::K2Node_Select_Default' has a wrong offset!");

}

