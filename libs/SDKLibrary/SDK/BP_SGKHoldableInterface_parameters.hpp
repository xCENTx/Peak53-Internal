#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKHoldableInterface

#include "Basic.hpp"

#include "S_InvItem_structs.hpp"
#include "E_AttachmentType_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK Aimed
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_Aimed final
{
public:
	bool                                          Aimed;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_Aimed) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_Aimed");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_Aimed) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_Aimed");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_Aimed, Aimed) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_Aimed::Aimed' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK AttachNewAttachment
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_AttachNewAttachment final
{
public:
	class ABP_MasterAttachment_C*                 Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItem;                                           // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_AttachmentType                              AttachmentType;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_AttachNewAttachment) == 0x000008, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_AttachNewAttachment");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_AttachNewAttachment) == 0x000040, "Wrong size on BP_SGKHoldableInterface_C_SGK_AttachNewAttachment");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_AttachNewAttachment, Attachment) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_AttachNewAttachment::Attachment' has a wrong offset!");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_AttachNewAttachment, InvItem) == 0x000008, "Member 'BP_SGKHoldableInterface_C_SGK_AttachNewAttachment::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_AttachNewAttachment, AttachmentType) == 0x000038, "Member 'BP_SGKHoldableInterface_C_SGK_AttachNewAttachment::AttachmentType' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK ClientPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction, KeyDown) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_ClientPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK ClientSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction, KeyDown) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_ClientSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK ClientToggleBuildMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu, Open) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_ClientToggleBuildMenu::Open' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK HoldableMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_HoldableMesh final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_HoldableMesh) == 0x000008, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_HoldableMesh");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_HoldableMesh) == 0x000008, "Wrong size on BP_SGKHoldableInterface_C_SGK_HoldableMesh");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_HoldableMesh, Mesh) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_HoldableMesh::Mesh' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK HoldableSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh) == 0x000008, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh) == 0x000008, "Wrong size on BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh, SkelMeshComp) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_HoldableSkeletalMesh::SkelMeshComp' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK MeleeCollisionToggle
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle final
{
public:
	bool                                          TraceOn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle, TraceOn) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_MeleeCollisionToggle::TraceOn' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK NewHeld
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_NewHeld final
{
public:
	bool                                          Held;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_NewHeld) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_NewHeld");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_NewHeld) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_NewHeld");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_NewHeld, Held) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_NewHeld::Held' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK ServerPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction, KeyDown) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_ServerPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK ServerSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong size on BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction, KeyDown) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_ServerSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_SGKHoldableInterface.BP_SGKHoldableInterface_C.SGK SpawnAttachment
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKHoldableInterface_C_SGK_SpawnAttachment final
{
public:
	class UClass*                                 Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKHoldableInterface_C_SGK_SpawnAttachment) == 0x000008, "Wrong alignment on BP_SGKHoldableInterface_C_SGK_SpawnAttachment");
static_assert(sizeof(BP_SGKHoldableInterface_C_SGK_SpawnAttachment) == 0x000008, "Wrong size on BP_SGKHoldableInterface_C_SGK_SpawnAttachment");
static_assert(offsetof(BP_SGKHoldableInterface_C_SGK_SpawnAttachment, Attachment) == 0x000000, "Member 'BP_SGKHoldableInterface_C_SGK_SpawnAttachment::Attachment' has a wrong offset!");

}

