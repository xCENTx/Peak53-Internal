#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_3DMenuPawn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_ArsenalType_structs.hpp"
#include "E_3DMenuCommands_structs.hpp"
#include "E_MenuCameras_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_3DMenuPawn.BP_3DMenuPawn_C
// 0x0048 (0x0360 - 0x0318)
class ABP_3DMenuPawn_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCineCameraComponent*                   CineCamera;                                        // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<class AThreeDWidgetCam_C*>             Cameras;                                           // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ExposeOnSpawn)
	class ABP_3DServerRack_C*                     LobbyRack;                                         // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UW_MainMenu_C*                          MainMenu;                                          // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_VisableSlectedEquipment_C*>  WeaponBenchGear;                                   // 0x0350(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void UserConstructionScript();
	void UpdateChatWindow(const class FText& Send, const class FText& Message, bool TeamChat);
	void ServerSendMesage(const class FText& Messge);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_3DMenuPawn(int32 EntryPoint);
	void ThreeDMenuPawnCommand(E_3DMenuCommands Command, E_MenuCameras Camera, E_ArsenalType ArsenalType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_3DMenuPawn_C">();
	}
	static class ABP_3DMenuPawn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_3DMenuPawn_C>();
	}
};
static_assert(alignof(ABP_3DMenuPawn_C) == 0x000008, "Wrong alignment on ABP_3DMenuPawn_C");
static_assert(sizeof(ABP_3DMenuPawn_C) == 0x000360, "Wrong size on ABP_3DMenuPawn_C");
static_assert(offsetof(ABP_3DMenuPawn_C, UberGraphFrame) == 0x000318, "Member 'ABP_3DMenuPawn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, CineCamera) == 0x000320, "Member 'ABP_3DMenuPawn_C::CineCamera' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, DefaultSceneRoot) == 0x000328, "Member 'ABP_3DMenuPawn_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, Cameras) == 0x000330, "Member 'ABP_3DMenuPawn_C::Cameras' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, LobbyRack) == 0x000340, "Member 'ABP_3DMenuPawn_C::LobbyRack' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, MainMenu) == 0x000348, "Member 'ABP_3DMenuPawn_C::MainMenu' has a wrong offset!");
static_assert(offsetof(ABP_3DMenuPawn_C, WeaponBenchGear) == 0x000350, "Member 'ABP_3DMenuPawn_C::WeaponBenchGear' has a wrong offset!");

}

