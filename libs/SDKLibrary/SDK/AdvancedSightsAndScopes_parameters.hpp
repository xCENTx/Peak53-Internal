#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AdvancedSightsAndScopes

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AdvancedSightsAndScopes_structs.hpp"


namespace SDK::Params
{

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.PointOfImpactDown
// 0x0018 (0x0018 - 0x0000)
struct SKG_SceneCaptureComponent2D_PointOfImpactDown final
{
public:
	uint8                                         Clicks;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105C[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_PointOfImpactDown) == 0x000008, "Wrong alignment on SKG_SceneCaptureComponent2D_PointOfImpactDown");
static_assert(sizeof(SKG_SceneCaptureComponent2D_PointOfImpactDown) == 0x000018, "Wrong size on SKG_SceneCaptureComponent2D_PointOfImpactDown");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactDown, Clicks) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactDown::Clicks' has a wrong offset!");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactDown, ReturnValue) == 0x000008, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactDown::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.PointOfImpactLeft
// 0x0018 (0x0018 - 0x0000)
struct SKG_SceneCaptureComponent2D_PointOfImpactLeft final
{
public:
	uint8                                         Clicks;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_PointOfImpactLeft) == 0x000008, "Wrong alignment on SKG_SceneCaptureComponent2D_PointOfImpactLeft");
static_assert(sizeof(SKG_SceneCaptureComponent2D_PointOfImpactLeft) == 0x000018, "Wrong size on SKG_SceneCaptureComponent2D_PointOfImpactLeft");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactLeft, Clicks) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactLeft::Clicks' has a wrong offset!");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactLeft, ReturnValue) == 0x000008, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactLeft::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.PointOfImpactRight
// 0x0018 (0x0018 - 0x0000)
struct SKG_SceneCaptureComponent2D_PointOfImpactRight final
{
public:
	uint8                                         Clicks;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_PointOfImpactRight) == 0x000008, "Wrong alignment on SKG_SceneCaptureComponent2D_PointOfImpactRight");
static_assert(sizeof(SKG_SceneCaptureComponent2D_PointOfImpactRight) == 0x000018, "Wrong size on SKG_SceneCaptureComponent2D_PointOfImpactRight");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactRight, Clicks) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactRight::Clicks' has a wrong offset!");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactRight, ReturnValue) == 0x000008, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactRight::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.PointOfImpactUp
// 0x0018 (0x0018 - 0x0000)
struct SKG_SceneCaptureComponent2D_PointOfImpactUp final
{
public:
	uint8                                         Clicks;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_105F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_PointOfImpactUp) == 0x000008, "Wrong alignment on SKG_SceneCaptureComponent2D_PointOfImpactUp");
static_assert(sizeof(SKG_SceneCaptureComponent2D_PointOfImpactUp) == 0x000018, "Wrong size on SKG_SceneCaptureComponent2D_PointOfImpactUp");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactUp, Clicks) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactUp::Clicks' has a wrong offset!");
static_assert(offsetof(SKG_SceneCaptureComponent2D_PointOfImpactUp, ReturnValue) == 0x000008, "Member 'SKG_SceneCaptureComponent2D_PointOfImpactUp::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.SetOwningMesh
// 0x0008 (0x0008 - 0x0000)
struct SKG_SceneCaptureComponent2D_SetOwningMesh final
{
public:
	class UMeshComponent*                         Mesh;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_SetOwningMesh) == 0x000008, "Wrong alignment on SKG_SceneCaptureComponent2D_SetOwningMesh");
static_assert(sizeof(SKG_SceneCaptureComponent2D_SetOwningMesh) == 0x000008, "Wrong size on SKG_SceneCaptureComponent2D_SetOwningMesh");
static_assert(offsetof(SKG_SceneCaptureComponent2D_SetOwningMesh, Mesh) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_SetOwningMesh::Mesh' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.SetReticle
// 0x0001 (0x0001 - 0x0000)
struct SKG_SceneCaptureComponent2D_SetReticle final
{
public:
	uint8                                         Param_Index;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_SetReticle) == 0x000001, "Wrong alignment on SKG_SceneCaptureComponent2D_SetReticle");
static_assert(sizeof(SKG_SceneCaptureComponent2D_SetReticle) == 0x000001, "Wrong size on SKG_SceneCaptureComponent2D_SetReticle");
static_assert(offsetof(SKG_SceneCaptureComponent2D_SetReticle, Param_Index) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_SetReticle::Param_Index' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.GetMagnification
// 0x0004 (0x0004 - 0x0000)
struct SKG_SceneCaptureComponent2D_GetMagnification final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_GetMagnification) == 0x000004, "Wrong alignment on SKG_SceneCaptureComponent2D_GetMagnification");
static_assert(sizeof(SKG_SceneCaptureComponent2D_GetMagnification) == 0x000004, "Wrong size on SKG_SceneCaptureComponent2D_GetMagnification");
static_assert(offsetof(SKG_SceneCaptureComponent2D_GetMagnification, ReturnValue) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_GetMagnification::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.GetMagnificationSensitivity
// 0x0004 (0x0004 - 0x0000)
struct SKG_SceneCaptureComponent2D_GetMagnificationSensitivity final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_GetMagnificationSensitivity) == 0x000004, "Wrong alignment on SKG_SceneCaptureComponent2D_GetMagnificationSensitivity");
static_assert(sizeof(SKG_SceneCaptureComponent2D_GetMagnificationSensitivity) == 0x000004, "Wrong size on SKG_SceneCaptureComponent2D_GetMagnificationSensitivity");
static_assert(offsetof(SKG_SceneCaptureComponent2D_GetMagnificationSensitivity, ReturnValue) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_GetMagnificationSensitivity::ReturnValue' has a wrong offset!");

// Function AdvancedSightsAndScopes.SKG_SceneCaptureComponent2D.GetSightZero
// 0x0008 (0x0008 - 0x0000)
struct SKG_SceneCaptureComponent2D_GetSightZero final
{
public:
	struct FSKGSightZero                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(SKG_SceneCaptureComponent2D_GetSightZero) == 0x000004, "Wrong alignment on SKG_SceneCaptureComponent2D_GetSightZero");
static_assert(sizeof(SKG_SceneCaptureComponent2D_GetSightZero) == 0x000008, "Wrong size on SKG_SceneCaptureComponent2D_GetSightZero");
static_assert(offsetof(SKG_SceneCaptureComponent2D_GetSightZero, ReturnValue) == 0x000000, "Member 'SKG_SceneCaptureComponent2D_GetSightZero::ReturnValue' has a wrong offset!");

}

