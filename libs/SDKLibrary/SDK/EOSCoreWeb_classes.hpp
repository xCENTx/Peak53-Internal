#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EOSCoreWeb

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"


namespace SDK
{

// Class EOSCoreWeb.EOSWebAuthLibrary
// 0x0000 (0x0028 - 0x0028)
class UEOSWebAuthLibrary final : public UObject
{
public:
	static void InitiateEpicAuthentication(const TDelegate<void(bool bWasSuccessful, const class FString& AuthenticationCode, const class FString& ErrorMessage)>& Callback, const struct FInitiateEpicAuthenticationRequest& Request);
	static void RequestAuthAccessToken(const TDelegate<void(bool bWasSuccessful, struct FAuthAccessTokenCallbackData& Data, struct FWebResponse& WebResponse)>& Callback, const struct FRequestAuthAccessTokenRequest& Request);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSWebAuthLibrary">();
	}
	static class UEOSWebAuthLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSWebAuthLibrary>();
	}
};
static_assert(alignof(UEOSWebAuthLibrary) == 0x000008, "Wrong alignment on UEOSWebAuthLibrary");
static_assert(sizeof(UEOSWebAuthLibrary) == 0x000028, "Wrong size on UEOSWebAuthLibrary");

// Class EOSCoreWeb.EOSWebConnectLibrary
// 0x0000 (0x0028 - 0x0028)
class UEOSWebConnectLibrary final : public UObject
{
public:
	static void RequestAccessToken(const struct FRequestAccessTokenRequest& Request, const TDelegate<void(bool bWasSuccessful, struct FAccessTokenCallbackData& Data, struct FWebResponse& WebResponse)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSWebConnectLibrary">();
	}
	static class UEOSWebConnectLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSWebConnectLibrary>();
	}
};
static_assert(alignof(UEOSWebConnectLibrary) == 0x000008, "Wrong alignment on UEOSWebConnectLibrary");
static_assert(sizeof(UEOSWebConnectLibrary) == 0x000028, "Wrong size on UEOSWebConnectLibrary");

// Class EOSCoreWeb.EOSWebPlayerTicketLibrary
// 0x0000 (0x0028 - 0x0028)
class UEOSWebPlayerTicketLibrary final : public UObject
{
public:
	static void SubmitTicket(const class FString& WebApiKey, const struct FSubmitTicketRequest& Request, const TDelegate<void(bool bWasSuccessful, struct FSubmitTicketResponse& Response, struct FWebResponse& WebResponse)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSWebPlayerTicketLibrary">();
	}
	static class UEOSWebPlayerTicketLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSWebPlayerTicketLibrary>();
	}
};
static_assert(alignof(UEOSWebPlayerTicketLibrary) == 0x000008, "Wrong alignment on UEOSWebPlayerTicketLibrary");
static_assert(sizeof(UEOSWebPlayerTicketLibrary) == 0x000028, "Wrong size on UEOSWebPlayerTicketLibrary");

// Class EOSCoreWeb.EOSWebShared
// 0x0000 (0x0028 - 0x0028)
class UEOSWebShared final : public UObject
{
public:
	static void GetPublicIp(const TDelegate<void(const class FString& Response)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSWebShared">();
	}
	static class UEOSWebShared* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSWebShared>();
	}
};
static_assert(alignof(UEOSWebShared) == 0x000008, "Wrong alignment on UEOSWebShared");
static_assert(sizeof(UEOSWebShared) == 0x000028, "Wrong size on UEOSWebShared");

// Class EOSCoreWeb.EOSWebVoiceLibrary
// 0x0000 (0x0028 - 0x0028)
class UEOSWebVoiceLibrary final : public UObject
{
public:
	static void CreateRoomToken(const class FString& AccessToken, const TArray<struct FWebRequestParticipantData>& Participants, const class FString& DeploymentId, const class FString& RoomName, const TDelegate<void(bool bWasSuccessful, struct FCreateRoomTokenCallback& Data, struct FWebResponse& WebResponse)>& Callback);
	static void ModifyParticipant(const class FString& AccessToken, const class FString& ProductUserId, const class FString& DeploymentId, const class FString& RoomName, bool bHardMuted, const TDelegate<void(bool bWasSuccessful, struct FWebResponse& WebResponse)>& Callback);
	static void RemoveParticipant(const class FString& AccessToken, const class FString& ProductUserId, const class FString& DeploymentId, const class FString& RoomName, const TDelegate<void(bool bWasSuccessful, struct FWebResponse& WebResponse)>& Callback);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"EOSWebVoiceLibrary">();
	}
	static class UEOSWebVoiceLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UEOSWebVoiceLibrary>();
	}
};
static_assert(alignof(UEOSWebVoiceLibrary) == 0x000008, "Wrong alignment on UEOSWebVoiceLibrary");
static_assert(sizeof(UEOSWebVoiceLibrary) == 0x000028, "Wrong size on UEOSWebVoiceLibrary");

}

