#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterAttachment

#include "Basic.hpp"

#include "E_AttachmentType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_WeaponRecoil_structs.hpp"
#include "E_CameraType_structs.hpp"
#include "S_Damage_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterAttachment.BP_MasterAttachment_C
// 0x00E0 (0x0370 - 0x0290)
class ABP_MasterAttachment_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        MuzzleEffect;                                      // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	E_AttachmentType                              AttachmentType;                                    // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D14[0x3];                                     // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   AttachSocket;                                      // 0x02AC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AttachAnimationSocket;                             // 0x02B4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttachWhenUnhidden;                                // 0x02BC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseSightFOV;                                       // 0x02BD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D15[0x2];                                     // 0x02BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FirstPersonAimedFOV;                               // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirdPersonAimedFOV;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class USkeletalMesh*, struct FTransform> ADSCameraTransform;                                // 0x02D0(0x0050)(Edit, BlueprintVisible)
	bool                                          UseAttachmentSightCameraLocation;                  // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D16[0x7];                                     // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             FireSound;                                         // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Damage>                      Damage;                                            // 0x0330(0x0010)(Edit, BlueprintVisible)
	double                                        SpreadEffect;                                      // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoFireRateEffect;                                // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponRecoil                        RecoilEffect;                                      // 0x0350(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 WorldItem;                                         // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SpreadIncreasePerShot;                             // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MasterAttachment(int32 EntryPoint);
	void Load(class UBP_SGKSaveGame_C* SaveGame);
	void ReceiveBeginPlay();
	void SelectADSCameraTransform(class USkeletalMesh* SkeletalMesh, struct FTransform* Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterAttachment_C">();
	}
	static class ABP_MasterAttachment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterAttachment_C>();
	}
};
static_assert(alignof(ABP_MasterAttachment_C) == 0x000008, "Wrong alignment on ABP_MasterAttachment_C");
static_assert(sizeof(ABP_MasterAttachment_C) == 0x000370, "Wrong size on ABP_MasterAttachment_C");
static_assert(offsetof(ABP_MasterAttachment_C, UberGraphFrame) == 0x000290, "Member 'ABP_MasterAttachment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, MuzzleEffect) == 0x000298, "Member 'ABP_MasterAttachment_C::MuzzleEffect' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_MasterAttachment_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, AttachmentType) == 0x0002A8, "Member 'ABP_MasterAttachment_C::AttachmentType' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, AttachSocket) == 0x0002AC, "Member 'ABP_MasterAttachment_C::AttachSocket' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, AttachAnimationSocket) == 0x0002B4, "Member 'ABP_MasterAttachment_C::AttachAnimationSocket' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, AttachWhenUnhidden) == 0x0002BC, "Member 'ABP_MasterAttachment_C::AttachWhenUnhidden' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, UseSightFOV) == 0x0002BD, "Member 'ABP_MasterAttachment_C::UseSightFOV' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, FirstPersonAimedFOV) == 0x0002C0, "Member 'ABP_MasterAttachment_C::FirstPersonAimedFOV' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, ThirdPersonAimedFOV) == 0x0002C8, "Member 'ABP_MasterAttachment_C::ThirdPersonAimedFOV' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, ADSCameraTransform) == 0x0002D0, "Member 'ABP_MasterAttachment_C::ADSCameraTransform' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, UseAttachmentSightCameraLocation) == 0x000320, "Member 'ABP_MasterAttachment_C::UseAttachmentSightCameraLocation' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, FireSound) == 0x000328, "Member 'ABP_MasterAttachment_C::FireSound' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, Damage) == 0x000330, "Member 'ABP_MasterAttachment_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, SpreadEffect) == 0x000340, "Member 'ABP_MasterAttachment_C::SpreadEffect' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, AutoFireRateEffect) == 0x000348, "Member 'ABP_MasterAttachment_C::AutoFireRateEffect' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, RecoilEffect) == 0x000350, "Member 'ABP_MasterAttachment_C::RecoilEffect' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, WorldItem) == 0x000360, "Member 'ABP_MasterAttachment_C::WorldItem' has a wrong offset!");
static_assert(offsetof(ABP_MasterAttachment_C, SpreadIncreasePerShot) == 0x000368, "Member 'ABP_MasterAttachment_C::SpreadIncreasePerShot' has a wrong offset!");

}

