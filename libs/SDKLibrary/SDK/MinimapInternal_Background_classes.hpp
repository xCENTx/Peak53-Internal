#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Background

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MinimapInternal_Background.MinimapInternal_Background_C
// 0x0058 (0x02D0 - 0x0278)
class UMinimapInternal_Background_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Background;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Overlay;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMapViewComponent*                      MapViewComp;                                       // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AMapBackground*                         MapBackground;                                     // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UTexture*                               CurrentTexture;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CurrentOverlay;                                    // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BackgroundMatInst;                                 // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        StartTime;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               OverlayMatInst;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AlwaysTickHandle;                                  // 0x02C8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Always_Tick();
	void Construct();
	void Destruct();
	void ExecuteUbergraph_MinimapInternal_Background(int32 EntryPoint);
	void InitOverlay();
	void On_Appearance_Changed(class AMapBackground* Param_MapBackground);
	void On_Overlay_Changed(class AMapBackground* Param_MapBackground, int32 Level, class UTextureRenderTarget2D* RenderTarget);
	void OnEndPlay(class AActor* Actor, EEndPlayReason EndPlayReason);
	void OnTextureMatChanged(class AMapBackground* Param_MapBackground);
	void TickBackground();
	void UpdateMaterial();
	void UpdateOverLay();
	void UpdateTexture();
	void UpdateVisibility();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MinimapInternal_Background_C">();
	}
	static class UMinimapInternal_Background_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMinimapInternal_Background_C>();
	}
};
static_assert(alignof(UMinimapInternal_Background_C) == 0x000008, "Wrong alignment on UMinimapInternal_Background_C");
static_assert(sizeof(UMinimapInternal_Background_C) == 0x0002D0, "Wrong size on UMinimapInternal_Background_C");
static_assert(offsetof(UMinimapInternal_Background_C, UberGraphFrame) == 0x000278, "Member 'UMinimapInternal_Background_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, Image_Background) == 0x000280, "Member 'UMinimapInternal_Background_C::Image_Background' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, Image_Overlay) == 0x000288, "Member 'UMinimapInternal_Background_C::Image_Overlay' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, MapViewComp) == 0x000290, "Member 'UMinimapInternal_Background_C::MapViewComp' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, MapBackground) == 0x000298, "Member 'UMinimapInternal_Background_C::MapBackground' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, CurrentTexture) == 0x0002A0, "Member 'UMinimapInternal_Background_C::CurrentTexture' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, CurrentOverlay) == 0x0002A8, "Member 'UMinimapInternal_Background_C::CurrentOverlay' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, BackgroundMatInst) == 0x0002B0, "Member 'UMinimapInternal_Background_C::BackgroundMatInst' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, StartTime) == 0x0002B8, "Member 'UMinimapInternal_Background_C::StartTime' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, OverlayMatInst) == 0x0002C0, "Member 'UMinimapInternal_Background_C::OverlayMatInst' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Background_C, AlwaysTickHandle) == 0x0002C8, "Member 'UMinimapInternal_Background_C::AlwaysTickHandle' has a wrong offset!");

}

