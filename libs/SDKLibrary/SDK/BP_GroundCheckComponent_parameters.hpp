#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GroundCheckComponent

#include "Basic.hpp"

#include "PhysicsCore_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GroundCheckComponent.BP_GroundCheckComponent_C.GroundTrace
// 0x0470 (0x0470 - 0x0000)
struct BP_GroundCheckComponent_C_GroundTrace final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             OutHit;                                            // 0x0008(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4359[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0238(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0278(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0290(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x037A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435A[0x1];                                     // 0x037B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435B[0x4];                                     // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435C[0x4];                                     // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitRestrictionsCheck_ReturnValue;         // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435D[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SurfaceRestrictionsCheck_ReturnValue;     // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroundCheckComponent_C_GroundTrace) == 0x000010, "Wrong alignment on BP_GroundCheckComponent_C_GroundTrace");
static_assert(sizeof(BP_GroundCheckComponent_C_GroundTrace) == 0x000470, "Wrong size on BP_GroundCheckComponent_C_GroundTrace");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, Actor) == 0x000000, "Member 'BP_GroundCheckComponent_C_GroundTrace::Actor' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, OutHit) == 0x000008, "Member 'BP_GroundCheckComponent_C_GroundTrace::OutHit' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, ReturnValue) == 0x0000F0, "Member 'BP_GroundCheckComponent_C_GroundTrace::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, Temp_bool_Variable) == 0x0000F1, "Member 'BP_GroundCheckComponent_C_GroundTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000F8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000110, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000128, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000140, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakTransform_Location) == 0x0001A0, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakTransform_Rotation) == 0x0001B8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakTransform_Scale) == 0x0001D0, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001E8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000200, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_GetOwner_ReturnValue) == 0x000218, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000220, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, K2Node_MakeArray_Array) == 0x000238, "Member 'BP_GroundCheckComponent_C_GroundTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_MakeVector_ReturnValue) == 0x000248, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000260, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, K2Node_Select_Default) == 0x000278, "Member 'BP_GroundCheckComponent_C_GroundTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_LineTraceSingle_OutHit) == 0x000290, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_LineTraceSingle_ReturnValue) == 0x000378, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000379, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x00037A, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_Time) == 0x00037C, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_Distance) == 0x000380, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_Location) == 0x000388, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x0003A0, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_Normal) == 0x0003B8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x0003D0, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_PhysMat) == 0x0003E8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_HitActor) == 0x0003F0, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_HitComponent) == 0x0003F8, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000400, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_BoneName) == 0x000408, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_HitItem) == 0x000410, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000414, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000418, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_TraceStart) == 0x000420, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000438, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_HitRestrictionsCheck_ReturnValue) == 0x000450, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_HitRestrictionsCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_GetObjectClass_ReturnValue) == 0x000458, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_Array_Contains_ReturnValue) == 0x000460, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_GroundTrace, CallFunc_SurfaceRestrictionsCheck_ReturnValue) == 0x000461, "Member 'BP_GroundCheckComponent_C_GroundTrace::CallFunc_SurfaceRestrictionsCheck_ReturnValue' has a wrong offset!");

// Function BP_GroundCheckComponent.BP_GroundCheckComponent_C.HitRestrictionsCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_GroundCheckComponent_C_HitRestrictionsCheck final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_435E[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroundCheckComponent_C_HitRestrictionsCheck) == 0x000008, "Wrong alignment on BP_GroundCheckComponent_C_HitRestrictionsCheck");
static_assert(sizeof(BP_GroundCheckComponent_C_HitRestrictionsCheck) == 0x000020, "Wrong size on BP_GroundCheckComponent_C_HitRestrictionsCheck");
static_assert(offsetof(BP_GroundCheckComponent_C_HitRestrictionsCheck, HitActor) == 0x000000, "Member 'BP_GroundCheckComponent_C_HitRestrictionsCheck::HitActor' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_HitRestrictionsCheck, ReturnValue) == 0x000008, "Member 'BP_GroundCheckComponent_C_HitRestrictionsCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_HitRestrictionsCheck, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_GroundCheckComponent_C_HitRestrictionsCheck::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_HitRestrictionsCheck, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'BP_GroundCheckComponent_C_HitRestrictionsCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_GroundCheckComponent.BP_GroundCheckComponent_C.SurfaceRestrictionsCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_GroundCheckComponent_C_SurfaceRestrictionsCheck final
{
public:
	class UPhysicalMaterial*                      Surface;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              Temp_byte_Variable;                                // 0x0009(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_2;             // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck) == 0x000008, "Wrong alignment on BP_GroundCheckComponent_C_SurfaceRestrictionsCheck");
static_assert(sizeof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck) == 0x000018, "Wrong size on BP_GroundCheckComponent_C_SurfaceRestrictionsCheck");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, Surface) == 0x000000, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::Surface' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, ReturnValue) == 0x000008, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, Temp_byte_Variable) == 0x000009, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, CallFunc_Array_Contains_ReturnValue) == 0x00000B, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, CallFunc_Array_Contains_ReturnValue_1) == 0x00000E, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, CallFunc_Array_Contains_ReturnValue_2) == 0x00000F, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::CallFunc_Array_Contains_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GroundCheckComponent_C_SurfaceRestrictionsCheck, K2Node_SwitchEnum_CmpSuccess_1) == 0x000010, "Member 'BP_GroundCheckComponent_C_SurfaceRestrictionsCheck::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

}

