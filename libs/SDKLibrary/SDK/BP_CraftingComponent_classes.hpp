#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CraftingComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "BP_MasterInventory_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CraftingComponent.BP_CraftingComponent_C
// 0x0068 (0x02F8 - 0x0290)
class UBP_CraftingComponent_C final : public UBP_MasterInventory_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_CraftingComponent_C;             // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         NumberOfFuelSlots;                                 // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSwitchOn;                                      // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequireFuel;                                       // 0x029D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561F[0x2];                                     // 0x029E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            FuelItems;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible)
	struct FTimerHandle                           FuelTimer;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ConvertTimer;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         DummySlots;                                        // 0x02C0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SwitchedOn;                                        // 0x02C4(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5620[0x3];                                     // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             ReturnFuelItem;                                    // 0x02C8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void Add_Burnt_Fuel_Item();
	void BurnFuel();
	void ConstructContainsSlots();
	void ConstructSlots();
	void ExecuteUbergraph_BP_CraftingComponent(int32 EntryPoint);
	bool GetContentsSlots(TArray<struct FS_InvSlot>* ContentsSlots);
	bool GetFuelSlots(TArray<struct FS_InvSlot>* FuelSlots);
	void IsFuelItem(class FName ItemId, bool* Param_IsFuelItem);
	void IsIndexFuelSlot(int32 Param_Index, bool* IsFuelSlot);
	void LoadComponentData(class UBP_SGKSaveGame_C* SaveGame, bool* LoadComplete);
	void LoadCraftingData(const struct FS_StorageSave& StorageSave);
	void LoadInventoryData(const struct FS_StorageSave& S_StorageSave);
	void ReceiveBeginPlay();
	void SaveComponentData(class UBP_SGKSaveGame_C* SaveGame);
	void SaveCraftingData(class UBP_SGKSaveGame_C* SaveGame);
	void ServerBurnFuel(double Time);
	void ServerPauseBurnFuel();
	void ServerPauseCraftingListing();
	void ServerResumeCraftingListing();
	void ServerStartFuelBurn();
	void ServerStopBurningFuel();
	void ServerTurnOn();
	void SGK_ItemMovedInInventory();
	void SGK_ToggleComponent();
	bool UpdateFuelBurn();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CraftingComponent_C">();
	}
	static class UBP_CraftingComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_CraftingComponent_C>();
	}
};
static_assert(alignof(UBP_CraftingComponent_C) == 0x000008, "Wrong alignment on UBP_CraftingComponent_C");
static_assert(sizeof(UBP_CraftingComponent_C) == 0x0002F8, "Wrong size on UBP_CraftingComponent_C");
static_assert(offsetof(UBP_CraftingComponent_C, UberGraphFrame_BP_CraftingComponent_C) == 0x000290, "Member 'UBP_CraftingComponent_C::UberGraphFrame_BP_CraftingComponent_C' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, NumberOfFuelSlots) == 0x000298, "Member 'UBP_CraftingComponent_C::NumberOfFuelSlots' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, AutoSwitchOn) == 0x00029C, "Member 'UBP_CraftingComponent_C::AutoSwitchOn' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, RequireFuel) == 0x00029D, "Member 'UBP_CraftingComponent_C::RequireFuel' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, FuelItems) == 0x0002A0, "Member 'UBP_CraftingComponent_C::FuelItems' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, FuelTimer) == 0x0002B0, "Member 'UBP_CraftingComponent_C::FuelTimer' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, ConvertTimer) == 0x0002B8, "Member 'UBP_CraftingComponent_C::ConvertTimer' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, DummySlots) == 0x0002C0, "Member 'UBP_CraftingComponent_C::DummySlots' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, SwitchedOn) == 0x0002C4, "Member 'UBP_CraftingComponent_C::SwitchedOn' has a wrong offset!");
static_assert(offsetof(UBP_CraftingComponent_C, ReturnFuelItem) == 0x0002C8, "Member 'UBP_CraftingComponent_C::ReturnFuelItem' has a wrong offset!");

}

