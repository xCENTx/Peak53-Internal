#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKGameInstance

#include "Basic.hpp"

#include "BP_SGKGameInstance_classes.hpp"
#include "BP_SGKGameInstance_parameters.hpp"


namespace SDK
{

// Function BP_SGKGameInstance.BP_SGKGameInstance_C.BuyItem
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Price                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           ItemName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::BuyItem(int32 Item, const class FString& Price, const class FString& ItemName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "BuyItem");

	Params::BP_SGKGameInstance_C_BuyItem Parms{};

	Parms.Item = Item;
	Parms.Price = std::move(Price);
	Parms.ItemName = std::move(ItemName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.CreateHost
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           LobbyName                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Map                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   MaxPlayers                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           Param_ServerPassword                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::CreateHost(const class FString& LobbyName, const class FString& Param_Map, int32 MaxPlayers, const class FString& Param_ServerPassword)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "CreateHost");

	Params::BP_SGKGameInstance_C_CreateHost Parms{};

	Parms.LobbyName = std::move(LobbyName);
	Parms.Param_Map = std::move(Param_Map);
	Parms.MaxPlayers = MaxPlayers;
	Parms.Param_ServerPassword = std::move(Param_ServerPassword);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.DeleteOutfit
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OutfitName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::DeleteOutfit(const class FString& OutfitName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "DeleteOutfit");

	Params::BP_SGKGameInstance_C_DeleteOutfit Parms{};

	Parms.OutfitName = std::move(OutfitName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.DestroySession
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::DestroySession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "DestroySession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ExecuteUbergraph_BP_SGKGameInstance
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::ExecuteUbergraph_BP_SGKGameInstance(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ExecuteUbergraph_BP_SGKGameInstance");

	Params::BP_SGKGameInstance_C_ExecuteUbergraph_BP_SGKGameInstance Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.GamepadIconsChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::GamepadIconsChanged(const class FString& NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "GamepadIconsChanged");

	Params::BP_SGKGameInstance_C_GamepadIconsChanged Parms{};

	Parms.NewValue = std::move(NewValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.GameSettingsUpdated__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSettingsSaveData_C*        SettingsSave                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::GameSettingsUpdated__DelegateSignature(class UBP_SGKSettingsSaveData_C* SettingsSave)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "GameSettingsUpdated__DelegateSignature");

	Params::BP_SGKGameInstance_C_GameSettingsUpdated__DelegateSignature Parms{};

	Parms.SettingsSave = SettingsSave;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.GetClanServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SGKController_C*              Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FString                           E                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::GetClanServer(class ABP_SGKController_C* Controller, const class FString& E)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "GetClanServer");

	Params::BP_SGKGameInstance_C_GetClanServer Parms{};

	Parms.Controller = Controller;
	Parms.E = std::move(E);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.HandleNetworkError
// (Event, Public, BlueprintEvent)
// Parameters:
// ENetworkFailure                         FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsServer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::HandleNetworkError(ENetworkFailure FailureType, bool bIsServer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "HandleNetworkError");

	Params::BP_SGKGameInstance_C_HandleNetworkError Parms{};

	Parms.FailureType = FailureType;
	Parms.bIsServer = bIsServer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.HandleTravelError
// (Event, Public, BlueprintEvent)
// Parameters:
// ETravelFailure                          FailureType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::HandleTravelError(ETravelFailure FailureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "HandleTravelError");

	Params::BP_SGKGameInstance_C_HandleTravelError Parms{};

	Parms.FailureType = FailureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.isSteamLoggedIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::IsSteamLoggedIn(bool* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "isSteamLoggedIn");

	Params::BP_SGKGameInstance_C_IsSteamLoggedIn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.LoadControls
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::LoadControls()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "LoadControls");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.LoadSettingsSave
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::LoadSettingsSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "LoadSettingsSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.LoadSoundVolumes
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::LoadSoundVolumes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "LoadSoundVolumes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.MasterVolumeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::MasterVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "MasterVolumeChanged");

	Params::BP_SGKGameInstance_C_MasterVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.MicroTxnAuthorizationResponse_Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMicroTxnAuthorizationResponse   Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SGKGameInstance_C::MicroTxnAuthorizationResponse_Event(const struct FMicroTxnAuthorizationResponse& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "MicroTxnAuthorizationResponse_Event");

	Params::BP_SGKGameInstance_C_MicroTxnAuthorizationResponse_Event Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.MusicVolumeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::MusicVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "MusicVolumeChanged");

	Params::BP_SGKGameInstance_C_MusicVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.NewEquipmentSystemGetAllLodouts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   Output_Get                                             (Parm, OutParm)

void UBP_SGKGameInstance_C::NewEquipmentSystemGetAllLodouts(TArray<class FString>* Output_Get)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "NewEquipmentSystemGetAllLodouts");

	Params::BP_SGKGameInstance_C_NewEquipmentSystemGetAllLodouts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Output_Get != nullptr)
		*Output_Get = std::move(Parms.Output_Get);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.NewEquipmentSystemLoadLodout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SlotName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::NewEquipmentSystemLoadLodout(const class FString& SlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "NewEquipmentSystemLoadLodout");

	Params::BP_SGKGameInstance_C_NewEquipmentSystemLoadLodout Parms{};

	Parms.SlotName = std::move(SlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.NewEquipmentSystemSaveLodout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EPeak53Teams                            Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CurrentEquipment                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::NewEquipmentSystemSaveLodout(const class FString& InputPin, const class FString& Param_Name, EPeak53Teams Team, const class FString& CurrentEquipment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "NewEquipmentSystemSaveLodout");

	Params::BP_SGKGameInstance_C_NewEquipmentSystemSaveLodout Parms{};

	Parms.InputPin = std::move(InputPin);
	Parms.Param_Name = std::move(Param_Name);
	Parms.Team = Team;
	Parms.CurrentEquipment = std::move(CurrentEquipment);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.NewEquipmentSystemSetCurrentLoadedLoadout
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USg_lodout_C*                     Param_CurrentLoadedLoadout                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::NewEquipmentSystemSetCurrentLoadedLoadout(class USg_lodout_C* Param_CurrentLoadedLoadout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "NewEquipmentSystemSetCurrentLoadedLoadout");

	Params::BP_SGKGameInstance_C_NewEquipmentSystemSetCurrentLoadedLoadout Parms{};

	Parms.Param_CurrentLoadedLoadout = Param_CurrentLoadedLoadout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_069584F441ED12747510728B8C76FB57
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamInventoryRequestPricesResultData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_069584F441ED12747510728B8C76FB57(const struct FSteamInventoryRequestPricesResult& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_069584F441ED12747510728B8C76FB57");

	Params::BP_SGKGameInstance_C_OnCallback_069584F441ED12747510728B8C76FB57 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_0ECF859444EF16DB985F5E907E8F0C73
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnCallback_0ECF859444EF16DB985F5E907E8F0C73()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_0ECF859444EF16DB985F5E907E8F0C73");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_1231C0F74511A59F79CDB49F0BADED12
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_1231C0F74511A59F79CDB49F0BADED12(const class FString& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_1231C0F74511A59F79CDB49F0BADED12");

	Params::BP_SGKGameInstance_C_OnCallback_1231C0F74511A59F79CDB49F0BADED12 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_1C364D2C4A93FF1D4F3E77961B248B86
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLeaderboardFindResult           Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_1C364D2C4A93FF1D4F3E77961B248B86(const struct FLeaderboardFindResult& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_1C364D2C4A93FF1D4F3E77961B248B86");

	Params::BP_SGKGameInstance_C_OnCallback_1C364D2C4A93FF1D4F3E77961B248B86 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_80E552D645B4023AB36CEC8A0F68D1A9
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnCallback_80E552D645B4023AB36CEC8A0F68D1A9()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_80E552D645B4023AB36CEC8A0F68D1A9");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_90EF9AE24532E3D2476B03B876BA8C19
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_90EF9AE24532E3D2476B03B876BA8C19(const class FString& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_90EF9AE24532E3D2476B03B876BA8C19");

	Params::BP_SGKGameInstance_C_OnCallback_90EF9AE24532E3D2476B03B876BA8C19 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_9111D06146DE5B2D17A2FBA5C69C4B88
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLeaderboardScoresDownloadedForUsersData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_9111D06146DE5B2D17A2FBA5C69C4B88(const struct FLeaderboardScoresDownloadedForUsers& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_9111D06146DE5B2D17A2FBA5C69C4B88");

	Params::BP_SGKGameInstance_C_OnCallback_9111D06146DE5B2D17A2FBA5C69C4B88 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnCallback_B3258AC540506850B835529655447132
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Data                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    bWasSuccessful                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnCallback_B3258AC540506850B835529655447132(const class FString& Data, bool bWasSuccessful)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnCallback_B3258AC540506850B835529655447132");

	Params::BP_SGKGameInstance_C_OnCallback_B3258AC540506850B835529655447132 Parms{};

	Parms.Data = std::move(Data);
	Parms.bWasSuccessful = bWasSuccessful;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnFailure_8034962C4E605A797BB8B4949077C243
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnFailure_8034962C4E605A797BB8B4949077C243()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnFailure_8034962C4E605A797BB8B4949077C243");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnFailure_CED4DFDD4B22C3388B5C6E92B0A26220
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnFailure_CED4DFDD4B22C3388B5C6E92B0A26220()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnFailure_CED4DFDD4B22C3388B5C6E92B0A26220");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnFailure_E70A373D4A015941F596A2B17B46C470
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnFailure_E70A373D4A015941F596A2B17B46C470()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnFailure_E70A373D4A015941F596A2B17B46C470");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnGetAllLodoutsFinished__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   ResultAllLodouts                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SGKGameInstance_C::OnGetAllLodoutsFinished__DelegateSignature(TArray<class FString>& ResultAllLodouts)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnGetAllLodoutsFinished__DelegateSignature");

	Params::BP_SGKGameInstance_C_OnGetAllLodoutsFinished__DelegateSignature Parms{};

	Parms.ResultAllLodouts = std::move(ResultAllLodouts);

	UObject::ProcessEvent(Func, &Parms);

	ResultAllLodouts = std::move(Parms.ResultAllLodouts);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnLoadLodoutFinished__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USg_lodout_C*                     Lodout                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::OnLoadLodoutFinished__DelegateSignature(class USg_lodout_C* Lodout)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnLoadLodoutFinished__DelegateSignature");

	Params::BP_SGKGameInstance_C_OnLoadLodoutFinished__DelegateSignature Parms{};

	Parms.Lodout = Lodout;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnMicroTxnAuthorizationResponse
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FMicroTxnAuthorizationResponse   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_SGKGameInstance_C::OnMicroTxnAuthorizationResponse(const struct FMicroTxnAuthorizationResponse& Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnMicroTxnAuthorizationResponse");

	Params::BP_SGKGameInstance_C_OnMicroTxnAuthorizationResponse Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnRep_Loadout
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnRep_Loadout()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnRep_Loadout");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnRep_PlayerName
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnRep_PlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnRep_PlayerName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnRep_PlayerTeam
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnRep_PlayerTeam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnRep_PlayerTeam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSteamInventoryFullUpdate
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamInventoryFullUpdate        Data                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void UBP_SGKGameInstance_C::OnSteamInventoryFullUpdate(const struct FSteamInventoryFullUpdate& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSteamInventoryFullUpdate");

	Params::BP_SGKGameInstance_C_OnSteamInventoryFullUpdate Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSteamInventoryFullUpdate_End
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnSteamInventoryFullUpdate_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSteamInventoryFullUpdate_End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSteamInventoryFullUpdateFinished__DelegateSignature
// (Public, Delegate, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSteamItemDetails>        Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SGKGameInstance_C::OnSteamInventoryFullUpdateFinished__DelegateSignature(TArray<struct FSteamItemDetails>& Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSteamInventoryFullUpdateFinished__DelegateSignature");

	Params::BP_SGKGameInstance_C_OnSteamInventoryFullUpdateFinished__DelegateSignature Parms{};

	Parms.Result = std::move(Result);

	UObject::ProcessEvent(Func, &Parms);

	Result = std::move(Parms.Result);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSteamStartPurchaseResult
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSteamInventoryStartPurchaseResultData                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UBP_SGKGameInstance_C::OnSteamStartPurchaseResult(const struct FSteamInventoryStartPurchaseResult& Data)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSteamStartPurchaseResult");

	Params::BP_SGKGameInstance_C_OnSteamStartPurchaseResult Parms{};

	Parms.Data = std::move(Data);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSuccess_8034962C4E605A797BB8B4949077C243
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnSuccess_8034962C4E605A797BB8B4949077C243()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSuccess_8034962C4E605A797BB8B4949077C243");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSuccess_CED4DFDD4B22C3388B5C6E92B0A26220
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnSuccess_CED4DFDD4B22C3388B5C6E92B0A26220()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSuccess_CED4DFDD4B22C3388B5C6E92B0A26220");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.OnSuccess_E70A373D4A015941F596A2B17B46C470
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::OnSuccess_E70A373D4A015941F596A2B17B46C470()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "OnSuccess_E70A373D4A015941F596A2B17B46C470");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ReceiveInit
// (Event, Public, BlueprintEvent)

void UBP_SGKGameInstance_C::ReceiveInit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ReceiveInit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.RefreshSteamInventory
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::RefreshSteamInventory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "RefreshSteamInventory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.RequestSteamItemPrices
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::RequestSteamItemPrices()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "RequestSteamItemPrices");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ResetVariablesForNextGame
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::ResetVariablesForNextGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ResetVariablesForNextGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ResetVarsMC
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::ResetVarsMC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ResetVarsMC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.Save Settings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::Save_Settings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "Save Settings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ServerGetBanList
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_SGKController_C*              Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::ServerGetBanList(class ABP_SGKController_C* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ServerGetBanList");

	Params::BP_SGKGameInstance_C_ServerGetBanList Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ServerHearthbeat
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::ServerHearthbeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ServerHearthbeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.Set Sensitivity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MouseSense                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::Set_Sensitivity(double Param_MouseSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "Set Sensitivity");

	Params::BP_SGKGameInstance_C_Set_Sensitivity Parms{};

	Parms.Param_MouseSense = Param_MouseSense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SetGameSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_GameSettings                  GameSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SetGameSettings(const struct FS_GameSettings& GameSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SetGameSettings");

	Params::BP_SGKGameInstance_C_SetGameSettings Parms{};

	Parms.GameSettings = std::move(GameSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SetSensitivity_Aimed
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_Aimed_Sense                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SetSensitivity_Aimed(double Param_Aimed_Sense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SetSensitivity_Aimed");

	Params::BP_SGKGameInstance_C_SetSensitivity_Aimed Parms{};

	Parms.Param_Aimed_Sense = Param_Aimed_Sense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SetupPlayerName
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::SetupPlayerName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SetupPlayerName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SetVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SoundVolumes                          Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SetVolume(E_SoundVolumes Sound, double Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SetVolume");

	Params::BP_SGKGameInstance_C_SetVolume Parms{};

	Parms.Sound = Sound;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SFXVolumeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SFXVolumeChanged(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SFXVolumeChanged");

	Params::BP_SGKGameInstance_C_SFXVolumeChanged Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK AimedSense
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimedSense                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_AimedSense(double* AimedSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK AimedSense");

	Params::BP_SGKGameInstance_C_SGK_AimedSense Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AimedSense != nullptr)
		*AimedSense = Parms.AimedSense;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK GetLoadSaveGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_LoadSaveGame                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_GetLoadSaveGame(bool* Param_LoadSaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK GetLoadSaveGame");

	Params::BP_SGKGameInstance_C_SGK_GetLoadSaveGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_LoadSaveGame != nullptr)
		*Param_LoadSaveGame = Parms.Param_LoadSaveGame;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK GetMenuOpenedLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_MenuOpenedLevel                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_GetMenuOpenedLevel(bool* Param_MenuOpenedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK GetMenuOpenedLevel");

	Params::BP_SGKGameInstance_C_SGK_GetMenuOpenedLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MenuOpenedLevel != nullptr)
		*Param_MenuOpenedLevel = Parms.Param_MenuOpenedLevel;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK GetSaveGameSlotName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_SaveGameSlotName                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_GetSaveGameSlotName(class FString* Param_SaveGameSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK GetSaveGameSlotName");

	Params::BP_SGKGameInstance_C_SGK_GetSaveGameSlotName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SaveGameSlotName != nullptr)
		*Param_SaveGameSlotName = std::move(Parms.Param_SaveGameSlotName);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK MouseSense
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MouseSense                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_MouseSense(double* Param_MouseSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK MouseSense");

	Params::BP_SGKGameInstance_C_SGK_MouseSense Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MouseSense != nullptr)
		*Param_MouseSense = Parms.Param_MouseSense;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK Options Save
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSettingsSaveData_C*        Settings                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_Options_Save(class UBP_SGKSettingsSaveData_C** Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK Options Save");

	Params::BP_SGKGameInstance_C_SGK_Options_Save Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Settings != nullptr)
		*Settings = Parms.Settings;
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::SGK_SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetAimedSense
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimedSense                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetAimedSense(double AimedSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetAimedSense");

	Params::BP_SGKGameInstance_C_SGK_SetAimedSense Parms{};

	Parms.AimedSense = AimedSense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetLoadSaveGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_LoadSaveGame                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetLoadSaveGame(bool Param_LoadSaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetLoadSaveGame");

	Params::BP_SGKGameInstance_C_SGK_SetLoadSaveGame Parms{};

	Parms.Param_LoadSaveGame = Param_LoadSaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetMenuOpenedLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_MenuOpenedLevel                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetMenuOpenedLevel(bool Param_MenuOpenedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetMenuOpenedLevel");

	Params::BP_SGKGameInstance_C_SGK_SetMenuOpenedLevel Parms{};

	Parms.Param_MenuOpenedLevel = Param_MenuOpenedLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetMouseSense
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Param_MouseSense                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetMouseSense(double Param_MouseSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetMouseSense");

	Params::BP_SGKGameInstance_C_SGK_SetMouseSense Parms{};

	Parms.Param_MouseSense = Param_MouseSense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetSaveGameSlotName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_SaveGameSlotName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetSaveGameSlotName(const class FString& Param_SaveGameSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetSaveGameSlotName");

	Params::BP_SGKGameInstance_C_SGK_SetSaveGameSlotName Parms{};

	Parms.Param_SaveGameSlotName = std::move(Param_SaveGameSlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.SGK SetVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SoundVolumes                          Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKGameInstance_C::SGK_SetVolume(E_SoundVolumes Sound, double Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "SGK SetVolume");

	Params::BP_SGKGameInstance_C_SGK_SetVolume Parms{};

	Parms.Sound = Sound;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.StartServerHearthbeat
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::StartServerHearthbeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "StartServerHearthbeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.StopServerHearthbeat
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::StopServerHearthbeat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "StopServerHearthbeat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.ToggleweaponBench
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::ToggleweaponBench()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "ToggleweaponBench");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstance.BP_SGKGameInstance_C.UpdateSession
// (BlueprintCallable, BlueprintEvent)

void UBP_SGKGameInstance_C::UpdateSession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstance_C", "UpdateSession");

	UObject::ProcessEvent(Func, nullptr);
}

}

