#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Camera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MinimapInternal_Camera.MinimapInternal_Camera_C
// 0x0030 (0x02A8 - 0x0278)
class UMinimapInternal_Camera_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMapViewComponent*                      MapViewComp;                                       // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bIsCircular;                                       // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_357B[0x7];                                     // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FloorDistance;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              PanelSize;                                         // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_MinimapInternal_Camera(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MinimapInternal_Camera_C">();
	}
	static class UMinimapInternal_Camera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMinimapInternal_Camera_C>();
	}
};
static_assert(alignof(UMinimapInternal_Camera_C) == 0x000008, "Wrong alignment on UMinimapInternal_Camera_C");
static_assert(sizeof(UMinimapInternal_Camera_C) == 0x0002A8, "Wrong size on UMinimapInternal_Camera_C");
static_assert(offsetof(UMinimapInternal_Camera_C, UberGraphFrame) == 0x000278, "Member 'UMinimapInternal_Camera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Camera_C, MapViewComp) == 0x000280, "Member 'UMinimapInternal_Camera_C::MapViewComp' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Camera_C, bIsCircular) == 0x000288, "Member 'UMinimapInternal_Camera_C::bIsCircular' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Camera_C, FloorDistance) == 0x000290, "Member 'UMinimapInternal_Camera_C::FloorDistance' has a wrong offset!");
static_assert(offsetof(UMinimapInternal_Camera_C, PanelSize) == 0x000298, "Member 'UMinimapInternal_Camera_C::PanelSize' has a wrong offset!");

}

