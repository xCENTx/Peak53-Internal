#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_lobby_lodout_screen_item

#include "Basic.hpp"

#include "S_ItemDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_StartingWeaponItem_structs.hpp"
#include "EWeaponCategories_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.CreateRenderTarget
// 0x0180 (0x0180 - 0x0000)
struct W_lobby_lodout_screen_item_C_CreateRenderTarget final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable;                               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EWeaponCategories                             Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D0D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	EWeaponCategories                             Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D0E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               Temp_object_Variable_4;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_5;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_6;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Temp_object_Variable_7;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EWeaponCategories                             Temp_byte_Variable_2;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D0F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D10[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture*                               K2Node_Select_Default;                             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_2;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D11[0x8];                                     // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EWeaponCategories                             Temp_byte_Variable_3;                              // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D12[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_3;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_R2T_Weapon_C*                       K2Node_DynamicCast_AsBP_R2T_Weapon;                // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_CreateRenderTarget) == 0x000010, "Wrong alignment on W_lobby_lodout_screen_item_C_CreateRenderTarget");
static_assert(sizeof(W_lobby_lodout_screen_item_C_CreateRenderTarget) == 0x000180, "Wrong size on W_lobby_lodout_screen_item_C_CreateRenderTarget");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, NewParam) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::NewParam' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_class_Variable) == 0x000008, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_class_Variable_1) == 0x000010, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_class_Variable_2) == 0x000018, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_class_Variable_3) == 0x000020, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_byte_Variable) == 0x000028, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable) == 0x000030, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_1) == 0x000038, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_2) == 0x000040, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_3) == 0x000048, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_byte_Variable_1) == 0x000050, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_4) == 0x000058, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_5) == 0x000060, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_6) == 0x000068, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_object_Variable_7) == 0x000070, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_byte_Variable_2) == 0x000078, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_real_Variable) == 0x000080, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_real_Variable_1) == 0x000088, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_real_Variable_2) == 0x000090, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_real_Variable_3) == 0x000098, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_Select_Default) == 0x0000A8, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_Select_Default_1) == 0x0000B0, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_Select_Default_2) == 0x0000B8, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_MakeTransform_ReturnValue) == 0x0000E0, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000140, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, Temp_byte_Variable_3) == 0x000148, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_Select_Default_3) == 0x000150, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000158, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_DynamicCast_AsBP_R2T_Weapon) == 0x000168, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_DynamicCast_AsBP_R2T_Weapon' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_CreateRenderTarget, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'W_lobby_lodout_screen_item_C_CreateRenderTarget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.DestroyRenderTarget
// 0x0001 (0x0001 - 0x0000)
struct W_lobby_lodout_screen_item_C_DestroyRenderTarget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_DestroyRenderTarget) == 0x000001, "Wrong alignment on W_lobby_lodout_screen_item_C_DestroyRenderTarget");
static_assert(sizeof(W_lobby_lodout_screen_item_C_DestroyRenderTarget) == 0x000001, "Wrong size on W_lobby_lodout_screen_item_C_DestroyRenderTarget");
static_assert(offsetof(W_lobby_lodout_screen_item_C_DestroyRenderTarget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_DestroyRenderTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.ExecuteUbergraph_w_lobby_lodout_screen_item
// 0x0020 (0x0020 - 0x0000)
struct W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D13[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D14[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item) == 0x000008, "Wrong alignment on W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item");
static_assert(sizeof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item) == 0x000020, "Wrong size on W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item");
static_assert(offsetof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item, EntryPoint) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item, K2Node_Event_IsDesignTime) == 0x000010, "Member 'W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'W_lobby_lodout_screen_item_C_ExecuteUbergraph_w_lobby_lodout_screen_item::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_lobby_lodout_screen_item_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_PreConstruct) == 0x000001, "Wrong alignment on W_lobby_lodout_screen_item_C_PreConstruct");
static_assert(sizeof(W_lobby_lodout_screen_item_C_PreConstruct) == 0x000001, "Wrong size on W_lobby_lodout_screen_item_C_PreConstruct");
static_assert(offsetof(W_lobby_lodout_screen_item_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.SwitchDown
// 0x08B0 (0x08B0 - 0x0000)
struct W_lobby_lodout_screen_item_C_SwitchDown final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D15[0x3];                                     // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_SwitchDown) == 0x000010, "Wrong alignment on W_lobby_lodout_screen_item_C_SwitchDown");
static_assert(sizeof(W_lobby_lodout_screen_item_C_SwitchDown) == 0x0008B0, "Wrong size on W_lobby_lodout_screen_item_C_SwitchDown");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_Conv_StringToName_ReturnValue) == 0x000008, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008A0, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0008A4, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchDown, CallFunc_Less_IntInt_ReturnValue) == 0x0008A8, "Member 'W_lobby_lodout_screen_item_C_SwitchDown::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.SwitchUp
// 0x08B0 (0x08B0 - 0x0000)
struct W_lobby_lodout_screen_item_C_SwitchUp final
{
public:
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0010(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D16[0x3];                                     // 0x08A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_SwitchUp) == 0x000010, "Wrong alignment on W_lobby_lodout_screen_item_C_SwitchUp");
static_assert(sizeof(W_lobby_lodout_screen_item_C_SwitchUp) == 0x0008B0, "Wrong size on W_lobby_lodout_screen_item_C_SwitchUp");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_Array_Length_ReturnValue) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_Conv_StringToName_ReturnValue) == 0x000008, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_GetDataTableRowFromName_OutRow) == 0x000010, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008A0, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_Add_IntInt_ReturnValue) == 0x0008A4, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_SwitchUp, CallFunc_Greater_IntInt_ReturnValue) == 0x0008A8, "Member 'W_lobby_lodout_screen_item_C_SwitchUp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function w_lobby_lodout_screen_item.w_lobby_lodout_screen_item_C.UpdateRow
// 0x09F0 (0x09F0 - 0x0000)
struct W_lobby_lodout_screen_item_C_UpdateRow final
{
public:
	struct FS_ItemDetails                         Param_Out_Row;                                     // 0x0000(0x0890)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Param_CurrentIndex;                                // 0x0890(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D17[0x4];                                     // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Data_Table;                                        // 0x0898(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   Row_Name;                                          // 0x08A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x08A8(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x08B8(0x0010)(NoDestructor)
	struct FS_StartingWeaponItem                  K2Node_MakeStruct_S_StartingWeaponItem;            // 0x08C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FS_StartingWeaponItem                  K2Node_MakeStruct_S_StartingWeaponItem_1;          // 0x08E0(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_StartingWeaponItem>          K2Node_MakeArray_Array;                            // 0x08F8(0x0010)(ReferenceParm)
	TArray<struct FS_StartingWeaponItem>          K2Node_MakeArray_Array_1;                          // 0x0908(0x0010)(ReferenceParm)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_2;            // 0x0918(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_3;            // 0x0928(0x0010)(NoDestructor)
	struct FS_CraftingCost                        K2Node_MakeStruct_S_CraftingCost;                  // 0x0938(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        K2Node_MakeStruct_S_CraftingCost_1;                // 0x0950(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CraftingCost>                K2Node_MakeArray_Array_2;                          // 0x0968(0x0010)(ReferenceParm)
	TArray<struct FS_CraftingCost>                K2Node_MakeArray_Array_3;                          // 0x0978(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D18[0x7];                                     // 0x0989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D19[0x7];                                     // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_1;        // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1A[0x7];                                     // 0x09B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_2;        // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1B[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_3;        // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_lobby_lodout_screen_item_C_UpdateRow) == 0x000010, "Wrong alignment on W_lobby_lodout_screen_item_C_UpdateRow");
static_assert(sizeof(W_lobby_lodout_screen_item_C_UpdateRow) == 0x0009F0, "Wrong size on W_lobby_lodout_screen_item_C_UpdateRow");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, Param_Out_Row) == 0x000000, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::Param_Out_Row' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, Param_CurrentIndex) == 0x000890, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::Param_CurrentIndex' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, Data_Table) == 0x000898, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::Data_Table' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, Row_Name) == 0x0008A0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::Row_Name' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle) == 0x0008A8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_1) == 0x0008B8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_S_StartingWeaponItem) == 0x0008C8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_S_StartingWeaponItem' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_S_StartingWeaponItem_1) == 0x0008E0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_S_StartingWeaponItem_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeArray_Array) == 0x0008F8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeArray_Array_1) == 0x000908, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_2) == 0x000918, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_3) == 0x000928, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_S_CraftingCost) == 0x000938, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_S_CraftingCost' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeStruct_S_CraftingCost_1) == 0x000950, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeStruct_S_CraftingCost_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeArray_Array_2) == 0x000968, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_MakeArray_Array_3) == 0x000978, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_SwitchEnum_CmpSuccess) == 0x000988, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue) == 0x000990, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_1) == 0x000998, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x0009A0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_bSuccess) == 0x0009A8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_1) == 0x0009B0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_bSuccess_1) == 0x0009B8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_2) == 0x0009C0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_3) == 0x0009C8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_2) == 0x0009D0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_bSuccess_2) == 0x0009D8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_3) == 0x0009E0, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_3' has a wrong offset!");
static_assert(offsetof(W_lobby_lodout_screen_item_C_UpdateRow, K2Node_DynamicCast_bSuccess_3) == 0x0009E8, "Member 'W_lobby_lodout_screen_item_C_UpdateRow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

