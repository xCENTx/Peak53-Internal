#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SlotPool

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_SlotPool.BP_SlotPool_C.AddToCellPool
// 0x0030 (0x0030 - 0x0000)
struct BP_SlotPool_C_AddToCellPool final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_AddToCellPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_AddToCellPool");
static_assert(sizeof(BP_SlotPool_C_AddToCellPool) == 0x000030, "Wrong size on BP_SlotPool_C_AddToCellPool");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, Size) == 0x000000, "Member 'BP_SlotPool_C_AddToCellPool::Size' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, Temp_int_Variable) == 0x000004, "Member 'BP_SlotPool_C_AddToCellPool::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToCellPool, CallFunc_Array_AddUnique_ReturnValue) == 0x000028, "Member 'BP_SlotPool_C_AddToCellPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.AddToItemIconPool
// 0x0030 (0x0030 - 0x0000)
struct BP_SlotPool_C_AddToItemIconPool final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_AddToItemIconPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_AddToItemIconPool");
static_assert(sizeof(BP_SlotPool_C_AddToItemIconPool) == 0x000030, "Wrong size on BP_SlotPool_C_AddToItemIconPool");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, Size) == 0x000000, "Member 'BP_SlotPool_C_AddToItemIconPool::Size' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, Temp_int_Variable) == 0x000004, "Member 'BP_SlotPool_C_AddToItemIconPool::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_Create_ReturnValue) == 0x000018, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_AddChild_ReturnValue) == 0x000020, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_AddToItemIconPool, CallFunc_Array_AddUnique_ReturnValue) == 0x000028, "Member 'BP_SlotPool_C_AddToItemIconPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.ExecuteUbergraph_BP_SlotPool
// 0x0038 (0x0038 - 0x0000)
struct BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375F[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3760[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3761[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool");
static_assert(sizeof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool) == 0x000038, "Wrong size on BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, EntryPoint) == 0x000000, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, Temp_int_Variable) == 0x000008, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_Less_IntInt_ReturnValue) == 0x000011, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, Temp_bool_IsClosed_Variable) == 0x000012, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_Divide_IntInt_ReturnValue) == 0x00002C, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool, CallFunc_Delay_Duration_ImplicitCast) == 0x000034, "Member 'BP_SlotPool_C_ExecuteUbergraph_BP_SlotPool::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.GetCellFromPool
// 0x0028 (0x0028 - 0x0000)
struct BP_SlotPool_C_GetCellFromPool final
{
public:
	class UBP_InventoryCell_C*                    Cell;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CellL;                                             // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3762[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_GetCellFromPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_GetCellFromPool");
static_assert(sizeof(BP_SlotPool_C_GetCellFromPool) == 0x000028, "Wrong size on BP_SlotPool_C_GetCellFromPool");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, Cell) == 0x000000, "Member 'BP_SlotPool_C_GetCellFromPool::Cell' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CellL) == 0x000008, "Member 'BP_SlotPool_C_GetCellFromPool::CellL' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_GetCellFromPool::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_SlotPool_C_GetCellFromPool::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000020, "Member 'BP_SlotPool_C_GetCellFromPool::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000024, "Member 'BP_SlotPool_C_GetCellFromPool::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetCellFromPool, CallFunc_Array_RemoveItem_ReturnValue) == 0x000025, "Member 'BP_SlotPool_C_GetCellFromPool::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.GetItemIconFromPool
// 0x0028 (0x0028 - 0x0000)
struct BP_SlotPool_C_GetItemIconFromPool final
{
public:
	class UBP_InventoryItemIcon_C*                ItemIcon;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                ItemIconL;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3763[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3764[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_GetItemIconFromPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_GetItemIconFromPool");
static_assert(sizeof(BP_SlotPool_C_GetItemIconFromPool) == 0x000028, "Wrong size on BP_SlotPool_C_GetItemIconFromPool");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, ItemIcon) == 0x000000, "Member 'BP_SlotPool_C_GetItemIconFromPool::ItemIcon' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, ItemIconL) == 0x000008, "Member 'BP_SlotPool_C_GetItemIconFromPool::ItemIconL' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, CallFunc_Array_LastIndex_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_GetItemIconFromPool::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000014, "Member 'BP_SlotPool_C_GetItemIconFromPool::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, CallFunc_Array_RemoveItem_ReturnValue) == 0x000015, "Member 'BP_SlotPool_C_GetItemIconFromPool::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000018, "Member 'BP_SlotPool_C_GetItemIconFromPool::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_GetItemIconFromPool, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SlotPool_C_GetItemIconFromPool::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.ReturnCellToPool
// 0x0010 (0x0010 - 0x0000)
struct BP_SlotPool_C_ReturnCellToPool final
{
public:
	class UBP_InventoryCell_C*                    Cell;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3765[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_ReturnCellToPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_ReturnCellToPool");
static_assert(sizeof(BP_SlotPool_C_ReturnCellToPool) == 0x000010, "Wrong size on BP_SlotPool_C_ReturnCellToPool");
static_assert(offsetof(BP_SlotPool_C_ReturnCellToPool, Cell) == 0x000000, "Member 'BP_SlotPool_C_ReturnCellToPool::Cell' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnCellToPool, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SlotPool_C_ReturnCellToPool::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnCellToPool, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_SlotPool_C_ReturnCellToPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.ReturnItemIconToPool
// 0x0010 (0x0010 - 0x0000)
struct BP_SlotPool_C_ReturnItemIconToPool final
{
public:
	class UBP_InventoryItemIcon_C*                ItemIcon;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3766[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_ReturnItemIconToPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_ReturnItemIconToPool");
static_assert(sizeof(BP_SlotPool_C_ReturnItemIconToPool) == 0x000010, "Wrong size on BP_SlotPool_C_ReturnItemIconToPool");
static_assert(offsetof(BP_SlotPool_C_ReturnItemIconToPool, ItemIcon) == 0x000000, "Member 'BP_SlotPool_C_ReturnItemIconToPool::ItemIcon' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnItemIconToPool, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_SlotPool_C_ReturnItemIconToPool::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnItemIconToPool, CallFunc_Array_AddUnique_ReturnValue) == 0x00000C, "Member 'BP_SlotPool_C_ReturnItemIconToPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.ReturnMultipleCellsToPool
// 0x0048 (0x0048 - 0x0000)
struct BP_SlotPool_C_ReturnMultipleCellsToPool final
{
public:
	TArray<class UBP_InventoryCell_C*>            Cells;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryCell_C*                    CellL;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3767[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3768[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_ReturnMultipleCellsToPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_ReturnMultipleCellsToPool");
static_assert(sizeof(BP_SlotPool_C_ReturnMultipleCellsToPool) == 0x000048, "Wrong size on BP_SlotPool_C_ReturnMultipleCellsToPool");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, Cells) == 0x000000, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::Cells' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CellL) == 0x000010, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CellL' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Greater_IntInt_ReturnValue) == 0x00001D, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Array_AddUnique_ReturnValue) == 0x00002C, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleCellsToPool, CallFunc_AddChild_ReturnValue) == 0x000040, "Member 'BP_SlotPool_C_ReturnMultipleCellsToPool::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function BP_SlotPool.BP_SlotPool_C.ReturnMultipleItemIconsToPool
// 0x0048 (0x0048 - 0x0000)
struct BP_SlotPool_C_ReturnMultipleItemIconsToPool final
{
public:
	TArray<class UBP_InventoryItemIcon_C*>        Cells;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3769[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376A[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_376B[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SlotPool_C_ReturnMultipleItemIconsToPool) == 0x000008, "Wrong alignment on BP_SlotPool_C_ReturnMultipleItemIconsToPool");
static_assert(sizeof(BP_SlotPool_C_ReturnMultipleItemIconsToPool) == 0x000048, "Wrong size on BP_SlotPool_C_ReturnMultipleItemIconsToPool");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, Cells) == 0x000000, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::Cells' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_AddChild_ReturnValue) == 0x000038, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SlotPool_C_ReturnMultipleItemIconsToPool, CallFunc_Array_AddUnique_ReturnValue) == 0x000040, "Member 'BP_SlotPool_C_ReturnMultipleItemIconsToPool::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

