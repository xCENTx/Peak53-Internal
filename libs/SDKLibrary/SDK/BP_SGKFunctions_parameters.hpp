#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKFunctions

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_BuildType_structs.hpp"
#include "S_Damage_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_RecipeDetails_structs.hpp"
#include "E_Hitbox_structs.hpp"
#include "S_AttachmentDetails_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_BoneHitboxes_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_DurabilityDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AttachmentType_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_AmmoDetails_structs.hpp"
#include "E_CookingType_structs.hpp"
#include "S_ConsumableDetails_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "S_EquipmentDetails_structs.hpp"
#include "S_CustomGridLayoutData_structs.hpp"
#include "S_BuildPartDetails_structs.hpp"
#include "S_HoldableDetails_structs.hpp"
#include "S_UIDetails_structs.hpp"
#include "S_CraftingRecipe_structs.hpp"
#include "S_CookingRecipe_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKFunctions.BP_SGKFunctions_C.AddKeyToSave
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SGKFunctions_C_AddKeyToSave final
{
public:
	class UInputMappingContext*                   MappingContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              KeyAction;                                         // 0x0008(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x0090(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     SaveL;                                             // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     CallFunc_CreateSaveGameObject_ReturnValue;         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     K2Node_DynamicCast_AsBP_Control_Saves;             // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_AddKeyToSave) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_AddKeyToSave");
static_assert(sizeof(BP_SGKFunctions_C_AddKeyToSave) == 0x0000C0, "Wrong size on BP_SGKFunctions_C_AddKeyToSave");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, MappingContext) == 0x000000, "Member 'BP_SGKFunctions_C_AddKeyToSave::MappingContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, KeyAction) == 0x000008, "Member 'BP_SGKFunctions_C_AddKeyToSave::KeyAction' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, __WorldContext) == 0x000090, "Member 'BP_SGKFunctions_C_AddKeyToSave::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, SaveL) == 0x000098, "Member 'BP_SGKFunctions_C_AddKeyToSave::SaveL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0000A0, "Member 'BP_SGKFunctions_C_AddKeyToSave::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0000A8, "Member 'BP_SGKFunctions_C_AddKeyToSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, K2Node_DynamicCast_AsBP_Control_Saves) == 0x0000B0, "Member 'BP_SGKFunctions_C_AddKeyToSave::K2Node_DynamicCast_AsBP_Control_Saves' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_SGKFunctions_C_AddKeyToSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_AddKeyToSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x0000B9, "Member 'BP_SGKFunctions_C_AddKeyToSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.LoadControls
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SGKFunctions_C_LoadControls final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              KeyL;                                              // 0x0008(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FKey>                           KeyMappingsL;                                      // 0x0090(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           KeyNamesL;                                         // 0x00A0(0x0010)(Edit, BlueprintVisible)
	class UInputMappingContext*                   MappingContextL;                                   // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     SaveL;                                             // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_LoadControls) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_LoadControls");
static_assert(sizeof(BP_SGKFunctions_C_LoadControls) == 0x0000C0, "Wrong size on BP_SGKFunctions_C_LoadControls");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, __WorldContext) == 0x000000, "Member 'BP_SGKFunctions_C_LoadControls::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, KeyL) == 0x000008, "Member 'BP_SGKFunctions_C_LoadControls::KeyL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, KeyMappingsL) == 0x000090, "Member 'BP_SGKFunctions_C_LoadControls::KeyMappingsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, KeyNamesL) == 0x0000A0, "Member 'BP_SGKFunctions_C_LoadControls::KeyNamesL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, MappingContextL) == 0x0000B0, "Member 'BP_SGKFunctions_C_LoadControls::MappingContextL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_LoadControls, SaveL) == 0x0000B8, "Member 'BP_SGKFunctions_C_LoadControls::SaveL' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AllowStacking
// 0x08F0 (0x08F0 - 0x0000)
struct BP_SGKFunctions_C_SGK_AllowStacking final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowStacking;                                     // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A4[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_AllowStacking) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_AllowStacking");
static_assert(sizeof(BP_SGKFunctions_C_SGK_AllowStacking) == 0x0008F0, "Wrong size on BP_SGKFunctions_C_SGK_AllowStacking");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AllowStacking, InvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_AllowStacking::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AllowStacking, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_AllowStacking::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AllowStacking, AllowStacking) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_AllowStacking::AllowStacking' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AllowStacking, CallFunc_SGK_ItemDetails_ItemFound) == 0x000059, "Member 'BP_SGKFunctions_C_SGK_AllowStacking::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AllowStacking, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_AllowStacking::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AttachmentCompatibilityCheck
// 0x1500 (0x1500 - 0x0000)
struct BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck final
{
public:
	struct FS_InvItem                             WeaponItem;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             AttachmentItem;                                    // 0x0030(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowAttachment;                                   // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 WeaponL;                                           // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_AttachmentDetails                   AttachmentDetailsL;                                // 0x0078(0x02A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSet<E_AttachmentType>                        Temp_byte_Variable;                                // 0x0318(0x0050)()
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x0368(0x0010)(ReferenceParm)
	TArray<class UClass*>                         Temp_class_Variable_1;                             // 0x0378(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0394(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A6[0x3];                                     // 0x0395(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A7[0x3];                                     // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A8[0x3];                                     // 0x03A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A9[0xE];                                     // 0x03B2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x03C0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AA[0xF];                                     // 0x0C51(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0C60(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Weapon;        // 0x14F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x14F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x14F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck");
static_assert(sizeof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck) == 0x001500, "Wrong size on BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, WeaponItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::WeaponItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, AttachmentItem) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::AttachmentItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, __WorldContext) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, AllowAttachment) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::AllowAttachment' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, WeaponL) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::WeaponL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, AttachmentDetailsL) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::AttachmentDetailsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, Temp_byte_Variable) == 0x000318, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, Temp_class_Variable) == 0x000368, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, Temp_class_Variable_1) == 0x000378, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, Temp_int_Array_Index_Variable) == 0x000388, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, Temp_int_Loop_Counter_Variable) == 0x00038C, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000390, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Set_Contains_ReturnValue) == 0x000394, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Array_Length_ReturnValue) == 0x000398, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x00039C, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Array_Get_Item) == 0x0003A0, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0003A8, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0003AC, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0003B0, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_SGK_ItemDetails_ItemFound) == 0x0003B1, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0003C0, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000C50, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000C60, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, K2Node_ClassDynamicCast_AsBP_Master_Weapon) == 0x0014F0, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::K2Node_ClassDynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, K2Node_ClassDynamicCast_bSuccess) == 0x0014F8, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck, CallFunc_ClassIsChildOf_ReturnValue) == 0x0014F9, "Member 'BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AttachmentDetails
// 0x0B80 (0x0B80 - 0x0000)
struct BP_SGKFunctions_C_SGK_AttachmentDetails final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Is_Attachment;                                     // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   Attachment_Details;                                // 0x0040(0x02A0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AC[0xF];                                     // 0x02E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x02F0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_AttachmentDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_AttachmentDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_AttachmentDetails) == 0x000B80, "Wrong size on BP_SGKFunctions_C_SGK_AttachmentDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, Item) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, Is_Attachment) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, Attachment_Details) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, CallFunc_SGK_ItemDetails_ItemFound) == 0x0002E0, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_AttachmentDetails, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0002F0, "Member 'BP_SGKFunctions_C_SGK_AttachmentDetails::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK BuildPartDetails
// 0x01F0 (0x01F0 - 0x0000)
struct BP_SGKFunctions_C_SGK_BuildPartDetails final
{
public:
	class FName                                   BuildPartID;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          BuildPartFound;                                    // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AD[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BuildPartDetails                    BuildPartDetails;                                  // 0x0018(0x00E8)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_BuildPartDetails                    CallFunc_GetDataTableRowFromName_OutRow;           // 0x0100(0x00E8)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_BuildPartDetails) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_BuildPartDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_BuildPartDetails) == 0x0001F0, "Wrong size on BP_SGKFunctions_C_SGK_BuildPartDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, BuildPartID) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::BuildPartID' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, BuildPartFound) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::BuildPartFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, BuildPartDetails) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::BuildPartDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000100, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001E8, "Member 'BP_SGKFunctions_C_SGK_BuildPartDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK BuildPartRepairCost
// 0x0088 (0x0088 - 0x0000)
struct BP_SGKFunctions_C_SGK_BuildPartRepairCost final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartPercent;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKDamageInterface_C> K2Node_DynamicCast_AsBP_SGKDamage_Interface;       // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AE[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_MaxHealth_MaxHealth;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53AF[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B0[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKDamageInterface_C> K2Node_DynamicCast_AsBP_SGKDamage_Interface_1;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B1[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_CurrentHealth_Health;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B2[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B3[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_BuildPartRepairCost) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_BuildPartRepairCost");
static_assert(sizeof(BP_SGKFunctions_C_SGK_BuildPartRepairCost) == 0x000088, "Wrong size on BP_SGKFunctions_C_SGK_BuildPartRepairCost");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, Actor) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::Actor' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, ReturnValue) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, StartPercent) == 0x000014, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::StartPercent' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, K2Node_DynamicCast_AsBP_SGKDamage_Interface) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::K2Node_DynamicCast_AsBP_SGKDamage_Interface' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_SGK_MaxHealth_MaxHealth) == 0x000034, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_SGK_MaxHealth_MaxHealth' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_Divide_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, K2Node_DynamicCast_AsBP_SGKDamage_Interface_1) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::K2Node_DynamicCast_AsBP_SGKDamage_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_SGK_CurrentHealth_Health) == 0x00005C, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_SGK_CurrentHealth_Health' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_FMod_Remainder) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_FMod_ReturnValue) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_FMod_Divisor_ImplicitCast) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_BuildPartRepairCost, CallFunc_FMod_Dividend_ImplicitCast) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_BuildPartRepairCost::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK DurabilityDetails
// 0x0930 (0x0930 - 0x0000)
struct BP_SGKFunctions_C_SGK_DurabilityDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   DurabilityDetails;                                 // 0x0040(0x0050)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0090(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_DurabilityDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_DurabilityDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_DurabilityDetails) == 0x000930, "Wrong size on BP_SGKFunctions_C_SGK_DurabilityDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, DurabilityDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000090, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_DurabilityDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000920, "Member 'BP_SGKFunctions_C_SGK_DurabilityDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetInvSlot
// 0x00D0 (0x00D0 - 0x0000)
struct BP_SGKFunctions_C_SGK_GetInvSlot final
{
public:
	class UBP_MasterInventory_C*                  MasterInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B5[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SlotFound;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlot;                                           // 0x0020(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B7[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0078(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_GetInvSlot) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_GetInvSlot");
static_assert(sizeof(BP_SGKFunctions_C_SGK_GetInvSlot) == 0x0000D0, "Wrong size on BP_SGKFunctions_C_SGK_GetInvSlot");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, MasterInventory) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, Param_Index) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, __WorldContext) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, SlotFound) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, InvSlot) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetInvSlot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000C8, "Member 'BP_SGKFunctions_C_SGK_GetInvSlot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetItemRangeClass
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_GetItemRangeClass final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B8[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RangeWeapon;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HoldableClassL;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53B9[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BA[0xD];                                     // 0x0063(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0070(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_GetItemRangeClass) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_GetItemRangeClass");
static_assert(sizeof(BP_SGKFunctions_C_SGK_GetItemRangeClass) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_GetItemRangeClass");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, Item) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, ReturnValue) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, RangeWeapon) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::RangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, HoldableClassL) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::HoldableClassL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, CallFunc_IsValidClass_ReturnValue) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000061, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, CallFunc_SGK_ItemDetails_ItemFound) == 0x000062, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemRangeClass, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_GetItemRangeClass::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetItemWeaponClass
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_GetItemWeaponClass final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BB[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RangeWeapon;                                       // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 HoldableClassL;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BC[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Weapon;        // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BD[0xD];                                     // 0x0063(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0070(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_GetItemWeaponClass) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_GetItemWeaponClass");
static_assert(sizeof(BP_SGKFunctions_C_SGK_GetItemWeaponClass) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_GetItemWeaponClass");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, Item) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, ReturnValue) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, RangeWeapon) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::RangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, HoldableClassL) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::HoldableClassL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, CallFunc_IsValidClass_ReturnValue) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, K2Node_ClassDynamicCast_AsBP_Master_Weapon) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::K2Node_ClassDynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, K2Node_ClassDynamicCast_bSuccess) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, CallFunc_ClassIsChildOf_ReturnValue) == 0x000061, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, CallFunc_SGK_ItemDetails_ItemFound) == 0x000062, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetItemWeaponClass, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_GetItemWeaponClass::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetRootSlot
// 0x0100 (0x0100 - 0x0000)
struct BP_SGKFunctions_C_SGK_GetRootSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             RootInvSlot;                                       // 0x0058(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BE[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x00B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_GetRootSlot) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_GetRootSlot");
static_assert(sizeof(BP_SGKFunctions_C_SGK_GetRootSlot) == 0x000100, "Wrong size on BP_SGKFunctions_C_SGK_GetRootSlot");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetRootSlot, InvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_GetRootSlot::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetRootSlot, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_GetRootSlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetRootSlot, RootInvSlot) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_GetRootSlot::RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetRootSlot, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0000A8, "Member 'BP_SGKFunctions_C_SGK_GetRootSlot::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GetRootSlot, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0000B0, "Member 'BP_SGKFunctions_C_SGK_GetRootSlot::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GridClasses
// 0x0090 (0x0090 - 0x0000)
struct BP_SGKFunctions_C_SGK_GridClasses final
{
public:
	E_BuildType                                   BuildType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53BF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Grid;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_BuildType                                   Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_4;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_5;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_6;                             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_7;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_8;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_9;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_10;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_11;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_12;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_Select_Default;                             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_GridClasses) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_GridClasses");
static_assert(sizeof(BP_SGKFunctions_C_SGK_GridClasses) == 0x000090, "Wrong size on BP_SGKFunctions_C_SGK_GridClasses");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, BuildType) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_GridClasses::BuildType' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_GridClasses::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Grid) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Grid' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_byte_Variable) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_1) == 0x000028, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_2) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_3) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_4) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_5) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_6) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_7) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_8) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_9) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_10) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_11) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, Temp_class_Variable_12) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_GridClasses::Temp_class_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_GridClasses, K2Node_Select_Default) == 0x000088, "Member 'BP_SGKFunctions_C_SGK_GridClasses::K2Node_Select_Default' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK HitboxDamage
// 0x0078 (0x0078 - 0x0000)
struct BP_SGKFunctions_C_SGK_HitboxDamage final
{
public:
	TArray<struct FS_Damage>                      HitboxDamage;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_Hitbox                                      HitBox;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Damage                              ElementDamageL;                                    // 0x0024(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Damage                              CallFunc_Array_Get_Item;                           // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_Damage                              CallFunc_Array_Get_Item_1;                         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0076(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_HitboxDamage) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_HitboxDamage");
static_assert(sizeof(BP_SGKFunctions_C_SGK_HitboxDamage) == 0x000078, "Wrong size on BP_SGKFunctions_C_SGK_HitboxDamage");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, HitboxDamage) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::HitboxDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, HitBox) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::HitBox' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, __WorldContext) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, Damage) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, ElementDamageL) == 0x000024, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::ElementDamageL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, Temp_int_Loop_Counter_Variable_1) == 0x000054, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x00006C, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_Less_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000075, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_HitboxDamage, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000076, "Member 'BP_SGKFunctions_C_SGK_HitboxDamage::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InventoryGridDetails
// 0x0068 (0x0068 - 0x0000)
struct BP_SGKFunctions_C_SGK_InventoryGridDetails final
{
public:
	struct FDataTableRowHandle                    RowHandle;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundGrid;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomGridLayoutData                InventoryGridData;                                 // 0x0020(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_CustomGridLayoutData                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0040(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_InventoryGridDetails) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_InventoryGridDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_InventoryGridDetails) == 0x000068, "Wrong size on BP_SGKFunctions_C_SGK_InventoryGridDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, RowHandle) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::RowHandle' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, __WorldContext) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, FoundGrid) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::FoundGrid' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, InventoryGridData) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::InventoryGridData' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InventoryGridDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_InventoryGridDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotAmount
// 0x0068 (0x0068 - 0x0000)
struct BP_SGKFunctions_C_SGK_InvSlotAmount final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemValid;                                         // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C4[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_InvSlotAmount) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_InvSlotAmount");
static_assert(sizeof(BP_SGKFunctions_C_SGK_InvSlotAmount) == 0x000068, "Wrong size on BP_SGKFunctions_C_SGK_InvSlotAmount");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotAmount, InvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_InvSlotAmount::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotAmount, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_InvSlotAmount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotAmount, ItemValid) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_InvSlotAmount::ItemValid' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotAmount, Amount) == 0x00005C, "Member 'BP_SGKFunctions_C_SGK_InvSlotAmount::Amount' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_InvSlotAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotFromSlotID
// 0x00C0 (0x00C0 - 0x0000)
struct BP_SGKFunctions_C_SGK_InvSlotFromSlotID final
{
public:
	struct FS_InvSlotID                           SlotID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             InvSlot;                                           // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0070(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_InvSlotFromSlotID");
static_assert(sizeof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID) == 0x0000C0, "Wrong size on BP_SGKFunctions_C_SGK_InvSlotFromSlotID");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID, SlotID) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_InvSlotFromSlotID::SlotID' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID, __WorldContext) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_InvSlotFromSlotID::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID, InvSlot) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_InvSlotFromSlotID::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_InvSlotFromSlotID::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotFromSlotID, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_InvSlotFromSlotID::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotItem
// 0x0088 (0x0088 - 0x0000)
struct BP_SGKFunctions_C_SGK_InvSlotItem final
{
public:
	struct FS_InvSlot                             Inv_Slot;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItem;                                           // 0x0058(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_InvSlotItem) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_InvSlotItem");
static_assert(sizeof(BP_SGKFunctions_C_SGK_InvSlotItem) == 0x000088, "Wrong size on BP_SGKFunctions_C_SGK_InvSlotItem");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotItem, Inv_Slot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_InvSlotItem::Inv_Slot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotItem, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_InvSlotItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotItem, InvItem) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_InvSlotItem::InvItem' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotOccupied
// 0x0060 (0x0060 - 0x0000)
struct BP_SGKFunctions_C_SGK_InvSlotOccupied final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Occupied;                                          // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_InvSlotOccupied) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_InvSlotOccupied");
static_assert(sizeof(BP_SGKFunctions_C_SGK_InvSlotOccupied) == 0x000060, "Wrong size on BP_SGKFunctions_C_SGK_InvSlotOccupied");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotOccupied, InvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_InvSlotOccupied::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotOccupied, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_InvSlotOccupied::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_InvSlotOccupied, Occupied) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_InvSlotOccupied::Occupied' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsHitbox
// 0x0088 (0x0088 - 0x0000)
struct BP_SGKFunctions_C_SGK_IsHitbox final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFoundBone_;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C6[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BoneHitboxes>                BoneHitboxesL;                                     // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C7[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_BoneHitboxes>                K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_BoneHitboxes                        CallFunc_Array_Get_Item;                           // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C8[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53C9[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_IsHitbox) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_IsHitbox");
static_assert(sizeof(BP_SGKFunctions_C_SGK_IsHitbox) == 0x000088, "Wrong size on BP_SGKFunctions_C_SGK_IsHitbox");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, BoneName) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::BoneName' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, HitBox) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::HitBox' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, bFoundBone_) == 0x000011, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::bFoundBone_' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, BoneHitboxesL) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::BoneHitboxesL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Array_Get_Item) == 0x000044, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Conv_NameToString_ReturnValue) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsHitbox, CallFunc_Contains_ReturnValue) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_IsHitbox::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsMaxAmount
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_IsMaxAmount final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MaxCount;                                          // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CA[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_IsMaxAmount) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_IsMaxAmount");
static_assert(sizeof(BP_SGKFunctions_C_SGK_IsMaxAmount) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_IsMaxAmount");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, InvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, MaxCount) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::MaxCount' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, CallFunc_SGK_ItemDetails_ItemFound) == 0x000059, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsMaxAmount, CallFunc_Less_IntInt_ReturnValue) == 0x0008F0, "Member 'BP_SGKFunctions_C_SGK_IsMaxAmount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsRootSlot
// 0x0068 (0x0068 - 0x0000)
struct BP_SGKFunctions_C_SGK_IsRootSlot final
{
public:
	struct FS_InvSlot                             Inv_Slot;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRootSlot;                                        // 0x0058(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CB[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RootIndex;                                         // 0x005C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_IsRootSlot) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_IsRootSlot");
static_assert(sizeof(BP_SGKFunctions_C_SGK_IsRootSlot) == 0x000068, "Wrong size on BP_SGKFunctions_C_SGK_IsRootSlot");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsRootSlot, Inv_Slot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_IsRootSlot::Inv_Slot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsRootSlot, __WorldContext) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_IsRootSlot::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsRootSlot, IsRootSlot) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_IsRootSlot::IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsRootSlot, RootIndex) == 0x00005C, "Member 'BP_SGKFunctions_C_SGK_IsRootSlot::RootIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsRootSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_IsRootSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsSlotsSameItem
// 0x00B0 (0x00B0 - 0x0000)
struct BP_SGKFunctions_C_SGK_IsSlotsSameItem final
{
public:
	struct FS_InvSlot                             SlotOne;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             SlotTwo;                                           // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x00A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsSameItem;                                        // 0x00A8(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_IsSlotsSameItem) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_IsSlotsSameItem");
static_assert(sizeof(BP_SGKFunctions_C_SGK_IsSlotsSameItem) == 0x0000B0, "Wrong size on BP_SGKFunctions_C_SGK_IsSlotsSameItem");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsSlotsSameItem, SlotOne) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_IsSlotsSameItem::SlotOne' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsSlotsSameItem, SlotTwo) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_IsSlotsSameItem::SlotTwo' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsSlotsSameItem, __WorldContext) == 0x0000A0, "Member 'BP_SGKFunctions_C_SGK_IsSlotsSameItem::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsSlotsSameItem, IsSameItem) == 0x0000A8, "Member 'BP_SGKFunctions_C_SGK_IsSlotsSameItem::IsSameItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_IsSlotsSameItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000A9, "Member 'BP_SGKFunctions_C_SGK_IsSlotsSameItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemAmmoDetails
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemAmmoDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CC[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AmmoDetails                         ItemAmmoDetails;                                   // 0x0040(0x0020)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemAmmoDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemAmmoDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemAmmoDetails) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_ItemAmmoDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, ItemAmmoDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::ItemAmmoDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemAmmoDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008F0, "Member 'BP_SGKFunctions_C_SGK_ItemAmmoDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemBuildPartDetails
// 0x0AB0 (0x0AB0 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemBuildPartDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CD[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BuildPartDetails                    Build_Part_Details;                                // 0x0040(0x00E8)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CE[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0130(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_BuildPartDetails_BuildPartFound;      // 0x09C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53CF[0x7];                                     // 0x09C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BuildPartDetails                    CallFunc_SGK_BuildPartDetails_BuildPartDetails;    // 0x09C8(0x00E8)(HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemBuildPartDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails) == 0x000AB0, "Wrong size on BP_SGKFunctions_C_SGK_ItemBuildPartDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, Build_Part_Details) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::Build_Part_Details' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, CallFunc_SGK_ItemDetails_ItemFound) == 0x000128, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000130, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, CallFunc_SGK_BuildPartDetails_BuildPartFound) == 0x0009C0, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::CallFunc_SGK_BuildPartDetails_BuildPartFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemBuildPartDetails, CallFunc_SGK_BuildPartDetails_BuildPartDetails) == 0x0009C8, "Member 'BP_SGKFunctions_C_SGK_ItemBuildPartDetails::CallFunc_SGK_BuildPartDetails_BuildPartDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemConsumableDetails
// 0x0920 (0x0920 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemConsumableDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D0[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   ItemDetails;                                       // 0x0040(0x0040)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemConsumableDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemConsumableDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemConsumableDetails) == 0x000920, "Wrong size on BP_SGKFunctions_C_SGK_ItemConsumableDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, ItemDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemConsumableDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000910, "Member 'BP_SGKFunctions_C_SGK_ItemConsumableDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemContainerDetails
// 0x0950 (0x0950 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemContainerDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    ItemContainerDetails;                              // 0x0040(0x0070)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x00B0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemContainerDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemContainerDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemContainerDetails) == 0x000950, "Wrong size on BP_SGKFunctions_C_SGK_ItemContainerDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, ItemContainerDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::ItemContainerDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000B0, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemContainerDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000940, "Member 'BP_SGKFunctions_C_SGK_ItemContainerDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemCookingRecipe
// 0x01E8 (0x01E8 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemCookingRecipe final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_CookingType                                 CookingType;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CookingRecipe;                                     // 0x0048(0x0078)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_CookingRecipe                       CookingRecipeL;                                    // 0x00C0(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D4[0x3];                                     // 0x013D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0148(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x015C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D5[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0168(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemCookingRecipe) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemCookingRecipe");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemCookingRecipe) == 0x0001E8, "Wrong size on BP_SGKFunctions_C_SGK_ItemCookingRecipe");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, Item) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CookingType) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CookingType' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, __WorldContext) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, ReturnValue) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CookingRecipe) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CookingRecipeL) == 0x0000C0, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CookingRecipeL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, Temp_int_Array_Index_Variable) == 0x000138, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00013C, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000148, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_Array_Length_ReturnValue) == 0x000158, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_Array_Get_Item) == 0x00015C, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_Less_IntInt_ReturnValue) == 0x000164, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_GetDataTableRowFromName_OutRow) == 0x000168, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001E0, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_Set_Contains_ReturnValue) == 0x0001E1, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemCookingRecipe, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001E2, "Member 'BP_SGKFunctions_C_SGK_ItemCookingRecipe::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemDetails
// 0x1170 (0x1170 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D6[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetails;                                       // 0x0040(0x0890)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x08D0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x1160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemDetails) == 0x001170, "Wrong size on BP_SGKFunctions_C_SGK_ItemDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, ItemDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x0008D0, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x001160, "Member 'BP_SGKFunctions_C_SGK_ItemDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemEquipmentDetails
// 0x0A50 (0x0A50 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemEquipmentDetails final
{
public:
	struct FS_InvItem                             S_InvItem;                                         // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipmentItem;                                   // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D7[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    EquipmentDetails;                                  // 0x0040(0x0170)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D8[0x3];                                     // 0x0A41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemEquipmentDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails) == 0x000A50, "Wrong size on BP_SGKFunctions_C_SGK_ItemEquipmentDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, S_InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, IsEquipmentItem) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, EquipmentDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000A40, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, CallFunc_Set_Length_ReturnValue) == 0x000A44, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemEquipmentDetails, CallFunc_Greater_IntInt_ReturnValue) == 0x000A48, "Member 'BP_SGKFunctions_C_SGK_ItemEquipmentDetails::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemHoldableDetails
// 0x0A30 (0x0A30 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemHoldableDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D9[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     ItemHoldableDetails;                               // 0x0040(0x0150)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0190(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemHoldableDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemHoldableDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemHoldableDetails) == 0x000A30, "Wrong size on BP_SGKFunctions_C_SGK_ItemHoldableDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, ItemHoldableDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::ItemHoldableDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000190, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemHoldableDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000A20, "Member 'BP_SGKFunctions_C_SGK_ItemHoldableDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemRecipeDetails
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemRecipeDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DA[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RecipeDetails                       ItemRecipeDetails;                                 // 0x0040(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	uint8                                         Pad_53DB[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemRecipeDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemRecipeDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemRecipeDetails) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_ItemRecipeDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, ItemRecipeDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::ItemRecipeDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRecipeDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0008F0, "Member 'BP_SGKFunctions_C_SGK_ItemRecipeDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemRepairCost
// 0x0060 (0x0060 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemRepairCost final
{
public:
	struct FS_CraftingCost                        RepairItems;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	double                                        Durability;                                        // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Max_Durability;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCount;                                         // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartPercentL;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DC[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemRepairCost) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemRepairCost");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemRepairCost) == 0x000060, "Wrong size on BP_SGKFunctions_C_SGK_ItemRepairCost");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, RepairItems) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::RepairItems' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, Durability) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::Durability' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, Max_Durability) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::Max_Durability' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, __WorldContext) == 0x000028, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, ItemCount) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::ItemCount' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, StartPercentL) == 0x000034, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::StartPercentL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_FMod_Remainder) == 0x000048, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_FMod_ReturnValue) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_Subtract_IntInt_ReturnValue) == 0x000054, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemRepairCost, CallFunc_Multiply_IntInt_ReturnValue) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_ItemRepairCost::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemSize
// 0x08E0 (0x08E0 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemSize final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DD[0xF];                                     // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0050(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemSize) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemSize");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemSize) == 0x0008E0, "Wrong size on BP_SGKFunctions_C_SGK_ItemSize");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemSize::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemSize::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, Height) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemSize::Height' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, Width) == 0x00003C, "Member 'BP_SGKFunctions_C_SGK_ItemSize::Width' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, CallFunc_SGK_ItemDetails_ItemFound) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemSize::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemSize, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_ItemSize::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemUIDetails
// 0x0920 (0x0920 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemUIDetails final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DE[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_UIDetails                           ItemUIDetails;                                     // 0x0040(0x0040)(Parm, OutParm, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0080(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemUIDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemUIDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemUIDetails) == 0x000920, "Wrong size on BP_SGKFunctions_C_SGK_ItemUIDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, InvItem) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, ItemFound) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, ItemUIDetails) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::ItemUIDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemUIDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000910, "Member 'BP_SGKFunctions_C_SGK_ItemUIDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemWeight
// 0x0900 (0x0900 - 0x0000)
struct BP_SGKFunctions_C_SGK_ItemWeight final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        TotalWeight;                                       // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53DF[0xF];                                     // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0050(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E0[0x4];                                     // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_ItemWeight) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_ItemWeight");
static_assert(sizeof(BP_SGKFunctions_C_SGK_ItemWeight) == 0x000900, "Wrong size on BP_SGKFunctions_C_SGK_ItemWeight");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, Item) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, __WorldContext) == 0x000030, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, TotalWeight) == 0x000038, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::TotalWeight' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, CallFunc_SGK_ItemDetails_ItemFound) == 0x000040, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0008E0, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0008E8, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_ItemWeight, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0008F0, "Member 'BP_SGKFunctions_C_SGK_ItemWeight::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK RecipeDetails
// 0x0240 (0x0240 - 0x0000)
struct BP_SGKFunctions_C_SGK_RecipeDetails final
{
public:
	class FName                                   RecipeRowName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CraftingRecipe;                                    // 0x0018(0x0110)(Parm, OutParm, HasGetValueTypeHash)
	struct FS_CraftingRecipe                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0128(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_RecipeDetails) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_RecipeDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_RecipeDetails) == 0x000240, "Wrong size on BP_SGKFunctions_C_SGK_RecipeDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, RecipeRowName) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::RecipeRowName' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, ReturnValue) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, CraftingRecipe) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, CallFunc_GetDataTableRowFromName_OutRow) == 0x000128, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RecipeDetails, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000238, "Member 'BP_SGKFunctions_C_SGK_RecipeDetails::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK RootSpaceCheck
// 0x0388 (0x0388 - 0x0000)
struct BP_SGKFunctions_C_SGK_RootSpaceCheck final
{
public:
	struct FS_InvSlot                             RootInvSlot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           IgnoreItem;                                        // 0x0058(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0068(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E2[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SlotsBlocked;                                      // 0x0078(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E3[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlots;                                        // 0x0080(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         RootClumpL;                                        // 0x0090(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InvColumnsL;                                       // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  InventoryL;                                        // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RootIndexL;                                        // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E4[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x00A8(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CurrentCellIndexL;                                 // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellHeightMultiL;                                  // 0x00FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellWidthMultiL;                                   // 0x0100(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E5[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0108(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          SlotsBlockedL;                                     // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E6[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TotalSlotsL;                                       // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E7[0x2];                                     // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E8[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_4;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_5;            // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53E9[0x3];                                     // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_6;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_7;            // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder_1;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_1;                       // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53EA[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53EB[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x01A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53EC[0x3];                                     // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53ED[0x2];                                     // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53EE[0x3];                                     // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53EF[0x2];                                     // 0x0216(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F0[0x2];                                     // 0x021E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_8;            // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_9;            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder_2;                         // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_2;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F1[0x4];                                     // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder_3;                         // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_3;                       // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F2[0x3];                                     // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0256(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F3[0x1];                                     // 0x0257(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F4[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_10;           // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder_4;                         // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_4;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_4;            // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_11;           // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder_5;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_5;                       // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0295(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F5[0x2];                                     // 0x0296(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F6[0x4];                                     // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid_1;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F7[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount_1;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F8[0x3];                                     // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53F9[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FA[0x2];                                     // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_5;            // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FB[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_6;            // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_1;              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_2;              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_3;              // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_4;              // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_5;              // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_1;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_2;             // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_3;             // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_4;             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_5;             // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_RootSpaceCheck) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_RootSpaceCheck");
static_assert(sizeof(BP_SGKFunctions_C_SGK_RootSpaceCheck) == 0x000388, "Wrong size on BP_SGKFunctions_C_SGK_RootSpaceCheck");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, RootInvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Height) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Height' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Width) == 0x000054, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Width' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, IgnoreItem) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::IgnoreItem' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Rotated) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Rotated' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, __WorldContext) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, SlotsBlocked) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, FoundSlots) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, RootClumpL) == 0x000090, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::RootClumpL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, InvColumnsL) == 0x000094, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::InvColumnsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, InventoryL) == 0x000098, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::InventoryL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, RootIndexL) == 0x0000A0, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::RootIndexL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, InvSlotL) == 0x0000A8, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CurrentCellIndexL) == 0x0000F8, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CurrentCellIndexL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CellHeightMultiL) == 0x0000FC, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CellHeightMultiL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CellWidthMultiL) == 0x000100, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CellWidthMultiL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, FoundSlotsL) == 0x000108, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, SlotsBlockedL) == 0x000118, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::SlotsBlockedL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, TotalSlotsL) == 0x00011C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::TotalSlotsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_bool_Variable) == 0x000120, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000121, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_int_Variable) == 0x000124, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000128, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_bool_Variable_1) == 0x00012C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x00012D, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000130, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000134, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000138, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x00013C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_4) == 0x000140, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_5) == 0x000144, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SelectInt_ReturnValue) == 0x000148, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Subtract_IntInt_ReturnValue) == 0x00014C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000150, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_IsValid_ReturnValue) == 0x000154, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue) == 0x000158, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00015D, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_BooleanAND_ReturnValue) == 0x00015E, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x00015F, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000160, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_6) == 0x000164, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder) == 0x000168, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue) == 0x000170, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000174, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x000178, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_2) == 0x00017C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_7) == 0x000180, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_3) == 0x000184, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder_1) == 0x000188, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue_1) == 0x000190, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000194, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_int_Variable_1) == 0x000198, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_4) == 0x00019C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_Add_ReturnValue) == 0x0001A0, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_Get_Item) == 0x0001A8, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x0001F8, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_InvSlotAmount_Amount) == 0x0001FC, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000200, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000201, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_5) == 0x000204, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000208, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_6) == 0x00020C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000210, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000214, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000215, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_int_Variable_2) == 0x000218, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, Temp_bool_Variable_2) == 0x00021C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_IsValid_ReturnValue_1) == 0x00021D, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_8) == 0x000220, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_9) == 0x000224, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder_2) == 0x000228, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue_2) == 0x000230, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder_3) == 0x000238, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue_3) == 0x000240, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_7) == 0x000244, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000248, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, K2Node_Select_Default) == 0x00024C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x000250, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000254, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000255, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x000256, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x000258, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x00025C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x000260, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_10) == 0x000264, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder_4) == 0x000268, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue_4) == 0x000270, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_4) == 0x000274, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_8) == 0x000278, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_9) == 0x00027C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_10) == 0x000280, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Conv_IntToFloat_ReturnValue_11) == 0x000284, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Conv_IntToFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Remainder_5) == 0x000288, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Remainder_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_ReturnValue_5) == 0x000290, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000294, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000295, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_Add_ReturnValue_1) == 0x000298, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_InvSlotAmount_ItemValid_1) == 0x0002F0, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_InvSlotAmount_ItemValid_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SGK_InvSlotAmount_Amount_1) == 0x0002F4, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SGK_InvSlotAmount_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0002F8, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0002FC, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000300, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_IsValid_ReturnValue_2) == 0x000301, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_11) == 0x000304, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_12) == 0x000308, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00030C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000310, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_BooleanAND_ReturnValue_3) == 0x000311, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_SelectInt_ReturnValue_1) == 0x000314, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_5) == 0x000318, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Add_IntInt_ReturnValue_13) == 0x00031C, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000320, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_Multiply_IntInt_ReturnValue_6) == 0x000324, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_Multiply_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast) == 0x000328, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast_1) == 0x000330, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast_2) == 0x000338, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast_3) == 0x000340, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast_4) == 0x000348, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Divisor_ImplicitCast_5) == 0x000350, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Divisor_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast) == 0x000358, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast_1) == 0x000360, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast_2) == 0x000368, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast_3) == 0x000370, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast_4) == 0x000378, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_RootSpaceCheck, CallFunc_FMod_Dividend_ImplicitCast_5) == 0x000380, "Member 'BP_SGKFunctions_C_SGK_RootSpaceCheck::CallFunc_FMod_Dividend_ImplicitCast_5' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK SlotFinder
// 0x01F0 (0x01F0 - 0x0000)
struct BP_SGKFunctions_C_SGK_SlotFinder final
{
public:
	struct FS_InvSlot                             RootInvSlot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FC[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlots;                                        // 0x0068(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         InvColumnsL;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FD[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x0080(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x00D0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CurrentCellIndexL;                                 // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellHeightMultiL;                                  // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CellWidthMultiL;                                   // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalSlotsL;                                       // 0x00EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RootIndexL;                                        // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FE[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  InventoryL;                                        // 0x00F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53FF[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0118(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5400[0x4];                                     // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5401[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_1;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x019D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5402[0x2];                                     // 0x019E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5403[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5404[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5405[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_1;              // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_1;             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_SlotFinder) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_SGK_SlotFinder");
static_assert(sizeof(BP_SGKFunctions_C_SGK_SlotFinder) == 0x0001F0, "Wrong size on BP_SGKFunctions_C_SGK_SlotFinder");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, RootInvSlot) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, Height) == 0x000050, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::Height' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, Width) == 0x000054, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::Width' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, Rotated) == 0x000058, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::Rotated' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, __WorldContext) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, FoundSlots) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, InvColumnsL) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::InvColumnsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, InvSlotL) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, FoundSlotsL) == 0x0000D0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CurrentCellIndexL) == 0x0000E0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CurrentCellIndexL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CellHeightMultiL) == 0x0000E4, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CellHeightMultiL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CellWidthMultiL) == 0x0000E8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CellWidthMultiL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, TotalSlotsL) == 0x0000EC, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::TotalSlotsL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, RootIndexL) == 0x0000F0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::RootIndexL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, InventoryL) == 0x0000F8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::InventoryL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, Temp_int_Variable) == 0x000100, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000108, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00010C, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000110, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000118, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Array_Add_ReturnValue) == 0x000168, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x00016C, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Multiply_IntInt_ReturnValue) == 0x000170, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Remainder) == 0x000178, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_ReturnValue) == 0x000180, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue_1) == 0x000184, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x000188, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Remainder_1) == 0x000190, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Remainder_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_ReturnValue_1) == 0x000198, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00019C, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00019D, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001A4, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_SelectInt_ReturnValue) == 0x0001A8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001AC, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001B0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001B4, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001B8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001BC, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0001CC, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Divisor_ImplicitCast) == 0x0001D0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Divisor_ImplicitCast_1) == 0x0001D8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Divisor_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Dividend_ImplicitCast) == 0x0001E0, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotFinder, CallFunc_FMod_Dividend_ImplicitCast_1) == 0x0001E8, "Member 'BP_SGKFunctions_C_SGK_SlotFinder::CallFunc_FMod_Dividend_ImplicitCast_1' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK SlotItemDetails
// 0x11A0 (0x11A0 - 0x0000)
struct BP_SGKFunctions_C_SGK_SlotItemDetails final
{
public:
	class UBP_MasterInventory_C*                  Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5406[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5407[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetails;                                       // 0x0020(0x0890)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5408[0x7];                                     // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x08B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5409[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0910(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_SlotItemDetails) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_SlotItemDetails");
static_assert(sizeof(BP_SGKFunctions_C_SGK_SlotItemDetails) == 0x0011A0, "Wrong size on BP_SGKFunctions_C_SGK_SlotItemDetails");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, Inventory) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::Inventory' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, Param_Index) == 0x000008, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, __WorldContext) == 0x000010, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, ItemFound) == 0x000018, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, ItemDetails) == 0x000020, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0008B0, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0008B8, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, CallFunc_SGK_ItemDetails_ItemFound) == 0x000908, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_SlotItemDetails, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000910, "Member 'BP_SGKFunctions_C_SGK_SlotItemDetails::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK VectorTransform
// 0x01C0 (0x01C0 - 0x0000)
struct BP_SGKFunctions_C_SGK_VectorTransform final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Forward;                                           // 0x0060(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Right;                                             // 0x0068(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Up;                                                // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0080(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_SGK_VectorTransform) == 0x000010, "Wrong alignment on BP_SGKFunctions_C_SGK_VectorTransform");
static_assert(sizeof(BP_SGKFunctions_C_SGK_VectorTransform) == 0x0001C0, "Wrong size on BP_SGKFunctions_C_SGK_VectorTransform");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, InTransform) == 0x000000, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::InTransform' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, Forward) == 0x000060, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::Forward' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, Right) == 0x000068, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::Right' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, Up) == 0x000070, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::Up' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, __WorldContext) == 0x000078, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, ReturnValue) == 0x000080, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_BreakTransform_Location) == 0x000098, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_GetForwardVector_ReturnValue) == 0x0000E0, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_GetUpVector_ReturnValue) == 0x0000F8, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000110, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000128, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_GetRightVector_ReturnValue) == 0x000158, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000170, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_SGK_VectorTransform, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0001A0, "Member 'BP_SGKFunctions_C_SGK_VectorTransform::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.UpdateAimedSense
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKFunctions_C_UpdateAimedSense final
{
public:
	double                                        MouseSence;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     SaveL;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_540A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ControlSaves_C*                     CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     K2Node_DynamicCast_AsBP_Control_Saves;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_UpdateAimedSense) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_UpdateAimedSense");
static_assert(sizeof(BP_SGKFunctions_C_UpdateAimedSense) == 0x000040, "Wrong size on BP_SGKFunctions_C_UpdateAimedSense");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, MouseSence) == 0x000000, "Member 'BP_SGKFunctions_C_UpdateAimedSense::MouseSence' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_UpdateAimedSense::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, SaveL) == 0x000010, "Member 'BP_SGKFunctions_C_UpdateAimedSense::SaveL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, CallFunc_SaveGameToSlot_ReturnValue) == 0x000018, "Member 'BP_SGKFunctions_C_UpdateAimedSense::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000020, "Member 'BP_SGKFunctions_C_UpdateAimedSense::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'BP_SGKFunctions_C_UpdateAimedSense::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, K2Node_DynamicCast_AsBP_Control_Saves) == 0x000030, "Member 'BP_SGKFunctions_C_UpdateAimedSense::K2Node_DynamicCast_AsBP_Control_Saves' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SGKFunctions_C_UpdateAimedSense::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateAimedSense, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000039, "Member 'BP_SGKFunctions_C_UpdateAimedSense::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function BP_SGKFunctions.BP_SGKFunctions_C.UpdateMouseSense
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKFunctions_C_UpdateMouseSense final
{
public:
	double                                        AimedSense;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     SaveL;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_540B[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_ControlSaves_C*                     CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ControlSaves_C*                     K2Node_DynamicCast_AsBP_Control_Saves;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKFunctions_C_UpdateMouseSense) == 0x000008, "Wrong alignment on BP_SGKFunctions_C_UpdateMouseSense");
static_assert(sizeof(BP_SGKFunctions_C_UpdateMouseSense) == 0x000040, "Wrong size on BP_SGKFunctions_C_UpdateMouseSense");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, AimedSense) == 0x000000, "Member 'BP_SGKFunctions_C_UpdateMouseSense::AimedSense' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, __WorldContext) == 0x000008, "Member 'BP_SGKFunctions_C_UpdateMouseSense::__WorldContext' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, SaveL) == 0x000010, "Member 'BP_SGKFunctions_C_UpdateMouseSense::SaveL' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, CallFunc_SaveGameToSlot_ReturnValue) == 0x000018, "Member 'BP_SGKFunctions_C_UpdateMouseSense::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000020, "Member 'BP_SGKFunctions_C_UpdateMouseSense::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000028, "Member 'BP_SGKFunctions_C_UpdateMouseSense::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, K2Node_DynamicCast_AsBP_Control_Saves) == 0x000030, "Member 'BP_SGKFunctions_C_UpdateMouseSense::K2Node_DynamicCast_AsBP_Control_Saves' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SGKFunctions_C_UpdateMouseSense::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKFunctions_C_UpdateMouseSense, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000039, "Member 'BP_SGKFunctions_C_UpdateMouseSense::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

}

