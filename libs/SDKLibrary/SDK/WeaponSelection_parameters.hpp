#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponSelection

#include "Basic.hpp"

#include "S_ItemDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_StartingWeaponItem_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WeaponSelection.WeaponSelection_C.ExecuteUbergraph_WeaponSelection
// 0x13E0 (0x13E0 - 0x0000)
struct WeaponSelection_C_ExecuteUbergraph_WeaponSelection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	uint8                                         Pad_3CD2[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushOutlineSettings             K2Node_MakeStruct_SlateBrushOutlineSettings;       // 0x0020(0x0040)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0060(0x0014)()
	uint8                                         Pad_3CD3[0xC];                                     // 0x0074(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrushOutlineSettings             K2Node_MakeStruct_SlateBrushOutlineSettings_1;     // 0x0080(0x0040)()
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD4[0xC];                                     // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x00D0(0x00D0)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD5[0xF];                                     // 0x01A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x01B0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD6[0xF];                                     // 0x0A41(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0A50(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD7[0x3];                                     // 0x12E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x12E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWeaponSelection_C*>             CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x12E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWeaponSelection_C*                     CallFunc_Array_Get_Item;                           // 0x12F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD8[0x3];                                     // 0x1305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x130C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD9[0x3];                                     // 0x130D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush_1;                    // 0x1310(0x00D0)()
};
static_assert(alignof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection) == 0x000010, "Wrong alignment on WeaponSelection_C_ExecuteUbergraph_WeaponSelection");
static_assert(sizeof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection) == 0x0013E0, "Wrong size on WeaponSelection_C_ExecuteUbergraph_WeaponSelection");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, EntryPoint) == 0x000000, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateBrushOutlineSettings) == 0x000020, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateBrushOutlineSettings' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateColor_1) == 0x000060, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateBrushOutlineSettings_1) == 0x000080, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateBrushOutlineSettings_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateBrush) == 0x0000D0, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_Event_IsDesignTime) == 0x0001A0, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_GetDataTableRowFromName_OutRow) == 0x0001B0, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000A40, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000A50, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0012E0, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, Temp_int_Loop_Counter_Variable) == 0x0012E4, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0012E8, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_Array_Get_Item) == 0x0012F8, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_Array_Length_ReturnValue) == 0x001300, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_Less_IntInt_ReturnValue) == 0x001304, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_Add_IntInt_ReturnValue) == 0x001308, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00130C, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_ExecuteUbergraph_WeaponSelection, K2Node_MakeStruct_SlateBrush_1) == 0x001310, "Member 'WeaponSelection_C_ExecuteUbergraph_WeaponSelection::K2Node_MakeStruct_SlateBrush_1' has a wrong offset!");

// Function WeaponSelection.WeaponSelection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WeaponSelection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponSelection_C_PreConstruct) == 0x000001, "Wrong alignment on WeaponSelection_C_PreConstruct");
static_assert(sizeof(WeaponSelection_C_PreConstruct) == 0x000001, "Wrong size on WeaponSelection_C_PreConstruct");
static_assert(offsetof(WeaponSelection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WeaponSelection_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WeaponSelection.WeaponSelection_C.UpdateRow
// 0x09F0 (0x09F0 - 0x0000)
struct WeaponSelection_C_UpdateRow final
{
public:
	struct FS_ItemDetails                         Param_Out_Row;                                     // 0x0000(0x0890)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CurrentIndex;                                      // 0x0890(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDA[0x4];                                     // 0x0894(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             Data_Table;                                        // 0x0898(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   Row_Name;                                          // 0x08A0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x08A8(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x08B8(0x0010)(NoDestructor)
	struct FS_StartingWeaponItem                  K2Node_MakeStruct_S_StartingWeaponItem;            // 0x08C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FS_StartingWeaponItem                  K2Node_MakeStruct_S_StartingWeaponItem_1;          // 0x08E0(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_StartingWeaponItem>          K2Node_MakeArray_Array;                            // 0x08F8(0x0010)(ReferenceParm)
	TArray<struct FS_StartingWeaponItem>          K2Node_MakeArray_Array_1;                          // 0x0908(0x0010)(ReferenceParm)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_2;            // 0x0918(0x0010)(NoDestructor)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_3;            // 0x0928(0x0010)(NoDestructor)
	struct FS_CraftingCost                        K2Node_MakeStruct_S_CraftingCost;                  // 0x0938(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        K2Node_MakeStruct_S_CraftingCost_1;                // 0x0950(0x0018)(NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_CraftingCost>                K2Node_MakeArray_Array_2;                          // 0x0968(0x0010)(ReferenceParm)
	TArray<struct FS_CraftingCost>                K2Node_MakeArray_Array_3;                          // 0x0978(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDB[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDC[0x7];                                     // 0x09A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x09A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_1;        // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDD[0x7];                                     // 0x09B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_2;        // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CDE[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_3;        // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponSelection_C_UpdateRow) == 0x000010, "Wrong alignment on WeaponSelection_C_UpdateRow");
static_assert(sizeof(WeaponSelection_C_UpdateRow) == 0x0009F0, "Wrong size on WeaponSelection_C_UpdateRow");
static_assert(offsetof(WeaponSelection_C_UpdateRow, Param_Out_Row) == 0x000000, "Member 'WeaponSelection_C_UpdateRow::Param_Out_Row' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, CurrentIndex) == 0x000890, "Member 'WeaponSelection_C_UpdateRow::CurrentIndex' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, Data_Table) == 0x000898, "Member 'WeaponSelection_C_UpdateRow::Data_Table' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, Row_Name) == 0x0008A0, "Member 'WeaponSelection_C_UpdateRow::Row_Name' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle) == 0x0008A8, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_1) == 0x0008B8, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_S_StartingWeaponItem) == 0x0008C8, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_S_StartingWeaponItem' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_S_StartingWeaponItem_1) == 0x0008E0, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_S_StartingWeaponItem_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeArray_Array) == 0x0008F8, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeArray_Array_1) == 0x000908, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_2) == 0x000918, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_2' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_DataTableRowHandle_3) == 0x000928, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_DataTableRowHandle_3' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_S_CraftingCost) == 0x000938, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_S_CraftingCost' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeStruct_S_CraftingCost_1) == 0x000950, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeStruct_S_CraftingCost_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeArray_Array_2) == 0x000968, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_MakeArray_Array_3) == 0x000978, "Member 'WeaponSelection_C_UpdateRow::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue) == 0x000988, "Member 'WeaponSelection_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_SwitchEnum_CmpSuccess) == 0x000990, "Member 'WeaponSelection_C_UpdateRow::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000998, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_bSuccess) == 0x0009A0, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_1) == 0x0009A8, "Member 'WeaponSelection_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_1) == 0x0009B0, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_bSuccess_1) == 0x0009B8, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_2) == 0x0009C0, "Member 'WeaponSelection_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, CallFunc_GetGameInstance_ReturnValue_3) == 0x0009C8, "Member 'WeaponSelection_C_UpdateRow::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_2) == 0x0009D0, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_2' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_bSuccess_2) == 0x0009D8, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_AsBP_SGKGame_Instance_3) == 0x0009E0, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_AsBP_SGKGame_Instance_3' has a wrong offset!");
static_assert(offsetof(WeaponSelection_C_UpdateRow, K2Node_DynamicCast_bSuccess_3) == 0x0009E8, "Member 'WeaponSelection_C_UpdateRow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

