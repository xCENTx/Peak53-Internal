#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Input_Gamepad

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "S_DrawElement_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Input_Gamepad.WB_Input_Gamepad_C
// 0x0198 (0x0438 - 0x02A0)
class UWB_Input_Gamepad_C final : public UCommonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Input_Gamepad_Entry_C*              A;                                                 // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                A_A;                                               // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                A_B;                                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              B;                                                 // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                B_A;                                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                B_B;                                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ControllerImg;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              Dpad;                                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Dpad_A;                                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Dpad_B;                                            // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              L3;                                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                L3_A;                                              // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                L3_B;                                              // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              LB;                                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LB_A;                                              // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LB_B;                                              // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              LStick;                                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LStick_A;                                          // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LStick_B;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              LT;                                                // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LT_A;                                              // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                LT_B;                                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_27;                                        // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              RB;                                                // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RB_A;                                              // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RB_B;                                              // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              RStick;                                            // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RStick_A;                                          // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RStick_B;                                          // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              RT;                                                // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RT_A;                                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                RT_B;                                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              Select;                                            // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Select_A;                                          // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Select_B;                                          // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              Start;                                             // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Start_A;                                           // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Start_B;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              X;                                                 // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                X_A;                                               // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                X_B;                                               // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Input_Gamepad_Entry_C*              Y;                                                 // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Y_A;                                               // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Y_B;                                               // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FS_DrawElement>                 Elements;                                          // 0x0410(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           DrawLineTint;                                      // 0x0420(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DrawLineThickness;                                 // 0x0430(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WB_Input_Gamepad(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

	void OnPaint(struct FPaintContext& Context) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Input_Gamepad_C">();
	}
	static class UWB_Input_Gamepad_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Input_Gamepad_C>();
	}
};
static_assert(alignof(UWB_Input_Gamepad_C) == 0x000008, "Wrong alignment on UWB_Input_Gamepad_C");
static_assert(sizeof(UWB_Input_Gamepad_C) == 0x000438, "Wrong size on UWB_Input_Gamepad_C");
static_assert(offsetof(UWB_Input_Gamepad_C, UberGraphFrame) == 0x0002A0, "Member 'UWB_Input_Gamepad_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, A) == 0x0002A8, "Member 'UWB_Input_Gamepad_C::A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, A_A) == 0x0002B0, "Member 'UWB_Input_Gamepad_C::A_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, A_B) == 0x0002B8, "Member 'UWB_Input_Gamepad_C::A_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, B) == 0x0002C0, "Member 'UWB_Input_Gamepad_C::B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, B_A) == 0x0002C8, "Member 'UWB_Input_Gamepad_C::B_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, B_B) == 0x0002D0, "Member 'UWB_Input_Gamepad_C::B_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, CanvasPanel_0) == 0x0002D8, "Member 'UWB_Input_Gamepad_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, ControllerImg) == 0x0002E0, "Member 'UWB_Input_Gamepad_C::ControllerImg' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Dpad) == 0x0002E8, "Member 'UWB_Input_Gamepad_C::Dpad' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Dpad_A) == 0x0002F0, "Member 'UWB_Input_Gamepad_C::Dpad_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Dpad_B) == 0x0002F8, "Member 'UWB_Input_Gamepad_C::Dpad_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, L3) == 0x000300, "Member 'UWB_Input_Gamepad_C::L3' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, L3_A) == 0x000308, "Member 'UWB_Input_Gamepad_C::L3_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, L3_B) == 0x000310, "Member 'UWB_Input_Gamepad_C::L3_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LB) == 0x000318, "Member 'UWB_Input_Gamepad_C::LB' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LB_A) == 0x000320, "Member 'UWB_Input_Gamepad_C::LB_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LB_B) == 0x000328, "Member 'UWB_Input_Gamepad_C::LB_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LStick) == 0x000330, "Member 'UWB_Input_Gamepad_C::LStick' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LStick_A) == 0x000338, "Member 'UWB_Input_Gamepad_C::LStick_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LStick_B) == 0x000340, "Member 'UWB_Input_Gamepad_C::LStick_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LT) == 0x000348, "Member 'UWB_Input_Gamepad_C::LT' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LT_A) == 0x000350, "Member 'UWB_Input_Gamepad_C::LT_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, LT_B) == 0x000358, "Member 'UWB_Input_Gamepad_C::LT_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Overlay_27) == 0x000360, "Member 'UWB_Input_Gamepad_C::Overlay_27' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RB) == 0x000368, "Member 'UWB_Input_Gamepad_C::RB' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RB_A) == 0x000370, "Member 'UWB_Input_Gamepad_C::RB_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RB_B) == 0x000378, "Member 'UWB_Input_Gamepad_C::RB_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RStick) == 0x000380, "Member 'UWB_Input_Gamepad_C::RStick' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RStick_A) == 0x000388, "Member 'UWB_Input_Gamepad_C::RStick_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RStick_B) == 0x000390, "Member 'UWB_Input_Gamepad_C::RStick_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RT) == 0x000398, "Member 'UWB_Input_Gamepad_C::RT' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RT_A) == 0x0003A0, "Member 'UWB_Input_Gamepad_C::RT_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, RT_B) == 0x0003A8, "Member 'UWB_Input_Gamepad_C::RT_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Select) == 0x0003B0, "Member 'UWB_Input_Gamepad_C::Select' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Select_A) == 0x0003B8, "Member 'UWB_Input_Gamepad_C::Select_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Select_B) == 0x0003C0, "Member 'UWB_Input_Gamepad_C::Select_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Start) == 0x0003C8, "Member 'UWB_Input_Gamepad_C::Start' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Start_A) == 0x0003D0, "Member 'UWB_Input_Gamepad_C::Start_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Start_B) == 0x0003D8, "Member 'UWB_Input_Gamepad_C::Start_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, X) == 0x0003E0, "Member 'UWB_Input_Gamepad_C::X' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, X_A) == 0x0003E8, "Member 'UWB_Input_Gamepad_C::X_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, X_B) == 0x0003F0, "Member 'UWB_Input_Gamepad_C::X_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Y) == 0x0003F8, "Member 'UWB_Input_Gamepad_C::Y' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Y_A) == 0x000400, "Member 'UWB_Input_Gamepad_C::Y_A' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Y_B) == 0x000408, "Member 'UWB_Input_Gamepad_C::Y_B' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, Elements) == 0x000410, "Member 'UWB_Input_Gamepad_C::Elements' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, DrawLineTint) == 0x000420, "Member 'UWB_Input_Gamepad_C::DrawLineTint' has a wrong offset!");
static_assert(offsetof(UWB_Input_Gamepad_C, DrawLineThickness) == 0x000430, "Member 'UWB_Input_Gamepad_C::DrawLineThickness' has a wrong offset!");

}

