#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FlagItem

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FlagItem.FlagItem_C.BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D0[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'FlagItem_C_BndEvt__BombItem_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function FlagItem.FlagItem_C.ExecuteUbergraph_FlagItem
// 0x0160 (0x0160 - 0x0000)
struct FlagItem_C_ExecuteUbergraph_FlagItem final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D2[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D3[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D4[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46D5[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FlagItem_C_ExecuteUbergraph_FlagItem) == 0x000008, "Wrong alignment on FlagItem_C_ExecuteUbergraph_FlagItem");
static_assert(sizeof(FlagItem_C_ExecuteUbergraph_FlagItem) == 0x000160, "Wrong size on FlagItem_C_ExecuteUbergraph_FlagItem");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, EntryPoint) == 0x000000, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::EntryPoint' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000110, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, CallFunc_GetController_ReturnValue) == 0x000120, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_AsBP_SGKController) == 0x000128, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000138, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, CallFunc_GetGameState_ReturnValue) == 0x000148, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_AsPeak_53Game_State) == 0x000150, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(FlagItem_C_ExecuteUbergraph_FlagItem, K2Node_DynamicCast_bSuccess_3) == 0x000158, "Member 'FlagItem_C_ExecuteUbergraph_FlagItem::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

}

