#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WeaponWidget.WeaponWidget_C.ChangeWeaponIcon
// 0x0010 (0x0010 - 0x0000)
struct WeaponWidget_C_ChangeWeaponIcon final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bullets;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponWidget_C_ChangeWeaponIcon) == 0x000008, "Wrong alignment on WeaponWidget_C_ChangeWeaponIcon");
static_assert(sizeof(WeaponWidget_C_ChangeWeaponIcon) == 0x000010, "Wrong size on WeaponWidget_C_ChangeWeaponIcon");
static_assert(offsetof(WeaponWidget_C_ChangeWeaponIcon, Texture) == 0x000000, "Member 'WeaponWidget_C_ChangeWeaponIcon::Texture' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ChangeWeaponIcon, Bullets) == 0x000008, "Member 'WeaponWidget_C_ChangeWeaponIcon::Bullets' has a wrong offset!");

// Function WeaponWidget.WeaponWidget_C.ExecuteUbergraph_WeaponWidget
// 0x0088 (0x0088 - 0x0000)
struct WeaponWidget_C_ExecuteUbergraph_WeaponWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Texture;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Bullets;                        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Current;                        // 0x0018(0x0018)()
	class FText                                   K2Node_CustomEvent_Max;                            // 0x0030(0x0018)()
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_Visibility;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA3[0x5];                                     // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Mode;                           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CA4[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget) == 0x000008, "Wrong alignment on WeaponWidget_C_ExecuteUbergraph_WeaponWidget");
static_assert(sizeof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget) == 0x000088, "Wrong size on WeaponWidget_C_ExecuteUbergraph_WeaponWidget");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, EntryPoint) == 0x000000, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Texture) == 0x000008, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Texture' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Bullets) == 0x000010, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Bullets' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Current) == 0x000018, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Current' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Max) == 0x000030, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Max' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, CallFunc_GetObjectName_ReturnValue) == 0x000048, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Visibility) == 0x000058, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Visibility' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, CallFunc_IsEmpty_ReturnValue) == 0x000059, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_SwitchEnum_CmpSuccess) == 0x00005A, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_CustomEvent_Mode) == 0x000060, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_CustomEvent_Mode' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, CallFunc_PlayAnimation_ReturnValue) == 0x000070, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, K2Node_SwitchString_CmpSuccess) == 0x000078, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_ExecuteUbergraph_WeaponWidget, CallFunc_PlayAnimation_ReturnValue_1) == 0x000080, "Member 'WeaponWidget_C_ExecuteUbergraph_WeaponWidget::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WeaponWidget.WeaponWidget_C.FadeAnimation
// 0x0001 (0x0001 - 0x0000)
struct WeaponWidget_C_FadeAnimation final
{
public:
	ESlateVisibility                              Param_Visibility;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponWidget_C_FadeAnimation) == 0x000001, "Wrong alignment on WeaponWidget_C_FadeAnimation");
static_assert(sizeof(WeaponWidget_C_FadeAnimation) == 0x000001, "Wrong size on WeaponWidget_C_FadeAnimation");
static_assert(offsetof(WeaponWidget_C_FadeAnimation, Param_Visibility) == 0x000000, "Member 'WeaponWidget_C_FadeAnimation::Param_Visibility' has a wrong offset!");

// Function WeaponWidget.WeaponWidget_C.SetWeaponAmmoCounter
// 0x0030 (0x0030 - 0x0000)
struct WeaponWidget_C_SetWeaponAmmoCounter final
{
public:
	class FText                                   Current;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   Max;                                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WeaponWidget_C_SetWeaponAmmoCounter) == 0x000008, "Wrong alignment on WeaponWidget_C_SetWeaponAmmoCounter");
static_assert(sizeof(WeaponWidget_C_SetWeaponAmmoCounter) == 0x000030, "Wrong size on WeaponWidget_C_SetWeaponAmmoCounter");
static_assert(offsetof(WeaponWidget_C_SetWeaponAmmoCounter, Current) == 0x000000, "Member 'WeaponWidget_C_SetWeaponAmmoCounter::Current' has a wrong offset!");
static_assert(offsetof(WeaponWidget_C_SetWeaponAmmoCounter, Max) == 0x000018, "Member 'WeaponWidget_C_SetWeaponAmmoCounter::Max' has a wrong offset!");

// Function WeaponWidget.WeaponWidget_C.SetWeaponMode
// 0x0010 (0x0010 - 0x0000)
struct WeaponWidget_C_SetWeaponMode final
{
public:
	class FString                                 Mode;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponWidget_C_SetWeaponMode) == 0x000008, "Wrong alignment on WeaponWidget_C_SetWeaponMode");
static_assert(sizeof(WeaponWidget_C_SetWeaponMode) == 0x000010, "Wrong size on WeaponWidget_C_SetWeaponMode");
static_assert(offsetof(WeaponWidget_C_SetWeaponMode, Mode) == 0x000000, "Member 'WeaponWidget_C_SetWeaponMode::Mode' has a wrong offset!");

}

