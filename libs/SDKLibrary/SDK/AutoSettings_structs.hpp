#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AutoSettings

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK
{

// ScriptStruct AutoSettings.AutoSettingData
// 0x0038 (0x0038 - 0x0000)
struct FAutoSettingData final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  Tags;                                              // 0x0018(0x0020)(Edit, BlueprintVisible, Transient, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAutoSettingData) == 0x000008, "Wrong alignment on FAutoSettingData");
static_assert(sizeof(FAutoSettingData) == 0x000038, "Wrong size on FAutoSettingData");
static_assert(offsetof(FAutoSettingData, Key) == 0x000000, "Member 'FAutoSettingData::Key' has a wrong offset!");
static_assert(offsetof(FAutoSettingData, Value) == 0x000008, "Member 'FAutoSettingData::Value' has a wrong offset!");
static_assert(offsetof(FAutoSettingData, Tags) == 0x000018, "Member 'FAutoSettingData::Tags' has a wrong offset!");

// ScriptStruct AutoSettings.SettingOption
// 0x0028 (0x0028 - 0x0000)
struct FSettingOption final
{
public:
	class FText                                   Label;                                             // 0x0000(0x0018)(Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class FString                                 Value;                                             // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSettingOption) == 0x000008, "Wrong alignment on FSettingOption");
static_assert(sizeof(FSettingOption) == 0x000028, "Wrong size on FSettingOption");
static_assert(offsetof(FSettingOption, Label) == 0x000000, "Member 'FSettingOption::Label' has a wrong offset!");
static_assert(offsetof(FSettingOption, Value) == 0x000018, "Member 'FSettingOption::Value' has a wrong offset!");

}

