#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WoodChest

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterStorageBuildPart_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WoodChest.BP_WoodChest_C
// 0x0020 (0x03B0 - 0x0390)
class ABP_WoodChest_C final : public ABP_MasterStorageBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_WoodChest_C;                     // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_GridComponent_C*                    BP_GridComponent;                                  // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_WoodChest(int32 EntryPoint);
	bool SGK_EndInteraction(class UBP_PlayerInventory_C* PlayerInventory);
	void SGK_TurnedOnEffect(bool TurnedOn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WoodChest_C">();
	}
	static class ABP_WoodChest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WoodChest_C>();
	}
};
static_assert(alignof(ABP_WoodChest_C) == 0x000008, "Wrong alignment on ABP_WoodChest_C");
static_assert(sizeof(ABP_WoodChest_C) == 0x0003B0, "Wrong size on ABP_WoodChest_C");
static_assert(offsetof(ABP_WoodChest_C, UberGraphFrame_BP_WoodChest_C) == 0x000390, "Member 'ABP_WoodChest_C::UberGraphFrame_BP_WoodChest_C' has a wrong offset!");
static_assert(offsetof(ABP_WoodChest_C, BP_GridComponent) == 0x000398, "Member 'ABP_WoodChest_C::BP_GridComponent' has a wrong offset!");
static_assert(offsetof(ABP_WoodChest_C, BP_GroundCheckComponent) == 0x0003A0, "Member 'ABP_WoodChest_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_WoodChest_C, BuildCollision) == 0x0003A8, "Member 'ABP_WoodChest_C::BuildCollision' has a wrong offset!");

}

