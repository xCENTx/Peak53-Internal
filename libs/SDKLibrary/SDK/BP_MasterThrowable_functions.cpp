#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterThrowable

#include "Basic.hpp"

#include "BP_MasterThrowable_classes.hpp"
#include "BP_MasterThrowable_parameters.hpp"


namespace SDK
{

// Function BP_MasterThrowable.BP_MasterThrowable_C.AnimNotify
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Notify                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::AnimNotify(class FName Notify)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "AnimNotify");

	Params::BP_MasterThrowable_C_AnimNotify Parms{};

	Parms.Notify = Notify;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.CancelThrow
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::CancelThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "CancelThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.CharacterFalling
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::CharacterFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "CharacterFalling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.CharacterSprinting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sprinting                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::CharacterSprinting(bool Sprinting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "CharacterSprinting");

	Params::BP_MasterThrowable_C_CharacterSprinting Parms{};

	Parms.Sprinting = Sprinting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.Clear All Components
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::Clear_All_Components()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "Clear All Components");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ClearPreviousArc
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::ClearPreviousArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ClearPreviousArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.DetermineAnimationSelection
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::DetermineAnimationSelection()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "DetermineAnimationSelection");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.Do Predictable Path
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartPos                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVelocity                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<EObjectTypeQuery>                ObjectTypes                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>                   ActorsToIgnore                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// double                                  SimFrequency                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  MaxSimTime                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Hit_Mesh_Material                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UMaterialInterface*               Prediction_Mesh_Material                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::Do_Predictable_Path(const struct FVector& StartPos, const struct FVector& LaunchVelocity, const TArray<EObjectTypeQuery>& ObjectTypes, const TArray<class AActor*>& ActorsToIgnore, double SimFrequency, double MaxSimTime, class UMaterialInterface* Hit_Mesh_Material, class UMaterialInterface* Prediction_Mesh_Material)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "Do Predictable Path");

	Params::BP_MasterThrowable_C_Do_Predictable_Path Parms{};

	Parms.StartPos = std::move(StartPos);
	Parms.LaunchVelocity = std::move(LaunchVelocity);
	Parms.ObjectTypes = std::move(ObjectTypes);
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.SimFrequency = SimFrequency;
	Parms.MaxSimTime = MaxSimTime;
	Parms.Hit_Mesh_Material = Hit_Mesh_Material;
	Parms.Prediction_Mesh_Material = Prediction_Mesh_Material;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ExecuteUbergraph_BP_MasterThrowable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::ExecuteUbergraph_BP_MasterThrowable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ExecuteUbergraph_BP_MasterThrowable");

	Params::BP_MasterThrowable_C_ExecuteUbergraph_BP_MasterThrowable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.InitializeThrowProjectile
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::InitializeThrowProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "InitializeThrowProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.JustCharge
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::JustCharge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "JustCharge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.JustThrow
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::JustThrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "JustThrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.PlayThrowAnim
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::PlayThrowAnim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "PlayThrowAnim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterThrowable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ReceiveTick");

	Params::BP_MasterThrowable_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.SGK ClientSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::SGK_ClientSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "SGK ClientSecondaryAction");

	Params::BP_MasterThrowable_C_SGK_ClientSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.SGK HoldableMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::SGK_HoldableMesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "SGK HoldableMesh");

	Params::BP_MasterThrowable_C_SGK_HoldableMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.SGK NewHeld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Held                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::SGK_NewHeld(bool Held)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "SGK NewHeld");

	Params::BP_MasterThrowable_C_SGK_NewHeld Parms{};

	Parms.Held = Held;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.SGK ServerPrimaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::SGK_ServerPrimaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "SGK ServerPrimaryAction");

	Params::BP_MasterThrowable_C_SGK_ServerPrimaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.SGK ServerSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::SGK_ServerSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "SGK ServerSecondaryAction");

	Params::BP_MasterThrowable_C_SGK_ServerSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.StartGrenadeCharging
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::StartGrenadeCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "StartGrenadeCharging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.StartThrowArc
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::StartThrowArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "StartThrowArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.StopGrenadeCharging
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::StopGrenadeCharging()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "StopGrenadeCharging");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.StopThrowArc
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::StopThrowArc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "StopThrowArc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ThrowBlockCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllowThrow                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::ThrowBlockCheck(bool* AllowThrow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ThrowBlockCheck");

	Params::BP_MasterThrowable_C_ThrowBlockCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllowThrow != nullptr)
		*AllowThrow = Parms.AllowThrow;
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.ThrowGrenade
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterThrowable_C::ThrowGrenade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "ThrowGrenade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TL_DrawTrajectory__FinishedFunc
// (BlueprintEvent)

void ABP_MasterThrowable_C::TL_DrawTrajectory__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TL_DrawTrajectory__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TL_DrawTrajectory__RefreshLine__EventFunc
// (BlueprintEvent)

void ABP_MasterThrowable_C::TL_DrawTrajectory__RefreshLine__EventFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TL_DrawTrajectory__RefreshLine__EventFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TL_DrawTrajectory__UpdateFunc
// (BlueprintEvent)

void ABP_MasterThrowable_C::TL_DrawTrajectory__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TL_DrawTrajectory__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TL_GrenadeCharge__FinishedFunc
// (BlueprintEvent)

void ABP_MasterThrowable_C::TL_GrenadeCharge__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TL_GrenadeCharge__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TL_GrenadeCharge__UpdateFunc
// (BlueprintEvent)

void ABP_MasterThrowable_C::TL_GrenadeCharge__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TL_GrenadeCharge__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterThrowable.BP_MasterThrowable_C.TraceLineHeight
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Alpha                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterThrowable_C::TraceLineHeight(double Alpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterThrowable_C", "TraceLineHeight");

	Params::BP_MasterThrowable_C_TraceLineHeight Parms{};

	Parms.Alpha = Alpha;

	UObject::ProcessEvent(Func, &Parms);
}

}

