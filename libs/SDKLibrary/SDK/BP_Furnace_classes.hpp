#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Furnace

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterCookingBuildPart_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Furnace.BP_Furnace_C
// 0x0020 (0x03B0 - 0x0390)
class ABP_Furnace_C final : public ABP_MasterCookingBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Furnace_C;                       // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAudioComponent*                        Audio;                                             // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Furnace(int32 EntryPoint);
	void MulticastTurnedOnEffect(bool TurnedOn);
	void ReceiveBeginPlay();
	void SGK_TurnedOnEffect(bool TurnedOn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Furnace_C">();
	}
	static class ABP_Furnace_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Furnace_C>();
	}
};
static_assert(alignof(ABP_Furnace_C) == 0x000008, "Wrong alignment on ABP_Furnace_C");
static_assert(sizeof(ABP_Furnace_C) == 0x0003B0, "Wrong size on ABP_Furnace_C");
static_assert(offsetof(ABP_Furnace_C, UberGraphFrame_BP_Furnace_C) == 0x000390, "Member 'ABP_Furnace_C::UberGraphFrame_BP_Furnace_C' has a wrong offset!");
static_assert(offsetof(ABP_Furnace_C, Audio) == 0x000398, "Member 'ABP_Furnace_C::Audio' has a wrong offset!");
static_assert(offsetof(ABP_Furnace_C, BP_GroundCheckComponent) == 0x0003A0, "Member 'ABP_Furnace_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_Furnace_C, Box) == 0x0003A8, "Member 'ABP_Furnace_C::Box' has a wrong offset!");

}

