#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AmmoCounter

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "E_FireModes_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_ItemDetails_structs.hpp"


namespace SDK::Params
{

// Function BP_AmmoCounter.BP_AmmoCounter_C.ExecuteUbergraph_BP_AmmoCounter
// 0x0020 (0x0020 - 0x0000)
struct BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B60[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B61[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter) == 0x000008, "Wrong alignment on BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter");
static_assert(sizeof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter) == 0x000020, "Wrong size on BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter");
static_assert(offsetof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter, EntryPoint) == 0x000000, "Member 'BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_AmmoCounter_C_ExecuteUbergraph_BP_AmmoCounter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_AmmoCounter.BP_AmmoCounter_C.GetVisibility_0
// 0x0BB0 (0x0BB0 - 0x0000)
struct BP_AmmoCounter_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B62[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterHoldable_C*                   HoldableL;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B63[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B64[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_FireModes                                   Temp_byte_Variable;                                // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B65[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0040(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B66[0xF];                                     // 0x0071(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0080(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B67[0x3];                                     // 0x0911(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TotalAmmo_ReturnValue;                    // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0918(0x0018)()
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0930(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSlateBrush                            Temp_struct_Variable;                              // 0x0940(0x00D0)()
	struct FSlateBrush                            K2Node_Select_Default;                             // 0x0A10(0x00D0)()
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0AE0(0x0010)(NoDestructor)
	int32                                         CallFunc_TotalMaxAmmo_MaxAmmo;                     // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B68[0x4];                                     // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0AF8(0x0018)()
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0B10(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0B40(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_TotalItemAmount_TotalAmount;              // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B69[0x4];                                     // 0x0B54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0B58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x0B68(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0B80(0x0018)()
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmmoCounter_C_GetVisibility_0) == 0x000010, "Wrong alignment on BP_AmmoCounter_C_GetVisibility_0");
static_assert(sizeof(BP_AmmoCounter_C_GetVisibility_0) == 0x000BB0, "Wrong size on BP_AmmoCounter_C_GetVisibility_0");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_AmmoCounter_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, HoldableL) == 0x000008, "Member 'BP_AmmoCounter_C_GetVisibility_0::HoldableL' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_2) == 0x000012, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_ClassIsChildOf_ReturnValue) == 0x000028, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_DynamicCast_AsBP_SGKController) == 0x000030, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, Temp_byte_Variable) == 0x000039, "Member 'BP_AmmoCounter_C_GetVisibility_0::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_MakeStruct_S_InvItem) == 0x000040, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_SGK_ItemDetails_ItemFound) == 0x000070, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000080, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_IsValid_ReturnValue_3) == 0x000910, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_TotalAmmo_ReturnValue) == 0x000914, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_TotalAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000918, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000930, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, Temp_struct_Variable) == 0x000940, "Member 'BP_AmmoCounter_C_GetVisibility_0::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_Select_Default) == 0x000A10, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Array_Get_Item) == 0x000AE0, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_TotalMaxAmmo_MaxAmmo) == 0x000AF0, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_TotalMaxAmmo_MaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000AF8, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_MakeStruct_S_InvItem_1) == 0x000B10, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Conv_TextToString_ReturnValue) == 0x000B40, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_TotalItemAmount_TotalAmount) == 0x000B50, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_TotalItemAmount_TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000B58, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Conv_IntToText_ReturnValue_2) == 0x000B68, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000B80, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000B98, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, K2Node_DynamicCast_bSuccess_1) == 0x000BA0, "Member 'BP_AmmoCounter_C_GetVisibility_0::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AmmoCounter_C_GetVisibility_0, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000BA1, "Member 'BP_AmmoCounter_C_GetVisibility_0::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_AmmoCounter.BP_AmmoCounter_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_AmmoCounter_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AmmoCounter_C_PreConstruct) == 0x000001, "Wrong alignment on BP_AmmoCounter_C_PreConstruct");
static_assert(sizeof(BP_AmmoCounter_C_PreConstruct) == 0x000001, "Wrong size on BP_AmmoCounter_C_PreConstruct");
static_assert(offsetof(BP_AmmoCounter_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_AmmoCounter_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

