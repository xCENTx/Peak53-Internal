#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_FX_Highlight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "EGlobalColors_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_FX_Highlight.WB_FX_Highlight_C
// 0x0040 (0x02B8 - 0x0278)
class UWB_FX_Highlight_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Fade;                                              // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Highlight_Img;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OV_Content;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	double                                        Playback_Speed;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UseGlobalColor;                                    // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EGlobalColors                                 GlobalColorType;                                   // 0x02A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3A62[0x2];                                     // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x02A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         Opacity;                                           // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_WB_FX_Highlight(int32 EntryPoint);
	void Finished();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_FX_Highlight_C">();
	}
	static class UWB_FX_Highlight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_FX_Highlight_C>();
	}
};
static_assert(alignof(UWB_FX_Highlight_C) == 0x000008, "Wrong alignment on UWB_FX_Highlight_C");
static_assert(sizeof(UWB_FX_Highlight_C) == 0x0002B8, "Wrong size on UWB_FX_Highlight_C");
static_assert(offsetof(UWB_FX_Highlight_C, UberGraphFrame) == 0x000278, "Member 'UWB_FX_Highlight_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, Fade) == 0x000280, "Member 'UWB_FX_Highlight_C::Fade' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, Highlight_Img) == 0x000288, "Member 'UWB_FX_Highlight_C::Highlight_Img' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, OV_Content) == 0x000290, "Member 'UWB_FX_Highlight_C::OV_Content' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, Playback_Speed) == 0x000298, "Member 'UWB_FX_Highlight_C::Playback_Speed' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, UseGlobalColor) == 0x0002A0, "Member 'UWB_FX_Highlight_C::UseGlobalColor' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, GlobalColorType) == 0x0002A1, "Member 'UWB_FX_Highlight_C::GlobalColorType' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, Color) == 0x0002A4, "Member 'UWB_FX_Highlight_C::Color' has a wrong offset!");
static_assert(offsetof(UWB_FX_Highlight_C, Opacity) == 0x0002B4, "Member 'UWB_FX_Highlight_C::Opacity' has a wrong offset!");

}

