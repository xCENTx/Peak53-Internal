#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Landmine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterBuildPart_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Landmine.BP_Landmine_C
// 0x0060 (0x03E0 - 0x0380)
class ABP_Landmine_C final : public ABP_MasterBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Landmine_C;                      // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       DetonateOther;                                     // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Trigger;                                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        SpikeDamage;                                       // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Damage_Causer;                                     // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Damaged_Actor;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ProperOwner;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Landmine_Explosion_Sound_Cue;                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Other_Actor;                                       // 0x03D0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ActorRef(class ABP_MasterBuildPart_C** BuildPartRef);
	void BndEvt__BP_Landmine_Trigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void DestroyDetonate();
	void Detonate(class UObject* Object);
	void ExecuteUbergraph_BP_Landmine(int32 EntryPoint);
	void Landmine_Explode_Sound_MC(class USoundBase* Sound);
	void LandmineEffects();
	void MCSetOwner();
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ReceiveBeginPlay();
	void ResetDamage();
	void ServerSetOwner();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Landmine_C">();
	}
	static class ABP_Landmine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Landmine_C>();
	}
};
static_assert(alignof(ABP_Landmine_C) == 0x000008, "Wrong alignment on ABP_Landmine_C");
static_assert(sizeof(ABP_Landmine_C) == 0x0003E0, "Wrong size on ABP_Landmine_C");
static_assert(offsetof(ABP_Landmine_C, UberGraphFrame_BP_Landmine_C) == 0x000380, "Member 'ABP_Landmine_C::UberGraphFrame_BP_Landmine_C' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, DetonateOther) == 0x000388, "Member 'ABP_Landmine_C::DetonateOther' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Trigger) == 0x000390, "Member 'ABP_Landmine_C::Trigger' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, BuildCollision) == 0x000398, "Member 'ABP_Landmine_C::BuildCollision' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, BP_GroundCheckComponent) == 0x0003A0, "Member 'ABP_Landmine_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, SpikeDamage) == 0x0003A8, "Member 'ABP_Landmine_C::SpikeDamage' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Damage_Causer) == 0x0003B0, "Member 'ABP_Landmine_C::Damage_Causer' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Damaged_Actor) == 0x0003B8, "Member 'ABP_Landmine_C::Damaged_Actor' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, ProperOwner) == 0x0003C0, "Member 'ABP_Landmine_C::ProperOwner' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Landmine_Explosion_Sound_Cue) == 0x0003C8, "Member 'ABP_Landmine_C::Landmine_Explosion_Sound_Cue' has a wrong offset!");
static_assert(offsetof(ABP_Landmine_C, Other_Actor) == 0x0003D0, "Member 'ABP_Landmine_C::Other_Actor' has a wrong offset!");

}

