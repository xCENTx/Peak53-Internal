#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Input_Gamepad

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_DrawElement_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Input_Gamepad.WB_Input_Gamepad_C.ExecuteUbergraph_WB_Input_Gamepad
// 0x0100 (0x0100 - 0x0000)
struct WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A91[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement;                   // 0x0008(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A92[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_1;                 // 0x0020(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_2;                 // 0x0030(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_3;                 // 0x0040(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_4;                 // 0x0050(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_5;                 // 0x0060(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_6;                 // 0x0070(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_7;                 // 0x0080(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_8;                 // 0x0090(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_9;                 // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_10;                // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_11;                // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_12;                // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DrawElement                         K2Node_MakeStruct_S_DrawElement_13;                // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_DrawElement>                 K2Node_MakeArray_Array;                            // 0x00F0(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad) == 0x000008, "Wrong alignment on WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad");
static_assert(sizeof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad) == 0x000100, "Wrong size on WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, EntryPoint) == 0x000000, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement) == 0x000008, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_1) == 0x000020, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_2) == 0x000030, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_2' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_3) == 0x000040, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_3' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_4) == 0x000050, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_4' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_5) == 0x000060, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_5' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_6) == 0x000070, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_6' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_7) == 0x000080, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_7' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_8) == 0x000090, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_8' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_9) == 0x0000A0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_9' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_10) == 0x0000B0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_10' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_11) == 0x0000C0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_11' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_12) == 0x0000D0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_12' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeStruct_S_DrawElement_13) == 0x0000E0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeStruct_S_DrawElement_13' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad, K2Node_MakeArray_Array) == 0x0000F0, "Member 'WB_Input_Gamepad_C_ExecuteUbergraph_WB_Input_Gamepad::K2Node_MakeArray_Array' has a wrong offset!");

// Function WB_Input_Gamepad.WB_Input_Gamepad_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Input_Gamepad_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Input_Gamepad_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Input_Gamepad_C_PreConstruct");
static_assert(sizeof(WB_Input_Gamepad_C_PreConstruct) == 0x000001, "Wrong size on WB_Input_Gamepad_C_PreConstruct");
static_assert(offsetof(WB_Input_Gamepad_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Input_Gamepad_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_Input_Gamepad.WB_Input_Gamepad_C.OnPaint
// 0x0140 (0x0140 - 0x0000)
struct WB_Input_Gamepad_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FPaintContext                          InContext;                                         // 0x0030(0x0030)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_DrawElement                         CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A93[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue;            // 0x0080(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalTopLeft_ReturnValue;              // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              CallFunc_GetCachedGeometry_ReturnValue_1;          // 0x00D0(0x0040)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A94[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalTopLeft_ReturnValue_1;            // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      K2Node_MakeArray_Array;                            // 0x0128(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Input_Gamepad_C_OnPaint) == 0x000008, "Wrong alignment on WB_Input_Gamepad_C_OnPaint");
static_assert(sizeof(WB_Input_Gamepad_C_OnPaint) == 0x000140, "Wrong size on WB_Input_Gamepad_C_OnPaint");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, Context) == 0x000000, "Member 'WB_Input_Gamepad_C_OnPaint::Context' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, InContext) == 0x000030, "Member 'WB_Input_Gamepad_C_OnPaint::InContext' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, Temp_int_Array_Index_Variable) == 0x000060, "Member 'WB_Input_Gamepad_C_OnPaint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WB_Input_Gamepad_C_OnPaint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_Array_Get_Item) == 0x000068, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_GetCachedGeometry_ReturnValue) == 0x000080, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_GetCachedGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_GetLocalTopLeft_ReturnValue) == 0x0000C0, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_GetLocalTopLeft_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_GetCachedGeometry_ReturnValue_1) == 0x0000D0, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_GetCachedGeometry_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_GetLocalTopLeft_ReturnValue_1) == 0x000118, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_GetLocalTopLeft_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, K2Node_MakeArray_Array) == 0x000128, "Member 'WB_Input_Gamepad_C_OnPaint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_C_OnPaint, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000138, "Member 'WB_Input_Gamepad_C_OnPaint::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

}

