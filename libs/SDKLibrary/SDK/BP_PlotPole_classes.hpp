#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlotPole

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterBuildPart_classes.hpp"
#include "E_WorldActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PlotPole.BP_PlotPole_C
// 0x0060 (0x03E0 - 0x0380)
class ABP_PlotPole_C final : public ABP_MasterBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_PlotPole_C;                      // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       OwnershipSphere;                                   // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision1;                                   // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FText                                   AddOwnerNotificationMessage;                       // 0x03A8(0x0018)(Edit, BlueprintVisible)
	class FText                                   ClearOwnersNotificationMessage;                    // 0x03C0(0x0018)(Edit, BlueprintVisible)
	bool                                          UseMaxOwners;                                      // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B6A[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxOwners;                                         // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PlotPole(int32 EntryPoint);
	bool HasMaxOwners();
	void SGK_AllowInteraction(bool* AllowInteraction);
	void SGK_BuildPartPlaced(class UBP_PlayerInventory_C* PlayerInventory, bool FromSaveGame);
	bool SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action);
	void SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions);
	void UpdateBuildPartsOwners(bool Clear);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PlotPole_C">();
	}
	static class ABP_PlotPole_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PlotPole_C>();
	}
};
static_assert(alignof(ABP_PlotPole_C) == 0x000008, "Wrong alignment on ABP_PlotPole_C");
static_assert(sizeof(ABP_PlotPole_C) == 0x0003E0, "Wrong size on ABP_PlotPole_C");
static_assert(offsetof(ABP_PlotPole_C, UberGraphFrame_BP_PlotPole_C) == 0x000380, "Member 'ABP_PlotPole_C::UberGraphFrame_BP_PlotPole_C' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, OwnershipSphere) == 0x000388, "Member 'ABP_PlotPole_C::OwnershipSphere' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, BP_GroundCheckComponent) == 0x000390, "Member 'ABP_PlotPole_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, BuildCollision1) == 0x000398, "Member 'ABP_PlotPole_C::BuildCollision1' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, BuildCollision) == 0x0003A0, "Member 'ABP_PlotPole_C::BuildCollision' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, AddOwnerNotificationMessage) == 0x0003A8, "Member 'ABP_PlotPole_C::AddOwnerNotificationMessage' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, ClearOwnersNotificationMessage) == 0x0003C0, "Member 'ABP_PlotPole_C::ClearOwnersNotificationMessage' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, UseMaxOwners) == 0x0003D8, "Member 'ABP_PlotPole_C::UseMaxOwners' has a wrong offset!");
static_assert(offsetof(ABP_PlotPole_C, MaxOwners) == 0x0003DC, "Member 'ABP_PlotPole_C::MaxOwners' has a wrong offset!");

}

