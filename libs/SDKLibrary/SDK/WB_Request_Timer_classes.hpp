#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Request_Timer

#include "Basic.hpp"

#include "S_RequestOptions_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Request_Timer.WB_Request_Timer_C
// 0x00C0 (0x0488 - 0x03C8)
class UWB_Request_Timer_C final : public UCommonActivatableWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       TimerPush;                                         // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Fade;                                              // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCommonTextBlock*                       BodyText;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HB_Buttons;                                        // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       HeadText;                                          // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_170;                                         // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               OV_Content;                                        // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Raster;                                            // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Timer_Text;                                        // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUserWidget*                            ContentWidgetObject;                               // 0x0418(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsConfirmOnly;                                     // 0x0420(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_49DF[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_RequestOptions>              InputOptions;                                      // 0x0428(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   Text_Head;                                         // 0x0438(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Text_Body;                                         // 0x0450(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         TimerTime;                                         // 0x0468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49E0[0x4];                                     // 0x046C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           InTimer;                                           // 0x0470(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnUserReactionTimer;                               // 0x0478(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void Anim_Fade(double PlaybackSpeed, bool Forward);
	void BP_OnActivated();
	void BP_OnDeactivated();
	bool BP_OnHandleBackAction();
	void Deactivate();
	void ExecuteUbergraph_WB_Request_Timer(int32 EntryPoint);
	class FText FindText(const class FText& TextOverride, const struct FDataTableRowHandle& DataTableRowHandle);
	void OnButtonClicked(class UCommonButtonBase* Button);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void OnUserReactionTimer__DelegateSignature(bool Confirmed);
	void OnUserReactionTimer_Event(bool Confirmed);
	void PreConstruct(bool IsDesignTime);
	void SetData();
	void Time();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Request_Timer_C">();
	}
	static class UWB_Request_Timer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Request_Timer_C>();
	}
};
static_assert(alignof(UWB_Request_Timer_C) == 0x000008, "Wrong alignment on UWB_Request_Timer_C");
static_assert(sizeof(UWB_Request_Timer_C) == 0x000488, "Wrong size on UWB_Request_Timer_C");
static_assert(offsetof(UWB_Request_Timer_C, UberGraphFrame) == 0x0003C8, "Member 'UWB_Request_Timer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, TimerPush) == 0x0003D0, "Member 'UWB_Request_Timer_C::TimerPush' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Fade) == 0x0003D8, "Member 'UWB_Request_Timer_C::Fade' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, BodyText) == 0x0003E0, "Member 'UWB_Request_Timer_C::BodyText' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, HB_Buttons) == 0x0003E8, "Member 'UWB_Request_Timer_C::HB_Buttons' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, HeadText) == 0x0003F0, "Member 'UWB_Request_Timer_C::HeadText' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Image_170) == 0x0003F8, "Member 'UWB_Request_Timer_C::Image_170' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, OV_Content) == 0x000400, "Member 'UWB_Request_Timer_C::OV_Content' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Raster) == 0x000408, "Member 'UWB_Request_Timer_C::Raster' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Timer_Text) == 0x000410, "Member 'UWB_Request_Timer_C::Timer_Text' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, ContentWidgetObject) == 0x000418, "Member 'UWB_Request_Timer_C::ContentWidgetObject' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, IsConfirmOnly) == 0x000420, "Member 'UWB_Request_Timer_C::IsConfirmOnly' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, InputOptions) == 0x000428, "Member 'UWB_Request_Timer_C::InputOptions' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Text_Head) == 0x000438, "Member 'UWB_Request_Timer_C::Text_Head' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, Text_Body) == 0x000450, "Member 'UWB_Request_Timer_C::Text_Body' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, TimerTime) == 0x000468, "Member 'UWB_Request_Timer_C::TimerTime' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, InTimer) == 0x000470, "Member 'UWB_Request_Timer_C::InTimer' has a wrong offset!");
static_assert(offsetof(UWB_Request_Timer_C, OnUserReactionTimer) == 0x000478, "Member 'UWB_Request_Timer_C::OnUserReactionTimer' has a wrong offset!");

}

