#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Child_ControlSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_Child_Base_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Child_ControlSettings.WB_Child_ControlSettings_C
// 0x0078 (0x0358 - 0x02E0)
class UWB_Child_ControlSettings_C final : public UWB_Child_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_Child_ControlSettings_C;         // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_Slider_C*                    Button_GamepadSensitivity_RStick;                  // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_InvertGamepadControl;                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_InvertMouseControl;                         // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_MouseSensitivity;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Infofield_C*                        Info_Field;                                        // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    InputSwitchListener;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Buttons_PC;                                     // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUsingGamepad;                                     // 0x0320(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A95[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewState_InvMouse;                                 // 0x0324(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentState_InvMouse;                             // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewState_InvGamepad;                               // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentState_InvGamepad;                           // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A96[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        NewValue_MouseSensitivity;                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentValue_MouseSensitivity;                     // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewValue_GamepadSensitivity;                       // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentValue_GamepadSensitivity;                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindPanelWidgetChildren_ButtonOnHovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BindPanelWidgetChildren_ButtonOnUnhovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BndEvt__WB_Child_ControlSettings_Button_GamepadSensitivity_RStick_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_Child_ControlSettings_Button_InvertGamepadControl_K2Node_ComponentBoundEvent_0_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_ControlSettings_Button_MouseSensitivity_K2Node_ComponentBoundEvent_3_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_GeneralSettings_Button_Language_K2Node_ComponentBoundEvent_2_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void Construct();
	void ExecuteUbergraph_WB_Child_ControlSettings(int32 EntryPoint);
	TArray<class UWidget*> FilterByVisibility(class UPanelWidget* PanelWidget, ESlateVisibility Filter);
	void GetGamepadSenButtonValue(double* Value);
	void GetInvGamepadButton_State(int32* State);
	void GetInvMouseButton_State(int32* State);
	void GetMouseSenButtonValue(double* Value);
	void GetStateButtonInfo(class UCommonButtonBase* Button, class FText* Head, class FText* Body);
	void OnAnyButtonHovered(class UCommonButtonBase* Button);
	void OnAnyButtonUnhovered(class UCommonButtonBase* Button);
	void OnApplyChanges();
	void OnInputMethodChanged(bool Param_bUsingGamepad);
	void OnResetDefaults();
	void OnResetDefaultsFinished();
	void SetInfoFieldInfo(const class FText& Head, const class FText& Body);
	void SetState_InvertGamepad(int32 Param_CurrentState_InvGamepad);
	void SetState_InvertMouse(int32 Param_CurrentState_InvMouse);
	void SetupButtons();
	void SetValue_GamepadSensitivity(double Param_CurrentValue_MouseSensitivity);
	void SetValue_MouseSensitivity(double Param_CurrentValue_MouseSensitivity);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Child_ControlSettings_C">();
	}
	static class UWB_Child_ControlSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Child_ControlSettings_C>();
	}
};
static_assert(alignof(UWB_Child_ControlSettings_C) == 0x000008, "Wrong alignment on UWB_Child_ControlSettings_C");
static_assert(sizeof(UWB_Child_ControlSettings_C) == 0x000358, "Wrong size on UWB_Child_ControlSettings_C");
static_assert(offsetof(UWB_Child_ControlSettings_C, UberGraphFrame_WB_Child_ControlSettings_C) == 0x0002E0, "Member 'UWB_Child_ControlSettings_C::UberGraphFrame_WB_Child_ControlSettings_C' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, Button_GamepadSensitivity_RStick) == 0x0002E8, "Member 'UWB_Child_ControlSettings_C::Button_GamepadSensitivity_RStick' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, Button_InvertGamepadControl) == 0x0002F0, "Member 'UWB_Child_ControlSettings_C::Button_InvertGamepadControl' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, Button_InvertMouseControl) == 0x0002F8, "Member 'UWB_Child_ControlSettings_C::Button_InvertMouseControl' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, Button_MouseSensitivity) == 0x000300, "Member 'UWB_Child_ControlSettings_C::Button_MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, Info_Field) == 0x000308, "Member 'UWB_Child_ControlSettings_C::Info_Field' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, InputSwitchListener) == 0x000310, "Member 'UWB_Child_ControlSettings_C::InputSwitchListener' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, VB_Buttons_PC) == 0x000318, "Member 'UWB_Child_ControlSettings_C::VB_Buttons_PC' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, bUsingGamepad) == 0x000320, "Member 'UWB_Child_ControlSettings_C::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, NewState_InvMouse) == 0x000324, "Member 'UWB_Child_ControlSettings_C::NewState_InvMouse' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, CurrentState_InvMouse) == 0x000328, "Member 'UWB_Child_ControlSettings_C::CurrentState_InvMouse' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, NewState_InvGamepad) == 0x00032C, "Member 'UWB_Child_ControlSettings_C::NewState_InvGamepad' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, CurrentState_InvGamepad) == 0x000330, "Member 'UWB_Child_ControlSettings_C::CurrentState_InvGamepad' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, NewValue_MouseSensitivity) == 0x000338, "Member 'UWB_Child_ControlSettings_C::NewValue_MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, CurrentValue_MouseSensitivity) == 0x000340, "Member 'UWB_Child_ControlSettings_C::CurrentValue_MouseSensitivity' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, NewValue_GamepadSensitivity) == 0x000348, "Member 'UWB_Child_ControlSettings_C::NewValue_GamepadSensitivity' has a wrong offset!");
static_assert(offsetof(UWB_Child_ControlSettings_C, CurrentValue_GamepadSensitivity) == 0x000350, "Member 'UWB_Child_ControlSettings_C::CurrentValue_GamepadSensitivity' has a wrong offset!");

}

