#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterSegment

#include "Basic.hpp"

#include "E_SegmentType_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MasterSegment.BP_MasterSegment_C
// 0x00E0 (0x0358 - 0x0278)
class UBP_MasterSegment_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Backround;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 DisabledBackround;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          Enabled;                                           // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SegmentType                                 SegmentType;                                       // 0x0299(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55C9[0x6];                                     // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    BuildPart;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, NoDestructor)
	bool                                          UseCustomIcon;                                     // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55CA[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            UnselectedTint;                                    // 0x02B4(0x0014)(Edit, BlueprintVisible)
	struct FMargin                                IconOffset;                                        // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              IconSize;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            SelectedTint;                                      // 0x02E8(0x0014)(Edit, BlueprintVisible)
	uint8                                         Pad_55CB[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CustomIcon;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             Hover_Sound;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Selected_Backround;                                // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Unselected_Backround;                              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Icon_Rotation;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   SegmentName;                                       // 0x0328(0x0018)(Edit, BlueprintVisible)
	class FText                                   SegmentDescription;                                // 0x0340(0x0018)(Edit, BlueprintVisible)

public:
	void EnableSegment(bool Param_Enabled);
	void ExecuteUbergraph_BP_MasterSegment(int32 EntryPoint);
	void IconSetup();
	void PreConstruct(bool IsDesignTime);
	void SegmentSelected(bool Selected);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterSegment_C">();
	}
	static class UBP_MasterSegment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MasterSegment_C>();
	}
};
static_assert(alignof(UBP_MasterSegment_C) == 0x000008, "Wrong alignment on UBP_MasterSegment_C");
static_assert(sizeof(UBP_MasterSegment_C) == 0x000358, "Wrong size on UBP_MasterSegment_C");
static_assert(offsetof(UBP_MasterSegment_C, UberGraphFrame) == 0x000278, "Member 'UBP_MasterSegment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Backround) == 0x000280, "Member 'UBP_MasterSegment_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, DisabledBackround) == 0x000288, "Member 'UBP_MasterSegment_C::DisabledBackround' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Icon) == 0x000290, "Member 'UBP_MasterSegment_C::Icon' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Enabled) == 0x000298, "Member 'UBP_MasterSegment_C::Enabled' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, SegmentType) == 0x000299, "Member 'UBP_MasterSegment_C::SegmentType' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, BuildPart) == 0x0002A0, "Member 'UBP_MasterSegment_C::BuildPart' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, UseCustomIcon) == 0x0002B0, "Member 'UBP_MasterSegment_C::UseCustomIcon' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, UnselectedTint) == 0x0002B4, "Member 'UBP_MasterSegment_C::UnselectedTint' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, IconOffset) == 0x0002C8, "Member 'UBP_MasterSegment_C::IconOffset' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, IconSize) == 0x0002D8, "Member 'UBP_MasterSegment_C::IconSize' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, SelectedTint) == 0x0002E8, "Member 'UBP_MasterSegment_C::SelectedTint' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, CustomIcon) == 0x000300, "Member 'UBP_MasterSegment_C::CustomIcon' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Hover_Sound) == 0x000308, "Member 'UBP_MasterSegment_C::Hover_Sound' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Selected_Backround) == 0x000310, "Member 'UBP_MasterSegment_C::Selected_Backround' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Unselected_Backround) == 0x000318, "Member 'UBP_MasterSegment_C::Unselected_Backround' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, Icon_Rotation) == 0x000320, "Member 'UBP_MasterSegment_C::Icon_Rotation' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, SegmentName) == 0x000328, "Member 'UBP_MasterSegment_C::SegmentName' has a wrong offset!");
static_assert(offsetof(UBP_MasterSegment_C, SegmentDescription) == 0x000340, "Member 'UBP_MasterSegment_C::SegmentDescription' has a wrong offset!");

}

