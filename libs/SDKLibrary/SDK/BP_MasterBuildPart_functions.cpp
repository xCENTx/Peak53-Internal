#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterBuildPart

#include "Basic.hpp"

#include "BP_MasterBuildPart_classes.hpp"
#include "BP_MasterBuildPart_parameters.hpp"


namespace SDK
{

// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ActorKill
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::ActorKill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ActorKill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.AdjacentFloorSupportCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::AdjacentFloorSupportCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "AdjacentFloorSupportCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.DeleteBuildPart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerBuildingComponent_C*    PlayerBuildingComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceDestroy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::DeleteBuildPart(class UBP_PlayerBuildingComponent_C* PlayerBuildingComponent, bool ForceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "DeleteBuildPart");

	Params::BP_MasterBuildPart_C_DeleteBuildPart Parms{};

	Parms.PlayerBuildingComponent = PlayerBuildingComponent;
	Parms.ForceDestroy = ForceDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.DestroySupportingBuildParts
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::DestroySupportingBuildParts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "DestroySupportingBuildParts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ExecuteUbergraph_BP_MasterBuildPart
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::ExecuteUbergraph_BP_MasterBuildPart(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ExecuteUbergraph_BP_MasterBuildPart");

	Params::BP_MasterBuildPart_C_ExecuteUbergraph_BP_MasterBuildPart Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.FloorSupportCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DirectSupportOnly                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Supported                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IndirectSupportOnly                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::FloorSupportCheck(bool DirectSupportOnly, bool* Supported, bool* IndirectSupportOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "FloorSupportCheck");

	Params::BP_MasterBuildPart_C_FloorSupportCheck Parms{};

	Parms.DirectSupportOnly = DirectSupportOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Supported != nullptr)
		*Supported = Parms.Supported;

	if (IndirectSupportOnly != nullptr)
		*IndirectSupportOnly = Parms.IndirectSupportOnly;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.GetHit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::GetHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "GetHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.IsInNoDamageZone
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::IsInNoDamageZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "IsInNoDamageZone");

	Params::BP_MasterBuildPart_C_IsInNoDamageZone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.IsOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::IsOwner(const class FText& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "IsOwner");

	Params::BP_MasterBuildPart_C_IsOwner Parms{};

	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.LoadBuildPart
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::LoadBuildPart(class UBP_SGKSaveGame_C* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "LoadBuildPart");

	Params::BP_MasterBuildPart_C_LoadBuildPart Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.LoadExtraData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::LoadExtraData(class UBP_SGKSaveGame_C* SaveGame, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "LoadExtraData");

	Params::BP_MasterBuildPart_C_LoadExtraData Parms{};

	Parms.SaveGame = SaveGame;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.MulticastBuildPartPlaced
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::MulticastBuildPartPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "MulticastBuildPartPlaced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.MulticastDestroyed
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::MulticastDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "MulticastDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.MulticastSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::MulticastSound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "MulticastSound");

	Params::BP_MasterBuildPart_C_MulticastSound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.PlaySound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::PlaySound(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "PlaySound");

	Params::BP_MasterBuildPart_C_PlaySound Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ReceiveAnyDamage
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::ReceiveAnyDamage(float Damage, const class UDamageType* DamageType, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ReceiveAnyDamage");

	Params::BP_MasterBuildPart_C_ReceiveAnyDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterBuildPart_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_MasterBuildPart_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SaveBuildPartData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SaveBuildPartData(class UBP_SGKSaveGame_C* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SaveBuildPartData");

	Params::BP_MasterBuildPart_C_SaveBuildPartData Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SaveExtraData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_LevelSaveData                 LevelSaveData                                          (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   ExtraDataIndex                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_LevelSaveData                 NewLevelSaveData                                       (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SaveExtraData(class UBP_SGKSaveGame_C* SaveGame, const struct FS_LevelSaveData& LevelSaveData, int32* ExtraDataIndex, struct FS_LevelSaveData* NewLevelSaveData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SaveExtraData");

	Params::BP_MasterBuildPart_C_SaveExtraData Parms{};

	Parms.SaveGame = SaveGame;
	Parms.LevelSaveData = std::move(LevelSaveData);

	UObject::ProcessEvent(Func, &Parms);

	if (ExtraDataIndex != nullptr)
		*ExtraDataIndex = Parms.ExtraDataIndex;

	if (NewLevelSaveData != nullptr)
		*NewLevelSaveData = std::move(Parms.NewLevelSaveData);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.ServerBuildingOptions
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::ServerBuildingOptions(class UBP_PlayerInventory_C* PlayerInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "ServerBuildingOptions");

	Params::BP_MasterBuildPart_C_ServerBuildingOptions Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK AddMultipleOwners
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     Param_Owners                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_AddMultipleOwners(TArray<class FText>& Param_Owners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK AddMultipleOwners");

	Params::BP_MasterBuildPart_C_SGK_AddMultipleOwners Parms{};

	Parms.Param_Owners = std::move(Param_Owners);

	UObject::ProcessEvent(Func, &Parms);

	Param_Owners = std::move(Parms.Param_Owners);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK AddOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_AddOwner(const class FText& PlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK AddOwner");

	Params::BP_MasterBuildPart_C_SGK_AddOwner Parms{};

	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK AllowInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AllowInteraction                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_AllowInteraction(bool* AllowInteraction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK AllowInteraction");

	Params::BP_MasterBuildPart_C_SGK_AllowInteraction Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllowInteraction != nullptr)
		*AllowInteraction = Parms.AllowInteraction;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BleedDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TickDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TickTime                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  BleedLength                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_BleedDamage(int32 TickDamage, double TickTime, double BleedLength)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BleedDamage");

	Params::BP_MasterBuildPart_C_SGK_BleedDamage Parms{};

	Parms.TickDamage = TickDamage;
	Parms.TickTime = TickTime;
	Parms.BleedLength = BleedLength;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BPBuildCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UPrimitiveComponent*>      Collision                                              (Parm, OutParm, ContainsInstancedReference)

void ABP_MasterBuildPart_C::SGK_BPBuildCollision(TArray<class UPrimitiveComponent*>* Collision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BPBuildCollision");

	Params::BP_MasterBuildPart_C_SGK_BPBuildCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Collision != nullptr)
		*Collision = std::move(Parms.Collision);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BPGrids
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UBP_GridComponent_C*>      Grids                                                  (Parm, OutParm, ContainsInstancedReference)

void ABP_MasterBuildPart_C::SGK_BPGrids(TArray<class UBP_GridComponent_C*>* Grids)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BPGrids");

	Params::BP_MasterBuildPart_C_SGK_BPGrids Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Grids != nullptr)
		*Grids = std::move(Parms.Grids);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BuildingOptions
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_BuildingOptions(class UBP_PlayerInventory_C* PlayerInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BuildingOptions");

	Params::BP_MasterBuildPart_C_SGK_BuildingOptions Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BuildPart
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDataTableRowHandle              Param_BuildPart                                        (Parm, OutParm, NoDestructor)

void ABP_MasterBuildPart_C::SGK_BuildPart(struct FDataTableRowHandle* Param_BuildPart)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BuildPart");

	Params::BP_MasterBuildPart_C_SGK_BuildPart Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_BuildPart != nullptr)
		*Param_BuildPart = std::move(Parms.Param_BuildPart);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BuildPartPlaced
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    FromSaveGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_BuildPartPlaced(class UBP_PlayerInventory_C* PlayerInventory, bool FromSaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BuildPartPlaced");

	Params::BP_MasterBuildPart_C_SGK_BuildPartPlaced Parms{};

	Parms.PlayerInventory = PlayerInventory;
	Parms.FromSaveGame = FromSaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK BuildPartType
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BuildType                             Type                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_BuildPartType(E_BuildType* Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK BuildPartType");

	Params::BP_MasterBuildPart_C_SGK_BuildPartType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Type != nullptr)
		*Type = Parms.Type;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK ClearOwners
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_ClearOwners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK ClearOwners");

	Params::BP_MasterBuildPart_C_SGK_ClearOwners Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK CodeCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    CodeAccepted                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_CodeCheck(const class FText& Code, bool* CodeAccepted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK CodeCheck");

	Params::BP_MasterBuildPart_C_SGK_CodeCheck Parms{};

	Parms.Code = std::move(Code);

	UObject::ProcessEvent(Func, &Parms);

	if (CodeAccepted != nullptr)
		*CodeAccepted = Parms.CodeAccepted;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK CurrentHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_CurrentHealth(int32* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK CurrentHealth");

	Params::BP_MasterBuildPart_C_SGK_CurrentHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK Damage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   BaseDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           EventInstigator                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_DamageType                            DamageType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Hitbox                                HitBox                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_Damage(int32 BaseDamage, class AActor* EventInstigator, class AActor* DamageCauser, E_DamageType DamageType, E_Hitbox HitBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK Damage");

	Params::BP_MasterBuildPart_C_SGK_Damage Parms{};

	Parms.BaseDamage = BaseDamage;
	Parms.EventInstigator = EventInstigator;
	Parms.DamageCauser = DamageCauser;
	Parms.DamageType = DamageType;
	Parms.HitBox = HitBox;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK DeleteBuildPart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerBuildingComponent_C*    PlayerBuildingComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceDestroy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_DeleteBuildPart(class UBP_PlayerBuildingComponent_C* PlayerBuildingComponent, bool ForceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK DeleteBuildPart");

	Params::BP_MasterBuildPart_C_SGK_DeleteBuildPart Parms{};

	Parms.PlayerBuildingComponent = PlayerBuildingComponent;
	Parms.ForceDestroy = ForceDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK DropItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Dropped                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Spawned                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_SaveLoaded                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_DropItem(const struct FS_InvItem& InvItem, bool Dropped, bool Spawned, bool Param_SaveLoaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK DropItem");

	Params::BP_MasterBuildPart_C_SGK_DropItem Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.Dropped = Dropped;
	Parms.Spawned = Spawned;
	Parms.Param_SaveLoaded = Param_SaveLoaded;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK EndInteraction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_EndInteraction(class UBP_PlayerInventory_C* PlayerInventory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK EndInteraction");

	Params::BP_MasterBuildPart_C_SGK_EndInteraction Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK GetVerifiedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     VerifiedPlayers                                        (Parm, OutParm)

void ABP_MasterBuildPart_C::SGK_GetVerifiedPlayers(TArray<class FText>* VerifiedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK GetVerifiedPlayers");

	Params::BP_MasterBuildPart_C_SGK_GetVerifiedPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (VerifiedPlayers != nullptr)
		*VerifiedPlayers = std::move(Parms.VerifiedPlayers);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK Interact
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_WorldActions                          Action                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK Interact");

	Params::BP_MasterBuildPart_C_SGK_Interact Parms{};

	Parms.PlayerInventory = PlayerInventory;
	Parms.Action = Action;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK InteractName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InteractName                                           (Parm, OutParm)

void ABP_MasterBuildPart_C::SGK_InteractName(class FText* InteractName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK InteractName");

	Params::BP_MasterBuildPart_C_SGK_InteractName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InteractName != nullptr)
		*InteractName = std::move(Parms.InteractName);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK InvItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsItem                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_InvItem                       InvItem                                                (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_InvItem(bool* IsItem, struct FS_InvItem* InvItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK InvItem");

	Params::BP_MasterBuildPart_C_SGK_InvItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsItem != nullptr)
		*IsItem = Parms.IsItem;

	if (InvItem != nullptr)
		*InvItem = std::move(Parms.InvItem);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK IsOwner
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             PlayerName                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    IsOwner                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_IsOwner(const class FText& PlayerName, bool* IsOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK IsOwner");

	Params::BP_MasterBuildPart_C_SGK_IsOwner Parms{};

	Parms.PlayerName = std::move(PlayerName);

	UObject::ProcessEvent(Func, &Parms);

	if (IsOwner != nullptr)
		*IsOwner = Parms.IsOwner;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK IsPendingDestroy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPendingDestroy                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_IsPendingDestroy(bool* IsPendingDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK IsPendingDestroy");

	Params::BP_MasterBuildPart_C_SGK_IsPendingDestroy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPendingDestroy != nullptr)
		*IsPendingDestroy = Parms.IsPendingDestroy;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK IsPlaced
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsPlaced                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_IsPlaced(bool* IsPlaced)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK IsPlaced");

	Params::BP_MasterBuildPart_C_SGK_IsPlaced Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlaced != nullptr)
		*IsPlaced = Parms.IsPlaced;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK ItemAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_ItemAmount(int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK ItemAmount");

	Params::BP_MasterBuildPart_C_SGK_ItemAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK LoadExtraData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_LoadExtraData(class UBP_SGKSaveGame_C* SaveGame, int32 Param_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK LoadExtraData");

	Params::BP_MasterBuildPart_C_SGK_LoadExtraData Parms{};

	Parms.SaveGame = SaveGame;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK MaxHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Param_MaxHealth                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_MaxHealth(int32* Param_MaxHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK MaxHealth");

	Params::BP_MasterBuildPart_C_SGK_MaxHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_MaxHealth != nullptr)
		*Param_MaxHealth = Parms.Param_MaxHealth;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK Mesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_Mesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK Mesh");

	Params::BP_MasterBuildPart_C_SGK_Mesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK PlayerInProximity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::SGK_PlayerInProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK PlayerInProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK PlayerOutProximity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::SGK_PlayerOutProximity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK PlayerOutProximity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK PossibleActions
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ActionsFound                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_WorldAction>           PossibleActions                                        (Parm, OutParm)

void ABP_MasterBuildPart_C::SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK PossibleActions");

	Params::BP_MasterBuildPart_C_SGK_PossibleActions Parms{};

	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);

	if (ActionsFound != nullptr)
		*ActionsFound = Parms.ActionsFound;

	if (PossibleActions != nullptr)
		*PossibleActions = std::move(Parms.PossibleActions);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK Preview
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Preview                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_Preview(bool Param_Preview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK Preview");

	Params::BP_MasterBuildPart_C_SGK_Preview Parms{};

	Parms.Param_Preview = Param_Preview;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK SetCurrentHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   NewHealthAmount                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_SetCurrentHealth(int32 NewHealthAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK SetCurrentHealth");

	Params::BP_MasterBuildPart_C_SGK_SetCurrentHealth Parms{};

	Parms.NewHealthAmount = NewHealthAmount;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK SetVerifiedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FText>                     VerifiedPlayers                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MasterBuildPart_C::SGK_SetVerifiedPlayers(TArray<class FText>& VerifiedPlayers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK SetVerifiedPlayers");

	Params::BP_MasterBuildPart_C_SGK_SetVerifiedPlayers Parms{};

	Parms.VerifiedPlayers = std::move(VerifiedPlayers);

	UObject::ProcessEvent(Func, &Parms);

	VerifiedPlayers = std::move(Parms.VerifiedPlayers);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK ShowHealthWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowHealthWidget                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             HealthWidgetName                                       (Parm, OutParm)

void ABP_MasterBuildPart_C::SGK_ShowHealthWidget(bool* ShowHealthWidget, class FText* HealthWidgetName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK ShowHealthWidget");

	Params::BP_MasterBuildPart_C_SGK_ShowHealthWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ShowHealthWidget != nullptr)
		*ShowHealthWidget = Parms.ShowHealthWidget;

	if (HealthWidgetName != nullptr)
		*HealthWidgetName = std::move(Parms.HealthWidgetName);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK SupportCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DestroyOnFail                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DirectSupportOnly                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Supported                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IndirectSupportOnly                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_SupportCheck(bool DestroyOnFail, bool DirectSupportOnly, bool* Supported, bool* IndirectSupportOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK SupportCheck");

	Params::BP_MasterBuildPart_C_SGK_SupportCheck Parms{};

	Parms.DestroyOnFail = DestroyOnFail;
	Parms.DirectSupportOnly = DirectSupportOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Supported != nullptr)
		*Supported = Parms.Supported;

	if (IndirectSupportOnly != nullptr)
		*IndirectSupportOnly = Parms.IndirectSupportOnly;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK TurnedOnEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TurnedOn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGK_TurnedOnEffect(bool TurnedOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK TurnedOnEffect");

	Params::BP_MasterBuildPart_C_SGK_TurnedOnEffect Parms{};

	Parms.TurnedOn = TurnedOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK UpdateCode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Code                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_UpdateCode(const class FText& Code)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK UpdateCode");

	Params::BP_MasterBuildPart_C_SGK_UpdateCode Parms{};

	Parms.Code = std::move(Code);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK Upgrade
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterBuildPart_C::SGK_Upgrade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK Upgrade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGK VerifyPlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterBuildPart_C::SGK_VerifyPlayer(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGK VerifyPlayer");

	Params::BP_MasterBuildPart_C_SGK_VerifyPlayer Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SGKSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                Save                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SGKSave(class UBP_SGKSaveGame_C* Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SGKSave");

	Params::BP_MasterBuildPart_C_SGKSave Parms{};

	Parms.Save = Save;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.SupportCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    DirectSupportOnly                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Supported                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::SupportCheck(bool DirectSupportOnly, bool* Supported)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "SupportCheck");

	Params::BP_MasterBuildPart_C_SupportCheck Parms{};

	Parms.DirectSupportOnly = DirectSupportOnly;

	UObject::ProcessEvent(Func, &Parms);

	if (Supported != nullptr)
		*Supported = Parms.Supported;
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.TakeDamage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::TakeDamage(int32 Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "TakeDamage");

	Params::BP_MasterBuildPart_C_TakeDamage Parms{};

	Parms.Damage = Damage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterBuildPart.BP_MasterBuildPart_C.Wood Box Destroy Event
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterBuildPart_C::Wood_Box_Destroy_Event(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterBuildPart_C", "Wood Box Destroy Event");

	Params::BP_MasterBuildPart_C_Wood_Box_Destroy_Event Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}

}

