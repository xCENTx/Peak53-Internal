#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_weapon_bench_manager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass bp_weapon_bench_manager.bp_weapon_bench_manager_C
// 0x0040 (0x02D0 - 0x0290)
class Abp_weapon_bench_manager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class Abp_weapon_bench_weapon_C*              Primary;                                           // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class Abp_weapon_bench_weapon_C*              Secondary;                                         // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class FString                                 CurrentPrimary;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CurrentSecondary;                                  // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void SetCurrentSecondary(const class FString& Param_CurrentSecondary);
	void SetCurrentPrimary(const class FString& Param_CurrentPrimary);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_bp_weapon_bench_manager(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"bp_weapon_bench_manager_C">();
	}
	static class Abp_weapon_bench_manager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<Abp_weapon_bench_manager_C>();
	}
};
static_assert(alignof(Abp_weapon_bench_manager_C) == 0x000008, "Wrong alignment on Abp_weapon_bench_manager_C");
static_assert(sizeof(Abp_weapon_bench_manager_C) == 0x0002D0, "Wrong size on Abp_weapon_bench_manager_C");
static_assert(offsetof(Abp_weapon_bench_manager_C, UberGraphFrame) == 0x000290, "Member 'Abp_weapon_bench_manager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(Abp_weapon_bench_manager_C, DefaultSceneRoot) == 0x000298, "Member 'Abp_weapon_bench_manager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(Abp_weapon_bench_manager_C, Primary) == 0x0002A0, "Member 'Abp_weapon_bench_manager_C::Primary' has a wrong offset!");
static_assert(offsetof(Abp_weapon_bench_manager_C, Secondary) == 0x0002A8, "Member 'Abp_weapon_bench_manager_C::Secondary' has a wrong offset!");
static_assert(offsetof(Abp_weapon_bench_manager_C, CurrentPrimary) == 0x0002B0, "Member 'Abp_weapon_bench_manager_C::CurrentPrimary' has a wrong offset!");
static_assert(offsetof(Abp_weapon_bench_manager_C, CurrentSecondary) == 0x0002C0, "Member 'Abp_weapon_bench_manager_C::CurrentSecondary' has a wrong offset!");

}

