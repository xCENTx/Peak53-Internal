#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterResource

#include "Basic.hpp"

#include "BP_MasterResource_classes.hpp"
#include "BP_MasterResource_parameters.hpp"


namespace SDK
{

// Function BP_MasterResource.BP_MasterResource_C.AddDestructableMesh
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::AddDestructableMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "AddDestructableMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.CollectResource
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   CollectAmount                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_PlayerInventory_C*            PlayerInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ResourceDepleted                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::CollectResource(int32 CollectAmount, class UBP_PlayerInventory_C* PlayerInventory, bool* ResourceDepleted)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "CollectResource");

	Params::BP_MasterResource_C_CollectResource Parms{};

	Parms.CollectAmount = CollectAmount;
	Parms.PlayerInventory = PlayerInventory;

	UObject::ProcessEvent(Func, &Parms);

	if (ResourceDepleted != nullptr)
		*ResourceDepleted = Parms.ResourceDepleted;
}


// Function BP_MasterResource.BP_MasterResource_C.ExecuteUbergraph_BP_MasterResource
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::ExecuteUbergraph_BP_MasterResource(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "ExecuteUbergraph_BP_MasterResource");

	Params::BP_MasterResource_C_ExecuteUbergraph_BP_MasterResource Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.FallOverEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          CharacterLocation                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::FallOverEffect(const struct FVector& CharacterLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "FallOverEffect");

	Params::BP_MasterResource_C_FallOverEffect Parms{};

	Parms.CharacterLocation = std::move(CharacterLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.FallOverEffectTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_MasterResource_C::FallOverEffectTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "FallOverEffectTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.FallOverEffectTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_MasterResource_C::FallOverEffectTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "FallOverEffectTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.GetInstanceAtTransform
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MasterResourceComponent_C*    ResourceInstance                                       (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   InstanceIndex                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterResource_C::GetInstanceAtTransform(const struct FTransform& InTransform, class UStaticMesh* StaticMesh, class UBP_MasterResourceComponent_C** ResourceInstance, int32* InstanceIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "GetInstanceAtTransform");

	Params::BP_MasterResource_C_GetInstanceAtTransform Parms{};

	Parms.InTransform = std::move(InTransform);
	Parms.StaticMesh = StaticMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (ResourceInstance != nullptr)
		*ResourceInstance = Parms.ResourceInstance;

	if (InstanceIndex != nullptr)
		*InstanceIndex = Parms.InstanceIndex;

	return Parms.ReturnValue;
}


// Function BP_MasterResource.BP_MasterResource_C.HideResource
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::HideResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "HideResource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.Load
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::Load(class UBP_SGKSaveGame_C* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "Load");

	Params::BP_MasterResource_C_Load Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.LoadResourceSaveGame
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                SaveGame                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::LoadResourceSaveGame(class UBP_SGKSaveGame_C* SaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "LoadResourceSaveGame");

	Params::BP_MasterResource_C_LoadResourceSaveGame Parms{};

	Parms.SaveGame = SaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.MulticastDestructionEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::MulticastDestructionEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "MulticastDestructionEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.MulticastPlayDepletedSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::MulticastPlayDepletedSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "MulticastPlayDepletedSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.MulticastRemoveDestructionMeshes
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::MulticastRemoveDestructionMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "MulticastRemoveDestructionMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.MulticastResetRotation
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_MasterResource_C::MulticastResetRotation(const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "MulticastResetRotation");

	Params::BP_MasterResource_C_MulticastResetRotation Parms{};

	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.MulticastSetCollision
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    EnableCollision                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::MulticastSetCollision(bool EnableCollision)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "MulticastSetCollision");

	Params::BP_MasterResource_C_MulticastSetCollision Parms{};

	Parms.EnableCollision = EnableCollision;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterResource_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.RemoveInstance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      StaticMesh                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::RemoveInstance(const struct FTransform& InTransform, class UStaticMesh* StaticMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "RemoveInstance");

	Params::BP_MasterResource_C_RemoveInstance Parms{};

	Parms.InTransform = std::move(InTransform);
	Parms.StaticMesh = StaticMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.ResourceSetup
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::ResourceSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "ResourceSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.RespawnResource
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::RespawnResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "RespawnResource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.RunResourceDepleted
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::RunResourceDepleted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "RunResourceDepleted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.SGKSave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSaveGame_C*                Save                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterResource_C::SGKSave(class UBP_SGKSaveGame_C* Save)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "SGKSave");

	Params::BP_MasterResource_C_SGKSave Parms{};

	Parms.Save = Save;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterResource.BP_MasterResource_C.ShowResource
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::ShowResource()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "ShowResource");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.StartHideResourceTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::StartHideResourceTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "StartHideResourceTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterResource.BP_MasterResource_C.StartRespawnTimer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterResource_C::StartRespawnTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterResource_C", "StartRespawnTimer");

	UObject::ProcessEvent(Func, nullptr);
}

}

