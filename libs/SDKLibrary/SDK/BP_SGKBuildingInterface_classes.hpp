#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKBuildingInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_BuildType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SGKBuildingInterface.BP_SGKBuildingInterface_C
// 0x0000 (0x0028 - 0x0028)
class IBP_SGKBuildingInterface_C final : public IInterface
{
public:
	bool SGK_AddMultipleOwners(TArray<class FText>& Owners);
	bool SGK_AddOwner(const class FText& PlayerName);
	void SGK_BPBuildCollision(TArray<class UPrimitiveComponent*>* Collision);
	void SGK_BPGrids(TArray<class UBP_GridComponent_C*>* Grids);
	void SGK_BuildingOptions(class UBP_PlayerInventory_C* PlayerInventory);
	void SGK_BuildPart(struct FDataTableRowHandle* BuildPart);
	void SGK_BuildPartPlaced(class UBP_PlayerInventory_C* PlayerInventory, bool FromSaveGame);
	void SGK_BuildPartType(E_BuildType* Type);
	bool SGK_ClearOwners();
	void SGK_DeleteBuildPart(class UBP_PlayerBuildingComponent_C* PlayerBuildingComponent, bool ForceDestroy);
	void SGK_IsOwner(const class FText& PlayerName, bool* IsOwner);
	void SGK_IsPendingDestroy(bool* IsPendingDestroy);
	void SGK_IsPlaced(bool* IsPlaced);
	void SGK_LoadExtraData(class UBP_SGKSaveGame_C* SaveGame, int32 Param_Index);
	bool SGK_Preview(bool Preview);
	void SGK_SupportCheck(bool DestroyOnFail, bool DirectSupportOnly, bool* Supported, bool* IndirectSupportOnly);
	void SGK_Upgrade();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SGKBuildingInterface_C">();
	}
	static class IBP_SGKBuildingInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBP_SGKBuildingInterface_C>();
	}
};
static_assert(alignof(IBP_SGKBuildingInterface_C) == 0x000008, "Wrong alignment on IBP_SGKBuildingInterface_C");
static_assert(sizeof(IBP_SGKBuildingInterface_C) == 0x000028, "Wrong size on IBP_SGKBuildingInterface_C");

}

