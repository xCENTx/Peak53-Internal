#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Background

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MinimapInternal_Background.MinimapInternal_Background_C.ExecuteUbergraph_MinimapInternal_Background
// 0x0098 (0x0098 - 0x0000)
struct MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3554[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapBackground*                         K2Node_CustomEvent_MapBackground_2;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMapBackground* MapBackground, int32 Level, class UTextureRenderTarget2D* RenderTarget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_CustomEvent_EndPlayReason;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3555[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMapBackground* MapBackground)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3556[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapBackground*                         K2Node_CustomEvent_MapBackground_1;                // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0060(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AMapBackground*                         K2Node_CustomEvent_MapBackground;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Level;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3557[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 K2Node_CustomEvent_RenderTarget;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AMapBackground* MapBackground)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background");
static_assert(sizeof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background) == 0x000098, "Wrong size on MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, EntryPoint) == 0x000000, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_MapBackground_2) == 0x000008, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_MapBackground_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_Actor) == 0x000038, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_EndPlayReason) == 0x000040, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_EndPlayReason' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_MapBackground_1) == 0x000058, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_MapBackground_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CreateDelegate_OutputDelegate_3) == 0x000060, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_MapBackground) == 0x000070, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_MapBackground' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_Level) == 0x000078, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CustomEvent_RenderTarget) == 0x000080, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CustomEvent_RenderTarget' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background, K2Node_CreateDelegate_OutputDelegate_4) == 0x000088, "Member 'MinimapInternal_Background_C_ExecuteUbergraph_MinimapInternal_Background::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.InitOverlay
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Background_C_InitOverlay final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_InitOverlay) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_InitOverlay");
static_assert(sizeof(MinimapInternal_Background_C_InitOverlay) == 0x000008, "Wrong size on MinimapInternal_Background_C_InitOverlay");
static_assert(offsetof(MinimapInternal_Background_C_InitOverlay, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'MinimapInternal_Background_C_InitOverlay::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.On Appearance Changed
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Background_C_On_Appearance_Changed final
{
public:
	class AMapBackground*                         Param_MapBackground;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_On_Appearance_Changed) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_On_Appearance_Changed");
static_assert(sizeof(MinimapInternal_Background_C_On_Appearance_Changed) == 0x000008, "Wrong size on MinimapInternal_Background_C_On_Appearance_Changed");
static_assert(offsetof(MinimapInternal_Background_C_On_Appearance_Changed, Param_MapBackground) == 0x000000, "Member 'MinimapInternal_Background_C_On_Appearance_Changed::Param_MapBackground' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.On Overlay Changed
// 0x0018 (0x0018 - 0x0000)
struct MinimapInternal_Background_C_On_Overlay_Changed final
{
public:
	class AMapBackground*                         Param_MapBackground;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Level;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3558[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 RenderTarget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_On_Overlay_Changed) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_On_Overlay_Changed");
static_assert(sizeof(MinimapInternal_Background_C_On_Overlay_Changed) == 0x000018, "Wrong size on MinimapInternal_Background_C_On_Overlay_Changed");
static_assert(offsetof(MinimapInternal_Background_C_On_Overlay_Changed, Param_MapBackground) == 0x000000, "Member 'MinimapInternal_Background_C_On_Overlay_Changed::Param_MapBackground' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_On_Overlay_Changed, Level) == 0x000008, "Member 'MinimapInternal_Background_C_On_Overlay_Changed::Level' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_On_Overlay_Changed, RenderTarget) == 0x000010, "Member 'MinimapInternal_Background_C_On_Overlay_Changed::RenderTarget' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.OnEndPlay
// 0x0010 (0x0010 - 0x0000)
struct MinimapInternal_Background_C_OnEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_OnEndPlay) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_OnEndPlay");
static_assert(sizeof(MinimapInternal_Background_C_OnEndPlay) == 0x000010, "Wrong size on MinimapInternal_Background_C_OnEndPlay");
static_assert(offsetof(MinimapInternal_Background_C_OnEndPlay, Actor) == 0x000000, "Member 'MinimapInternal_Background_C_OnEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_OnEndPlay, EndPlayReason) == 0x000008, "Member 'MinimapInternal_Background_C_OnEndPlay::EndPlayReason' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.OnTextureMatChanged
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Background_C_OnTextureMatChanged final
{
public:
	class AMapBackground*                         Param_MapBackground;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_OnTextureMatChanged) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_OnTextureMatChanged");
static_assert(sizeof(MinimapInternal_Background_C_OnTextureMatChanged) == 0x000008, "Wrong size on MinimapInternal_Background_C_OnTextureMatChanged");
static_assert(offsetof(MinimapInternal_Background_C_OnTextureMatChanged, Param_MapBackground) == 0x000000, "Member 'MinimapInternal_Background_C_OnTextureMatChanged::Param_MapBackground' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.TickBackground
// 0x0148 (0x0148 - 0x0000)
struct MinimapInternal_Background_C_TickBackground final
{
public:
	struct FVector2D                              V1;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              V2;                                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      ViewCornersUV;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3559[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetBackgroundPriority_ReturnValue;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMultiLevel_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetActiveBackgroundPriority_IsInsideAnyBackground; // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355A[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveBackgroundPriority_ReturnValue;  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_GetMapViewCornerUVs_CornerUVs;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetMapViewCornerUVs_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355B[0x5];                                     // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355C[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355D[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_3;                         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_TickBackground) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_TickBackground");
static_assert(sizeof(MinimapInternal_Background_C_TickBackground) == 0x000148, "Wrong size on MinimapInternal_Background_C_TickBackground");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, V1) == 0x000000, "Member 'MinimapInternal_Background_C_TickBackground::V1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, V2) == 0x000010, "Member 'MinimapInternal_Background_C_TickBackground::V2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, ViewCornersUV) == 0x000020, "Member 'MinimapInternal_Background_C_TickBackground::ViewCornersUV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetBackgroundPriority_ReturnValue) == 0x000034, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetBackgroundPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_IsMultiLevel_ReturnValue) == 0x000039, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_IsMultiLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetActiveBackgroundPriority_IsInsideAnyBackground) == 0x00003A, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetActiveBackgroundPriority_IsInsideAnyBackground' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetActiveBackgroundPriority_ReturnValue) == 0x00003C, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetActiveBackgroundPriority_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetMapViewCornerUVs_CornerUVs) == 0x000040, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetMapViewCornerUVs_CornerUVs' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetMapViewCornerUVs_ReturnValue) == 0x000050, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetMapViewCornerUVs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000051, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Not_PreBool_ReturnValue) == 0x000052, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000058, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BooleanOR_ReturnValue) == 0x000060, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Array_Get_Item) == 0x000078, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_X) == 0x000088, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_Y) == 0x000090, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_LinearColor) == 0x0000A8, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Array_Get_Item_2) == 0x0000B8, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Array_Get_Item_3) == 0x0000C8, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000D8, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000E8, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_X_1) == 0x0000F8, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_Y_1) == 0x000100, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_X_2) == 0x000108, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_BreakVector2D_Y_2) == 0x000110, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_LinearColor_1) == 0x000118, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000128, "Member 'MinimapInternal_Background_C_TickBackground::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_R_ImplicitCast) == 0x00012C, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_G_ImplicitCast) == 0x000130, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_B_ImplicitCast) == 0x000134, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_A_ImplicitCast) == 0x000138, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_R_ImplicitCast_1) == 0x00013C, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_TickBackground, K2Node_MakeStruct_G_ImplicitCast_1) == 0x000140, "Member 'MinimapInternal_Background_C_TickBackground::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.UpdateMaterial
// 0x0048 (0x0048 - 0x0000)
struct MinimapInternal_Background_C_UpdateMaterial final
{
public:
	bool                                          bShouldRecreate;                                   // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     NewMaterial;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355F[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetBackgroundMaterialForUMG_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3560[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterial*                              CallFunc_GetBaseMaterial_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3561[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_UpdateMaterial) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_UpdateMaterial");
static_assert(sizeof(MinimapInternal_Background_C_UpdateMaterial) == 0x000048, "Wrong size on MinimapInternal_Background_C_UpdateMaterial");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, bShouldRecreate) == 0x000000, "Member 'MinimapInternal_Background_C_UpdateMaterial::bShouldRecreate' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, NewMaterial) == 0x000008, "Member 'MinimapInternal_Background_C_UpdateMaterial::NewMaterial' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_GetBackgroundMaterialForUMG_ReturnValue) == 0x000018, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_GetBackgroundMaterialForUMG_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_IsValid_ReturnValue_2) == 0x000020, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_GetBaseMaterial_ReturnValue) == 0x000028, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_GetBaseMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000030, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000038, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000040, "Member 'MinimapInternal_Background_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.UpdateOverLay
// 0x0028 (0x0028 - 0x0000)
struct MinimapInternal_Background_C_UpdateOverLay final
{
public:
	class USceneComponent*                        HeightComponent;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 NewOverlay;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3562[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveBackgroundLevel_ReturnValue;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_GetBackgroundOverlay_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_UpdateOverLay) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_UpdateOverLay");
static_assert(sizeof(MinimapInternal_Background_C_UpdateOverLay) == 0x000028, "Wrong size on MinimapInternal_Background_C_UpdateOverLay");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, HeightComponent) == 0x000000, "Member 'MinimapInternal_Background_C_UpdateOverLay::HeightComponent' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, NewOverlay) == 0x000008, "Member 'MinimapInternal_Background_C_UpdateOverLay::NewOverlay' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MinimapInternal_Background_C_UpdateOverLay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, CallFunc_GetActiveBackgroundLevel_ReturnValue) == 0x000014, "Member 'MinimapInternal_Background_C_UpdateOverLay::CallFunc_GetActiveBackgroundLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, CallFunc_GetBackgroundOverlay_ReturnValue) == 0x000018, "Member 'MinimapInternal_Background_C_UpdateOverLay::CallFunc_GetBackgroundOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateOverLay, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'MinimapInternal_Background_C_UpdateOverLay::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.UpdateTexture
// 0x0020 (0x0020 - 0x0000)
struct MinimapInternal_Background_C_UpdateTexture final
{
public:
	class USceneComponent*                        HeightComponent;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               NewTexture;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3563[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetActiveBackgroundLevel_ReturnValue;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_GetBackgroundTexture_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_UpdateTexture) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_UpdateTexture");
static_assert(sizeof(MinimapInternal_Background_C_UpdateTexture) == 0x000020, "Wrong size on MinimapInternal_Background_C_UpdateTexture");
static_assert(offsetof(MinimapInternal_Background_C_UpdateTexture, HeightComponent) == 0x000000, "Member 'MinimapInternal_Background_C_UpdateTexture::HeightComponent' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateTexture, NewTexture) == 0x000008, "Member 'MinimapInternal_Background_C_UpdateTexture::NewTexture' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateTexture, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'MinimapInternal_Background_C_UpdateTexture::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateTexture, CallFunc_GetActiveBackgroundLevel_ReturnValue) == 0x000014, "Member 'MinimapInternal_Background_C_UpdateTexture::CallFunc_GetActiveBackgroundLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateTexture, CallFunc_GetBackgroundTexture_ReturnValue) == 0x000018, "Member 'MinimapInternal_Background_C_UpdateTexture::CallFunc_GetBackgroundTexture_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Background.MinimapInternal_Background_C.UpdateVisibility
// 0x0020 (0x0020 - 0x0000)
struct MinimapInternal_Background_C_UpdateVisibility final
{
public:
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetBackgroundZOrder_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBackgroundVisible_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3564[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Background_C_UpdateVisibility) == 0x000008, "Wrong alignment on MinimapInternal_Background_C_UpdateVisibility");
static_assert(sizeof(MinimapInternal_Background_C_UpdateVisibility) == 0x000020, "Wrong size on MinimapInternal_Background_C_UpdateVisibility");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, Temp_byte_Variable) == 0x000000, "Member 'MinimapInternal_Background_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000001, "Member 'MinimapInternal_Background_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, Temp_bool_Variable) == 0x000002, "Member 'MinimapInternal_Background_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'MinimapInternal_Background_C_UpdateVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, CallFunc_GetBackgroundZOrder_ReturnValue) == 0x000004, "Member 'MinimapInternal_Background_C_UpdateVisibility::CallFunc_GetBackgroundZOrder_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, CallFunc_IsBackgroundVisible_ReturnValue) == 0x000008, "Member 'MinimapInternal_Background_C_UpdateVisibility::CallFunc_IsBackgroundVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000010, "Member 'MinimapInternal_Background_C_UpdateVisibility::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'MinimapInternal_Background_C_UpdateVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Background_C_UpdateVisibility, K2Node_Select_Default) == 0x000019, "Member 'MinimapInternal_Background_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");

}

