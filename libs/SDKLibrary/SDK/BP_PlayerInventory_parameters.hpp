#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerInventory

#include "Basic.hpp"

#include "S_AttachmentSlot_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_DurabilityDetails_structs.hpp"
#include "S_OtherInvSaves_structs.hpp"
#include "Engine_structs.hpp"
#include "E_Hitbox_structs.hpp"
#include "E_EquipmentType_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "E_AnimationState_structs.hpp"
#include "E_CrosshairType_structs.hpp"
#include "E_WeaponSlots_structs.hpp"
#include "E_ItemMoveType_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_InventoryAction_structs.hpp"
#include "S_EquipmentSlot_structs.hpp"
#include "E_DamageType_structs.hpp"
#include "E_CharacterState_structs.hpp"
#include "S_StatReduction_structs.hpp"
#include "S_EquipmentSlotID_structs.hpp"
#include "S_CraftingRecipe_structs.hpp"
#include "S_CraftingQueue_structs.hpp"
#include "S_AttachmentDetails_structs.hpp"
#include "S_RepairActors_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_WeaponSlot_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "S_EquipmentDetails_structs.hpp"
#include "S_InvSaveSlot_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_SpecialSlotType_structs.hpp"
#include "E_WorldActions_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_HoldableDetails_structs.hpp"
#include "S_NotificationDetails_structs.hpp"
#include "S_AttachmentSlotID_structs.hpp"
#include "S_EquipmentSlotSave_structs.hpp"
#include "S_WeaponSlotSave_structs.hpp"
#include "S_PlayerSave_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "S_ConsumableDetails_structs.hpp"
#include "E_InventoryActions_structs.hpp"
#include "S_BuildPartDetails_structs.hpp"
#include "S_CookingSlot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "E_CameraType_structs.hpp"
#include "S_VendorSell_structs.hpp"
#include "S_VendorBuy_structs.hpp"
#include "E_Sounds_structs.hpp"
#include "S_CraftingDetails_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddAllEquipmentQuickSlots
// 0x0270 (0x0270 - 0x0000)
struct BP_PlayerInventory_C_AddAllEquipmentQuickSlots final
{
public:
	int32                                         CountL;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B61[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B62[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B63[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B64[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B65[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0080(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B66[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B67[0x1];                                     // 0x009F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00A0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B68[0x6];                                     // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x00F0(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B69[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AddAllEquipmentQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots) == 0x000270, "Wrong size on BP_PlayerInventory_C_AddAllEquipmentQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CountL) == 0x000000, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, Temp_int_Variable) == 0x000004, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, Temp_int_Variable_1) == 0x000008, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_GetValidValue_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, K2Node_MakeStruct_S_WeaponSlotID) == 0x000080, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, Temp_int_Variable_2) == 0x000094, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000098, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x00009C, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00009D, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_GetValidValue_ReturnValue_1) == 0x00009E, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000A0, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x0000E9, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x0000F0, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000260, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000264, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAllEquipmentQuickSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000268, "Member 'BP_PlayerInventory_C_AddAllEquipmentQuickSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddAmmoToRangeWeapon
// 0x1F40 (0x1F40 - 0x0000)
struct BP_PlayerInventory_C_AddAmmoToRangeWeapon final
{
public:
	struct FS_InvSlot                             WeaponSlot;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             StartSlot;                                         // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotification;                                  // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6A[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 RangeWeaponL;                                      // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             RootSlotL;                                         // 0x00B0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0100(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x0101(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6B[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             StartItemL;                                        // 0x0108(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         StartingItemAmountL;                               // 0x0138(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddAmountL;                                        // 0x013C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         StartItemDetailsL;                                 // 0x0140(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          EndSlotInStartInvL;                                // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartSlotInEndInvL;                                // 0x09D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6C[0x6];                                     // 0x09D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  WeaponInventoryL;                                  // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             StartSlotL;                                        // 0x09E0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             WeaponSlotL;                                       // 0x0A30(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0A80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6D[0x6];                                     // 0x0A8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0A90(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0AD8(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0B10(0x0038)(HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0B48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0B51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6E[0x6];                                     // 0x0B52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0B58(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0B90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0B94(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6F[0x3];                                     // 0x0B95(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x0B98(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x0BD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B70[0x6];                                     // 0x0BD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x0BD8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0BE8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_4;         // 0x0C38(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B71[0x7];                                     // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0C78(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Temp_object_Variable;                              // 0x0CC8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0CD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x0CD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B72[0x3];                                     // 0x0CD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B73[0x3];                                     // 0x0CDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_5;         // 0x0CE0(0x0038)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0D18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B74[0x7];                                     // 0x0D19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_6;         // 0x0D20(0x0038)(HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_Select_Default;                             // 0x0D58(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B75[0x2];                                     // 0x0D62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x0D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B76[0x7];                                     // 0x0D69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x0D70(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0DC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0DC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B77[0xE];                                     // 0x0DC2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0DD0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x1660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x1668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x1669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B78[0x6];                                     // 0x166A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x1670(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x1F00(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x1F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x1F31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x1F32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1F33(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddAmmoToRangeWeapon) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_AddAmmoToRangeWeapon");
static_assert(sizeof(BP_PlayerInventory_C_AddAmmoToRangeWeapon) == 0x001F40, "Wrong size on BP_PlayerInventory_C_AddAmmoToRangeWeapon");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, WeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartSlot) == 0x000050, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, Split) == 0x0000A0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, ShowNotification) == 0x0000A1, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::ShowNotification' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, RangeWeaponL) == 0x0000A8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::RangeWeaponL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, RootSlotL) == 0x0000B0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::RootSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, RotatedL) == 0x000100, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, RemainderL) == 0x000101, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartItemL) == 0x000108, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartingItemAmountL) == 0x000138, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartingItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, AddAmountL) == 0x00013C, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::AddAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartItemDetailsL) == 0x000140, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, EndSlotInStartInvL) == 0x0009D0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::EndSlotInStartInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartSlotInEndInvL) == 0x0009D1, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartSlotInEndInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, WeaponInventoryL) == 0x0009D8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::WeaponInventoryL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, StartSlotL) == 0x0009E0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::StartSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, WeaponSlotL) == 0x000A30, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000A80, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_DynamicCast_bSuccess) == 0x000A88, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SelectAttachmentItem_IsValid) == 0x000A89, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000A90, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails) == 0x000AD8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000B10, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000B48, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000B50, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000B51, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000B58, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000B90, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000B94, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_3) == 0x000B98, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_FindEmptySlots_SpaceFound) == 0x000BD0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_FindEmptySlots_Rotated) == 0x000BD1, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_FindEmptySlots_FoundSlots) == 0x000BD8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Array_Get_Item) == 0x000BE8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_4) == 0x000C38, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000C70, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000C78, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, Temp_object_Variable) == 0x000CC8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000CD0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_AddWeightCheck_CanAdd) == 0x000CD4, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_AddWeightCheck_ItemCount) == 0x000CD8, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Greater_IntInt_ReturnValue) == 0x000CDC, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_5) == 0x000CE0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, Temp_bool_Variable) == 0x000D18, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_MakeStruct_S_NotificationDetails_6) == 0x000D20, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_MakeStruct_S_NotificationDetails_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_Select_Default) == 0x000D58, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000D60, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000D61, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000D64, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x000D68, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x000D70, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000DC0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_ItemDetails_ItemFound) == 0x000DC1, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000DD0, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x001660, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, K2Node_ClassDynamicCast_bSuccess) == 0x001668, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x001669, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x001670, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_SGK_InvSlotItem_InvItem) == 0x001F00, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x001F30, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_IsItemInParentInv_IsInInv) == 0x001F31, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_IsItemInParentInv_IsInInv_1) == 0x001F32, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAmmoToRangeWeapon, CallFunc_IsValid_ReturnValue) == 0x001F33, "Member 'BP_PlayerInventory_C_AddAmmoToRangeWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddAttachmentFromSlot
// 0x0DA0 (0x0DA0 - 0x0000)
struct BP_PlayerInventory_C_AddAttachmentFromSlot final
{
public:
	struct FS_InvSlotID                           Attachment_Item_ID;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B79[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   AttachmentDetailsL;                                // 0x0020(0x02A0)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FS_InvItem                             AttachmentItemL;                                   // 0x02C0(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          PlayAttachAnimL;                                   // 0x02F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameInventoryL;                                    // 0x02F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7A[0x6];                                     // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             WeaponSlotL;                                       // 0x02F8(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             AttachmentSlotL;                                   // 0x0348(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment;      // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7B[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details; // 0x03A0(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7C[0x7];                                     // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment_1;    // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7D[0x6];                                     // 0x0652(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details_1; // 0x0658(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x08F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x08FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x08FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7E[0x4];                                     // 0x08FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0900(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment_2;    // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B7F[0x7];                                     // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details_2; // 0x0940(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0BE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0BE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0BE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B80[0x3];                                     // 0x0BE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0BE8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x0C30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound;                    // 0x0C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B81[0x5];                                     // 0x0C3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x0C40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_1;                  // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B82[0x7];                                     // 0x0C49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_1;                    // 0x0C50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_2;                  // 0x0C58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B83[0x7];                                     // 0x0C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_2;                    // 0x0C60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterWeapon_C*                     K2Node_DynamicCast_AsBP_Master_Weapon;             // 0x0C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayAttachWeaponAnim_ReturnValue;         // 0x0C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B84[0x6];                                     // 0x0C72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAttachment_C*                 CallFunc_AddNewAttachment_NewAttachment;           // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B85[0x7];                                     // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0C88(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0CC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0CC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0CC2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B86[0x5];                                     // 0x0CC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0CC8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B87[0x7];                                     // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_SelfItem_self_CastInput;              // 0x0D08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0D18(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment; // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0D49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B88[0x6];                                     // 0x0D4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x0D50(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddAttachmentFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AddAttachmentFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_AddAttachmentFromSlot) == 0x000DA0, "Wrong size on BP_PlayerInventory_C_AddAttachmentFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, Attachment_Item_ID) == 0x000000, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::Attachment_Item_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, ShowNotifications) == 0x000018, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, AttachmentDetailsL) == 0x000020, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::AttachmentDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, AttachmentItemL) == 0x0002C0, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::AttachmentItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, PlayAttachAnimL) == 0x0002F0, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::PlayAttachAnimL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, SameInventoryL) == 0x0002F1, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::SameInventoryL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, WeaponSlotL) == 0x0002F8, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, AttachmentSlotL) == 0x000348, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::AttachmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Is_Attachment) == 0x000398, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Attachment_Details) == 0x0003A0, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue) == 0x000640, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000648, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_bSuccess) == 0x000650, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Is_Attachment_1) == 0x000651, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Is_Attachment_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Attachment_Details_1) == 0x000658, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Attachment_Details_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0008F8, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_1) == 0x0008F9, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_2) == 0x0008FA, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0008FB, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_MakeStruct_S_NotificationDetails) == 0x000900, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Is_Attachment_2) == 0x000938, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Is_Attachment_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentDetails_Attachment_Details_2) == 0x000940, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentDetails_Attachment_Details_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000BE0, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000BE1, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_3) == 0x000BE2, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_BooleanOR_ReturnValue) == 0x000BE3, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SelectAttachmentItem_IsValid) == 0x000BE4, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000BE8, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x000C30, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_bSuccess_1) == 0x000C38, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000C39, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_AnimFound) == 0x000C3A, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_AnimFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_Montage) == 0x000C40, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_AnimFound_1) == 0x000C48, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_AnimFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_Montage_1) == 0x000C50, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_AnimFound_2) == 0x000C58, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_AnimFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_FindMontage_Montage_2) == 0x000C60, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_FindMontage_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_AsBP_Master_Weapon) == 0x000C68, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_DynamicCast_bSuccess_2) == 0x000C70, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_PlayAttachWeaponAnim_ReturnValue) == 0x000C71, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_PlayAttachWeaponAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_AddNewAttachment_NewAttachment) == 0x000C78, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_AddNewAttachment_NewAttachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000C80, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000C88, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_4) == 0x000CC0, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_5) == 0x000CC1, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000CC2, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000CC8, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_IsValid_ReturnValue_6) == 0x000D00, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_SelfItem_self_CastInput) == 0x000D08, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_SelfItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_SelfItem_SelfItem) == 0x000D18, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment) == 0x000D48, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000D49, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddAttachmentFromSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x000D50, "Member 'BP_PlayerInventory_C_AddAttachmentFromSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddItemToContainer
// 0x0210 (0x0210 - 0x0000)
struct BP_PlayerInventory_C_AddItemToContainer final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ContainerSlot;                                     // 0x0030(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RemainingItem;                                     // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B89[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             InvItem;                                           // 0x0088(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x00B8(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  ContainerInvL;                                     // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00F0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8A[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0130(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8B[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0188(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8C[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x01C8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x01F8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ParentInventoryCheck_AllowAdd;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddItemToContainer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AddItemToContainer");
static_assert(sizeof(BP_PlayerInventory_C_AddItemToContainer) == 0x000210, "Wrong size on BP_PlayerInventory_C_AddItemToContainer");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, Item) == 0x000000, "Member 'BP_PlayerInventory_C_AddItemToContainer::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, ContainerSlot) == 0x000030, "Member 'BP_PlayerInventory_C_AddItemToContainer::ContainerSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, RemainingItem) == 0x000080, "Member 'BP_PlayerInventory_C_AddItemToContainer::RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, InvItem) == 0x000088, "Member 'BP_PlayerInventory_C_AddItemToContainer::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, ItemL) == 0x0000B8, "Member 'BP_PlayerInventory_C_AddItemToContainer::ItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, ContainerInvL) == 0x0000E8, "Member 'BP_PlayerInventory_C_AddItemToContainer::ContainerInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, K2Node_MakeStruct_S_NotificationDetails) == 0x0000F0, "Member 'BP_PlayerInventory_C_AddItemToContainer::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000128, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000130, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000188, "Member 'BP_PlayerInventory_C_AddItemToContainer::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_AddItem_RemainingItem) == 0x0001C0, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_AddItem_RemainingInvItem) == 0x0001C8, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_AddItem_NewItemSlot) == 0x0001F8, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddItemToContainer, CallFunc_ParentInventoryCheck_AllowAdd) == 0x000208, "Member 'BP_PlayerInventory_C_AddItemToContainer::CallFunc_ParentInventoryCheck_AllowAdd' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddNewInvPanel
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_AddNewInvPanel final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Internal;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddNewInvPanel) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AddNewInvPanel");
static_assert(sizeof(BP_PlayerInventory_C_AddNewInvPanel) == 0x000010, "Wrong size on BP_PlayerInventory_C_AddNewInvPanel");
static_assert(offsetof(BP_PlayerInventory_C_AddNewInvPanel, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_AddNewInvPanel::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddNewInvPanel, Internal) == 0x000008, "Member 'BP_PlayerInventory_C_AddNewInvPanel::Internal' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AddQuickSlots
// 0x0330 (0x0330 - 0x0000)
struct BP_PlayerInventory_C_AddQuickSlots final
{
public:
	struct FS_InvItem                             EquipmentItem;                                     // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0040(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8E[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1; // 0x01B8(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AddQuickSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AddQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_AddQuickSlots) == 0x000330, "Wrong size on BP_PlayerInventory_C_AddQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, EquipmentItem) == 0x000000, "Member 'BP_PlayerInventory_C_AddQuickSlots::EquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, Param_Inventory) == 0x000030, "Member 'BP_PlayerInventory_C_AddQuickSlots::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000038, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000040, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1) == 0x0001B0, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1) == 0x0001B8, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000328, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_IsValid_ReturnValue) == 0x000329, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AddQuickSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00032A, "Member 'BP_PlayerInventory_C_AddQuickSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AllRepairActorCheck
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerInventory_C_AllRepairActorCheck final
{
public:
	TArray<struct FS_RepairActors>                RepairActors;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B8F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_RepairActors                        CallFunc_Array_Get_Item;                           // 0x0020(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RepairActorCheck_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B90[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AllRepairActorCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AllRepairActorCheck");
static_assert(sizeof(BP_PlayerInventory_C_AllRepairActorCheck) == 0x000048, "Wrong size on BP_PlayerInventory_C_AllRepairActorCheck");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, RepairActors) == 0x000000, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::RepairActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, CallFunc_RepairActorCheck_ReturnValue) == 0x000041, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::CallFunc_RepairActorCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AllRepairActorCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_PlayerInventory_C_AllRepairActorCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ApplyAttachment
// 0x0510 (0x0510 - 0x0000)
struct BP_PlayerInventory_C_ApplyAttachment final
{
public:
	struct FS_InvSlotID                           AttachmentItemID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnAttachment;                                   // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B91[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             AttachmentItemL;                                   // 0x0020(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             AttachmentSlotL;                                   // 0x0050(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SameInventoryL;                                    // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B92[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B93[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x00B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B94[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B95[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x0110(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0160(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B96[0x3];                                     // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B97[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment;      // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B98[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details; // 0x01C0(0x02A0)(HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x0460(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B99[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x04B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9A[0x3];                                     // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9B[0x7];                                     // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x04D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9C[0x6];                                     // 0x04E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9D[0x4];                                     // 0x04F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_2;                         // 0x04F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ApplyAttachment) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ApplyAttachment");
static_assert(sizeof(BP_PlayerInventory_C_ApplyAttachment) == 0x000510, "Wrong size on BP_PlayerInventory_C_ApplyAttachment");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, AttachmentItemID) == 0x000000, "Member 'BP_PlayerInventory_C_ApplyAttachment::AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_ApplyAttachment::WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, SpawnAttachment) == 0x000018, "Member 'BP_PlayerInventory_C_ApplyAttachment::SpawnAttachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, ShowNotifications) == 0x000019, "Member 'BP_PlayerInventory_C_ApplyAttachment::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, AttachmentItemL) == 0x000020, "Member 'BP_PlayerInventory_C_ApplyAttachment::AttachmentItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, AttachmentSlotL) == 0x000050, "Member 'BP_PlayerInventory_C_ApplyAttachment::AttachmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, SameInventoryL) == 0x0000A0, "Member 'BP_PlayerInventory_C_ApplyAttachment::SameInventoryL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, K2Node_MakeStruct_S_InvSlot) == 0x0000B0, "Member 'BP_PlayerInventory_C_ApplyAttachment::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsItemInParentInv_IsInInv) == 0x000100, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000108, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, K2Node_MakeStruct_S_InvSlot_1) == 0x000110, "Member 'BP_PlayerInventory_C_ApplyAttachment::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, K2Node_MakeStruct_S_NotificationDetails) == 0x000160, "Member 'BP_PlayerInventory_C_ApplyAttachment::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsItemInParentInv_IsInInv_1) == 0x000198, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Loop_Counter_Variable_1) == 0x00019C, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Array_Index_Variable_1) == 0x0001A4, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Loop_Counter_Variable_2) == 0x0001AC, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, Temp_int_Array_Index_Variable_2) == 0x0001B4, "Member 'BP_PlayerInventory_C_ApplyAttachment::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsValid_ReturnValue_2) == 0x0001B8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_SGK_AttachmentDetails_Is_Attachment) == 0x0001B9, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_SGK_AttachmentDetails_Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_SGK_AttachmentDetails_Attachment_Details) == 0x0001C0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_SGK_AttachmentDetails_Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x000460, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0004B0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x0004B8, "Member 'BP_PlayerInventory_C_ApplyAttachment::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, K2Node_DynamicCast_bSuccess) == 0x0004C0, "Member 'BP_PlayerInventory_C_ApplyAttachment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_AddUnique_ReturnValue) == 0x0004C4, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsValid_ReturnValue_3) == 0x0004C8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Get_Item) == 0x0004D0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Length_ReturnValue) == 0x0004D8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0004DC, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x0004E0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_IsValid_ReturnValue_4) == 0x0004E1, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Get_Item_1) == 0x0004E8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0004F0, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Get_Item_2) == 0x0004F8, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Length_ReturnValue_1) == 0x000500, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Array_Length_ReturnValue_2) == 0x000504, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Less_IntInt_ReturnValue_1) == 0x000508, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ApplyAttachment, CallFunc_Less_IntInt_ReturnValue_2) == 0x000509, "Member 'BP_PlayerInventory_C_ApplyAttachment::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToAddItem
// 0x01D8 (0x01D8 - 0x0000)
struct BP_PlayerInventory_C_AttemptToAddItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          StackSearch;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainingItem;                                     // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9E[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             RemainingInvItem;                                  // 0x0038(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           NewItemSlot;                                       // 0x0068(0x0010)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             AddingItemL;                                       // 0x0078(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00A8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x00E8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0118(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA0[0x3];                                     // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA1[0x6];                                     // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0140(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem_1;                  // 0x018D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA2[0x2];                                     // 0x018E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem_1;               // 0x0190(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot_1;                    // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToAddItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AttemptToAddItem");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToAddItem) == 0x0001D8, "Wrong size on BP_PlayerInventory_C_AttemptToAddItem");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToAddItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, StackSearch) == 0x000030, "Member 'BP_PlayerInventory_C_AttemptToAddItem::StackSearch' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, ShowNotifications) == 0x000031, "Member 'BP_PlayerInventory_C_AttemptToAddItem::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, RemainingItem) == 0x000032, "Member 'BP_PlayerInventory_C_AttemptToAddItem::RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, RemainingInvItem) == 0x000038, "Member 'BP_PlayerInventory_C_AttemptToAddItem::RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, NewItemSlot) == 0x000068, "Member 'BP_PlayerInventory_C_AttemptToAddItem::NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, AddingItemL) == 0x000078, "Member 'BP_PlayerInventory_C_AttemptToAddItem::AddingItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, K2Node_MakeStruct_S_NotificationDetails) == 0x0000A8, "Member 'BP_PlayerInventory_C_AttemptToAddItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_RemainingItem) == 0x0000E0, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_RemainingInvItem) == 0x0000E8, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_NewItemSlot) == 0x000118, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, Temp_int_Variable) == 0x000128, "Member 'BP_PlayerInventory_C_AttemptToAddItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_MakeLiteralInt_ReturnValue) == 0x00012C, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_Conv_IntToByte_ReturnValue) == 0x000130, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000134, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_GetValidValue_ReturnValue) == 0x000138, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000139, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000140, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_IsValid_ReturnValue) == 0x00018C, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_RemainingItem_1) == 0x00018D, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_RemainingItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_RemainingInvItem_1) == 0x000190, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_RemainingInvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_AddItem_NewItemSlot_1) == 0x0001C0, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_AddItem_NewItemSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_PlayerInventory_C_AttemptToAddItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToAddItemToSlot
// 0x13D0 (0x13D0 - 0x0000)
struct BP_PlayerInventory_C_AttemptToAddItemToSlot final
{
public:
	struct FS_InvSlot                             Inv_Item_ID;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FDataTableRowHandle                    Item;                                              // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Amount;                                            // 0x0060(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA3[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             NewItemL;                                          // 0x0068(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_1BA4[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x00A0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             SlotL;                                             // 0x0930(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0988(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA5[0x7];                                     // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x09A8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA6[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x09E0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x0A10(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0A28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA7[0x7];                                     // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0A40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x0A48(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0A78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2;  // 0x0A80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA8[0x7];                                     // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_2; // 0x0A98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_2;                  // 0x0AA0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BA9[0x7];                                     // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x0AD8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1;        // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAA[0x7];                                     // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots_1;          // 0x0AF0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0B00(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAB[0xF];                                     // 0x0B31(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B40(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToAddItemToSlot) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_AttemptToAddItemToSlot");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToAddItemToSlot) == 0x0013D0, "Wrong size on BP_PlayerInventory_C_AttemptToAddItemToSlot");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, Inv_Item_ID) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::Inv_Item_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, Item) == 0x000050, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, Amount) == 0x000060, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, NewItemL) == 0x000068, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, ItemDetailsL) == 0x0000A0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, SlotL) == 0x000930, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::SlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_GetGameMode_ReturnValue) == 0x000980, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000988, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_bSuccess) == 0x000998, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0009A0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_CreateNewItem_NewItem) == 0x0009A8, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_AttemptToAddItem_RemainingItem) == 0x0009D8, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x0009E0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_AttemptToAddItem_NewItemSlot) == 0x000A10, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_GetGameMode_ReturnValue_1) == 0x000A20, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000A28, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_bSuccess_1) == 0x000A38, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000A40, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_CreateNewItem_NewItem_1) == 0x000A48, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_GetGameMode_ReturnValue_2) == 0x000A78, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2) == 0x000A80, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_DynamicCast_bSuccess_2) == 0x000A90, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_GetGlobalInventory_GlobalInventory_2) == 0x000A98, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_GetGlobalInventory_GlobalInventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_CreateNewItem_NewItem_2) == 0x000AA0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_CreateNewItem_NewItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x000AD0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x000AD8, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1) == 0x000AE8, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_RootSpaceCheck_FoundSlots_1) == 0x000AF0, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_RootSpaceCheck_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, K2Node_MakeStruct_S_InvItem) == 0x000B00, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B30, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToAddItemToSlot, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B40, "Member 'BP_PlayerInventory_C_AttemptToAddItemToSlot::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToEquipItem
// 0x01C0 (0x01C0 - 0x0000)
struct BP_PlayerInventory_C_AttemptToEquipItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ItemEquipped;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCanEquip_CanEquip;                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               CallFunc_CheckIfCanEquip_FreeSlot;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAC[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0038(0x0170)(HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x01A8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToEquipItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_AttemptToEquipItem");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToEquipItem) == 0x0001C0, "Wrong size on BP_PlayerInventory_C_AttemptToEquipItem");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, ItemEquipped) == 0x000030, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_CheckIfCanEquip_CanEquip) == 0x000031, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_CheckIfCanEquip_CanEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_CheckIfCanEquip_FreeSlot) == 0x000032, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_CheckIfCanEquip_FreeSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000033, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000038, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, K2Node_MakeStruct_S_EquipmentSlotID) == 0x0001A8, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipItem, CallFunc_EquipItem_ItemEquipped) == 0x0001B9, "Member 'BP_PlayerInventory_C_AttemptToEquipItem::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToEquipWeapon
// 0x0930 (0x0930 - 0x0000)
struct BP_PlayerInventory_C_AttemptToEquipWeapon final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ShowNotification;                                  // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WeaponEquipped;                                    // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 ItemWeaponSlot;                                    // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 SlotL;                                             // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAD[0xB];                                     // 0x0035(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAE[0x7];                                     // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x08D8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BAF[0x7];                                     // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x08F0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindCompatiableWeaponSlot_ReturnValue;    // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 CallFunc_FindCompatiableWeaponSlot_Slot;           // 0x0929(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToEquipWeapon) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_AttemptToEquipWeapon");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToEquipWeapon) == 0x000930, "Wrong size on BP_PlayerInventory_C_AttemptToEquipWeapon");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, ShowNotification) == 0x000030, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::ShowNotification' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, WeaponEquipped) == 0x000031, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::WeaponEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, ItemWeaponSlot) == 0x000032, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::ItemWeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, SlotL) == 0x000033, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::SlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_SGK_ItemDetails_ItemFound) == 0x000034, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_ClassIsChildOf_ReturnValue) == 0x0008D0, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, K2Node_MakeStruct_S_WeaponSlotID) == 0x0008D8, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_EquipWeapon_Return_Value) == 0x0008E8, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, K2Node_MakeStruct_S_NotificationDetails) == 0x0008F0, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_FindCompatiableWeaponSlot_ReturnValue) == 0x000928, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_FindCompatiableWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToEquipWeapon, CallFunc_FindCompatiableWeaponSlot_Slot) == 0x000929, "Member 'BP_PlayerInventory_C_AttemptToEquipWeapon::CallFunc_FindCompatiableWeaponSlot_Slot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToHoldItem
// 0x1DB0 (0x1DB0 - 0x0000)
struct BP_PlayerInventory_C_AttemptToHoldItem final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ItemHeld;                                          // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB0[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     HoldableDetailsL;                                  // 0x0058(0x0150)(Edit, BlueprintVisible, HasGetValueTypeHash)
	uint8                                         Pad_1BB1[0x8];                                     // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x01B0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0A40(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0A70(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB2[0xF];                                     // 0x0AA1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0AB0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB3[0xF];                                     // 0x1341(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x1350(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB4[0x6];                                     // 0x1BE2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x1BE8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1C20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB5[0x7];                                     // 0x1C21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterWeapon_C*                     K2Node_DynamicCast_AsBP_Master_Weapon;             // 0x1C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB6[0x7];                                     // 0x1C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_2;                // 0x1C38(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x1C68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x1C71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB7[0x6];                                     // 0x1C72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_3;                // 0x1C78(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound;                    // 0x1CA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB8[0x6];                                     // 0x1CAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x1CB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x1CB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1CBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BB9[0x5];                                     // 0x1CBB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_4;                // 0x1CC0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_5;                // 0x1CF0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x1D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x1D21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBA[0xE];                                     // 0x1D22(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x1D30(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_1;                  // 0x1D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBB[0x7];                                     // 0x1D91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_1;                    // 0x1D98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x1DA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterHoldable_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x1DA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToHoldItem) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_AttemptToHoldItem");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToHoldItem) == 0x001DB0, "Wrong size on BP_PlayerInventory_C_AttemptToHoldItem");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, InvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, ItemHeld) == 0x000050, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::ItemHeld' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, HoldableDetailsL) == 0x000058, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::HoldableDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, ItemDetailsL) == 0x0001B0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x000A40, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000A70, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000AA0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000AB0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x001340, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x001350, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_ClassIsChildOf_ReturnValue) == 0x001BE0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_IsValid_ReturnValue) == 0x001BE1, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, K2Node_MakeStruct_S_NotificationDetails) == 0x001BE8, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_IsValid_ReturnValue_1) == 0x001C20, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, K2Node_DynamicCast_AsBP_Master_Weapon) == 0x001C28, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::K2Node_DynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, K2Node_DynamicCast_bSuccess) == 0x001C30, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem_2) == 0x001C38, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x001C68, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, K2Node_DynamicCast_bSuccess_1) == 0x001C70, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x001C71, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem_3) == 0x001C78, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_IsValid_ReturnValue_2) == 0x001CA8, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_FindMontage_AnimFound) == 0x001CA9, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_FindMontage_AnimFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_FindMontage_Montage) == 0x001CB0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001CB8, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x001CB9, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_BooleanAND_ReturnValue) == 0x001CBA, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem_4) == 0x001CC0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_SGK_InvSlotItem_InvItem_5) == 0x001CF0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_SGK_InvSlotItem_InvItem_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x001D20, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_K2_AttachToComponent_ReturnValue) == 0x001D21, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_GetSocketTransform_ReturnValue) == 0x001D30, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_FindMontage_AnimFound_1) == 0x001D90, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_FindMontage_AnimFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_FindMontage_Montage_1) == 0x001D98, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_FindMontage_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x001DA0, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToHoldItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x001DA8, "Member 'BP_PlayerInventory_C_AttemptToHoldItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.AttemptToPickupHold
// 0x0DA0 (0x0DA0 - 0x0000)
struct BP_PlayerInventory_C_AttemptToPickupHold final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ItemHeld;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemAdded;                                         // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemAddedL;                                        // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBC[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound;        // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBD[0x7];                                     // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails; // 0x08D8(0x0150)(HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0A2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound_1;      // 0x0A2E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBE[0x1];                                     // 0x0A2F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1; // 0x0A30(0x0150)(HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue_1;                 // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0B84(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToEquipWeapon_WeaponEquipped;      // 0x0B85(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 CallFunc_AttemptToEquipWeapon_ItemWeaponSlot;      // 0x0B86(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BBF[0x1];                                     // 0x0B87(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0B88(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC0[0x7];                                     // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x0BA0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x0BD0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound_2;      // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC1[0x7];                                     // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_2; // 0x0BE8(0x0150)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC2[0x7];                                     // 0x0D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0D40(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToHoldItem_ItemHeld;               // 0x0D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_AttemptToPickupHold) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_AttemptToPickupHold");
static_assert(sizeof(BP_PlayerInventory_C_AttemptToPickupHold) == 0x000DA0, "Wrong size on BP_PlayerInventory_C_AttemptToPickupHold");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, ItemHeld) == 0x000030, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::ItemHeld' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, ItemAdded) == 0x000031, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::ItemAdded' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, ItemAddedL) == 0x000032, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::ItemAddedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemDetails_ItemFound) == 0x000033, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemFound) == 0x0008D0, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails) == 0x0008D8, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_Set_Length_ReturnValue) == 0x000A28, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_ClassIsChildOf_ReturnValue) == 0x000A2C, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000A2D, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemFound_1) == 0x000A2E, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1) == 0x000A30, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_Set_Length_ReturnValue_1) == 0x000B80, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_Set_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_Greater_IntInt_ReturnValue) == 0x000B84, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToEquipWeapon_WeaponEquipped) == 0x000B85, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToEquipWeapon_WeaponEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToEquipWeapon_ItemWeaponSlot) == 0x000B86, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToEquipWeapon_ItemWeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, K2Node_MakeStruct_S_WeaponSlotID) == 0x000B88, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToAddItem_RemainingItem) == 0x000B98, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x000BA0, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToAddItem_NewItemSlot) == 0x000BD0, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemFound_2) == 0x000BE0, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_2) == 0x000BE8, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000D38, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000D40, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_AttemptToPickupHold, CallFunc_AttemptToHoldItem_ItemHeld) == 0x000D90, "Member 'BP_PlayerInventory_C_AttemptToPickupHold::CallFunc_AttemptToHoldItem_ItemHeld' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CancelCraftingQueue
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_CancelCraftingQueue final
{
public:
	struct FS_CraftingQueue                       CancelQueue;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CancelCraftingQueue) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CancelCraftingQueue");
static_assert(sizeof(BP_PlayerInventory_C_CancelCraftingQueue) == 0x000020, "Wrong size on BP_PlayerInventory_C_CancelCraftingQueue");
static_assert(offsetof(BP_PlayerInventory_C_CancelCraftingQueue, CancelQueue) == 0x000000, "Member 'BP_PlayerInventory_C_CancelCraftingQueue::CancelQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelCraftingQueue, CraftingInventory) == 0x000018, "Member 'BP_PlayerInventory_C_CancelCraftingQueue::CraftingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CancelReload
// 0x00D0 (0x00D0 - 0x0000)
struct BP_PlayerInventory_C_CancelReload final
{
public:
	TScriptInterface<class IBP_SGKHoldableInterface_C> CallFunc_SGK_HoldableMesh_self_CastInput;          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_SGK_HoldableMesh_Mesh;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC5[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0030(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC6[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0088(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC7[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CancelReload) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CancelReload");
static_assert(sizeof(BP_PlayerInventory_C_CancelReload) == 0x0000D0, "Wrong size on BP_PlayerInventory_C_CancelReload");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_SGK_HoldableMesh_self_CastInput) == 0x000000, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_SGK_HoldableMesh_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_SGK_HoldableMesh_Mesh) == 0x000010, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_SGK_HoldableMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000020, "Member 'BP_PlayerInventory_C_CancelReload::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerInventory_C_CancelReload::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue_2) == 0x00002A, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue_3) == 0x00002B, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_SGK_GetInvSlot_SlotFound) == 0x00002C, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000030, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue_4) == 0x000080, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, K2Node_SetFieldsInStruct_StructOut) == 0x000088, "Member 'BP_PlayerInventory_C_CancelReload::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, CallFunc_IsValid_ReturnValue_5) == 0x0000B8, "Member 'BP_PlayerInventory_C_CancelReload::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x0000C0, "Member 'BP_PlayerInventory_C_CancelReload::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CancelReload, K2Node_DynamicCast_bSuccess_1) == 0x0000C8, "Member 'BP_PlayerInventory_C_CancelReload::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CanInteract
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerInventory_C_CanInteract final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InAction_InAction;                        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CanInteract) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_CanInteract");
static_assert(sizeof(BP_PlayerInventory_C_CanInteract) == 0x000002, "Wrong size on BP_PlayerInventory_C_CanInteract");
static_assert(offsetof(BP_PlayerInventory_C_CanInteract, ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_CanInteract::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CanInteract, CallFunc_InAction_InAction) == 0x000001, "Member 'BP_PlayerInventory_C_CanInteract::CallFunc_InAction_InAction' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ChangeState
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerInventory_C_ChangeState final
{
public:
	E_CharacterState                              NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value_2;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StaminaStateCheck_CanUseState;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCA[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCB[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ChangeState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ChangeState");
static_assert(sizeof(BP_PlayerInventory_C_ChangeState) == 0x000060, "Wrong size on BP_PlayerInventory_C_ChangeState");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, NewState) == 0x000000, "Member 'BP_PlayerInventory_C_ChangeState::NewState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_IsServer_ReturnValue) == 0x000004, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_SetTimer_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000028, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_BooleanAND_ReturnValue) == 0x000029, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_IsValid_ReturnValue) == 0x00002A, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00002B, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_Value_1) == 0x00002D, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_ReturnValue_1) == 0x00002E, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_BooleanAND_ReturnValue_1) == 0x00002F, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_Value_2) == 0x000030, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_Map_Find_ReturnValue_2) == 0x000038, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_StaminaStateCheck_CanUseState) == 0x000039, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_StaminaStateCheck_CanUseState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000048, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000054, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ChangeState, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x000058, "Member 'BP_PlayerInventory_C_ChangeState::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CheckFFA
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_CheckFFA final
{
public:
	bool                                          FFA_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CheckFFA) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CheckFFA");
static_assert(sizeof(BP_PlayerInventory_C_CheckFFA) == 0x000020, "Wrong size on BP_PlayerInventory_C_CheckFFA");
static_assert(offsetof(BP_PlayerInventory_C_CheckFFA, FFA_) == 0x000000, "Member 'BP_PlayerInventory_C_CheckFFA::FFA_' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckFFA, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_CheckFFA::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckFFA, CallFunc_Contains_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_CheckFFA::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CheckRecipeCost
// 0x0360 (0x0360 - 0x0000)
struct BP_PlayerInventory_C_CheckRecipeCost final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveItems;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCraft;                                          // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCD[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      RecipeL;                                           // 0x0010(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCE[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x0128(0x0110)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BCF[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x0250(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound;  // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD0[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots;    // 0x0270(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots; // 0x02C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD1[0x2];                                     // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x02D8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound_1; // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD2[0x2];                                     // 0x02F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots_1;  // 0x02F8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1; // 0x0348(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CheckRecipeCost) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CheckRecipeCost");
static_assert(sizeof(BP_PlayerInventory_C_CheckRecipeCost) == 0x000360, "Wrong size on BP_PlayerInventory_C_CheckRecipeCost");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Recipe) == 0x000000, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Recipe' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Amount) == 0x000008, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, RemoveItems) == 0x00000C, "Member 'BP_PlayerInventory_C_CheckRecipeCost::RemoveItems' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CanCraft) == 0x00000D, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CanCraft' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, RecipeL) == 0x000010, "Member 'BP_PlayerInventory_C_CheckRecipeCost::RecipeL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x000120, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x000128, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Array_Length_ReturnValue) == 0x000238, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Temp_int_Array_Index_Variable) == 0x00023C, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Temp_int_Loop_Counter_Variable) == 0x000240, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Less_IntInt_ReturnValue) == 0x000244, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Add_IntInt_ReturnValue) == 0x000248, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Temp_int_Array_Index_Variable_1) == 0x00024C, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Array_Get_Item) == 0x000250, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Greater_IntInt_ReturnValue) == 0x000268, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_ItemsFound) == 0x000269, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_InvSlots) == 0x000270, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_InvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_AllInvSlots) == 0x0002C0, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_AllInvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x0002D0, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_BooleanAND_ReturnValue) == 0x0002D1, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, Temp_int_Loop_Counter_Variable_1) == 0x0002D4, "Member 'BP_PlayerInventory_C_CheckRecipeCost::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Array_Get_Item_1) == 0x0002D8, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Array_Length_ReturnValue_1) == 0x0002F0, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002F4, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_ItemsFound_1) == 0x0002F5, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_InvSlots_1) == 0x0002F8, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_InvSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1) == 0x000348, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CheckRecipeCost, CallFunc_Add_IntInt_ReturnValue_1) == 0x000358, "Member 'BP_PlayerInventory_C_CheckRecipeCost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClearContainerQuickSlots
// 0x00E8 (0x00E8 - 0x0000)
struct BP_PlayerInventory_C_ClearContainerQuickSlots final
{
public:
	class UBP_MasterInventory_C*                  InvComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         QuickSlotL;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD3[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             SlotL;                                             // 0x0010(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD4[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD5[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0078(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD6[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD7[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x00D8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClearContainerQuickSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClearContainerQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_ClearContainerQuickSlots) == 0x0000E8, "Wrong size on BP_PlayerInventory_C_ClearContainerQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, InvComponent) == 0x000000, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::InvComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, QuickSlotL) == 0x000008, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, SlotL) == 0x000010, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::SlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000060, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000064, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClearContainerQuickSlots, K2Node_MakeStruct_S_InvSlotID) == 0x0000D8, "Member 'BP_PlayerInventory_C_ClearContainerQuickSlots::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientAddCraftingListing
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ClientAddCraftingListing final
{
public:
	struct FS_CraftingQueue                       NewQueueListing;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientAddCraftingListing) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientAddCraftingListing");
static_assert(sizeof(BP_PlayerInventory_C_ClientAddCraftingListing) == 0x000020, "Wrong size on BP_PlayerInventory_C_ClientAddCraftingListing");
static_assert(offsetof(BP_PlayerInventory_C_ClientAddCraftingListing, NewQueueListing) == 0x000000, "Member 'BP_PlayerInventory_C_ClientAddCraftingListing::NewQueueListing' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientAddCraftingListing, CraftingInventory) == 0x000018, "Member 'BP_PlayerInventory_C_ClientAddCraftingListing::CraftingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientAddQuickSlots
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerInventory_C_ClientAddQuickSlots final
{
public:
	int32                                         AddAmount;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientAddQuickSlots) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientAddQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_ClientAddQuickSlots) == 0x000004, "Wrong size on BP_PlayerInventory_C_ClientAddQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_ClientAddQuickSlots, AddAmount) == 0x000000, "Member 'BP_PlayerInventory_C_ClientAddQuickSlots::AddAmount' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientClearCurrentItems
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientClearCurrentItems final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientClearCurrentItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientClearCurrentItems");
static_assert(sizeof(BP_PlayerInventory_C_ClientClearCurrentItems) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientClearCurrentItems");
static_assert(offsetof(BP_PlayerInventory_C_ClientClearCurrentItems, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientClearCurrentItems::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientClearQuickSlotItem
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerInventory_C_ClientClearQuickSlotItem final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientClearQuickSlotItem) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientClearQuickSlotItem");
static_assert(sizeof(BP_PlayerInventory_C_ClientClearQuickSlotItem) == 0x000004, "Wrong size on BP_PlayerInventory_C_ClientClearQuickSlotItem");
static_assert(offsetof(BP_PlayerInventory_C_ClientClearQuickSlotItem, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_ClientClearQuickSlotItem::QuickSlotIndex' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientCloseContainerWindow
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientCloseContainerWindow final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientCloseContainerWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientCloseContainerWindow");
static_assert(sizeof(BP_PlayerInventory_C_ClientCloseContainerWindow) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientCloseContainerWindow");
static_assert(offsetof(BP_PlayerInventory_C_ClientCloseContainerWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientCloseContainerWindow::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientCodeResult
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientCodeResult final
{
public:
	bool                                          Accepted;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientCodeResult) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientCodeResult");
static_assert(sizeof(BP_PlayerInventory_C_ClientCodeResult) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientCodeResult");
static_assert(offsetof(BP_PlayerInventory_C_ClientCodeResult, Accepted) == 0x000000, "Member 'BP_PlayerInventory_C_ClientCodeResult::Accepted' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientCreateNotification
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_ClientCreateNotification final
{
public:
	struct FS_NotificationDetails                 NotificationDetails;                               // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientCreateNotification) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientCreateNotification");
static_assert(sizeof(BP_PlayerInventory_C_ClientCreateNotification) == 0x000038, "Wrong size on BP_PlayerInventory_C_ClientCreateNotification");
static_assert(offsetof(BP_PlayerInventory_C_ClientCreateNotification, NotificationDetails) == 0x000000, "Member 'BP_PlayerInventory_C_ClientCreateNotification::NotificationDetails' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenContainerInv
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenContainerInv final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToggleInventory;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BD9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     InventorySlots;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenContainerInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenContainerInv");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenContainerInv) == 0x000020, "Wrong size on BP_PlayerInventory_C_ClientOpenContainerInv");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenContainerInv, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenContainerInv::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenContainerInv, Param_ToggleInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenContainerInv::Param_ToggleInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenContainerInv, InventorySlots) == 0x000010, "Member 'BP_PlayerInventory_C_ClientOpenContainerInv::InventorySlots' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenExtCookingMenu
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenExtCookingMenu final
{
public:
	class UBP_MasterInventory_C*                  CookingInventory;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_CookingSlot>                 CookingSlots;                                      // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenExtCookingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenExtCookingMenu");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenExtCookingMenu) == 0x000028, "Wrong size on BP_PlayerInventory_C_ClientOpenExtCookingMenu");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCookingMenu, CookingInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenExtCookingMenu::CookingInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCookingMenu, Param_Inventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenExtCookingMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCookingMenu, CookingSlots) == 0x000018, "Member 'BP_PlayerInventory_C_ClientOpenExtCookingMenu::CookingSlots' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenExtCraftingMenu
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenExtCraftingMenu final
{
public:
	class UBP_MasterInventory_C*                  MasterInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_CraftingQueue>               Param_CraftingQueue;                               // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CraftingBlocked;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenExtCraftingMenu");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu) == 0x000030, "Wrong size on BP_PlayerInventory_C_ClientOpenExtCraftingMenu");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu, MasterInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenExtCraftingMenu::MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu, Param_Inventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenExtCraftingMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu, Param_CraftingQueue) == 0x000018, "Member 'BP_PlayerInventory_C_ClientOpenExtCraftingMenu::Param_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtCraftingMenu, CraftingBlocked) == 0x000028, "Member 'BP_PlayerInventory_C_ClientOpenExtCraftingMenu::CraftingBlocked' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenExtEquipmentInv
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenExtEquipmentInv final
{
public:
	class UBP_EquipmentInventory_C*               EquipmentInventory;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenExtEquipmentInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenExtEquipmentInv");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenExtEquipmentInv) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientOpenExtEquipmentInv");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtEquipmentInv, EquipmentInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenExtEquipmentInv::EquipmentInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtEquipmentInv, Param_Inventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenExtEquipmentInv::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenExtInv
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenExtInv final
{
public:
	class UBP_MasterInventory_C*                  MasterInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenExtInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenExtInv");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenExtInv) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientOpenExtInv");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtInv, MasterInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenExtInv::MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenExtInv, Param_Inventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenExtInv::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenLockpad
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenLockpad final
{
public:
	bool                                          SetCode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Lock;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenLockpad) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenLockpad");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenLockpad) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientOpenLockpad");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenLockpad, SetCode) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenLockpad::SetCode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenLockpad, Lock) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenLockpad::Lock' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenVenderMenu
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenVenderMenu final
{
public:
	class UBP_MasterInventory_C*                  Param_VenderComponent;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0008(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenVenderMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenVenderMenu");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenVenderMenu) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientOpenVenderMenu");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenVenderMenu, Param_VenderComponent) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenVenderMenu::Param_VenderComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenVenderMenu, Param_Inventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenVenderMenu::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientOpenWeaponWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientOpenWeaponWindow final
{
public:
	class UBP_WeaponInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToggleInventory;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientOpenWeaponWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientOpenWeaponWindow");
static_assert(sizeof(BP_PlayerInventory_C_ClientOpenWeaponWindow) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientOpenWeaponWindow");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenWeaponWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientOpenWeaponWindow::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientOpenWeaponWindow, Param_ToggleInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientOpenWeaponWindow::Param_ToggleInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UnPauseCookingSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_UnPauseCookingSlot final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UnPauseCookingSlot) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_UnPauseCookingSlot");
static_assert(sizeof(BP_PlayerInventory_C_UnPauseCookingSlot) == 0x000008, "Wrong size on BP_PlayerInventory_C_UnPauseCookingSlot");
static_assert(offsetof(BP_PlayerInventory_C_UnPauseCookingSlot, Param_Index) == 0x000000, "Member 'BP_PlayerInventory_C_UnPauseCookingSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnPauseCookingSlot, Pause) == 0x000004, "Member 'BP_PlayerInventory_C_UnPauseCookingSlot::Pause' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientPlaceNamedBuildPart
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientPlaceNamedBuildPart final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerInventory_C_ClientPlaceNamedBuildPart) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientPlaceNamedBuildPart");
static_assert(sizeof(BP_PlayerInventory_C_ClientPlaceNamedBuildPart) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientPlaceNamedBuildPart");
static_assert(offsetof(BP_PlayerInventory_C_ClientPlaceNamedBuildPart, Param_Name) == 0x000000, "Member 'BP_PlayerInventory_C_ClientPlaceNamedBuildPart::Param_Name' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientPrimaryAction) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientPrimaryAction");
static_assert(sizeof(BP_PlayerInventory_C_ClientPrimaryAction) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientPrimaryAction");
static_assert(offsetof(BP_PlayerInventory_C_ClientPrimaryAction, KeyDown) == 0x000000, "Member 'BP_PlayerInventory_C_ClientPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientQuickSlotHighlight
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientQuickSlotHighlight final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Highlight;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientQuickSlotHighlight) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientQuickSlotHighlight");
static_assert(sizeof(BP_PlayerInventory_C_ClientQuickSlotHighlight) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientQuickSlotHighlight");
static_assert(offsetof(BP_PlayerInventory_C_ClientQuickSlotHighlight, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_ClientQuickSlotHighlight::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientQuickSlotHighlight, Highlight) == 0x000004, "Member 'BP_PlayerInventory_C_ClientQuickSlotHighlight::Highlight' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientRefreshCraftingList
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientRefreshCraftingList final
{
public:
	TArray<struct FDataTableRowHandle>            Recipes;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerInventory_C_ClientRefreshCraftingList) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientRefreshCraftingList");
static_assert(sizeof(BP_PlayerInventory_C_ClientRefreshCraftingList) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientRefreshCraftingList");
static_assert(offsetof(BP_PlayerInventory_C_ClientRefreshCraftingList, Recipes) == 0x000000, "Member 'BP_PlayerInventory_C_ClientRefreshCraftingList::Recipes' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientRemoveInvPanel
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientRemoveInvPanel final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientRemoveInvPanel) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientRemoveInvPanel");
static_assert(sizeof(BP_PlayerInventory_C_ClientRemoveInvPanel) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientRemoveInvPanel");
static_assert(offsetof(BP_PlayerInventory_C_ClientRemoveInvPanel, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientRemoveInvPanel::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientRemoveInvPanel, Condition) == 0x000008, "Member 'BP_PlayerInventory_C_ClientRemoveInvPanel::Condition' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientRemoveQuickSlots
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerInventory_C_ClientRemoveQuickSlots final
{
public:
	int32                                         RemoveAmount;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientRemoveQuickSlots) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientRemoveQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_ClientRemoveQuickSlots) == 0x000004, "Wrong size on BP_PlayerInventory_C_ClientRemoveQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_ClientRemoveQuickSlots, RemoveAmount) == 0x000000, "Member 'BP_PlayerInventory_C_ClientRemoveQuickSlots::RemoveAmount' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientRespawnPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientRespawnPlayer final
{
public:
	bool                                          Random;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientRespawnPlayer) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientRespawnPlayer");
static_assert(sizeof(BP_PlayerInventory_C_ClientRespawnPlayer) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientRespawnPlayer");
static_assert(offsetof(BP_PlayerInventory_C_ClientRespawnPlayer, Random) == 0x000000, "Member 'BP_PlayerInventory_C_ClientRespawnPlayer::Random' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientRestartConvertSlotTimer
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerInventory_C_ClientRestartConvertSlotTimer final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientRestartConvertSlotTimer) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientRestartConvertSlotTimer");
static_assert(sizeof(BP_PlayerInventory_C_ClientRestartConvertSlotTimer) == 0x000014, "Wrong size on BP_PlayerInventory_C_ClientRestartConvertSlotTimer");
static_assert(offsetof(BP_PlayerInventory_C_ClientRestartConvertSlotTimer, CookingSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientRestartConvertSlotTimer::CookingSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientResumeCookingSlotTimer
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerInventory_C_ClientResumeCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientResumeCookingSlotTimer) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientResumeCookingSlotTimer");
static_assert(sizeof(BP_PlayerInventory_C_ClientResumeCookingSlotTimer) == 0x000014, "Wrong size on BP_PlayerInventory_C_ClientResumeCookingSlotTimer");
static_assert(offsetof(BP_PlayerInventory_C_ClientResumeCookingSlotTimer, CookingSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientResumeCookingSlotTimer::CookingSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSecondaryAction) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientSecondaryAction");
static_assert(sizeof(BP_PlayerInventory_C_ClientSecondaryAction) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientSecondaryAction");
static_assert(offsetof(BP_PlayerInventory_C_ClientSecondaryAction, KeyDown) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetControlRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ClientSetControlRotation final
{
public:
	class AController*                            Controller;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetControlRotation) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientSetControlRotation");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetControlRotation) == 0x000020, "Wrong size on BP_PlayerInventory_C_ClientSetControlRotation");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetControlRotation, Controller) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetControlRotation::Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetControlRotation, Rotation) == 0x000008, "Member 'BP_PlayerInventory_C_ClientSetControlRotation::Rotation' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetCookingInventorySlot
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientSetCookingInventorySlot final
{
public:
	TArray<struct FS_InvSlot>                     NewParam;                                          // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetCookingInventorySlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientSetCookingInventorySlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetCookingInventorySlot) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientSetCookingInventorySlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetCookingInventorySlot, NewParam) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetCookingInventorySlot::NewParam' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetExtInvDetails
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerInventory_C_ClientSetExtInvDetails final
{
public:
	struct FS_ContainerDetails                    Details;                                           // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetExtInvDetails) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientSetExtInvDetails");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetExtInvDetails) == 0x000078, "Wrong size on BP_PlayerInventory_C_ClientSetExtInvDetails");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetExtInvDetails, Details) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetExtInvDetails::Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetExtInvDetails, Param_Inventory) == 0x000070, "Member 'BP_PlayerInventory_C_ClientSetExtInvDetails::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetIgnoreActor
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientSetIgnoreActor final
{
public:
	class AActor*                                 Param_IgnoreInteractActor;                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetIgnoreActor) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientSetIgnoreActor");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetIgnoreActor) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientSetIgnoreActor");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetIgnoreActor, Param_IgnoreInteractActor) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetIgnoreActor::Param_IgnoreInteractActor' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetInventoryOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientSetInventoryOpen final
{
public:
	bool                                          Param_InventoryOpen;                               // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetInventoryOpen) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientSetInventoryOpen");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetInventoryOpen) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientSetInventoryOpen");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetInventoryOpen, Param_InventoryOpen) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetInventoryOpen::Param_InventoryOpen' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientSetPlayerName
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientSetPlayerName final
{
public:
	class FText                                   Param_PlayerName;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerInventory_C_ClientSetPlayerName) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientSetPlayerName");
static_assert(sizeof(BP_PlayerInventory_C_ClientSetPlayerName) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientSetPlayerName");
static_assert(offsetof(BP_PlayerInventory_C_ClientSetPlayerName, Param_PlayerName) == 0x000000, "Member 'BP_PlayerInventory_C_ClientSetPlayerName::Param_PlayerName' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientStartCookingSlotTimer
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerInventory_C_ClientStartCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientStartCookingSlotTimer) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientStartCookingSlotTimer");
static_assert(sizeof(BP_PlayerInventory_C_ClientStartCookingSlotTimer) == 0x000014, "Wrong size on BP_PlayerInventory_C_ClientStartCookingSlotTimer");
static_assert(offsetof(BP_PlayerInventory_C_ClientStartCookingSlotTimer, CookingSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientStartCookingSlotTimer::CookingSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientStartCraftingListingTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ClientStartCraftingListingTimer final
{
public:
	class FName                                   CraftingRecipe;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientStartCraftingListingTimer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientStartCraftingListingTimer");
static_assert(sizeof(BP_PlayerInventory_C_ClientStartCraftingListingTimer) == 0x000010, "Wrong size on BP_PlayerInventory_C_ClientStartCraftingListingTimer");
static_assert(offsetof(BP_PlayerInventory_C_ClientStartCraftingListingTimer, CraftingRecipe) == 0x000000, "Member 'BP_PlayerInventory_C_ClientStartCraftingListingTimer::CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientStartCraftingListingTimer, CraftingInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ClientStartCraftingListingTimer::CraftingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateAttachment
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateAttachment final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateAttachment) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateAttachment");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateAttachment) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientUpdateAttachment");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateAttachment, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateAttachment::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateAttachmentItems
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateAttachmentItems final
{
public:
	TArray<struct FS_AttachmentSlot>              Attachments;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	const class UBP_WeaponInventory_C*            WeaponInventory;                                   // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateAttachmentItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateAttachmentItems");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateAttachmentItems) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientUpdateAttachmentItems");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateAttachmentItems, Attachments) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateAttachmentItems::Attachments' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateAttachmentItems, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_ClientUpdateAttachmentItems::WeaponInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateCookingSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateCookingSlot final
{
public:
	struct FS_InvSlot                             CookingSlot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateCookingSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateCookingSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateCookingSlot) == 0x000050, "Wrong size on BP_PlayerInventory_C_ClientUpdateCookingSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateCookingSlot, CookingSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateCookingSlot::CookingSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateCraftingListing
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateCraftingListing final
{
public:
	struct FS_CraftingQueue                       ListingQueue;                                      // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDB[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateCraftingListing) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateCraftingListing");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateCraftingListing) == 0x000020, "Wrong size on BP_PlayerInventory_C_ClientUpdateCraftingListing");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateCraftingListing, ListingQueue) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateCraftingListing::ListingQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateCraftingListing, CraftingInventory) == 0x000018, "Member 'BP_PlayerInventory_C_ClientUpdateCraftingListing::CraftingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateEquipmentSlot
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateEquipmentSlot final
{
public:
	struct FS_EquipmentSlot                       EquipmentSlot;                                     // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateEquipmentSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateEquipmentSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateEquipmentSlot) == 0x000048, "Wrong size on BP_PlayerInventory_C_ClientUpdateEquipmentSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateEquipmentSlot, EquipmentSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateEquipmentSlot::EquipmentSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateInvSlot
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateInvSlot final
{
public:
	struct FS_InvSlot                             RootInvSlot;                                       // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         HeightSlots;                                       // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WidthSlots;                                        // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateInvSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateInvSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateInvSlot) == 0x000060, "Wrong size on BP_PlayerInventory_C_ClientUpdateInvSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateInvSlot, RootInvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateInvSlot::RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateInvSlot, HeightSlots) == 0x000050, "Member 'BP_PlayerInventory_C_ClientUpdateInvSlot::HeightSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateInvSlot, WidthSlots) == 0x000054, "Member 'BP_PlayerInventory_C_ClientUpdateInvSlot::WidthSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateInvSlot, Rotated) == 0x000058, "Member 'BP_PlayerInventory_C_ClientUpdateInvSlot::Rotated' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateItemSlots
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateItemSlots final
{
public:
	TArray<struct FS_InvSlot>                     Slots;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_ContainerDetails                    Param_InventoryDetails;                            // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateItemSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateItemSlots");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateItemSlots) == 0x000088, "Wrong size on BP_PlayerInventory_C_ClientUpdateItemSlots");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateItemSlots, Slots) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateItemSlots::Slots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateItemSlots, Param_InventoryDetails) == 0x000010, "Member 'BP_PlayerInventory_C_ClientUpdateItemSlots::Param_InventoryDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateItemSlots, Param_Inventory) == 0x000080, "Member 'BP_PlayerInventory_C_ClientUpdateItemSlots::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateQuickSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateQuickSlot final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateQuickSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientUpdateQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateQuickSlot, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateQuickSlot::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateQuickSlot, QuickSlotIndex) == 0x000010, "Member 'BP_PlayerInventory_C_ClientUpdateQuickSlot::QuickSlotIndex' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateSlotsWithItems
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateSlotsWithItems final
{
public:
	TArray<struct FS_InvSlot>                     Slots;                                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateSlotsWithItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateSlotsWithItems");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateSlotsWithItems) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientUpdateSlotsWithItems");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateSlotsWithItems, Slots) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateSlotsWithItems::Slots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateSlotsWithItems, Param_Inventory) == 0x000010, "Member 'BP_PlayerInventory_C_ClientUpdateSlotsWithItems::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateState
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateState final
{
public:
	E_CharacterState                              CharacterState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateState) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateState");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateState) == 0x000001, "Wrong size on BP_PlayerInventory_C_ClientUpdateState");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateState, CharacterState) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateState::CharacterState' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateWeaponQuickSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot final
{
public:
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotID;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot, WeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot, QuickSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ClientUpdateWeaponQuickSlot::QuickSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUpdateWeaponSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_ClientUpdateWeaponSlot final
{
public:
	struct FS_WeaponSlot                          Weapon_Slot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUpdateWeaponSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ClientUpdateWeaponSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUpdateWeaponSlot) == 0x000050, "Wrong size on BP_PlayerInventory_C_ClientUpdateWeaponSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUpdateWeaponSlot, Weapon_Slot) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUpdateWeaponSlot::Weapon_Slot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ClientUseQuickSlot
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ClientUseQuickSlot final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantPlacement;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ClientUseQuickSlot) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ClientUseQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_ClientUseQuickSlot) == 0x000008, "Wrong size on BP_PlayerInventory_C_ClientUseQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_ClientUseQuickSlot, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_ClientUseQuickSlot::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ClientUseQuickSlot, InstantPlacement) == 0x000004, "Member 'BP_PlayerInventory_C_ClientUseQuickSlot::InstantPlacement' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CloseCodeLockUI
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_CloseCodeLockUI final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CloseCodeLockUI) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CloseCodeLockUI");
static_assert(sizeof(BP_PlayerInventory_C_CloseCodeLockUI) == 0x000020, "Wrong size on BP_PlayerInventory_C_CloseCodeLockUI");
static_assert(offsetof(BP_PlayerInventory_C_CloseCodeLockUI, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_CloseCodeLockUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseCodeLockUI, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_CloseCodeLockUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseCodeLockUI, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_CloseCodeLockUI::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseCodeLockUI, CallFunc_GetPlayerController_ReturnValue_2) == 0x000018, "Member 'BP_PlayerInventory_C_CloseCodeLockUI::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CloseInventory
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_CloseInventory final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDD[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CloseInventory) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CloseInventory");
static_assert(sizeof(BP_PlayerInventory_C_CloseInventory) == 0x000020, "Wrong size on BP_PlayerInventory_C_CloseInventory");
static_assert(offsetof(BP_PlayerInventory_C_CloseInventory, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_CloseInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseInventory, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerInventory_C_CloseInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_CloseInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseInventory, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_CloseInventory::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CloseInventory, CallFunc_GetPlayerController_ReturnValue_2) == 0x000018, "Member 'BP_PlayerInventory_C_CloseInventory::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CombineSlotStacks
// 0x13F0 (0x13F0 - 0x0000)
struct BP_PlayerInventory_C_CombineSlotStacks final
{
public:
	struct FS_InvSlot                             StartSlot;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             EndSlot;                                           // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SplitStack;                                        // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x00A2(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDE[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             StartItemL;                                        // 0x00A8(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             EndItemL;                                          // 0x00D8(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          StartSlotInEndInv;                                 // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndSlotInStartInv;                                 // 0x0109(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BDF[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FinalAddAmountL;                                   // 0x010C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE0[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartItemAmountL;                                  // 0x0114(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndItemAmountL;                                    // 0x0118(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackL;                                         // 0x011C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0120(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_3;          // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE1[0x3];                                     // 0x09D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x09D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE2[0x6];                                     // 0x09DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x09E0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0A30(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0A60(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE3[0x1];                                     // 0x0A9B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit;    // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0AA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0AA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit_1;  // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit_2;  // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0AAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0AAE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0AAF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0AB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0AB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0AB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x0AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE4[0x2];                                     // 0x0AB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x0AB8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0B08(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x0B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE5[0x2];                                     // 0x0B42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE6[0x3];                                     // 0x0B49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE7[0xF];                                     // 0x0B51(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B60(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CombineSlotStacks) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_CombineSlotStacks");
static_assert(sizeof(BP_PlayerInventory_C_CombineSlotStacks) == 0x0013F0, "Wrong size on BP_PlayerInventory_C_CombineSlotStacks");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, StartSlot) == 0x000000, "Member 'BP_PlayerInventory_C_CombineSlotStacks::StartSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, EndSlot) == 0x000050, "Member 'BP_PlayerInventory_C_CombineSlotStacks::EndSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, SplitStack) == 0x0000A0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::SplitStack' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, SpecialType) == 0x0000A1, "Member 'BP_PlayerInventory_C_CombineSlotStacks::SpecialType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, ShowNotifications) == 0x0000A2, "Member 'BP_PlayerInventory_C_CombineSlotStacks::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, StartItemL) == 0x0000A8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::StartItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, EndItemL) == 0x0000D8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::EndItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, StartSlotInEndInv) == 0x000108, "Member 'BP_PlayerInventory_C_CombineSlotStacks::StartSlotInEndInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, EndSlotInStartInv) == 0x000109, "Member 'BP_PlayerInventory_C_CombineSlotStacks::EndSlotInStartInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, FinalAddAmountL) == 0x00010C, "Member 'BP_PlayerInventory_C_CombineSlotStacks::FinalAddAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, RemainderL) == 0x000110, "Member 'BP_PlayerInventory_C_CombineSlotStacks::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, StartItemAmountL) == 0x000114, "Member 'BP_PlayerInventory_C_CombineSlotStacks::StartItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, EndItemAmountL) == 0x000118, "Member 'BP_PlayerInventory_C_CombineSlotStacks::EndItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, MaxStackL) == 0x00011C, "Member 'BP_PlayerInventory_C_CombineSlotStacks::MaxStackL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, ItemDetailsL) == 0x000120, "Member 'BP_PlayerInventory_C_CombineSlotStacks::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0009B0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0009B8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x0009C0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Multiply_IntFloat_ReturnValue_3) == 0x0009C8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Multiply_IntFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_AddWeightCheck_CanAdd) == 0x0009D0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_AddWeightCheck_ItemCount) == 0x0009D4, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0009D8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0009D9, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0009E0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_InvSlotItem_InvItem) == 0x000A30, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, K2Node_MakeStruct_S_NotificationDetails) == 0x000A60, "Member 'BP_PlayerInventory_C_CombineSlotStacks::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A98, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A99, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_BooleanOR_ReturnValue) == 0x000A9A, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_RemainingItemCount_RemainingItemLimit) == 0x000A9C, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_RemainingItemCount_RemainingItemLimit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000AA0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Greater_IntInt_ReturnValue) == 0x000AA1, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000AA2, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_BooleanOR_ReturnValue_1) == 0x000AA3, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_RemainingItemCount_RemainingItemLimit_1) == 0x000AA4, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_RemainingItemCount_RemainingItemLimit_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_RemainingItemCount_RemainingItemLimit_2) == 0x000AA8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_RemainingItemCount_RemainingItemLimit_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000AAC, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000AAD, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000AAE, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_BooleanOR_ReturnValue_2) == 0x000AAF, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000AB0, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000AB1, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000AB2, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Not_PreBool_ReturnValue) == 0x000AB3, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_BooleanAND_ReturnValue) == 0x000AB4, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x000AB5, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x000AB8, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000B08, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Subtract_IntInt_ReturnValue) == 0x000B38, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Add_IntInt_ReturnValue) == 0x000B3C, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_IsItemInParentInv_IsInInv) == 0x000B40, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_IsItemInParentInv_IsInInv_1) == 0x000B41, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Add_IntInt_ReturnValue_1) == 0x000B44, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000B48, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000B4C, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B50, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_CombineSlotStacks, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B60, "Member 'BP_PlayerInventory_C_CombineSlotStacks::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ConsumeItem
// 0x09B0 (0x09B0 - 0x0000)
struct BP_PlayerInventory_C_ConsumeItem final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Consumed;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE8[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             NewItemL;                                          // 0x0038(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ConsumableDetails                   ItemConsumableDetails;                             // 0x0068(0x0040)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE9[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x00B0(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BEA[0xE];                                     // 0x00F2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0100(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_IncreaseThirst_Amount_ImplicitCast;       // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IncreaseStamina_Amount_ImplicitCast;      // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_IncreaseHunger_Amount_ImplicitCast;       // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ConsumeItem) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_ConsumeItem");
static_assert(sizeof(BP_PlayerInventory_C_ConsumeItem) == 0x0009B0, "Wrong size on BP_PlayerInventory_C_ConsumeItem");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, Item) == 0x000000, "Member 'BP_PlayerInventory_C_ConsumeItem::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, Consumed) == 0x000030, "Member 'BP_PlayerInventory_C_ConsumeItem::Consumed' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, NewItemL) == 0x000038, "Member 'BP_PlayerInventory_C_ConsumeItem::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, ItemConsumableDetails) == 0x000068, "Member 'BP_PlayerInventory_C_ConsumeItem::ItemConsumableDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x0000A8, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x0000B0, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000F1, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000100, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_IncreaseThirst_Amount_ImplicitCast) == 0x000990, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_IncreaseThirst_Amount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_IncreaseStamina_Amount_ImplicitCast) == 0x000998, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_IncreaseStamina_Amount_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ConsumeItem, CallFunc_IncreaseHunger_Amount_ImplicitCast) == 0x0009A0, "Member 'BP_PlayerInventory_C_ConsumeItem::CallFunc_IncreaseHunger_Amount_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ContextMenu
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ContextMenu final
{
public:
	class UBP_InteractionContextMenu_C*           Param_ContextMenu;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ContextMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ContextMenu");
static_assert(sizeof(BP_PlayerInventory_C_ContextMenu) == 0x000010, "Wrong size on BP_PlayerInventory_C_ContextMenu");
static_assert(offsetof(BP_PlayerInventory_C_ContextMenu, Param_ContextMenu) == 0x000000, "Member 'BP_PlayerInventory_C_ContextMenu::Param_ContextMenu' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ContextMenu, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_ContextMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ContextMenu, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_PlayerInventory_C_ContextMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.CreateNotificationInChild
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_CreateNotificationInChild final
{
public:
	struct FS_NotificationDetails                 NotificationDetails;                               // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_CreateNotificationInChild) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_CreateNotificationInChild");
static_assert(sizeof(BP_PlayerInventory_C_CreateNotificationInChild) == 0x000038, "Wrong size on BP_PlayerInventory_C_CreateNotificationInChild");
static_assert(offsetof(BP_PlayerInventory_C_CreateNotificationInChild, NotificationDetails) == 0x000000, "Member 'BP_PlayerInventory_C_CreateNotificationInChild::NotificationDetails' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DecreaseHealth
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerInventory_C_DecreaseHealth final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayTakeDamageSound;                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFallDamage_;                                      // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BEB[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BEC[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0010(0x0014)()
	uint8                                         Pad_1BED[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AGameManager_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameManager_C*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BEE[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BEF[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF0[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0090(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF1[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF2[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DecreaseHealth) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DecreaseHealth");
static_assert(sizeof(BP_PlayerInventory_C_DecreaseHealth) == 0x0000C0, "Wrong size on BP_PlayerInventory_C_DecreaseHealth");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_DecreaseHealth::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, PlayTakeDamageSound) == 0x000004, "Member 'BP_PlayerInventory_C_DecreaseHealth::PlayTakeDamageSound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, bFallDamage_) == 0x000005, "Member 'BP_PlayerInventory_C_DecreaseHealth::bFallDamage_' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, Temp_bool_True_if_break_was_hit_Variable) == 0x000006, "Member 'BP_PlayerInventory_C_DecreaseHealth::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_PlayerInventory_C_DecreaseHealth::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_IsValid_ReturnValue) == 0x00000D, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_IsValid_ReturnValue_1) == 0x00000E, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, K2Node_MakeStruct_SlateColor) == 0x000010, "Member 'BP_PlayerInventory_C_DecreaseHealth::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_GetOwner_ReturnValue) == 0x000038, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, K2Node_DynamicCast_AsBP_SGKController) == 0x000048, "Member 'BP_PlayerInventory_C_DecreaseHealth::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'BP_PlayerInventory_C_DecreaseHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000058, "Member 'BP_PlayerInventory_C_DecreaseHealth::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_PlayerInventory_C_DecreaseHealth::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_PlayerInventory_C_DecreaseHealth::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Conv_TextToString_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Concat_StrStr_ReturnValue) == 0x000078, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Conv_StringToText_ReturnValue) == 0x000090, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_BooleanAND_ReturnValue) == 0x0000A8, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_IsValid_ReturnValue_3) == 0x0000B1, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHealth, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PlayerInventory_C_DecreaseHealth::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DecreaseHeldItemDurability
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_DecreaseHeldItemDurability final
{
public:
	double                                        DecreaseAmount;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DecreaseHeldItemDurability) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DecreaseHeldItemDurability");
static_assert(sizeof(BP_PlayerInventory_C_DecreaseHeldItemDurability) == 0x000010, "Wrong size on BP_PlayerInventory_C_DecreaseHeldItemDurability");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHeldItemDurability, DecreaseAmount) == 0x000000, "Member 'BP_PlayerInventory_C_DecreaseHeldItemDurability::DecreaseAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHeldItemDurability, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'BP_PlayerInventory_C_DecreaseHeldItemDurability::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DecreaseHunger
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_DecreaseHunger final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DecreaseHunger) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DecreaseHunger");
static_assert(sizeof(BP_PlayerInventory_C_DecreaseHunger) == 0x000020, "Wrong size on BP_PlayerInventory_C_DecreaseHunger");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHunger, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_DecreaseHunger::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHunger, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DecreaseHunger::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHunger, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_DecreaseHunger::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseHunger, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_PlayerInventory_C_DecreaseHunger::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DecreaseStamina
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_DecreaseStamina final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DecreaseStamina) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DecreaseStamina");
static_assert(sizeof(BP_PlayerInventory_C_DecreaseStamina) == 0x000020, "Wrong size on BP_PlayerInventory_C_DecreaseStamina");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseStamina, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_DecreaseStamina::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseStamina, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DecreaseStamina::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseStamina, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_DecreaseStamina::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseStamina, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_DecreaseStamina::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DecreaseThirst
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_DecreaseThirst final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DecreaseThirst) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DecreaseThirst");
static_assert(sizeof(BP_PlayerInventory_C_DecreaseThirst) == 0x000020, "Wrong size on BP_PlayerInventory_C_DecreaseThirst");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseThirst, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_DecreaseThirst::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseThirst, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DecreaseThirst::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseThirst, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_DecreaseThirst::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DecreaseThirst, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_PlayerInventory_C_DecreaseThirst::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DehydrationState
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerInventory_C_DehydrationState final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DehydrationState) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_DehydrationState");
static_assert(sizeof(BP_PlayerInventory_C_DehydrationState) == 0x000002, "Wrong size on BP_PlayerInventory_C_DehydrationState");
static_assert(offsetof(BP_PlayerInventory_C_DehydrationState, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_DehydrationState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DehydrationState, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_DehydrationState::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DelayPlayMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_DelayPlayMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DelayPlayMontage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DelayPlayMontage");
static_assert(sizeof(BP_PlayerInventory_C_DelayPlayMontage) == 0x000008, "Wrong size on BP_PlayerInventory_C_DelayPlayMontage");
static_assert(offsetof(BP_PlayerInventory_C_DelayPlayMontage, Montage) == 0x000000, "Member 'BP_PlayerInventory_C_DelayPlayMontage::Montage' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DestroyCharacterBody
// 0x0130 (0x0130 - 0x0000)
struct BP_PlayerInventory_C_DestroyCharacterBody final
{
public:
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0020(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF5[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0070(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF6[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF7[0x1];                                     // 0x0097(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0098(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF8[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BF9[0x5];                                     // 0x0103(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0108(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0118(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DestroyCharacterBody) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DestroyCharacterBody");
static_assert(sizeof(BP_PlayerInventory_C_DestroyCharacterBody) == 0x000130, "Wrong size on BP_PlayerInventory_C_DestroyCharacterBody");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_MakeLiteralInt_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000004, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, Temp_int_Variable) == 0x000010, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, Temp_int_Variable_1) == 0x000018, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001D, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_GetValidValue_ReturnValue) == 0x00001E, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001F, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_IsValid_ReturnValue_1) == 0x00006C, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_GetAttachedActors_OutActors) == 0x000070, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, Temp_int_Variable_2) == 0x000090, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000094, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_GetValidValue_ReturnValue_1) == 0x000095, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000096, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000098, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E8, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x0000F0, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_IsValid_ReturnValue_2) == 0x000101, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_IsValid_ReturnValue_3) == 0x000102, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, K2Node_MakeStruct_S_WeaponSlotID) == 0x000108, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000118, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyCharacterBody, CallFunc_IsValid_ReturnValue_4) == 0x000128, "Member 'BP_PlayerInventory_C_DestroyCharacterBody::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DestroyDeadCharacterBody
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PlayerInventory_C_DestroyDeadCharacterBody final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFA[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFB[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0010(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFC[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0060(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFD[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFE[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface_1;  // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BFF[0x3];                                     // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C00[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DestroyDeadCharacterBody) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DestroyDeadCharacterBody");
static_assert(sizeof(BP_PlayerInventory_C_DestroyDeadCharacterBody) == 0x0000F8, "Wrong size on BP_PlayerInventory_C_DestroyDeadCharacterBody");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, Temp_int_Variable) == 0x000004, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, Temp_int_Variable_1) == 0x000058, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00005C, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_IsValid_ReturnValue_1) == 0x00005D, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_GetValidValue_ReturnValue_1) == 0x00005E, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000060, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x0000B8, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_IsValid_ReturnValue_2) == 0x0000C9, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_IsValid_ReturnValue_3) == 0x0000CA, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000CC, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, K2Node_DynamicCast_AsBP_SGKInventory_Interface_1) == 0x0000D0, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::K2Node_DynamicCast_AsBP_SGKInventory_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_IsValid_ReturnValue_4) == 0x0000E9, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x0000EC, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyDeadCharacterBody, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000F4, "Member 'BP_PlayerInventory_C_DestroyDeadCharacterBody::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DestroyEquipmentItem
// 0x0060 (0x0060 - 0x0000)
struct BP_PlayerInventory_C_DestroyEquipmentItem final
{
public:
	E_EquipmentType                               EquipmentSlot;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C01[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0008(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0050(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DestroyEquipmentItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_DestroyEquipmentItem");
static_assert(sizeof(BP_PlayerInventory_C_DestroyEquipmentItem) == 0x000060, "Wrong size on BP_PlayerInventory_C_DestroyEquipmentItem");
static_assert(offsetof(BP_PlayerInventory_C_DestroyEquipmentItem, EquipmentSlot) == 0x000000, "Member 'BP_PlayerInventory_C_DestroyEquipmentItem::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyEquipmentItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_DestroyEquipmentItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DestroyEquipmentItem, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000050, "Member 'BP_PlayerInventory_C_DestroyEquipmentItem::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.DropItemFromSlot
// 0x0B30 (0x0B30 - 0x0000)
struct BP_PlayerInventory_C_DropItemFromSlot final
{
public:
	struct FS_InvSlotID                           SlotID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C02[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DropAmountL;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             SplitDropItemL;                                    // 0x0018(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SplitL;                                            // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C03[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuickSlotL;                                        // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             DropItemSlotL;                                     // 0x0050(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x00A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C04[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00F8(0x0038)(HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C05[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0147(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C06[0x6];                                     // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0150(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C07[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C08[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0198(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C09[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x01D0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItemAmount_ItemRemoved;             // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0A[0x6];                                     // 0x0A62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_2;                // 0x0A68(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0B[0x7];                                     // 0x0A99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_3;                // 0x0AA0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0AD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0AD3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0AD4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0C[0x3];                                     // 0x0AD5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0AD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0AE4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0D[0x3];                                     // 0x0AE5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0AE8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_4;                // 0x0AF8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_DropItemFromSlot) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_DropItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_DropItemFromSlot) == 0x000B30, "Wrong size on BP_PlayerInventory_C_DropItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, SlotID) == 0x000000, "Member 'BP_PlayerInventory_C_DropItemFromSlot::SlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, SpecialType) == 0x000010, "Member 'BP_PlayerInventory_C_DropItemFromSlot::SpecialType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, Split) == 0x000011, "Member 'BP_PlayerInventory_C_DropItemFromSlot::Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, DropAmountL) == 0x000014, "Member 'BP_PlayerInventory_C_DropItemFromSlot::DropAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, SplitDropItemL) == 0x000018, "Member 'BP_PlayerInventory_C_DropItemFromSlot::SplitDropItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, SplitL) == 0x000048, "Member 'BP_PlayerInventory_C_DropItemFromSlot::SplitL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, QuickSlotL) == 0x00004C, "Member 'BP_PlayerInventory_C_DropItemFromSlot::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, DropItemSlotL) == 0x000050, "Member 'BP_PlayerInventory_C_DropItemFromSlot::DropItemSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x0000A0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, Temp_int_Array_Index_Variable) == 0x0000F0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, K2Node_MakeStruct_S_NotificationDetails) == 0x0000F8, "Member 'BP_PlayerInventory_C_DropItemFromSlot::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000130, "Member 'BP_PlayerInventory_C_DropItemFromSlot::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'BP_PlayerInventory_C_DropItemFromSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_PlayerInventory_C_DropItemFromSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000140, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000144, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000145, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_BooleanAND_ReturnValue) == 0x000146, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000147, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_IsValid_ReturnValue_1) == 0x000149, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem) == 0x000150, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000180, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_FMod_Remainder) == 0x000188, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_FMod_ReturnValue) == 0x000190, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Greater_IntInt_ReturnValue) == 0x000194, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000195, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000198, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_ItemDetails_ItemFound) == 0x0001C8, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0001D0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A60, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_RemoveItemAmount_ItemRemoved) == 0x000A61, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_RemoveItemAmount_ItemRemoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem_2) == 0x000A68, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000A98, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem_3) == 0x000AA0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000AD0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000AD1, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000AD2, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_BooleanAND_ReturnValue_1) == 0x000AD3, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_IsValid_ReturnValue_2) == 0x000AD4, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Array_Get_Item) == 0x000AD8, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Array_Length_ReturnValue) == 0x000AE0, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000AE4, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, K2Node_MakeStruct_S_InvSlotID) == 0x000AE8, "Member 'BP_PlayerInventory_C_DropItemFromSlot::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem_4) == 0x000AF8, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_DropItemFromSlot, CallFunc_FMod_Dividend_ImplicitCast) == 0x000B28, "Member 'BP_PlayerInventory_C_DropItemFromSlot::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.EquipItemFromSlot
// 0x0138 (0x0138 - 0x0000)
struct BP_PlayerInventory_C_EquipItemFromSlot final
{
public:
	struct FS_InvSlotID                           SlotID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotL;                                        // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0E[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             EquipmentItemL;                                    // 0x0028(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             InvSlotL;                                          // 0x0058(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x00A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfCanEquip_CanEquip;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               CallFunc_CheckIfCanEquip_FreeSlot;                 // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C0F[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0100(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_EquipItemFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_EquipItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_EquipItemFromSlot) == 0x000138, "Wrong size on BP_PlayerInventory_C_EquipItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, SlotID) == 0x000000, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::SlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, EquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, QuickSlotL) == 0x000020, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, EquipmentItemL) == 0x000028, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::EquipmentItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, InvSlotL) == 0x000058, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x0000A8, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_CheckIfCanEquip_CanEquip) == 0x0000F8, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_CheckIfCanEquip_CanEquip' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_CheckIfCanEquip_FreeSlot) == 0x0000F9, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_CheckIfCanEquip_FreeSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_SGK_InvSlotItem_InvItem) == 0x000100, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000130, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipItemFromSlot, CallFunc_EquipItem_ItemEquipped) == 0x000131, "Member 'BP_PlayerInventory_C_EquipItemFromSlot::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.EquipWeaponFromSlot
// 0x0220 (0x0220 - 0x0000)
struct BP_PlayerInventory_C_EquipWeaponFromSlot final
{
public:
	struct FS_InvSlotID                           Slot_ID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ClearWeaponSlotKey;                                // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C10[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             WeaponItemL;                                       // 0x0028(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             InvSlotL;                                          // 0x0058(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x00A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x00F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C11[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0130(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C12[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0170(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C13[0x3];                                     // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x01C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_EquipWeaponFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_EquipWeaponFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_EquipWeaponFromSlot) == 0x000220, "Wrong size on BP_PlayerInventory_C_EquipWeaponFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, Weapon_Slot_ID) == 0x000010, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, ClearWeaponSlotKey) == 0x000020, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::ClearWeaponSlotKey' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, WeaponItemL) == 0x000028, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::WeaponItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, InvSlotL) == 0x000058, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x0000A8, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_SGK_InvSlotItem_InvItem) == 0x0000F8, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, K2Node_MakeStruct_S_NotificationDetails) == 0x000130, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_IsValid_ReturnValue_1) == 0x000168, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000169, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00016A, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_BooleanAND_ReturnValue) == 0x00016B, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000170, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001C0, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0001C1, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_BooleanOR_ReturnValue) == 0x0001C2, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0001C3, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001C4, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x0001C8, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_EquipWeaponFromSlot, CallFunc_EquipWeapon_Return_Value) == 0x000218, "Member 'BP_PlayerInventory_C_EquipWeaponFromSlot::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ExecuteUbergraph_BP_PlayerInventory
// 0x6700 (0x6700 - 0x0000)
struct BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C14[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_FPMontage;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_ItemMoveType                                Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C15[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             Temp_struct_Variable;                              // 0x0020(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             Temp_struct_Variable_1;                            // 0x0050(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             Temp_struct_Variable_2;                            // 0x0080(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C16[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C17[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              Temp_byte_Variable_1;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C18[0x1];                                     // 0x00C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C19[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AVictoryDanceVolume_C*                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1A[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1B[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA_;                            // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1C[0x5];                                     // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFFA_PlaceholderEndScreen_C*            CallFunc_Create_ReturnValue;                       // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__1;                          // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1D[0x7];                                     // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x01C0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1E[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_1;           // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1F[0x6];                                     // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C20[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C21[0x8];                                     // 0x0248(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0250(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABombItem_C*                            CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C22[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_DeathScreen_C*                      CallFunc_Create_ReturnValue_1;                     // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C23[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_2;           // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C24[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_1;        // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C25[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0350(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AFlagItem_C*                            CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C26[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C27[0x7];                                     // 0x03D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C28[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_2;        // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C29[0x7];                                     // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_1;          // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2A[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_3;        // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2B[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_EnemyInstigator;                // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_2;          // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2C[0x7];                                     // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2D[0x7];                                     // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_4;        // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2E[0xE];                                     // 0x0472(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0480(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2F[0x7];                                     // 0x0D11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0D18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0D28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0D38(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0D48(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0D58(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0D78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0D88(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0D98(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0DA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0DB8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0DD0(0x0018)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0DE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddStartingItems_Return;                  // 0x0DE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C30[0x6];                                     // 0x0DEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character_1;     // 0x0DF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C31[0x7];                                     // 0x0E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0E08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C32[0x7];                                     // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_2;     // 0x0E18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0E20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0E21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C33[0x6];                                     // 0x0E22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_3;           // 0x0E28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C34[0x7];                                     // 0x0E31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0E38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C35[0x7];                                     // 0x0E41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterClothingAttchment_C*>  CallFunc_AllEquipmentActors_Actors;                // 0x0E48(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0E58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C36[0x4];                                     // 0x0E5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_3;     // 0x0E60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C37[0x7];                                     // 0x0E69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface;     // 0x0E70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C38[0x7];                                     // 0x0E81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_2;                // 0x0E88(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C39[0x7];                                     // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_3;                // 0x0EA0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_3;                      // 0x0EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0EB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3A[0x4];                                     // 0x0EBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_Name_1;                         // 0x0EC8(0x0018)()
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0EE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0EE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0EE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0EE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3B[0x4];                                     // 0x0EE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0EE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0EF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3C[0x7];                                     // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x0F08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Random_1;                       // 0x0F11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3D[0xE];                                     // 0x0F12(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_FindSpawnPoint_SpawnLocation;             // 0x0F20(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0F80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x0F88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x0F90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0FB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0FC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0FE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0FE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0FE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3E[0x6];                                     // 0x0FEA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_6;        // 0x0FF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Random;                         // 0x0FF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsMelee;                        // 0x0FF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsKnife;                        // 0x0FFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C3F[0x1];                                     // 0x0FFB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MeleeAnim;                      // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Down;                           // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x1002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x1003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x1004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x1006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x1007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x1008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x100A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x100B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x100C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x100D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x100E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_CustomEvent_CharacterState_1;               // 0x100F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x1010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x1011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StaminaStateCheck_CanUseState;            // 0x1012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_CustomEvent_CharacterState;                 // 0x1013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C40[0x4];                                     // 0x1014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x1018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x1030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x1039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C41[0x6];                                     // 0x103A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlotID                    K2Node_CustomEvent_AttachmentID_1;                 // 0x1040(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_EndSlotID_1;                    // 0x1050(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DropItem_2;                     // 0x1060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_4;                      // 0x1061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x1062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C42[0x5];                                     // 0x1063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x1068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C43[0x7];                                     // 0x1071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlotID                    K2Node_CustomEvent_AttachmentID;                   // 0x1078(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_CustomEvent_WeaponInventory_2;              // 0x1088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SwapAttachments_ReturnValue;              // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C44[0x7];                                     // 0x1091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_AttachmentItemID;               // 0x1098(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_CustomEvent_WeaponInventory_1;              // 0x10A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x10B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddAttachmentFromSlot_ReturnValue;        // 0x10B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C45[0x6];                                     // 0x10B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_AttachmentSlot>              K2Node_CustomEvent_Attachments;                    // 0x10B8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	const class UBP_WeaponInventory_C*            K2Node_CustomEvent_WeaponInventory;                // 0x10C8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x10D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x10D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment;      // 0x10D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C46[0x5];                                     // 0x10D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details; // 0x10D8(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddAttachmentFromSlot_ReturnValue_1;      // 0x1379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C47[0x6];                                     // 0x137A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlotID                    K2Node_MakeStruct_S_AttachmentSlotID;              // 0x1380(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_1;   // 0x1390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C48[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_2;   // 0x13A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x13B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C49[0x7];                                     // 0x13B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_22;                   // 0x13C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x13C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_2;                              // 0x13C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x13CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4A[0x1];                                     // 0x13CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x13CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x13D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x13D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4B[0x2];                                     // 0x13D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x13D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x13D8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Actor_2;                        // 0x1420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time;                           // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4C[0x7];                                     // 0x1431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_IgnoreInteractActor;            // 0x1438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_3;                              // 0x1440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x1441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4D[0x6];                                     // 0x1442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x1448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_InvSlotID_3;                    // 0x1450(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_StartInventory;                 // 0x1460(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_TargetInventory;                // 0x1468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_SelfItem_self_CastInput;              // 0x1470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x1480(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_RemoveAmount;                   // 0x14B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x14B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4E[0xB];                                     // 0x14B5(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x14C0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4F[0x3];                                     // 0x1D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_AddAmount;                      // 0x1D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InventoryOpen_1;                // 0x1D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C50[0x7];                                     // 0x1D59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_InvSlotID_2;                    // 0x1D60(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ContainerDetails                    K2Node_CustomEvent_InventoryDetails_1;             // 0x1D70(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_21;                   // 0x1DE0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InventoryOpen;                  // 0x1DE8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C51[0x7];                                     // 0x1DE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_InvSlotID_1;                    // 0x1DF0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuickSlotIndex_5;               // 0x1E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C52[0x4];                                     // 0x1E04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_20;                   // 0x1E08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_ItemIndex;                      // 0x1E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C53[0x4];                                     // 0x1E14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_CustomEvent_Weapon_Slot_ID_1;               // 0x1E18(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuickSlotIndex_4;               // 0x1E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C54[0x4];                                     // 0x1E2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_Slot_ID_1;                      // 0x1E30(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuickSlotIndex_3;               // 0x1E40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C55[0x4];                                     // 0x1E44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_EndInvSlotID_1;                 // 0x1E48(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_CustomEvent_WeaponSlotID_2;                 // 0x1E58(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DropItem_1;                     // 0x1E68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_3;                      // 0x1E69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Destroy;                        // 0x1E6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C56[0x5];                                     // 0x1E6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_CustomEvent_StartWeaponSlotID;              // 0x1E70(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_CustomEvent_EndWeaponSlotID;                // 0x1E80(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_Slot_ID;                        // 0x1E90(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_CustomEvent_Weapon_Slot_ID;                 // 0x1EA0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_CustomEvent_StartEquipmentSlotID;           // 0x1EB0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_CustomEvent_EndEquipmentSlotID;             // 0x1EC0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_EndInvSlotID;                   // 0x1ED0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_CustomEvent_EquipmentSlotID_1;              // 0x1EE0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DropItem;                       // 0x1EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_2;                      // 0x1EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DestroyItem;                    // 0x1EF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C57[0x5];                                     // 0x1EF3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       K2Node_CustomEvent_EquipmentSlot_1;                // 0x1EF8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_SlotID_1;                       // 0x1F40(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_CustomEvent_EquipmentSlotID;                // 0x1F50(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_SlotID;                         // 0x1F60(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_SpecialSlotType                             K2Node_CustomEvent_SpecialType_1;                  // 0x1F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Split_1;                        // 0x1F71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C58[0x6];                                     // 0x1F72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_StartSlotID;                    // 0x1F78(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_CustomEvent_EndSlotID;                      // 0x1F88(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated_1;                      // 0x1F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Split;                          // 0x1F99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             K2Node_CustomEvent_SpecialType;                    // 0x1F9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C59[0x5];                                     // 0x1F9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x1FA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved;                       // 0x1FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SetCode_1;                      // 0x1FA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5A[0x6];                                     // 0x1FAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Lock_1;                         // 0x1FB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x1FB8(0x0038)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x1FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5B[0x7];                                     // 0x1FF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Code_1;                         // 0x1FF8(0x0018)()
	class AActor*                                 K2Node_CustomEvent_Actor_1;                        // 0x2010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1; // 0x2018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x2028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5C[0x7];                                     // 0x2029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x2030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_UpdateCode_ReturnValue;               // 0x2038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5D[0x7];                                     // 0x2039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x2040(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x2078(0x0038)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Accepted;                       // 0x20B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x20B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5E[0x6];                                     // 0x20B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Code;                           // 0x20B8(0x0018)()
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x20D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2; // 0x20D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x20E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5F[0x7];                                     // 0x20E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue_2;        // 0x20F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_VerifyPlayer_ReturnValue;             // 0x20F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C60[0x7];                                     // 0x20F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3; // 0x2100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x2110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C61[0x7];                                     // 0x2111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x2118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_CodeCheck_CodeAccepted;               // 0x2128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C62[0x7];                                     // 0x2129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_Event_Save;                                 // 0x2130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x2138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x2140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SlotName_1;                     // 0x2148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Level;                          // 0x2158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x2168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x2178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C63[0x7];                                     // 0x2179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x2180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame_1;               // 0x2188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2;  // 0x2190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x21A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C64[0x7];                                     // 0x21A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame_2;               // 0x21A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x21B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x21B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C65[0x6];                                     // 0x21B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SlotName;                       // 0x21B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x21C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C66[0x3];                                     // 0x21C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Index_2;                        // 0x21CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Pause;                          // 0x21D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_4;                              // 0x21D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_5;                              // 0x21D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_6;                              // 0x21D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              Temp_byte_Variable_7;                              // 0x21D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_8;                              // 0x21D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_1;                           // 0x21D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_9;                              // 0x21D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_10;                             // 0x21D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              Temp_byte_Variable_11;                             // 0x21D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_12;                             // 0x21DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_2;                           // 0x21DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_13;                             // 0x21DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_3;                           // 0x21DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_4;                           // 0x21DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_14;                             // 0x21DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_StaminaStateCheck_CanUseState_1;          // 0x21E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              Temp_byte_Variable_15;                             // 0x21E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_5;                           // 0x21E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C67[0x5];                                     // 0x21E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorSell                          K2Node_CustomEvent_VenderSellItem;                 // 0x21E8(0x0038)(HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_2;                       // 0x2220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C68[0x4];                                     // 0x2224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VendorComponent_C*                  K2Node_DynamicCast_AsBP_Vendor_Component;          // 0x2228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x2230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C69[0x7];                                     // 0x2231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_VendorBuy                           K2Node_CustomEvent_VenderBuyListing;               // 0x2238(0x0040)(HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x2278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6A[0x4];                                     // 0x227C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_VendorComponent_C*                  K2Node_DynamicCast_AsBP_Vendor_Component_1;        // 0x2280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x2288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6B[0x7];                                     // 0x2289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_5;            // 0x2290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CraftingRecipeRow;              // 0x2298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x22A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_CancelQueue;                    // 0x22A4(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_4;            // 0x22B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentInventory_C*               K2Node_CustomEvent_EquipmentInventory_1;           // 0x22C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_19;                   // 0x22C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleInventory_4;              // 0x22D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x22D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6C[0x6];                                     // 0x22D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_18;                   // 0x22D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleInventory_3;              // 0x22E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6D[0x7];                                     // 0x22E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_InventorySlots;                 // 0x22E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_NotificationDetails                 K2Node_Event_NotificationDetails;                  // 0x22F8(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_CustomEvent_NotificationDetails;            // 0x2330(0x0038)(HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_16;                             // 0x2368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6E[0x7];                                     // 0x2369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          K2Node_CustomEvent_Weapon_Slot;                    // 0x2370(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x23C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C6F[0x7];                                     // 0x23C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_17;                   // 0x23C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_16;                   // 0x23D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Condition;                      // 0x23D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C70[0x7];                                     // 0x23D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_15;                   // 0x23E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Internal;                       // 0x23E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_17;                             // 0x23E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x23EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C71[0x5];                                     // 0x23EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               CallFunc_GetComponentByClass_ReturnValue_3;        // 0x23F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x23F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C72[0x3];                                     // 0x23F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x23FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x2400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x2401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C73[0x2];                                     // 0x2402(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x2404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x2408(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_4;                // 0x2458(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x2468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x2469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_SetCode;                        // 0x246A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C74[0x5];                                     // 0x246B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Lock;                           // 0x2470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_14;                   // 0x2478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index_1;                        // 0x2480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Toggle_Inventory;               // 0x2484(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x2485(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C75[0x2];                                     // 0x2486(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x2488(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_13;                   // 0x24D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x24E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleInventory_2;              // 0x24E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x24E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C76[0x2];                                     // 0x24E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x24E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_18;                             // 0x2538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C77[0x7];                                     // 0x2539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            K2Node_CustomEvent_Recipes;                        // 0x2540(0x0010)(ConstParm, ReferenceParm)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_VenderComponent;                // 0x2550(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory_12;                   // 0x2558(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_VenderInventory;                // 0x2568(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_CustomEvent_CookingSlot_3;                  // 0x2570(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_CustomEvent_CookingSlot_2;                  // 0x2584(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_CustomEvent_CookingSlot_1;                  // 0x2598(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C78[0x4];                                     // 0x25AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingComponent_C*                 K2Node_DynamicCast_AsBP_Cooking_Component;         // 0x25B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x25B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C79[0x7];                                     // 0x25B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_CustomEvent_CookingSlot;                    // 0x25C0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_MakeArray_Array;                            // 0x2610(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CookingInventory_1;             // 0x2620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory_11;                   // 0x2628(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_CookingSlot>                 K2Node_CustomEvent_CookingSlots;                   // 0x2638(0x0010)(ConstParm, ReferenceParm)
	class UBP_CookingComponent_C*                 K2Node_DynamicCast_AsBP_Cooking_Component_1;       // 0x2648(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x2650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7A[0x7];                                     // 0x2651(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x2658(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CookingInventory;               // 0x2668(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_MasterInventory_1;              // 0x2670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory_10;                   // 0x2678(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_CraftingQueue>               K2Node_CustomEvent_CraftingQueue;                  // 0x2688(0x0010)(ConstParm, ReferenceParm)
	bool                                          K2Node_CustomEvent_CraftingBlocked;                // 0x2698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7B[0x7];                                     // 0x2699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_3;            // 0x26A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_ListingQueue;                   // 0x26A8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7C[0x4];                                     // 0x26BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_2;            // 0x26C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CraftingRecipe;                 // 0x26C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_1;            // 0x26D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_NewQueueListing;                // 0x26D8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7D[0x4];                                     // 0x26EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory;              // 0x26F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_CustomEvent_Inventory_9;                    // 0x26F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleInventory_1;              // 0x2700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7E[0x7];                                     // 0x2701(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_8;                    // 0x2708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ToggleInventory;                // 0x2710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C7F[0x7];                                     // 0x2711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateAllAttachments_self_CastInput;  // 0x2718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x2728(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x2730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C80[0x7];                                     // 0x2731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inv;                            // 0x2738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_MasterInventory;                // 0x2740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory_7;                    // 0x2748(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         K2Node_CustomEvent_QuickSlotIndex_2;               // 0x2758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Highlight;                      // 0x275C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C81[0x3];                                     // 0x275D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_QuickSlotIndex_1;               // 0x2760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C82[0x4];                                     // 0x2764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_FindQuickSlot_OutputSlot;                 // 0x2768(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_QuickSlot_C*                        CallFunc_FindQuickSlot_OutputSlot_1;               // 0x2770(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x2778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x2779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C83[0x6];                                     // 0x277A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               K2Node_CustomEvent_EquipmentInventory;             // 0x2780(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory_6;                    // 0x2788(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	E_AnimationState                              Temp_byte_Variable_19;                             // 0x2798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_6;                           // 0x2799(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_7;                           // 0x279A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_20;                             // 0x279B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x279C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_21;                             // 0x27A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C84[0x7];                                     // 0x27A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_3;   // 0x27A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x27B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TraceOn;                        // 0x27B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C85[0x6];                                     // 0x27BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_4;   // 0x27C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x27D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x27D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C86[0x6];                                     // 0x27D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_2;                      // 0x27D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_FPMontage_2;                    // 0x27E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              Temp_byte_Variable_22;                             // 0x27E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C87[0x3];                                     // 0x27E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x27EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_5;   // 0x27F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x2800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x2801(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x2802(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C88[0x1];                                     // 0x2803(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x2804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x2808(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_1;        // 0x2818(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x2860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x2861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              Temp_byte_Variable_23;                             // 0x2862(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C89[0x5];                                     // 0x2863(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_6;   // 0x2868(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x2878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_8;                           // 0x2879(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CharacterState                              K2Node_Select_Default_9;                           // 0x287A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8A[0x1];                                     // 0x287B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x287C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 K2Node_CustomEvent_WeaponSlot;                     // 0x2880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8B[0x7];                                     // 0x2881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_CustomEvent_WeaponSlotID_1;                 // 0x2888(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuickSlotID;                    // 0x2898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8C[0x4];                                     // 0x289C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x28A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x28F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x28F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8D[0x6];                                     // 0x28F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x28F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_5;                    // 0x2900(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x2908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_2;               // 0x2909(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_3;               // 0x290A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8E[0x1];                                     // 0x290B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x290C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x2910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x2914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_4;                    // 0x2918(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_3;                    // 0x2920(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerDetails                    K2Node_CustomEvent_Details;                        // 0x2928(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_2;                    // 0x2998(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x29A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped;           // 0x29A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped_1;         // 0x29A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8F[0x5];                                     // 0x29A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Slots_1;                        // 0x29A8(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory_1;                    // 0x29B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x29C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C90[0x3];                                     // 0x29C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x29C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x29C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x29CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               K2Node_CustomEvent_EquipmentSlot;                  // 0x29CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C91[0x2];                                     // 0x29CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_2;        // 0x29D0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_PlayerName;                     // 0x2A18(0x0018)()
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_NewParam;                       // 0x2A30(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x2A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C92[0x4];                                     // 0x2A44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterClothingAttchment_C*          CallFunc_Array_Get_Item_1;                         // 0x2A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Slots;                          // 0x2A50(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FS_ContainerDetails                    K2Node_CustomEvent_InventoryDetails;               // 0x2A60(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_Inventory;                      // 0x2AD0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_CustomEvent_RootInvSlot;                    // 0x2AD8(0x0050)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_HeightSlots;                    // 0x2B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_WidthSlots;                     // 0x2B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Rotated;                        // 0x2B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x2B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C93[0x6];                                     // 0x2B32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SetInvSlots_UpdatedSlots;                 // 0x2B38(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x2B48(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x2B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C94[0x7];                                     // 0x2B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x2BA0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UBP_InventoryItemIcon_C*>        CallFunc_FindGridIcon_IconWidget;                  // 0x2BB0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item_3;                         // 0x2BC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x2BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x2BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x2BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C95[0x7];                                     // 0x2BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_4;                         // 0x2BD8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x2C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x2C2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C96[0x3];                                     // 0x2C2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x2C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x2C34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x2C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x2C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x2C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C97[0x5];                                     // 0x2C3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x2C40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_5;                         // 0x2C48(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_6;                         // 0x2C98(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x2CE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x2CE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x2CEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess_1;                    // 0x2CEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C98[0x4];                                     // 0x2CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InteractionMath_Start;                    // 0x2CF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InteractionMath_End;                      // 0x2D08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x2D20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C99[0x4];                                     // 0x2D24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x2D28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x2D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9A[0x3];                                     // 0x2D31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x2D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x2D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9B[0x7];                                     // 0x2D39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_7;   // 0x2D40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x2D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KeyDown_3;                      // 0x2D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9C[0x6];                                     // 0x2D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_8;   // 0x2D58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x2D68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KeyDown_2;                      // 0x2D69(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KeyDown_1;                      // 0x2D6A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9D[0x5];                                     // 0x2D6B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_9;   // 0x2D70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x2D80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9E[0x3];                                     // 0x2D81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x2D84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_10;  // 0x2D88(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x2D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9F[0x3];                                     // 0x2D99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x2D9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_KeyDown;                        // 0x2DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x2DA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA0[0x6];                                     // 0x2DA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_CustomEvent_WeaponSlotID;                   // 0x2DA8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            K2Node_CustomEvent_Action_1;                       // 0x2DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA1[0x7];                                     // 0x2DB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_CustomEvent_InvSlotID;                      // 0x2DC0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            K2Node_CustomEvent_Action;                         // 0x2DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InstantPlacement_1;             // 0x2DD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA2[0x6];                                     // 0x2DD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x2DD8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuickSlotIndex;                 // 0x2DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_InstantPlacement;               // 0x2DEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA3[0x3];                                     // 0x2DED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x2DF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA4[0x4];                                     // 0x2DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CallFunc_GetComponentByClass_ReturnValue_4;        // 0x2DF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x2E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA5[0x7];                                     // 0x2E01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x2E08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x2E18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x2E19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA6[0x2];                                     // 0x2E1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x2E1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x2E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_EndInteraction_ReturnValue;           // 0x2E24(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA7[0x3];                                     // 0x2E25(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x2E28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x2E2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                CallFunc_SelectedContextEntry_ActionType;          // 0x2E2D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA8[0x2];                                     // 0x2E2E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_TraceStart;                     // 0x2E30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_TraceEnd;                       // 0x2E48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                K2Node_CustomEvent_ActionType;                     // 0x2E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CA9[0x7];                                     // 0x2E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_4;                   // 0x2E68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingComponent_C*                 K2Node_DynamicCast_AsBP_Cooking_Component_2;       // 0x2E70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x2E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAA[0x7];                                     // 0x2E79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_4;           // 0x2E80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x2E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x2E89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAB[0x2];                                     // 0x2E8A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x2E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_5;                   // 0x2E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_7;                         // 0x2E98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          K2Node_CustomEvent_HoldingWeaponSlot_1;            // 0x2EA0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          K2Node_CustomEvent_HoldingWeaponSlot;              // 0x2EF0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x2F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAC[0xC];                                     // 0x2F44(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x2F50(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x37E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x37E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAD[0x6];                                     // 0x37E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item_8;                         // 0x37E8(0x0010)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x37F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x37FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x37FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAE[0x2];                                     // 0x37FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x3800(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x3830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CAF[0xF];                                     // 0x3831(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x3840(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x40D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB0[0x7];                                     // 0x40D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_Select_Default_10;                          // 0x40D8(0x0030)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x4108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x410C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x4110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB1[0x3];                                     // 0x4111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x4114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_9;                         // 0x4118(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x4168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB2[0x3];                                     // 0x4169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_ItemSize_Height_1;                    // 0x416C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_1;                     // 0x4170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x4174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x4178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB3[0x3];                                     // 0x4179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x417C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x4180(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_6;                   // 0x4198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x41A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB4[0x7];                                     // 0x41A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_4; // 0x41A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_46;                    // 0x41B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x41B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB5[0x6];                                     // 0x41BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> CallFunc_SGK_NewHeld_self_CastInput;               // 0x41C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x41D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB6[0xF];                                     // 0x41D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x41E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKHoldableInterface_C> CallFunc_SGK_NewHeld_self_CastInput_1;             // 0x4A70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x4A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnterCombatMode_Finished1;                // 0x4A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnterCombatMode_Finished1_1;              // 0x4A82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB7[0x5];                                     // 0x4A83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x4A88(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x4AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x4AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x4ABA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x4ABB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB8[0x4];                                     // 0x4ABC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_2;                // 0x4AC0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x4AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CB9[0x7];                                     // 0x4AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_3;                // 0x4AF8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_Event_InvSlot;                              // 0x4B28(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x4B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x4B79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x4B7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x4B7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBA[0x4];                                     // 0x4B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_11;  // 0x4B80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_47;                    // 0x4B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x4B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBB[0x6];                                     // 0x4B92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface_12;  // 0x4B98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_48;                    // 0x4BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x4BA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x4BAA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBC[0x5];                                     // 0x4BAB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_ShowAttachments_self_CastInput;       // 0x4BB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_ShowAttachments_self_CastInput_1;     // 0x4BC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x4BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBD[0x7];                                     // 0x4BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_DestroyWeaponAttachments_self_CastInput; // 0x4BD8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x4BE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x4BE9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x4BEA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x4BEB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_3;              // 0x4BEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBE[0x3];                                     // 0x4BED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_3;            // 0x4BF0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x5480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x5488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x5489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x548A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_4;              // 0x548B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CBF[0x4];                                     // 0x548C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_4;            // 0x5490(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_2;                         // 0x5D20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x5D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x5D29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC0[0x6];                                     // 0x5D2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x5D30(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_10;                        // 0x5D40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x5D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x5D4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x5D4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x5D4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x5D4F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_7;                   // 0x5D50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_5;           // 0x5D58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_49;                    // 0x5D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC1[0x7];                                     // 0x5D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_4;     // 0x5D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_50;                    // 0x5D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x5D71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AnimationState                              K2Node_Select_Default_11;                          // 0x5D72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x5D73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x5D74(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC2[0x3];                                     // 0x5D75(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x5D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC3[0x4];                                     // 0x5D7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_5;     // 0x5D80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_51;                    // 0x5D88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x5D89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingDetails                     K2Node_MakeStruct_S_CraftingDetails;               // 0x5D8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC4[0x1];                                     // 0x5D8B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x5D8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_11;                        // 0x5D90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x5D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x5D99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x5D9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC5[0x5];                                     // 0x5D9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Name;                           // 0x5DA0(0x0018)()
	bool                                          K2Node_CustomEvent_BuildMode;                      // 0x5DB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC6[0x3];                                     // 0x5DB9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_ItemID;                               // 0x5DBC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      K2Node_Event_SoundType;                            // 0x5DC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC7[0x3];                                     // 0x5DC5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ItemID;                         // 0x5DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      K2Node_CustomEvent_SoundType;                      // 0x5DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC8[0x3];                                     // 0x5DD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x5DD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x5DD8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_5;              // 0x5E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC9[0x7];                                     // 0x5E09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_5;            // 0x5E10(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x66A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCA[0x7];                                     // 0x66A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             CallFunc_Map_Find_Value_3;                         // 0x66A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x66B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCB[0x3];                                     // 0x66B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x66B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x66B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCC[0x7];                                     // 0x66B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_1;                      // 0x66C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_FPMontage_1;                    // 0x66C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_CustomEvent_Controller;                     // 0x66D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x66D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x66F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x66F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x66FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory");
static_assert(sizeof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory) == 0x006700, "Wrong size on BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, EntryPoint) == 0x000000, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Montage) == 0x000008, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_FPMontage) == 0x000010, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_FPMontage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable) == 0x000018, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_struct_Variable) == 0x000020, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_struct_Variable_1) == 0x000050, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_struct_Variable_2) == 0x000080, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_2) == 0x0000B2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Variable) == 0x0000B4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_3) == 0x0000B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable) == 0x0000C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_1) == 0x0000C1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_4) == 0x0000C2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_RandomInteger_ReturnValue) == 0x0000C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue) == 0x000158, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FinishSpawningActor_ReturnValue) == 0x000160, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController) == 0x000168, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000178, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_1) == 0x000180, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x000188, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_2) == 0x000190, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_5) == 0x000191, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_CheckFFA_FFA_) == 0x000192, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_CheckFFA_FFA_' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000198, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Create_ReturnValue) == 0x0001A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_CheckFFA_FFA__1) == 0x0001A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_CheckFFA_FFA__1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_WeaponSlotID) == 0x0001B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0001C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetController_ReturnValue) == 0x0001D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x0001D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_3) == 0x0001E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController_1) == 0x0001F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_4) == 0x0001F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_6) == 0x0001F9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000200, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_5) == 0x000208, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_GetPawn_ReturnValue) == 0x000210, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000218, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000230, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeTransform_ReturnValue_1) == 0x000250, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0002B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0002B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_7) == 0x0002C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_8) == 0x0002C1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_1) == 0x0002C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_2) == 0x0002D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Create_ReturnValue_1) == 0x0002D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_3) == 0x0002E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_9) == 0x0002E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetController_ReturnValue_1) == 0x0002F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController_2) == 0x0002F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_6) == 0x000300, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000308, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Player_State_1) == 0x000310, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_7) == 0x000318, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000320, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000338, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeTransform_ReturnValue_2) == 0x000350, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x0003B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x0003B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_10) == 0x0003C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x0003C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_11) == 0x0003D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameState_ReturnValue) == 0x0003D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Game_State) == 0x0003E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_8) == 0x0003E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameState_ReturnValue_1) == 0x0003F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Player_State_2) == 0x0003F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_9) == 0x000400, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Game_State_1) == 0x000408, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Game_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_10) == 0x000410, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Player_State_3) == 0x000418, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_11) == 0x000420, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EnemyInstigator) == 0x000428, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EnemyInstigator' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_TextToString_ReturnValue) == 0x000430, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameState_ReturnValue_2) == 0x000440, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Game_State_2) == 0x000448, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Game_State_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_12) == 0x000450, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000458, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_13) == 0x000460, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsPeak_53Player_State_4) == 0x000468, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsPeak_53Player_State_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_14) == 0x000470, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchEnum_CmpSuccess) == 0x000471, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetDataTableRowFromName_OutRow) == 0x000480, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000D10, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000D18, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000D28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue) == 0x000D38, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000D48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000D58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000D68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000D78, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000D88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000D98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000DA8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_StringToText_ReturnValue) == 0x000DB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000DD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000DE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_AddStartingItems_Return) == 0x000DE9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_AddStartingItems_Return' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_1) == 0x000DF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Equipment_Character_1) == 0x000DF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Equipment_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_15) == 0x000E00, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsController) == 0x000E08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_16) == 0x000E10, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character_2) == 0x000E18, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_17) == 0x000E20, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_12) == 0x000E21, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController_3) == 0x000E28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_18) == 0x000E30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000E38, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_13) == 0x000E40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_AllEquipmentActors_Actors) == 0x000E48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_AllEquipmentActors_Actors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000E58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character_3) == 0x000E60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_19) == 0x000E68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface) == 0x000E70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_20) == 0x000E80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_2) == 0x000E88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_14) == 0x000E98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_3) == 0x000EA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Montage_3) == 0x000EB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Montage_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayLength_ReturnValue) == 0x000EB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000EC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Name_1) == 0x000EC8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Name_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsStandalone_ReturnValue) == 0x000EE0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_15) == 0x000EE1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_16) == 0x000EE2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000EE3, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameMode_ReturnValue) == 0x000EE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000EF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_21) == 0x000F00, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetSaveGame_SaveGame) == 0x000F08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Has_Been_Initd_Variable) == 0x000F10, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Random_1) == 0x000F11, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Random_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FindSpawnPoint_SpawnLocation) == 0x000F20, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FindSpawnPoint_SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_4) == 0x000F80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x000F88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x000F90, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BreakTransform_Location) == 0x000F98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BreakTransform_Rotation) == 0x000FB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BreakTransform_Scale) == 0x000FC8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_5) == 0x000FE0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_17) == 0x000FE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_18) == 0x000FE9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetPlayerController_ReturnValue_6) == 0x000FF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetPlayerController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Random) == 0x000FF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Random' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_IsMelee) == 0x000FF9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_IsMelee' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_IsKnife) == 0x000FFA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_IsKnife' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_MeleeAnim) == 0x000FFC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_MeleeAnim' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Down) == 0x001000, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Down' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsStandalone_ReturnValue_1) == 0x001001, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x001002, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x001003, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x001004, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanOR_ReturnValue) == 0x001005, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x001006, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x001007, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_Value) == 0x001008, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_ReturnValue) == 0x001009, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue) == 0x00100A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue_1) == 0x00100B, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue_2) == 0x00100C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue_3) == 0x00100D, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue_4) == 0x00100E, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CharacterState_1) == 0x00100F, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CharacterState_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x001010, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_19) == 0x001011, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_StaminaStateCheck_CanUseState) == 0x001012, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_StaminaStateCheck_CanUseState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CharacterState) == 0x001013, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CharacterState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetVelocity_ReturnValue) == 0x001018, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_VSize_ReturnValue) == 0x001030, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x001038, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_20) == 0x001039, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_AttachmentID_1) == 0x001040, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_AttachmentID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndSlotID_1) == 0x001050, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_DropItem_2) == 0x001060, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_DropItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotated_4) == 0x001061, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotated_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_21) == 0x001062, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x001068, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_22) == 0x001070, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_AttachmentID) == 0x001078, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponInventory_2) == 0x001088, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponInventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SwapAttachments_ReturnValue) == 0x001090, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SwapAttachments_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_AttachmentItemID) == 0x001098, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponInventory_1) == 0x0010A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_IsClosed_Variable) == 0x0010B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_AddAttachmentFromSlot_ReturnValue) == 0x0010B1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_AddAttachmentFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Attachments) == 0x0010B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Attachments' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponInventory) == 0x0010C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_22) == 0x0010D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_23) == 0x0010D1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_AttachmentDetails_Is_Attachment) == 0x0010D2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_AttachmentDetails_Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_AttachmentDetails_Attachment_Details) == 0x0010D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_AttachmentDetails_Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001378, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_AddAttachmentFromSlot_ReturnValue_1) == 0x001379, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_AddAttachmentFromSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_AttachmentSlotID) == 0x001380, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_AttachmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_1) == 0x001390, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_23) == 0x0013A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_2) == 0x0013A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_24) == 0x0013B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_22) == 0x0013C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable_1) == 0x0013C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_2) == 0x0013C9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable_2) == 0x0013CA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Variable_1) == 0x0013CC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_IntToByte_ReturnValue) == 0x0013D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetValidValue_ReturnValue) == 0x0013D1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0013D4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0013D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Actor_2) == 0x001420, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Actor_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Time) == 0x001428, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_24) == 0x001430, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_IgnoreInteractActor) == 0x001438, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_IgnoreInteractActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_3) == 0x001440, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable_3) == 0x001441, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_real_Variable) == 0x001448, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InvSlotID_3) == 0x001450, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InvSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_StartInventory) == 0x001460, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_StartInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_TargetInventory) == 0x001468, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_TargetInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_SelfItem_self_CastInput) == 0x001470, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_SelfItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_SelfItem_SelfItem) == 0x001480, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_RemoveAmount) == 0x0014B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_RemoveAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound) == 0x0014B4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0014C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_25) == 0x001D50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_AddAmount) == 0x001D54, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_AddAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InventoryOpen_1) == 0x001D58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InventoryOpen_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InvSlotID_2) == 0x001D60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InvSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InventoryDetails_1) == 0x001D70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InventoryDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_21) == 0x001DE0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InventoryOpen) == 0x001DE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InventoryOpen' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InvSlotID_1) == 0x001DF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex_5) == 0x001E00, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_20) == 0x001E08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ItemIndex) == 0x001E10, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ItemIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Weapon_Slot_ID_1) == 0x001E18, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Weapon_Slot_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex_4) == 0x001E28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Slot_ID_1) == 0x001E30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Slot_ID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex_3) == 0x001E40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndInvSlotID_1) == 0x001E48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndInvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponSlotID_2) == 0x001E58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_DropItem_1) == 0x001E68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_DropItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotated_3) == 0x001E69, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotated_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Destroy) == 0x001E6A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Destroy' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_StartWeaponSlotID) == 0x001E70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_StartWeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndWeaponSlotID) == 0x001E80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndWeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Slot_ID) == 0x001E90, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Weapon_Slot_ID) == 0x001EA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_StartEquipmentSlotID) == 0x001EB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_StartEquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndEquipmentSlotID) == 0x001EC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndEquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndInvSlotID) == 0x001ED0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndInvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentSlotID_1) == 0x001EE0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_DropItem) == 0x001EF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotated_2) == 0x001EF1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotated_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_DestroyItem) == 0x001EF2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_DestroyItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentSlot_1) == 0x001EF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SlotID_1) == 0x001F40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentSlotID) == 0x001F50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SlotID) == 0x001F60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SpecialType_1) == 0x001F70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SpecialType_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Split_1) == 0x001F71, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Split_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_StartSlotID) == 0x001F78, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_StartSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EndSlotID) == 0x001F88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EndSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotated_1) == 0x001F98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotated_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Split) == 0x001F99, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SpecialType) == 0x001F9A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SpecialType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_real_Variable_1) == 0x001FA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MoveItem_ItemMoved) == 0x001FA8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MoveItem_ItemMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SetCode_1) == 0x001FA9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SetCode_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Lock_1) == 0x001FB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Lock_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_NotificationDetails) == 0x001FB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable_4) == 0x001FF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Code_1) == 0x001FF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Code_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Actor_1) == 0x002010, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1) == 0x002018, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_25) == 0x002028, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default) == 0x002030, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_UpdateCode_ReturnValue) == 0x002038, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_UpdateCode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_NotificationDetails_1) == 0x002040, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_NotificationDetails_2) == 0x002078, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Accepted) == 0x0020B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Accepted' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Variable_5) == 0x0020B1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Code) == 0x0020B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Code' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Actor) == 0x0020D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2) == 0x0020D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_26) == 0x0020E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetComponentByClass_ReturnValue_2) == 0x0020F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_VerifyPlayer_ReturnValue) == 0x0020F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_VerifyPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3) == 0x002100, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_27) == 0x002110, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetCurrentLevelName_ReturnValue) == 0x002118, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_CodeCheck_CodeAccepted) == 0x002128, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_CodeCheck_CodeAccepted' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_Save) == 0x002130, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_Save' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_SaveGame) == 0x002138, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameMode_ReturnValue_1) == 0x002140, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SlotName_1) == 0x002148, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SlotName_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Level) == 0x002158, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Level' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x002168, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_28) == 0x002178, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetGameMode_ReturnValue_2) == 0x002180, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetSaveGame_SaveGame_1) == 0x002188, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetSaveGame_SaveGame_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2) == 0x002190, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_29) == 0x0021A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetSaveGame_SaveGame_2) == 0x0021A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetSaveGame_SaveGame_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_26) == 0x0021B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_27) == 0x0021B1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SlotName) == 0x0021B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SlotName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_28) == 0x0021C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Index_2) == 0x0021CC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Index_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Pause) == 0x0021D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Pause' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_4) == 0x0021D1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_5) == 0x0021D2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_6) == 0x0021D3, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_7) == 0x0021D4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_8) == 0x0021D5, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_1) == 0x0021D6, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_9) == 0x0021D7, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_10) == 0x0021D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_11) == 0x0021D9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_12) == 0x0021DA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_2) == 0x0021DB, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_13) == 0x0021DC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_3) == 0x0021DD, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_4) == 0x0021DE, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_14) == 0x0021DF, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_StaminaStateCheck_CanUseState_1) == 0x0021E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_StaminaStateCheck_CanUseState_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_15) == 0x0021E1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_5) == 0x0021E2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_VenderSellItem) == 0x0021E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_VenderSellItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Amount_2) == 0x002220, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Amount_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Vendor_Component) == 0x002228, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Vendor_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_30) == 0x002230, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_VenderBuyListing) == 0x002238, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_VenderBuyListing' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Amount_1) == 0x002278, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Vendor_Component_1) == 0x002280, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Vendor_Component_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_31) == 0x002288, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory_5) == 0x002290, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingRecipeRow) == 0x002298, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingRecipeRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Amount) == 0x0022A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CancelQueue) == 0x0022A4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CancelQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory_4) == 0x0022B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentInventory_1) == 0x0022C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_19) == 0x0022C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ToggleInventory_4) == 0x0022D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ToggleInventory_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_29) == 0x0022D1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_18) == 0x0022D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ToggleInventory_3) == 0x0022E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ToggleInventory_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InventorySlots) == 0x0022E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InventorySlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_NotificationDetails) == 0x0022F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_NotificationDetails) == 0x002330, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_16) == 0x002368, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Weapon_Slot) == 0x002370, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Weapon_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_30) == 0x0023C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_17) == 0x0023C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_16) == 0x0023D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Condition) == 0x0023D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Condition' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_15) == 0x0023E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Internal) == 0x0023E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Internal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_17) == 0x0023E9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_31) == 0x0023EA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetComponentByClass_ReturnValue_3) == 0x0023F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetComponentByClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_32) == 0x0023F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Variable_2) == 0x0023FC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x002400, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetValidValue_ReturnValue_1) == 0x002401, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x002404, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x002408, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_4) == 0x002458, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x002468, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EquipWeapon_Return_Value) == 0x002469, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SetCode) == 0x00246A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SetCode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Lock) == 0x002470, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Lock' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_14) == 0x002478, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Index_1) == 0x002480, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Index_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Toggle_Inventory) == 0x002484, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Toggle_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetInvSlot_SlotFound) == 0x002485, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetInvSlot_InvSlot) == 0x002488, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_13) == 0x0024D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Index) == 0x0024E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ToggleInventory_2) == 0x0024E4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ToggleInventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x0024E5, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x0024E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_18) == 0x002538, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Recipes) == 0x002540, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Recipes' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_VenderComponent) == 0x002550, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_VenderComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_12) == 0x002558, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_VenderInventory) == 0x002568, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_VenderInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingSlot_3) == 0x002570, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingSlot_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingSlot_2) == 0x002584, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingSlot_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingSlot_1) == 0x002598, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Cooking_Component) == 0x0025B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Cooking_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_32) == 0x0025B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingSlot) == 0x0025C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeArray_Array) == 0x002610, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingInventory_1) == 0x002620, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_11) == 0x002628, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingSlots) == 0x002638, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Cooking_Component_1) == 0x002648, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Cooking_Component_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_33) == 0x002650, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x002658, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CookingInventory) == 0x002668, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CookingInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_MasterInventory_1) == 0x002670, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_MasterInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_10) == 0x002678, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingQueue) == 0x002688, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingBlocked) == 0x002698, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory_3) == 0x0026A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ListingQueue) == 0x0026A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ListingQueue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory_2) == 0x0026C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingRecipe) == 0x0026C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory_1) == 0x0026D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_NewQueueListing) == 0x0026D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_NewQueueListing' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_CraftingInventory) == 0x0026F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_CraftingInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_9) == 0x0026F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ToggleInventory_1) == 0x002700, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ToggleInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_8) == 0x002708, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ToggleInventory) == 0x002710, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ToggleInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_UpdateAllAttachments_self_CastInput) == 0x002718, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_UpdateAllAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x002728, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_34) == 0x002730, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inv) == 0x002738, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_MasterInventory) == 0x002740, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_7) == 0x002748, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex_2) == 0x002758, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Highlight) == 0x00275C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Highlight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex_1) == 0x002760, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FindQuickSlot_OutputSlot) == 0x002768, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FindQuickSlot_OutputSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FindQuickSlot_OutputSlot_1) == 0x002770, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FindQuickSlot_OutputSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_33) == 0x002778, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_34) == 0x002779, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentInventory) == 0x002780, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_6) == 0x002788, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_19) == 0x002798, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_6) == 0x002799, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_7) == 0x00279A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_20) == 0x00279B, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable) == 0x00279C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_21) == 0x0027A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_3) == 0x0027A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_35) == 0x0027B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_TraceOn) == 0x0027B9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_TraceOn' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_4) == 0x0027C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_36) == 0x0027D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_35) == 0x0027D1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Montage_2) == 0x0027D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_FPMontage_2) == 0x0027E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_FPMontage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_22) == 0x0027E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Variable_3) == 0x0027EC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_5) == 0x0027F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_37) == 0x002800, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x002801, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetValidValue_ReturnValue_2) == 0x002802, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_3) == 0x002804, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_EquipmentSlotID) == 0x002808, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectEquipmentSlot_ReturnValue_1) == 0x002818, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectEquipmentSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_CheckEquipmentSlot_SlotFull) == 0x002860, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EquipItem_ItemEquipped) == 0x002861, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_byte_Variable_23) == 0x002862, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_byte_Variable_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_6) == 0x002868, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_38) == 0x002878, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_8) == 0x002879, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_9) == 0x00287A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_2) == 0x00287C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponSlot) == 0x002880, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponSlotID_1) == 0x002888, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotID) == 0x002898, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x0028A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsServer_ReturnValue) == 0x0028F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_36) == 0x0028F1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetObjectClass_ReturnValue) == 0x0028F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_5) == 0x002900, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_37) == 0x002908, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsStandalone_ReturnValue_2) == 0x002909, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsStandalone_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsStandalone_ReturnValue_3) == 0x00290A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsStandalone_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable) == 0x00290C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable_1) == 0x002910, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_4) == 0x002914, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_4) == 0x002918, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_3) == 0x002920, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Details) == 0x002928, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_2) == 0x002998, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_38) == 0x0029A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsInventoryEquipped_IsEquipped) == 0x0029A1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsInventoryEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsInventoryEquipped_IsEquipped_1) == 0x0029A2, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsInventoryEquipped_IsEquipped_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Slots_1) == 0x0029A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Slots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory_1) == 0x0029B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_39) == 0x0029C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_3) == 0x0029C4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_4) == 0x0029C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0029CC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_EquipmentSlot) == 0x0029CD, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectEquipmentSlot_ReturnValue_2) == 0x0029D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectEquipmentSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_PlayerName) == 0x002A18, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_NewParam) == 0x002A30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable_2) == 0x002A40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_1) == 0x002A48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Slots) == 0x002A50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Slots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InventoryDetails) == 0x002A60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InventoryDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Inventory) == 0x002AD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_RootInvSlot) == 0x002AD8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_HeightSlots) == 0x002B28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_HeightSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WidthSlots) == 0x002B2C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WidthSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotated) == 0x002B30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_40) == 0x002B31, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SetInvSlots_UpdatedSlots) == 0x002B38, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SetInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_2) == 0x002B48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x002B98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_InvSlotID) == 0x002BA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_FindGridIcon_IconWidget) == 0x002BB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_FindGridIcon_IconWidget' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_3) == 0x002BC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_5) == 0x002BC8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_6) == 0x002BCC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x002BD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_4) == 0x002BD8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_7) == 0x002C28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue) == 0x002C2C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemSize_Height) == 0x002C30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemSize_Width) == 0x002C34, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x002C38, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_41) == 0x002C39, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_42) == 0x002C3A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_2) == 0x002C40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_5) == 0x002C48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_6) == 0x002C98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x002CE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x002CE9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchName_CmpSuccess) == 0x002CEA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchName_CmpSuccess_1) == 0x002CEB, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchName_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_InteractionMath_Start) == 0x002CF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_InteractionMath_Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_InteractionMath_End) == 0x002D08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_InteractionMath_End' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable_1) == 0x002D20, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_3) == 0x002D28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x002D30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_5) == 0x002D34, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_43) == 0x002D38, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_7) == 0x002D40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_39) == 0x002D50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_KeyDown_3) == 0x002D51, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_KeyDown_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_8) == 0x002D58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_40) == 0x002D68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_KeyDown_2) == 0x002D69, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_KeyDown_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_KeyDown_1) == 0x002D6A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_KeyDown_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_9) == 0x002D70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_41) == 0x002D80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeLiteralInt_ReturnValue) == 0x002D84, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_10) == 0x002D88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_42) == 0x002D98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x002D9C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_KeyDown) == 0x002DA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_KeyDown' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x002DA1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_WeaponSlotID) == 0x002DA8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Action_1) == 0x002DB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Action_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InvSlotID) == 0x002DC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Action) == 0x002DD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InstantPlacement_1) == 0x002DD1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InstantPlacement_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x002DD8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_QuickSlotIndex) == 0x002DE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_InstantPlacement) == 0x002DEC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_InstantPlacement' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable_2) == 0x002DF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetComponentByClass_ReturnValue_4) == 0x002DF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetComponentByClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_2) == 0x002E00, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x002E08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_43) == 0x002E18, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_44) == 0x002E19, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_6) == 0x002E1C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x002E20, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_EndInteraction_ReturnValue) == 0x002E24, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_EndInteraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x002E28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x002E2C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SelectedContextEntry_ActionType) == 0x002E2D, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SelectedContextEntry_ActionType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_TraceStart) == 0x002E30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_TraceEnd) == 0x002E48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ActionType) == 0x002E60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ActionType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_4) == 0x002E68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_Cooking_Component_2) == 0x002E70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_Cooking_Component_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_44) == 0x002E78, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController_4) == 0x002E80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_45) == 0x002E88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_45) == 0x002E89, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable_3) == 0x002E8C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_5) == 0x002E90, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_7) == 0x002E98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_HoldingWeaponSlot_1) == 0x002EA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_HoldingWeaponSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_HoldingWeaponSlot) == 0x002EF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_HoldingWeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable_3) == 0x002F40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x002F50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0037E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_3) == 0x0037E1, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_8) == 0x0037E8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_7) == 0x0037F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_46) == 0x0037FC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_47) == 0x0037FD, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_InvSlotItem_InvItem) == 0x003800, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x003830, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x003840, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_ClassIsChildOf_ReturnValue) == 0x0040D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_10) == 0x0040D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x004108, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00410C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x004110, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable_4) == 0x004114, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_9) == 0x004118, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x004168, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemSize_Height_1) == 0x00416C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemSize_Height_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemSize_Width_1) == 0x004170, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemSize_Width_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable_4) == 0x004174, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_4) == 0x004178, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_8) == 0x00417C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_InputActionEvent_Key) == 0x004180, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_6) == 0x004198, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_48) == 0x0041A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_4) == 0x0041A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_46) == 0x0041B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_46' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_49) == 0x0041B9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_NewHeld_self_CastInput) == 0x0041C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_NewHeld_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x0041D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x0041E0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_NewHeld_self_CastInput_1) == 0x004A70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_NewHeld_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchEnum_CmpSuccess_1) == 0x004A80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EnterCombatMode_Finished1) == 0x004A81, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EnterCombatMode_Finished1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EnterCombatMode_Finished1_1) == 0x004A82, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EnterCombatMode_Finished1_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x004A88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_50) == 0x004AB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_51) == 0x004AB9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_52) == 0x004ABA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_53) == 0x004ABB, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_InvSlotItem_InvItem_2) == 0x004AC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_InvSlotItem_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_NotEqual_IntInt_ReturnValue) == 0x004AF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_InvSlotItem_InvItem_3) == 0x004AF8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_InvSlotItem_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_InvSlot) == 0x004B28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x004B78, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x004B79, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x004B7A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_BooleanAND_ReturnValue_5) == 0x004B7B, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_11) == 0x004B80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_47) == 0x004B90, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_47' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_Has_Been_Initd_Variable_1) == 0x004B91, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKHoldable_Interface_12) == 0x004B98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKHoldable_Interface_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_48) == 0x004BA8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_48' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_54) == 0x004BA9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_55) == 0x004BAA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ShowAttachments_self_CastInput) == 0x004BB0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ShowAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ShowAttachments_self_CastInput_1) == 0x004BC0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ShowAttachments_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_56) == 0x004BD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_DestroyWeaponAttachments_self_CastInput) == 0x004BD8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_DestroyWeaponAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchEnum_CmpSuccess_2) == 0x004BE8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_57) == 0x004BE9, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_58) == 0x004BEA, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchEnum_CmpSuccess_3) == 0x004BEB, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound_3) == 0x004BEC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails_3) == 0x004BF0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_Value_1) == 0x005480, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_ReturnValue_1) == 0x005488, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_DoesSocketExist_ReturnValue) == 0x005489, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00548A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound_4) == 0x00548B, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails_4) == 0x005490, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_Value_2) == 0x005D20, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_ReturnValue_2) == 0x005D28, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_AttachToComponent_ReturnValue) == 0x005D29, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetAttachedActors_OutActors) == 0x005D30, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_10) == 0x005D40, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Length_ReturnValue_8) == 0x005D48, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_5) == 0x005D4C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x005D4D, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x005D4E, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_bool_IsClosed_Variable_1) == 0x005D4F, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_GetOwner_ReturnValue_7) == 0x005D50, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_GetOwner_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKController_5) == 0x005D58, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKController_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_49) == 0x005D60, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_49' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character_4) == 0x005D68, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_50) == 0x005D70, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_50' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Greater_IntInt_ReturnValue_1) == 0x005D71, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Select_Default_11) == 0x005D72, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_59) == 0x005D73, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_SwitchEnum_CmpSuccess_4) == 0x005D74, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_DeltaSeconds) == 0x005D78, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_AsBP_SGKMaster_Character_5) == 0x005D80, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_AsBP_SGKMaster_Character_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_DynamicCast_bSuccess_51) == 0x005D88, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_DynamicCast_bSuccess_51' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_60) == 0x005D89, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_CraftingDetails) == 0x005D8A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_CraftingDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Array_Index_Variable_5) == 0x005D8C, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Array_Get_Item_11) == 0x005D90, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_61) == 0x005D98, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_62) == 0x005D99, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsServer_ReturnValue_1) == 0x005D9A, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Name) == 0x005DA0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_BuildMode) == 0x005DB8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_BuildMode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_ItemID) == 0x005DBC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_Event_SoundType) == 0x005DC4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_Event_SoundType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_ItemID) == 0x005DC8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_ItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_SoundType) == 0x005DD0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_SoundType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, Temp_int_Loop_Counter_Variable_5) == 0x005DD4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_MakeStruct_S_InvItem) == 0x005DD8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemFound_5) == 0x005E08, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemFound_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_SGK_ItemDetails_ItemDetails_5) == 0x005E10, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_SGK_ItemDetails_ItemDetails_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Less_IntInt_ReturnValue_6) == 0x0066A0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_Value_3) == 0x0066A8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Map_Find_ReturnValue_3) == 0x0066B0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_IntInt_ReturnValue_9) == 0x0066B4, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_IsValid_ReturnValue_63) == 0x0066B8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Montage_1) == 0x0066C0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_FPMontage_1) == 0x0066C8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_FPMontage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Controller) == 0x0066D0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, K2Node_CustomEvent_Rotation) == 0x0066D8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0066F0, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_Delay_Duration_ImplicitCast) == 0x0066F8, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x0066FC, "Member 'BP_PlayerInventory_C_ExecuteUbergraph_BP_PlayerInventory::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.FindAttachmentSlot
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_FindAttachmentSlot final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentWindow_C*                 AttachmentPanelL;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_AttachmentWindow_C*                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_FindAttachmentSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_FindAttachmentSlot");
static_assert(sizeof(BP_PlayerInventory_C_FindAttachmentSlot) == 0x000030, "Wrong size on BP_PlayerInventory_C_FindAttachmentSlot");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, AttachmentPanelL) == 0x000008, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::AttachmentPanelL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindAttachmentSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000029, "Member 'BP_PlayerInventory_C_FindAttachmentSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.FindCompatiableWeaponSlot
// 0x0950 (0x0950 - 0x0000)
struct BP_PlayerInventory_C_FindCompatiableWeaponSlot final
{
public:
	struct FS_InvItem                             WeaponItem;                                        // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 Slot;                                              // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 WeaponSlotL;                                       // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCD[0xB];                                     // 0x0035(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCE[0x6];                                     // 0x08D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_WeaponSlots>                         CallFunc_Set_ToArray_Result;                       // 0x08D8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 CallFunc_Array_Get_Item;                           // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CCF[0x3];                                     // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x08F8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x094A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD0[0x1];                                     // 0x094B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x094C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_FindCompatiableWeaponSlot) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_FindCompatiableWeaponSlot");
static_assert(sizeof(BP_PlayerInventory_C_FindCompatiableWeaponSlot) == 0x000950, "Wrong size on BP_PlayerInventory_C_FindCompatiableWeaponSlot");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, WeaponItem) == 0x000000, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::WeaponItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, Slot) == 0x000031, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, ReturnValueL) == 0x000032, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, WeaponSlotL) == 0x000033, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_SGK_ItemDetails_ItemFound) == 0x000034, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, Temp_bool_True_if_break_was_hit_Variable) == 0x0008D0, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Not_PreBool_ReturnValue) == 0x0008D1, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Set_ToArray_Result) == 0x0008D8, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Array_Length_ReturnValue) == 0x0008E8, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, Temp_int_Array_Index_Variable) == 0x0008EC, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, Temp_int_Loop_Counter_Variable) == 0x0008F0, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Array_Get_Item) == 0x0008F4, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x0008F8, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000948, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_BooleanAND_ReturnValue) == 0x000949, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Less_IntInt_ReturnValue_1) == 0x00094A, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindCompatiableWeaponSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00094C, "Member 'BP_PlayerInventory_C_FindCompatiableWeaponSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.FindMontage
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerInventory_C_FindMontage final
{
public:
	TMap<class USkeletalMesh*, class UAnimMontage*> TargetMap;                                         // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          AnimFound;                                         // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Montage;                                           // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UAnimMontage*>                   CallFunc_Map_Values_Values;                        // 0x0060(0x0010)(ReferenceParm)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD2[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD3[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_1;       // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_FindMontage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_FindMontage");
static_assert(sizeof(BP_PlayerInventory_C_FindMontage) == 0x0000A8, "Wrong size on BP_PlayerInventory_C_FindMontage");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, TargetMap) == 0x000000, "Member 'BP_PlayerInventory_C_FindMontage::TargetMap' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, AnimFound) == 0x000050, "Member 'BP_PlayerInventory_C_FindMontage::AnimFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, Montage) == 0x000058, "Member 'BP_PlayerInventory_C_FindMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Map_Values_Values) == 0x000060, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_IsValid_ReturnValue) == 0x000089, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Map_Length_ReturnValue) == 0x00008C, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_GetSkeletalMeshAsset_ReturnValue_1) == 0x000098, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_GetSkeletalMeshAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindMontage, CallFunc_Map_Contains_ReturnValue) == 0x0000A0, "Member 'BP_PlayerInventory_C_FindMontage::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.FindQuickSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_FindQuickSlot final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD4[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        OutputSlot;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD5[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_FindQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_FindQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_FindQuickSlot) == 0x000020, "Wrong size on BP_PlayerInventory_C_FindQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_FindQuickSlot, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_FindQuickSlot::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindQuickSlot, OutputSlot) == 0x000008, "Member 'BP_PlayerInventory_C_FindQuickSlot::OutputSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindQuickSlot, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_FindQuickSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindQuickSlot, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000011, "Member 'BP_PlayerInventory_C_FindQuickSlot::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindQuickSlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_PlayerInventory_C_FindQuickSlot::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.FindSpawnPoint
// 0x03B0 (0x03B0 - 0x0000)
struct BP_PlayerInventory_C_FindSpawnPoint final
{
public:
	bool                                          Random;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD6[0xF];                                     // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnLocation;                                     // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   PlayerStartsL;                                     // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0080(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD7[0x3];                                     // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD8[0x3];                                     // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterRespawnPoint_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x00F8(0x0010)(ReferenceParm)
	class ABP_MasterRespawnPoint_C*               CallFunc_Array_Get_Item;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD9[0xB];                                     // 0x0115(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDA[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x01F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDB[0x4];                                     // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0258(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item_1;                         // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDC[0x8];                                     // 0x0278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0280(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDD[0x4];                                     // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0350(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_FindSpawnPoint) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_FindSpawnPoint");
static_assert(sizeof(BP_PlayerInventory_C_FindSpawnPoint) == 0x0003B0, "Wrong size on BP_PlayerInventory_C_FindSpawnPoint");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, Random) == 0x000000, "Member 'BP_PlayerInventory_C_FindSpawnPoint::Random' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, SpawnLocation) == 0x000010, "Member 'BP_PlayerInventory_C_FindSpawnPoint::SpawnLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, PlayerStartsL) == 0x000070, "Member 'BP_PlayerInventory_C_FindSpawnPoint::PlayerStartsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_MakeTransform_ReturnValue) == 0x000080, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Array_Length_ReturnValue) == 0x0000E0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, Temp_int_Array_Index_Variable) == 0x0000E8, "Member 'BP_PlayerInventory_C_FindSpawnPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, Temp_int_Loop_Counter_Variable) == 0x0000EC, "Member 'BP_PlayerInventory_C_FindSpawnPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Add_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_TextIsEmpty_ReturnValue) == 0x0000F4, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000F8, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000120, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Location) == 0x000180, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Rotation) == 0x000198, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Scale) == 0x0001B0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Roll) == 0x0001C8, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Pitch) == 0x0001CC, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Yaw) == 0x0001D0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0001D4, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_MakeRotator_ReturnValue) == 0x0001D8, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_MakeTransform_ReturnValue_1) == 0x0001F0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Array_Length_ReturnValue_2) == 0x000250, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000258, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000268, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00026C, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_Array_Get_Item_1) == 0x000270, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_GetTransform_ReturnValue) == 0x000280, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Location_1) == 0x0002E0, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Rotation_1) == 0x0002F8, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakTransform_Scale_1) == 0x000310, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Roll_1) == 0x000328, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Pitch_1) == 0x00032C, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_BreakRotator_Yaw_1) == 0x000330, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_MakeRotator_ReturnValue_1) == 0x000338, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_FindSpawnPoint, CallFunc_MakeTransform_ReturnValue_2) == 0x000350, "Member 'BP_PlayerInventory_C_FindSpawnPoint::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.HealthRegeneration
// 0x0006 (0x0006 - 0x0000)
struct BP_PlayerInventory_C_HealthRegeneration final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_HealthRegeneration) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_HealthRegeneration");
static_assert(sizeof(BP_PlayerInventory_C_HealthRegeneration) == 0x000006, "Wrong size on BP_PlayerInventory_C_HealthRegeneration");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_Less_IntInt_ReturnValue) == 0x000002, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000003, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000004, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HealthRegeneration, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_PlayerInventory_C_HealthRegeneration::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.HitActor
// 0x01D0 (0x01D0 - 0x0000)
struct BP_PlayerInventory_C_HitActor final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 Param_HitActor;                                    // 0x00E8(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDE[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CDF[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE0[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_HitActor) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_HitActor");
static_assert(sizeof(BP_PlayerInventory_C_HitActor) == 0x0001D0, "Wrong size on BP_PlayerInventory_C_HitActor");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, Hit) == 0x000000, "Member 'BP_PlayerInventory_C_HitActor::Hit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, Param_HitActor) == 0x0000E8, "Member 'BP_PlayerInventory_C_HitActor::Param_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, HitComponent) == 0x0000F0, "Member 'BP_PlayerInventory_C_HitActor::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HitActor, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BP_PlayerInventory_C_HitActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.HoldingItemCheck
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerInventory_C_HoldingItemCheck final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_HoldingItemCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_HoldingItemCheck");
static_assert(sizeof(BP_PlayerInventory_C_HoldingItemCheck) == 0x000058, "Wrong size on BP_PlayerInventory_C_HoldingItemCheck");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, InvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_HoldingItemCheck::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, ReturnValue) == 0x000050, "Member 'BP_PlayerInventory_C_HoldingItemCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_PlayerInventory_C_HoldingItemCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'BP_PlayerInventory_C_HoldingItemCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000053, "Member 'BP_PlayerInventory_C_HoldingItemCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'BP_PlayerInventory_C_HoldingItemCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingItemCheck, CallFunc_BooleanAND_ReturnValue) == 0x000055, "Member 'BP_PlayerInventory_C_HoldingItemCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.HoldingWeaponCheck
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerInventory_C_HoldingWeaponCheck final
{
public:
	struct FS_WeaponSlot                          WeaponSlot;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_HoldingWeaponCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_HoldingWeaponCheck");
static_assert(sizeof(BP_PlayerInventory_C_HoldingWeaponCheck) == 0x000058, "Wrong size on BP_PlayerInventory_C_HoldingWeaponCheck");
static_assert(offsetof(BP_PlayerInventory_C_HoldingWeaponCheck, WeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_HoldingWeaponCheck::WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingWeaponCheck, ReturnValue) == 0x000050, "Member 'BP_PlayerInventory_C_HoldingWeaponCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingWeaponCheck, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_PlayerInventory_C_HoldingWeaponCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingWeaponCheck, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'BP_PlayerInventory_C_HoldingWeaponCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_HoldingWeaponCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000053, "Member 'BP_PlayerInventory_C_HoldingWeaponCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.HungerState
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_HungerState final
{
public:
	double                                        CallFunc_ReturnStateValue_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_HungerState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_HungerState");
static_assert(sizeof(BP_PlayerInventory_C_HungerState) == 0x000008, "Wrong size on BP_PlayerInventory_C_HungerState");
static_assert(offsetof(BP_PlayerInventory_C_HungerState, CallFunc_ReturnStateValue_Value) == 0x000000, "Member 'BP_PlayerInventory_C_HungerState::CallFunc_ReturnStateValue_Value' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InAction
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerInventory_C_InAction final
{
public:
	bool                                          Param_InAction;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InAction) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_InAction");
static_assert(sizeof(BP_PlayerInventory_C_InAction) == 0x000002, "Wrong size on BP_PlayerInventory_C_InAction");
static_assert(offsetof(BP_PlayerInventory_C_InAction, Param_InAction) == 0x000000, "Member 'BP_PlayerInventory_C_InAction::Param_InAction' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InAction, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_InAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IncreaseHealth
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerInventory_C_IncreaseHealth final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE1[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IncreaseHealth) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_IncreaseHealth");
static_assert(sizeof(BP_PlayerInventory_C_IncreaseHealth) == 0x000014, "Wrong size on BP_PlayerInventory_C_IncreaseHealth");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_IncreaseHealth::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_PlayerInventory_C_IncreaseHealth::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IncreaseHealth::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000009, "Member 'BP_PlayerInventory_C_IncreaseHealth::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_PlayerInventory_C_IncreaseHealth::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHealth, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_IncreaseHealth::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IncreaseHunger
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_IncreaseHunger final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE2[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IncreaseHunger) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IncreaseHunger");
static_assert(sizeof(BP_PlayerInventory_C_IncreaseHunger) == 0x000020, "Wrong size on BP_PlayerInventory_C_IncreaseHunger");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHunger, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_IncreaseHunger::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHunger, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IncreaseHunger::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHunger, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_IncreaseHunger::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseHunger, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_PlayerInventory_C_IncreaseHunger::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IncreaseStamina
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_IncreaseStamina final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE3[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IncreaseStamina) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IncreaseStamina");
static_assert(sizeof(BP_PlayerInventory_C_IncreaseStamina) == 0x000020, "Wrong size on BP_PlayerInventory_C_IncreaseStamina");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseStamina, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_IncreaseStamina::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseStamina, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IncreaseStamina::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseStamina, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_IncreaseStamina::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseStamina, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_PlayerInventory_C_IncreaseStamina::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IncreaseThirst
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_IncreaseThirst final
{
public:
	double                                        Amount;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IncreaseThirst) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IncreaseThirst");
static_assert(sizeof(BP_PlayerInventory_C_IncreaseThirst) == 0x000020, "Wrong size on BP_PlayerInventory_C_IncreaseThirst");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseThirst, Amount) == 0x000000, "Member 'BP_PlayerInventory_C_IncreaseThirst::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseThirst, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IncreaseThirst::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseThirst, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_IncreaseThirst::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IncreaseThirst, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'BP_PlayerInventory_C_IncreaseThirst::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InGameLoadComponentData
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_InGameLoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InGameLoadComponentData) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InGameLoadComponentData");
static_assert(sizeof(BP_PlayerInventory_C_InGameLoadComponentData) == 0x000008, "Wrong size on BP_PlayerInventory_C_InGameLoadComponentData");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadComponentData, Save) == 0x000000, "Member 'BP_PlayerInventory_C_InGameLoadComponentData::Save' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InGameLoadPlayerInventory
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerInventory_C_InGameLoadPlayerInventory final
{
public:
	class UBP_SGKSaveGame_C*                      Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InGameLoadPlayerInventory) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InGameLoadPlayerInventory");
static_assert(sizeof(BP_PlayerInventory_C_InGameLoadPlayerInventory) == 0x000040, "Wrong size on BP_PlayerInventory_C_InGameLoadPlayerInventory");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, Save) == 0x000000, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::Save' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKController) == 0x000018, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x000028, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InGameLoadPlayerInventory, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_PlayerInventory_C_InGameLoadPlayerInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InitializePlayerInventory
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_InitializePlayerInventory final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE7[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerBuildingComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InitializePlayerInventory) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InitializePlayerInventory");
static_assert(sizeof(BP_PlayerInventory_C_InitializePlayerInventory) == 0x000038, "Wrong size on BP_PlayerInventory_C_InitializePlayerInventory");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_IsLocallyControlled_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_IsStandalone_ReturnValue) == 0x000009, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_IsDedicatedServer_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_IsServer_ReturnValue) == 0x00001A, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_BooleanOR_ReturnValue_1) == 0x00001B, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_GetController_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InitializePlayerInventory, CallFunc_K2_SetTimer_ReturnValue_2) == 0x000030, "Member 'BP_PlayerInventory_C_InitializePlayerInventory::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InpActEvt_Dance_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PlayerInventory_C_InpActEvt_Dance_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InteractionMath
// 0x0160 (0x0160 - 0x0000)
struct BP_PlayerInventory_C_InteractionMath final
{
public:
	E_CameraType                                  CameraView;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TraceDistance;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0010(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CameraType                                  Temp_byte_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CEA[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CEB[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InteractionMath) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InteractionMath");
static_assert(sizeof(BP_PlayerInventory_C_InteractionMath) == 0x000160, "Wrong size on BP_PlayerInventory_C_InteractionMath");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CameraView) == 0x000000, "Member 'BP_PlayerInventory_C_InteractionMath::CameraView' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, TraceDistance) == 0x000008, "Member 'BP_PlayerInventory_C_InteractionMath::TraceDistance' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, Start) == 0x000010, "Member 'BP_PlayerInventory_C_InteractionMath::Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, End) == 0x000028, "Member 'BP_PlayerInventory_C_InteractionMath::End' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, Temp_byte_Variable) == 0x000042, "Member 'BP_PlayerInventory_C_InteractionMath::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, Temp_real_Variable) == 0x000048, "Member 'BP_PlayerInventory_C_InteractionMath::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000058, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_GetControlRotation_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0000A0, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x0000B8, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000D0, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_VSize_ReturnValue) == 0x0000E8, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, K2Node_Select_Default) == 0x0000F0, "Member 'BP_PlayerInventory_C_InteractionMath::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000110, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Add_VectorVector_ReturnValue) == 0x000118, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000130, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractionMath, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000148, "Member 'BP_PlayerInventory_C_InteractionMath::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InteractTrace
// 0x01D8 (0x01D8 - 0x0000)
struct BP_PlayerInventory_C_InteractTrace final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                ActionType;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CEC[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HitActor_HitActor;                        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_HitActor_HitComponent;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_HitActor_HitActor_1;                      // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_HitActor_HitComponent_1;                  // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CED[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowInteraction_AllowInteraction;    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CEE[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HitActor_HitActor_2;                      // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_HitActor_HitComponent_2;                  // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2; // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowInteraction_AllowInteraction_1;  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CEF[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HitActor_HitActor_3;                      // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_HitActor_HitComponent_3;                  // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_Interact_ReturnValue;                 // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_Interact_ReturnValue_1;               // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF0[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x00D8(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x00E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InteractTrace) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_InteractTrace");
static_assert(sizeof(BP_PlayerInventory_C_InteractTrace) == 0x0001D8, "Wrong size on BP_PlayerInventory_C_InteractTrace");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, Start) == 0x000000, "Member 'BP_PlayerInventory_C_InteractTrace::Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, End) == 0x000018, "Member 'BP_PlayerInventory_C_InteractTrace::End' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, ActionType) == 0x000030, "Member 'BP_PlayerInventory_C_InteractTrace::ActionType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitActor) == 0x000038, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitComponent) == 0x000040, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitActor_1) == 0x000048, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitComponent_1) == 0x000050, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000058, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1) == 0x000070, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SGK_AllowInteraction_AllowInteraction) == 0x000081, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SGK_AllowInteraction_AllowInteraction' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitActor_2) == 0x000088, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitActor_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitComponent_2) == 0x000090, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitComponent_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2) == 0x000098, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SGK_AllowInteraction_AllowInteraction_1) == 0x0000A9, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SGK_AllowInteraction_AllowInteraction_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitActor_3) == 0x0000B0, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitActor_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_HitActor_HitComponent_3) == 0x0000B8, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_HitActor_HitComponent_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3) == 0x0000C0, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_DynamicCast_bSuccess_3) == 0x0000D0, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SGK_Interact_ReturnValue) == 0x0000D1, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SGK_Interact_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SGK_Interact_ReturnValue_1) == 0x0000D2, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SGK_Interact_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, K2Node_MakeArray_Array) == 0x0000D8, "Member 'BP_PlayerInventory_C_InteractTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SphereTraceSingle_OutHit) == 0x0000E8, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_InteractTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x0001D0, "Member 'BP_PlayerInventory_C_InteractTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.InventoryToggled__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_InventoryToggled__DelegateSignature final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_InventoryToggled__DelegateSignature) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_InventoryToggled__DelegateSignature");
static_assert(sizeof(BP_PlayerInventory_C_InventoryToggled__DelegateSignature) == 0x000001, "Wrong size on BP_PlayerInventory_C_InventoryToggled__DelegateSignature");
static_assert(offsetof(BP_PlayerInventory_C_InventoryToggled__DelegateSignature, Open) == 0x000000, "Member 'BP_PlayerInventory_C_InventoryToggled__DelegateSignature::Open' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IsInNoDamageZone
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerInventory_C_IsInNoDamageZone final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IsInNoDamageZone) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IsInNoDamageZone");
static_assert(sizeof(BP_PlayerInventory_C_IsInNoDamageZone) == 0x000040, "Wrong size on BP_PlayerInventory_C_IsInNoDamageZone");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000028, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInNoDamageZone, CallFunc_Greater_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PlayerInventory_C_IsInNoDamageZone::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IsInPlayerInv
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerInventory_C_IsInPlayerInv final
{
public:
	class UBP_MasterInventory_C*                  InventoryComponent;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsInPlayerInv;                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF3[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  EquipL;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CheckInvL;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF4[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF5[0x1];                                     // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF6[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IsInPlayerInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IsInPlayerInv");
static_assert(sizeof(BP_PlayerInventory_C_IsInPlayerInv) == 0x000048, "Wrong size on BP_PlayerInventory_C_IsInPlayerInv");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, InventoryComponent) == 0x000000, "Member 'BP_PlayerInventory_C_IsInPlayerInv::InventoryComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, Param_IsInPlayerInv) == 0x000008, "Member 'BP_PlayerInventory_C_IsInPlayerInv::Param_IsInPlayerInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, EquipL) == 0x000010, "Member 'BP_PlayerInventory_C_IsInPlayerInv::EquipL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CheckInvL) == 0x000018, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CheckInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, Temp_int_Variable) == 0x000024, "Member 'BP_PlayerInventory_C_IsInPlayerInv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, Temp_bool_Variable) == 0x00002D, "Member 'BP_PlayerInventory_C_IsInPlayerInv::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_IsValid_ReturnValue_2) == 0x00002E, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_Not_PreBool_ReturnValue) == 0x00002F, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_IsValid_ReturnValue_3) == 0x000031, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000032, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, Temp_int_Variable_1) == 0x000034, "Member 'BP_PlayerInventory_C_IsInPlayerInv::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_IsValid_ReturnValue_4) == 0x000038, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000039, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_Add_IntInt_ReturnValue_1) == 0x00003C, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000040, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInPlayerInv, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000041, "Member 'BP_PlayerInventory_C_IsInPlayerInv::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IsInventoryEquipped
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerInventory_C_IsInventoryEquipped final
{
public:
	class UBP_MasterInventory_C*                  ItemInv;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentInventory_C*               EquipmentInv;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipped;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF7[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF8[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CF9[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0028(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IsInventoryEquipped) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IsInventoryEquipped");
static_assert(sizeof(BP_PlayerInventory_C_IsInventoryEquipped) == 0x000080, "Wrong size on BP_PlayerInventory_C_IsInventoryEquipped");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, ItemInv) == 0x000000, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::ItemInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, EquipmentInv) == 0x000008, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::EquipmentInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, IsEquipped) == 0x000010, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, Temp_int_Variable) == 0x000014, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_Conv_IntToByte_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_GetValidValue_ReturnValue) == 0x00001A, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_MakeLiteralInt_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000078, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsInventoryEquipped, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000079, "Member 'BP_PlayerInventory_C_IsInventoryEquipped::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.IsItemHeld
// 0x00D8 (0x00D8 - 0x0000)
struct BP_PlayerInventory_C_IsItemHeld final
{
public:
	class FName                                   Item_ID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemMoveType                                Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFA[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             Temp_struct_Variable;                              // 0x0010(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             Temp_struct_Variable_1;                            // 0x0040(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             Temp_struct_Variable_2;                            // 0x0070(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_Select_Default;                             // 0x00A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_IsItemHeld) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_IsItemHeld");
static_assert(sizeof(BP_PlayerInventory_C_IsItemHeld) == 0x0000D8, "Wrong size on BP_PlayerInventory_C_IsItemHeld");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, Item_ID) == 0x000000, "Member 'BP_PlayerInventory_C_IsItemHeld::Item_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_IsItemHeld::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, Temp_byte_Variable) == 0x000009, "Member 'BP_PlayerInventory_C_IsItemHeld::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, Temp_struct_Variable) == 0x000010, "Member 'BP_PlayerInventory_C_IsItemHeld::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, Temp_struct_Variable_1) == 0x000040, "Member 'BP_PlayerInventory_C_IsItemHeld::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, Temp_struct_Variable_2) == 0x000070, "Member 'BP_PlayerInventory_C_IsItemHeld::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, K2Node_Select_Default) == 0x0000A0, "Member 'BP_PlayerInventory_C_IsItemHeld::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_IsItemHeld, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000D0, "Member 'BP_PlayerInventory_C_IsItemHeld::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ItemActionCheck
// 0x0910 (0x0910 - 0x0000)
struct BP_PlayerInventory_C_ItemActionCheck final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowUse;                                          // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFB[0x2];                                     // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFC[0xF];                                     // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0050(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFD[0x4];                                     // 0x08E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InventoryAction                     CallFunc_Array_Get_Item;                           // 0x08E8(0x0020)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0909(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ItemActionCheck) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_ItemActionCheck");
static_assert(sizeof(BP_PlayerInventory_C_ItemActionCheck) == 0x000910, "Wrong size on BP_PlayerInventory_C_ItemActionCheck");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, Item) == 0x000000, "Member 'BP_PlayerInventory_C_ItemActionCheck::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, Action) == 0x000030, "Member 'BP_PlayerInventory_C_ItemActionCheck::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, AllowUse) == 0x000031, "Member 'BP_PlayerInventory_C_ItemActionCheck::AllowUse' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, Temp_int_Array_Index_Variable) == 0x000034, "Member 'BP_PlayerInventory_C_ItemActionCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'BP_PlayerInventory_C_ItemActionCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_SGK_ItemDetails_ItemFound) == 0x000040, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000050, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_Array_Length_ReturnValue) == 0x0008E0, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_Array_Get_Item) == 0x0008E8, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000908, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ItemActionCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000909, "Member 'BP_PlayerInventory_C_ItemActionCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.KnownRecipeCheck
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_KnownRecipeCheck final
{
public:
	struct FDataTableRowHandle                    RecipeDataHandle;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFE[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_KnownRecipeCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_KnownRecipeCheck");
static_assert(sizeof(BP_PlayerInventory_C_KnownRecipeCheck) == 0x000038, "Wrong size on BP_PlayerInventory_C_KnownRecipeCheck");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, RecipeDataHandle) == 0x000000, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::RecipeDataHandle' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_KnownRecipeCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000035, "Member 'BP_PlayerInventory_C_KnownRecipeCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LeanCheck
// 0x0009 (0x0009 - 0x0000)
struct BP_PlayerInventory_C_LeanCheck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LeanCheck) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_LeanCheck");
static_assert(sizeof(BP_PlayerInventory_C_LeanCheck) == 0x000009, "Wrong size on BP_PlayerInventory_C_LeanCheck");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_LeanCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_BooleanOR_ReturnValue) == 0x000006, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LeanCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000008, "Member 'BP_PlayerInventory_C_LeanCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LearnAllItemRecipes
// 0x0910 (0x0910 - 0x0000)
struct BP_PlayerInventory_C_LearnAllItemRecipes final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RecipeLearnt;                                      // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RecipeLearntL;                                     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CFF[0xD];                                     // 0x0033(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D00[0x4];                                     // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x08D8(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LearnNewRecipe_ReturnValue;               // 0x08EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D01[0x3];                                     // 0x08ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D02[0x3];                                     // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D03[0x3];                                     // 0x08FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LearnAllItemRecipes) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_LearnAllItemRecipes");
static_assert(sizeof(BP_PlayerInventory_C_LearnAllItemRecipes) == 0x000910, "Wrong size on BP_PlayerInventory_C_LearnAllItemRecipes");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, RecipeLearnt) == 0x000030, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::RecipeLearnt' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, RecipeLearntL) == 0x000031, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::RecipeLearntL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_SGK_ItemDetails_ItemFound) == 0x000032, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, Temp_int_Array_Index_Variable) == 0x0008D0, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Array_Get_Item) == 0x0008D8, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Array_Length_ReturnValue) == 0x0008E8, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_LearnNewRecipe_ReturnValue) == 0x0008EC, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_LearnNewRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Array_Length_ReturnValue_1) == 0x0008F0, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Greater_IntInt_ReturnValue) == 0x0008F4, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, Temp_int_Loop_Counter_Variable) == 0x0008F8, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Less_IntInt_ReturnValue) == 0x0008FC, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnAllItemRecipes, CallFunc_Add_IntInt_ReturnValue) == 0x000900, "Member 'BP_PlayerInventory_C_LearnAllItemRecipes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LearnNewRecipe
// 0x0220 (0x0220 - 0x0000)
struct BP_PlayerInventory_C_LearnNewRecipe final
{
public:
	struct FDataTableRowHandle                    RecipeDataHandle;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KnownRecipeCheck_ReturnValue;             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D04[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0018(0x0038)(HasGetValueTypeHash)
	struct FS_CraftingRecipe                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D05[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0168(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D06[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01C0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01D0(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x01E8(0x0038)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LearnNewRecipe) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_LearnNewRecipe");
static_assert(sizeof(BP_PlayerInventory_C_LearnNewRecipe) == 0x000220, "Wrong size on BP_PlayerInventory_C_LearnNewRecipe");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, RecipeDataHandle) == 0x000000, "Member 'BP_PlayerInventory_C_LearnNewRecipe::RecipeDataHandle' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_LearnNewRecipe::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, CallFunc_KnownRecipeCheck_ReturnValue) == 0x000011, "Member 'BP_PlayerInventory_C_LearnNewRecipe::CallFunc_KnownRecipeCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, K2Node_MakeStruct_S_NotificationDetails) == 0x000018, "Member 'BP_PlayerInventory_C_LearnNewRecipe::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_PlayerInventory_C_LearnNewRecipe::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000160, "Member 'BP_PlayerInventory_C_LearnNewRecipe::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, K2Node_MakeStruct_FormatArgumentData) == 0x000168, "Member 'BP_PlayerInventory_C_LearnNewRecipe::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, CallFunc_Array_AddUnique_ReturnValue) == 0x0001B8, "Member 'BP_PlayerInventory_C_LearnNewRecipe::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, K2Node_MakeArray_Array) == 0x0001C0, "Member 'BP_PlayerInventory_C_LearnNewRecipe::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, CallFunc_Format_ReturnValue) == 0x0001D0, "Member 'BP_PlayerInventory_C_LearnNewRecipe::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LearnNewRecipe, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0001E8, "Member 'BP_PlayerInventory_C_LearnNewRecipe::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LoadComponentData
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_LoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadComplete;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LoadComponentData) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_LoadComponentData");
static_assert(sizeof(BP_PlayerInventory_C_LoadComponentData) == 0x000010, "Wrong size on BP_PlayerInventory_C_LoadComponentData");
static_assert(offsetof(BP_PlayerInventory_C_LoadComponentData, SaveGame) == 0x000000, "Member 'BP_PlayerInventory_C_LoadComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadComponentData, LoadComplete) == 0x000008, "Member 'BP_PlayerInventory_C_LoadComponentData::LoadComplete' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LoadPlayerInventory
// 0x0B30 (0x0B30 - 0x0000)
struct BP_PlayerInventory_C_LoadPlayerInventory final
{
public:
	bool                                          LoadLocation;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D07[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotSave                   EquipmentSlotL;                                    // 0x0004(0x001C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlotSave                      WeaponSlotL;                                       // 0x0020(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x0044(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D08[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       SaveSystemL;                                       // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItemL;                                          // 0x0078(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x00A8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	uint8                                         Pad_1D09[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerSave                          PlayerSaveL;                                       // 0x00C0(0x0140)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0A[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory;     // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0B[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_1;   // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0C[0x6];                                     // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x0240(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound_1;    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0D[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails_1;  // 0x0288(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound_2;    // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0E[0x7];                                     // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails_2;  // 0x02D0(0x0040)(NoDestructor, HasGetValueTypeHash)
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_2;   // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D0F[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D10[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_DynamicCast_AsBP_SGKSave_Game;              // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D11[0x3];                                     // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0340(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0390(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x03A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x03F0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_3;   // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0409(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x040A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D12[0x5];                                     // 0x040B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_4;   // 0x0410(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D13[0x6];                                     // 0x041A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_5;   // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D14[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item;                           // 0x0430(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0470(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D15[0x3];                                     // 0x0479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x047C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D16[0x4];                                     // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_1;                         // 0x0488(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_2;                         // 0x04C8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0508(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D17[0x3];                                     // 0x0539(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D18[0x3];                                     // 0x0541(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D19[0x4];                                     // 0x054C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0560(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0570(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1A[0x7];                                     // 0x0571(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1B[0x7];                                     // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2;  // 0x05A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1C[0x7];                                     // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_2; // 0x05C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x05C8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1D[0x3];                                     // 0x05FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1E[0x4];                                     // 0x060C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x0610(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1F[0x3];                                     // 0x0621(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         CallFunc_Array_Get_Item_4;                         // 0x062C(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D20[0x7];                                     // 0x0659(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_2;                // 0x0660(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D21[0x7];                                     // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_5;                         // 0x0678(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x06B8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D22[0x4];                                     // 0x06EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x06F0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_6;                         // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0728(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0738(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D23[0x4];                                     // 0x073C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_3;                // 0x0740(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value_1;               // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D24[0x3];                                     // 0x0751(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotSave                      CallFunc_Array_Get_Item_7;                         // 0x0754(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D25[0x3];                                     // 0x077D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_8;                         // 0x0780(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x07D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0808(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_9;                         // 0x0818(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory_1;        // 0x0858(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D26[0x7];                                     // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_10;                        // 0x0868(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_2;                  // 0x08A8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x08D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D27[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x0910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_3;  // 0x0918(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D28[0x7];                                     // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x0930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D29[0x7];                                     // 0x0939(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0940(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2A[0x7];                                     // 0x0951(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_1;             // 0x0958(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped_1;                 // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0969(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2B[0x6];                                     // 0x096A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0970(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_EquipmentSlotSave                   CallFunc_Array_Get_Item_11;                        // 0x0980(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x099C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x09A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindPlayerSave_ReturnValue;               // 0x09A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2C[0xD];                                     // 0x09A3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerSave                          CallFunc_FindPlayerSave_PlayerSave;                // 0x09B0(0x0140)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2D[0x7];                                     // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_1;   // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_2;   // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentHunger_ImplicitCast;     // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentThirst_ImplicitCast;     // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_3;   // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LoadPlayerInventory) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_LoadPlayerInventory");
static_assert(sizeof(BP_PlayerInventory_C_LoadPlayerInventory) == 0x000B30, "Wrong size on BP_PlayerInventory_C_LoadPlayerInventory");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, LoadLocation) == 0x000000, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::LoadLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, EquipmentSlotL) == 0x000004, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, WeaponSlotL) == 0x000020, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, InvSaveSlotL) == 0x000044, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, SaveSystemL) == 0x000070, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::SaveSystemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, InvItemL) == 0x000078, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, FoundSlotsL) == 0x0000A8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, PlayerSaveL) == 0x0000C0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::PlayerSaveL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Loop_Counter_Variable) == 0x000200, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000204, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Array_Index_Variable) == 0x000208, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Loop_Counter_Variable_1) == 0x00020C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000210, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Array_Index_Variable_1) == 0x000214, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Length_ReturnValue) == 0x000218, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory) == 0x000220, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess) == 0x000228, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_1) == 0x000230, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_1) == 0x000238, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x000239, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x000240, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemFound_1) == 0x000280, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemDetails_1) == 0x000288, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemFound_2) == 0x0002C8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemConsumableDetails_ItemDetails_2) == 0x0002D0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemConsumableDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_2) == 0x000310, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_2) == 0x000318, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000320, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000328, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKSave_Game) == 0x000330, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKSave_Game' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_3) == 0x000338, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Array_Index_Variable_2) == 0x00033C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000340, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_WeaponSlotID) == 0x000390, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x0003A0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0003F0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_3) == 0x000400, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_4) == 0x000408, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_IsValid_ReturnValue) == 0x000409, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_IsValid_ReturnValue_1) == 0x00040A, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_4) == 0x000410, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_5) == 0x000418, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000419, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_5) == 0x000420, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_6) == 0x000428, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item) == 0x000430, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000470, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_7) == 0x000478, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Loop_Counter_Variable_2) == 0x00047C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x000480, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_1) == 0x000488, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_2) == 0x0004C8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_InvItem) == 0x000508, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_IsValid_ReturnValue_2) == 0x000538, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Array_Index_Variable_3) == 0x00053C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000540, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Loop_Counter_Variable_3) == 0x000544, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Add_IntInt_ReturnValue_3) == 0x000548, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_GetGameMode_ReturnValue) == 0x000550, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_GetGameMode_ReturnValue_1) == 0x000558, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000560, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_8) == 0x000570, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000578, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_9) == 0x000588, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000590, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000598, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_GetGameMode_ReturnValue_2) == 0x0005A0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2) == 0x0005A8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_10) == 0x0005B8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_GetGlobalInventory_GlobalInventory_2) == 0x0005C0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_GetGlobalInventory_GlobalInventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_CreateNewItem_NewItem) == 0x0005C8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Loop_Counter_Variable_4) == 0x0005F8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0005FC, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_3) == 0x000600, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000608, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_DataTableRowHandle) == 0x000610, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x000620, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_AddUnique_ReturnValue) == 0x000624, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Add_IntInt_ReturnValue_4) == 0x000628, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_4) == 0x00062C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Length_ReturnValue_2) == 0x000654, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Less_IntInt_ReturnValue_2) == 0x000658, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_2) == 0x000660, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EquipWeapon_Return_Value) == 0x000670, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_5) == 0x000678, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_CreateNewItem_NewItem_1) == 0x0006B8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, Temp_int_Array_Index_Variable_4) == 0x0006E8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_InvItem_1) == 0x0006F0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_6) == 0x000720, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000728, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000738, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_WeaponSlotID_3) == 0x000740, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_WeaponSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EquipWeapon_Return_Value_1) == 0x000750, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EquipWeapon_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_7) == 0x000754, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Length_ReturnValue_3) == 0x000778, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Less_IntInt_ReturnValue_3) == 0x00077C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_8) == 0x000780, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_InvItem_2) == 0x0007D0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemSize_Height) == 0x000800, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_ItemSize_Width) == 0x000804, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000808, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_9) == 0x000818, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory_1) == 0x000858, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_11) == 0x000860, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_10) == 0x000868, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_CreateNewItem_NewItem_2) == 0x0008A8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_CreateNewItem_NewItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_SetFieldsInStruct_StructOut) == 0x0008D8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000908, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_GetGameMode_ReturnValue_3) == 0x000910, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_3) == 0x000918, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_DynamicCast_bSuccess_12) == 0x000928, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_SGK_GetSaveGame_SaveGame) == 0x000930, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000938, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000940, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EquipItem_ItemEquipped) == 0x000950, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_MakeStruct_S_EquipmentSlotID_1) == 0x000958, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_MakeStruct_S_EquipmentSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_EquipItem_ItemEquipped_1) == 0x000968, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_EquipItem_ItemEquipped_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000969, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000970, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Get_Item_11) == 0x000980, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_Length_ReturnValue_4) == 0x00099C, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Less_IntInt_ReturnValue_4) == 0x0009A0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x0009A1, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_FindPlayerSave_ReturnValue) == 0x0009A2, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_FindPlayerSave_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_FindPlayerSave_PlayerSave) == 0x0009B0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_FindPlayerSave_PlayerSave' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000AF0, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x000AF8, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentWeight_ImplicitCast_1) == 0x000B00, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentWeight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentWeight_ImplicitCast_2) == 0x000B08, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentWeight_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentHunger_ImplicitCast) == 0x000B10, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentHunger_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentThirst_ImplicitCast) == 0x000B18, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentThirst_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LoadPlayerInventory, K2Node_VariableSet_CurrentWeight_ImplicitCast_3) == 0x000B20, "Member 'BP_PlayerInventory_C_LoadPlayerInventory::K2Node_VariableSet_CurrentWeight_ImplicitCast_3' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.LookAtTrace
// 0x0280 (0x0280 - 0x0000)
struct BP_PlayerInventory_C_LookAtTrace final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2E[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2F[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D30[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InteractionMath_Start;                    // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InteractionMath_End;                      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D31[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_SGK_CharacterCamera_CurrentCamera;        // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_SGK_CharacterCamera_CurrentSpringArm;     // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D32[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0190(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_LookAtTrace) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_LookAtTrace");
static_assert(sizeof(BP_PlayerInventory_C_LookAtTrace) == 0x000280, "Wrong size on BP_PlayerInventory_C_LookAtTrace");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, Temp_string_Variable) == 0x000000, "Member 'BP_PlayerInventory_C_LookAtTrace::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000012, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000013, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_Time) == 0x000014, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_Distance) == 0x000018, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_Location) == 0x000020, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000038, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_Normal) == 0x000050, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000068, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_PhysMat) == 0x000080, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_HitActor) == 0x000088, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_HitComponent) == 0x000090, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000098, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_BoneName) == 0x0000A0, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_HitItem) == 0x0000A8, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0000AC, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0000B0, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_TraceStart) == 0x0000B8, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_BreakHitResult_TraceEnd) == 0x0000D0, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_IsValid_ReturnValue_2) == 0x0000E8, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_GetDisplayName_ReturnValue) == 0x0000F0, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_InteractionMath_Start) == 0x000100, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_InteractionMath_Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_InteractionMath_End) == 0x000118, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_InteractionMath_End' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x000130, "Member 'BP_PlayerInventory_C_LookAtTrace::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_PlayerInventory_C_LookAtTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_SGK_CharacterCamera_CurrentCamera) == 0x000148, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_SGK_CharacterCamera_CurrentCamera' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_SGK_CharacterCamera_CurrentSpringArm) == 0x000150, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_SGK_CharacterCamera_CurrentSpringArm' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, Temp_bool_Variable) == 0x000158, "Member 'BP_PlayerInventory_C_LookAtTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, K2Node_Select_Default) == 0x000160, "Member 'BP_PlayerInventory_C_LookAtTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, K2Node_MakeArray_Array) == 0x000170, "Member 'BP_PlayerInventory_C_LookAtTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000190, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_LookAtTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x000278, "Member 'BP_PlayerInventory_C_LookAtTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.MoveAddToContainer
// 0x1850 (0x1850 - 0x0000)
struct BP_PlayerInventory_C_MoveAddToContainer final
{
public:
	struct FS_InvSlot                             StartSlot;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             EndSlot;                                           // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x00A0(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotification;                                  // 0x00A1(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D33[0x6];                                     // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  ContainerInvL;                                     // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             EndSlotL;                                          // 0x00B0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             RootSlotL;                                         // 0x0100(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0150(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D34[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             AddItemL;                                          // 0x0158(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             StartSlotL;                                        // 0x0188(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x01D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D35[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddAmountL;                                        // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         StartDetailsL;                                     // 0x01E0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         StartItemAmountL;                                  // 0x0A70(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndSlotInStartInvL;                                // 0x0A74(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartSlotInEndInvL;                                // 0x0A75(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A76(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D36[0x1];                                     // 0x0A77(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0A78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0A80(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D37[0x6];                                     // 0x0ABA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_SelfItem_self_CastInput;              // 0x0AC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0AD0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound;       // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D38[0x6];                                     // 0x0B02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails; // 0x0B08(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0B78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0B79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D39[0x6];                                     // 0x0B7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0B80(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0BD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0BD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0BD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3A[0x4];                                     // 0x0BDC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetRootSlot_RootInvSlot;              // 0x0BE0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3B[0x4];                                     // 0x0C34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0C38(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3C[0x7];                                     // 0x0C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  Temp_object_Variable;                              // 0x0C78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x0C81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3D[0x6];                                     // 0x0C82(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x0C88(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0CD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_2;               // 0x0CDC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3E[0x3];                                     // 0x0CDD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_2;                 // 0x0CE0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0D30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0D34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0D35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemLimitCheck_AllowAdd;                  // 0x0D36(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3F[0x1];                                     // 0x0D37(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ItemLimitCheck_AddCount;                  // 0x0D38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_Remaining;                 // 0x0D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0D40(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x0D79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0D7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D40[0x5];                                     // 0x0D7B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0D80(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x1610(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x1640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D41[0x7];                                     // 0x1641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x1648(0x0038)(HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_Select_Default;                             // 0x1680(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x1688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_3;               // 0x168A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D42[0x5];                                     // 0x168B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_3;                 // 0x1690(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_4;         // 0x16E0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x1718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x1719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D43[0x2];                                     // 0x171A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x171C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x1720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x1721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x1722(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D44[0x5];                                     // 0x1723(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x1728(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x1738(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x1788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindFreeStackSpace_Reaminder;             // 0x1789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D45[0x6];                                     // 0x178A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_FindFreeStackSpace_ReaminderInvItem;      // 0x1790(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x17C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D46[0x7];                                     // 0x17C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetRootSlot_RootInvSlot_1;            // 0x17C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x1818(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x1848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x1849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_MoveAddToContainer) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_MoveAddToContainer");
static_assert(sizeof(BP_PlayerInventory_C_MoveAddToContainer) == 0x001850, "Wrong size on BP_PlayerInventory_C_MoveAddToContainer");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, StartSlot) == 0x000000, "Member 'BP_PlayerInventory_C_MoveAddToContainer::StartSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, EndSlot) == 0x000050, "Member 'BP_PlayerInventory_C_MoveAddToContainer::EndSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, Split) == 0x0000A0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, ShowNotification) == 0x0000A1, "Member 'BP_PlayerInventory_C_MoveAddToContainer::ShowNotification' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, ContainerInvL) == 0x0000A8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::ContainerInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, EndSlotL) == 0x0000B0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::EndSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, RootSlotL) == 0x000100, "Member 'BP_PlayerInventory_C_MoveAddToContainer::RootSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, RotatedL) == 0x000150, "Member 'BP_PlayerInventory_C_MoveAddToContainer::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, AddItemL) == 0x000158, "Member 'BP_PlayerInventory_C_MoveAddToContainer::AddItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, StartSlotL) == 0x000188, "Member 'BP_PlayerInventory_C_MoveAddToContainer::StartSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, RemainderL) == 0x0001D8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, AddAmountL) == 0x0001DC, "Member 'BP_PlayerInventory_C_MoveAddToContainer::AddAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, StartDetailsL) == 0x0001E0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::StartDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, StartItemAmountL) == 0x000A70, "Member 'BP_PlayerInventory_C_MoveAddToContainer::StartItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, EndSlotInStartInvL) == 0x000A74, "Member 'BP_PlayerInventory_C_MoveAddToContainer::EndSlotInStartInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, StartSlotInEndInvL) == 0x000A75, "Member 'BP_PlayerInventory_C_MoveAddToContainer::StartSlotInEndInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x000A76, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_GetObjectClass_ReturnValue) == 0x000A78, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_MakeStruct_S_NotificationDetails) == 0x000A80, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000AB8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000AB9, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_SelfItem_self_CastInput) == 0x000AC0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_SelfItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_SelfItem_SelfItem) == 0x000AD0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000B00, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_ItemContainerDetails_ItemFound) == 0x000B01, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_ItemContainerDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails) == 0x000B08, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000B78, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000B79, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000B80, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue) == 0x000BD0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000BD4, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000BD8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetRootSlot_RootInvSlot) == 0x000BE0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetRootSlot_RootInvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000C30, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000C38, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000C70, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, Temp_object_Variable) == 0x000C78, "Member 'BP_PlayerInventory_C_MoveAddToContainer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_BooleanAND_ReturnValue) == 0x000C80, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x000C81, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x000C88, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000CD8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound_2) == 0x000CDC, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot_2) == 0x000CE0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000D30, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_IsValid_ReturnValue) == 0x000D34, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_IsValid_ReturnValue_1) == 0x000D35, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_ItemLimitCheck_AllowAdd) == 0x000D36, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_ItemLimitCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_ItemLimitCheck_AddCount) == 0x000D38, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_ItemLimitCheck_AddCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_ItemLimitCheck_Remaining) == 0x000D3C, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_ItemLimitCheck_Remaining' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000D40, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000D78, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x000D79, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_ItemDetails_ItemFound) == 0x000D7A, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000D80, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_InvSlotItem_InvItem) == 0x001610, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, Temp_bool_Variable) == 0x001640, "Member 'BP_PlayerInventory_C_MoveAddToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_MakeStruct_S_NotificationDetails_3) == 0x001648, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_Select_Default) == 0x001680, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x001688, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x001689, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound_3) == 0x00168A, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot_3) == 0x001690, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, K2Node_MakeStruct_S_NotificationDetails_4) == 0x0016E0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::K2Node_MakeStruct_S_NotificationDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_IsValid_ReturnValue_2) == 0x001718, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_AddWeightCheck_CanAdd) == 0x001719, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_AddWeightCheck_ItemCount) == 0x00171C, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x001720, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_FindEmptySlots_SpaceFound) == 0x001721, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_FindEmptySlots_Rotated) == 0x001722, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_FindEmptySlots_FoundSlots) == 0x001728, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_Array_Get_Item) == 0x001738, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x001788, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_FindFreeStackSpace_Reaminder) == 0x001789, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_FindFreeStackSpace_Reaminder' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_FindFreeStackSpace_ReaminderInvItem) == 0x001790, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_FindFreeStackSpace_ReaminderInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_BooleanAND_ReturnValue_2) == 0x0017C0, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_GetRootSlot_RootInvSlot_1) == 0x0017C8, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_GetRootSlot_RootInvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x001818, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_IsItemInParentInv_IsInInv) == 0x001848, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAddToContainer, CallFunc_IsItemInParentInv_IsInInv_1) == 0x001849, "Member 'BP_PlayerInventory_C_MoveAddToContainer::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.MoveAttachmentAddToContainer
// 0x1F00 (0x1F00 - 0x0000)
struct BP_PlayerInventory_C_MoveAttachmentAddToContainer final
{
public:
	struct FS_AttachmentSlotID                    Attachment_ID;                                     // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             EndSlot;                                           // 0x0010(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ChecksOnly;                                        // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0061(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D47[0x6];                                     // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  ContainerInvL;                                     // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             EndSlotL;                                          // 0x0070(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             RootSlotL;                                         // 0x00C0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0110(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D48[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             AddItemL;                                          // 0x0118(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_AttachmentSlot                      StartSlotL;                                        // 0x0148(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x0190(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D49[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddAmountL;                                        // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4A[0x8];                                     // 0x0198(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         StartDetailsL;                                     // 0x01A0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         StartItemAmountL;                                  // 0x0A30(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndSlotInStartInvL;                                // 0x0A34(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartSlotInEndInvL;                                // 0x0A35(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4B[0x2];                                     // 0x0A36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0A38(0x0038)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0A71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0A72(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0A73(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4C[0x4];                                     // 0x0A74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0A78(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4D[0x7];                                     // 0x0AC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0AD0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x1360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4E[0x7];                                     // 0x1361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x1368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x1370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SwapAttachments_ReturnValue;              // 0x1371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4F[0x6];                                     // 0x1372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_RemoveAttachment_self_CastInput;      // 0x1378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x1388(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x13D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D50[0x7];                                     // 0x1429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x1430(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ItemLimitCheck_AllowAdd;                  // 0x1478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D51[0x3];                                     // 0x1479(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ItemLimitCheck_AddCount;                  // 0x147C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_Remaining;                 // 0x1480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D52[0x4];                                     // 0x1484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x1488(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x14C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x14C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D53[0xE];                                     // 0x14C2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x14D0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x1D60(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x1D98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x1D99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x1D9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D54[0x5];                                     // 0x1D9B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x1DA0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x1DF0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1E28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D55[0x7];                                     // 0x1E29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  Temp_object_Variable;                              // 0x1E30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_Select_Default;                             // 0x1E38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x1E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x1E42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x1E43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D56[0x4];                                     // 0x1E44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x1E48(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x1E58(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_GetRootSlot_RootInvSlot;              // 0x1EA8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_MoveAttachmentAddToContainer) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_MoveAttachmentAddToContainer");
static_assert(sizeof(BP_PlayerInventory_C_MoveAttachmentAddToContainer) == 0x001F00, "Wrong size on BP_PlayerInventory_C_MoveAttachmentAddToContainer");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, Attachment_ID) == 0x000000, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::Attachment_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, EndSlot) == 0x000010, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::EndSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, ChecksOnly) == 0x000060, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::ChecksOnly' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, ReturnValue) == 0x000061, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, ContainerInvL) == 0x000068, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::ContainerInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, EndSlotL) == 0x000070, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::EndSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, RootSlotL) == 0x0000C0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::RootSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, RotatedL) == 0x000110, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, AddItemL) == 0x000118, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::AddItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, StartSlotL) == 0x000148, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::StartSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, RemainderL) == 0x000190, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, AddAmountL) == 0x000194, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::AddAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, StartDetailsL) == 0x0001A0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::StartDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, StartItemAmountL) == 0x000A30, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::StartItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, EndSlotInStartInvL) == 0x000A34, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::EndSlotInStartInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, StartSlotInEndInvL) == 0x000A35, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::StartSlotInEndInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_NotificationDetails) == 0x000A38, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, Temp_bool_Variable) == 0x000A70, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_Not_PreBool_ReturnValue) == 0x000A71, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_Not_PreBool_ReturnValue_1) == 0x000A72, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000A73, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000A78, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_ItemDetails_ItemFound) == 0x000AC8, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000AD0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_ClassIsChildOf_ReturnValue) == 0x001360, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x001368, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_DynamicCast_bSuccess) == 0x001370, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SwapAttachments_ReturnValue) == 0x001371, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SwapAttachments_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_RemoveAttachment_self_CastInput) == 0x001378, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_RemoveAttachment_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_InvSlot) == 0x001388, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_InvSlot_1) == 0x0013D8, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SelectAttachmentItem_IsValid) == 0x001428, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SelectAttachmentItem_ReturnValue) == 0x001430, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_ItemLimitCheck_AllowAdd) == 0x001478, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_ItemLimitCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_ItemLimitCheck_AddCount) == 0x00147C, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_ItemLimitCheck_AddCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_ItemLimitCheck_Remaining) == 0x001480, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_ItemLimitCheck_Remaining' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_NotificationDetails_1) == 0x001488, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x0014C0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x0014C1, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x0014D0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_NotificationDetails_2) == 0x001D60, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_IsItemInParentInv_IsInInv) == 0x001D98, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_IsItemInParentInv_IsInInv_1) == 0x001D99, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x001D9A, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x001DA0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_MakeStruct_S_NotificationDetails_3) == 0x001DF0, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_IsValid_ReturnValue) == 0x001E28, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, Temp_object_Variable) == 0x001E30, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, K2Node_Select_Default) == 0x001E38, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x001E40, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_Not_PreBool_ReturnValue_2) == 0x001E41, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_FindEmptySlots_SpaceFound) == 0x001E42, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_FindEmptySlots_Rotated) == 0x001E43, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_FindEmptySlots_FoundSlots) == 0x001E48, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_Array_Get_Item) == 0x001E58, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveAttachmentAddToContainer, CallFunc_SGK_GetRootSlot_RootInvSlot) == 0x001EA8, "Member 'BP_PlayerInventory_C_MoveAttachmentAddToContainer::CallFunc_SGK_GetRootSlot_RootInvSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.MoveItem
// 0x2940 (0x2940 - 0x0000)
struct BP_PlayerInventory_C_MoveItem final
{
public:
	struct FS_InvSlotID                           StartSlotID;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           EndSlotID;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemMoved;                                         // 0x0024(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D57[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  WeaponInvL;                                        // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsItemEquipL;                                      // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D58[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemQuickSlotRefL;                                 // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SplitAmountL;                                      // 0x0039(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D59[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddAmountL;                                        // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartItemAmountL;                                  // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitCountL;                                       // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameInvL;                                          // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             EndSlotL;                                          // 0x0050(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             StartSlotL;                                        // 0x00A0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         StartItemDetailsL;                                 // 0x00F0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit;    // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5B[0x3];                                     // 0x0985(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x098C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped;           // 0x098D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x098E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5C[0x1];                                     // 0x098F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0990(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x09C8(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit_1;  // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5D[0x3];                                     // 0x0A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0A08(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x0A42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_2;              // 0x0A43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_3;              // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x0A45(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5E[0x2];                                     // 0x0A46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D5F[0x3];                                     // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x0A50(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0A8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0A8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped_1;         // 0x0A8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D60[0x3];                                     // 0x0A8D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D61[0x4];                                     // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Remainder;                           // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0AA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0AA5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D62[0x2];                                     // 0x0AA6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit_2;  // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0AAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D63[0x2];                                     // 0x0AAE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0AB0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0B02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0B03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_1;               // 0x0B04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D64[0x3];                                     // 0x0B05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_1;                 // 0x0B08(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_2;               // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D65[0x7];                                     // 0x0B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_2;                 // 0x0B60(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0BB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0BB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0BB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0BB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0BB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0BB7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0BB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0BB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0BBA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0BBB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x0BBD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0BBE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0BBF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D66[0xE];                                     // 0x0BC2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0BD0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x1460(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddAttachmentFromSlot_ReturnValue;        // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_3;               // 0x1471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D67[0x6];                                     // 0x1472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_3;                 // 0x1478(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x14C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x14D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_4;               // 0x14D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D68[0x6];                                     // 0x14D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_4;                 // 0x14D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_4;         // 0x1528(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x1560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D69[0xF];                                     // 0x1561(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x1570(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x1E00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x1E01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_5;               // 0x1E02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6A[0x5];                                     // 0x1E03(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_5;                 // 0x1E08(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_5;         // 0x1E58(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x1E90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x1E91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6B[0xE];                                     // 0x1E92(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x1EA0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x2730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_6;               // 0x2731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6C[0x6];                                     // 0x2732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_6;                 // 0x2738(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           Temp_struct_Variable;                              // 0x2788(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x2798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x279C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6D[0x3];                                     // 0x279D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_6;         // 0x27A0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_6;    // 0x27D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_7;    // 0x27D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x27DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6E[0x1];                                     // 0x27DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x27DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x27E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6F[0x4];                                     // 0x27E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_7;         // 0x27E8(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_8;         // 0x2820(0x0038)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x2858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParentInventoryCheck_AllowAdd;            // 0x285C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsSlotsSameItem_IsSameItem;           // 0x285D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D70[0x2];                                     // 0x285E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x2860(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x2870(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_Select_Default_1;                           // 0x28A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x28B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x28B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x28B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D71[0x7];                                     // 0x28B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x28C0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x28D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x28D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x28D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x28D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound_7;               // 0x28D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D72[0x3];                                     // 0x28D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot_7;                 // 0x28D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x2928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x292C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x2930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D73[0x7];                                     // 0x2931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x2938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_MoveItem) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_MoveItem");
static_assert(sizeof(BP_PlayerInventory_C_MoveItem) == 0x002940, "Wrong size on BP_PlayerInventory_C_MoveItem");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, StartSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_MoveItem::StartSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, EndSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_MoveItem::EndSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Rotated) == 0x000020, "Member 'BP_PlayerInventory_C_MoveItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Split) == 0x000021, "Member 'BP_PlayerInventory_C_MoveItem::Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, SpecialType) == 0x000022, "Member 'BP_PlayerInventory_C_MoveItem::SpecialType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, ShowNotifications) == 0x000023, "Member 'BP_PlayerInventory_C_MoveItem::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, ItemMoved) == 0x000024, "Member 'BP_PlayerInventory_C_MoveItem::ItemMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, WeaponInvL) == 0x000028, "Member 'BP_PlayerInventory_C_MoveItem::WeaponInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, IsItemEquipL) == 0x000030, "Member 'BP_PlayerInventory_C_MoveItem::IsItemEquipL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, ItemQuickSlotRefL) == 0x000034, "Member 'BP_PlayerInventory_C_MoveItem::ItemQuickSlotRefL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, RemainderL) == 0x000038, "Member 'BP_PlayerInventory_C_MoveItem::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, SplitAmountL) == 0x000039, "Member 'BP_PlayerInventory_C_MoveItem::SplitAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, AddAmountL) == 0x00003C, "Member 'BP_PlayerInventory_C_MoveItem::AddAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, StartItemAmountL) == 0x000040, "Member 'BP_PlayerInventory_C_MoveItem::StartItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, SplitCountL) == 0x000044, "Member 'BP_PlayerInventory_C_MoveItem::SplitCountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, SameInvL) == 0x000048, "Member 'BP_PlayerInventory_C_MoveItem::SameInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, EndSlotL) == 0x000050, "Member 'BP_PlayerInventory_C_MoveItem::EndSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, StartSlotL) == 0x0000A0, "Member 'BP_PlayerInventory_C_MoveItem::StartSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, StartItemDetailsL) == 0x0000F0, "Member 'BP_PlayerInventory_C_MoveItem::StartItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_RemainingItemCount_RemainingItemLimit) == 0x000980, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_RemainingItemCount_RemainingItemLimit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000984, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_int_Variable) == 0x000988, "Member 'BP_PlayerInventory_C_MoveItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00098C, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsInventoryEquipped_IsEquipped) == 0x00098D, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsInventoryEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_bool_Variable) == 0x00098E, "Member 'BP_PlayerInventory_C_MoveItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails) == 0x000990, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0009C8, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_RemainingItemCount_RemainingItemLimit_1) == 0x000A00, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_RemainingItemCount_RemainingItemLimit_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsItemInParentInv_IsInInv) == 0x000A04, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000A08, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000A40, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsValid_ReturnValue) == 0x000A41, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsItemInParentInv_IsInInv_1) == 0x000A42, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsItemInParentInv_IsInInv_2) == 0x000A43, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsItemInParentInv_IsInInv_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsItemInParentInv_IsInInv_3) == 0x000A44, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsItemInParentInv_IsInInv_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_AddWeightCheck_CanAdd) == 0x000A45, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_AddWeightCheck_ItemCount) == 0x000A48, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000A4C, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_3) == 0x000A50, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Less_IntInt_ReturnValue) == 0x000A88, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000A89, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Not_PreBool_ReturnValue) == 0x000A8A, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000A8B, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsInventoryEquipped_IsEquipped_1) == 0x000A8C, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsInventoryEquipped_IsEquipped_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000A90, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_FMod_Remainder) == 0x000A98, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_FMod_ReturnValue) == 0x000AA0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_bool_Variable_1) == 0x000AA4, "Member 'BP_PlayerInventory_C_MoveItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsValid_ReturnValue_1) == 0x000AA5, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_RemainingItemCount_RemainingItemLimit_2) == 0x000AA8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_RemainingItemCount_RemainingItemLimit_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000AAC, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000AAD, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000AB0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000B00, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsValid_ReturnValue_2) == 0x000B01, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000B02, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue) == 0x000B03, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_1) == 0x000B04, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_1) == 0x000B08, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_2) == 0x000B58, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_2) == 0x000B60, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000BB0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000BB1, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue_1) == 0x000BB2, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000BB3, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000BB4, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue_2) == 0x000BB5, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000BB6, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000BB7, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue_3) == 0x000BB8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000BB9, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000BBA, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000BBB, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue_4) == 0x000BBC, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x000BBD, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanOR_ReturnValue_5) == 0x000BBE, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsValid_ReturnValue_3) == 0x000BBF, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_IsValid_ReturnValue_4) == 0x000BC0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000BC1, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000BD0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_InvSlotID) == 0x001460, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_AddAttachmentFromSlot_ReturnValue) == 0x001470, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_AddAttachmentFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_3) == 0x001471, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_3) == 0x001478, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x0014C8, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_DynamicCast_bSuccess) == 0x0014D0, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_4) == 0x0014D1, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_4) == 0x0014D8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_4) == 0x001528, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x001560, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x001570, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_ClassIsChildOf_ReturnValue) == 0x001E00, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x001E01, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_5) == 0x001E02, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_5) == 0x001E08, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_5) == 0x001E58, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x001E90, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x001E91, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x001EA0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Greater_IntInt_ReturnValue_2) == 0x002730, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_6) == 0x002731, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_6) == 0x002738, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_struct_Variable) == 0x002788, "Member 'BP_PlayerInventory_C_MoveItem::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x002798, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_bool_Variable_2) == 0x00279C, "Member 'BP_PlayerInventory_C_MoveItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_6) == 0x0027A0, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_6) == 0x0027D8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_7) == 0x0027D9, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanAND_ReturnValue) == 0x0027DA, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_Select_Default) == 0x0027DC, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0027E0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_7) == 0x0027E8, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_NotificationDetails_8) == 0x002820, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_NotificationDetails_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_int_Variable_1) == 0x002858, "Member 'BP_PlayerInventory_C_MoveItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_ParentInventoryCheck_AllowAdd) == 0x00285C, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_ParentInventoryCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_IsSlotsSameItem_IsSameItem) == 0x00285D, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_IsSlotsSameItem_IsSameItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_MakeStruct_S_InvSlotID_1) == 0x002860, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x002870, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_Select_Default_1) == 0x0028A0, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemSize_Height) == 0x0028B0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_ItemSize_Width) == 0x0028B4, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x0028B8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x0028C0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0028D0, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0028D1, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x0028D2, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, Temp_bool_Variable_3) == 0x0028D3, "Member 'BP_PlayerInventory_C_MoveItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_SlotFound_7) == 0x0028D4, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_SlotFound_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_SGK_GetInvSlot_InvSlot_7) == 0x0028D8, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_SGK_GetInvSlot_InvSlot_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_Select_Default_2) == 0x002928, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, K2Node_Select_Default_3) == 0x00292C, "Member 'BP_PlayerInventory_C_MoveItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x002930, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_MoveItem, CallFunc_FMod_Dividend_ImplicitCast) == 0x002938, "Member 'BP_PlayerInventory_C_MoveItem::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_bVictoryDance
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_OnRep_bVictoryDance final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D74[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_1;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_bVictoryDance) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_bVictoryDance");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_bVictoryDance) == 0x000030, "Wrong size on BP_PlayerInventory_C_OnRep_bVictoryDance");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_GetPlayerController_ReturnValue_1) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, K2Node_DynamicCast_AsBP_SGKController) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, K2Node_DynamicCast_AsBP_SGKController_1) == 0x000020, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::K2Node_DynamicCast_AsBP_SGKController_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_IsValid_ReturnValue_1) == 0x00002A, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_IsValid_ReturnValue_2) == 0x00002B, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_bVictoryDance, CallFunc_IsValid_ReturnValue_3) == 0x00002C, "Member 'BP_PlayerInventory_C_OnRep_bVictoryDance::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_CurrentCharacterState
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_OnRep_CurrentCharacterState final
{
public:
	double                                        SpeedL;                                            // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D75[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D76[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_CurrentCharacterState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_CurrentCharacterState");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_CurrentCharacterState) == 0x000030, "Wrong size on BP_PlayerInventory_C_OnRep_CurrentCharacterState");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, SpeedL) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::SpeedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_IsServer_ReturnValue) == 0x000009, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x00000A, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x00000B, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000D, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_K2_SetTimer_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_BooleanOR_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000020, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentCharacterState, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_PlayerInventory_C_OnRep_CurrentCharacterState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_CurrentHealth
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_OnRep_CurrentHealth final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D77[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_CurrentHealth) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_CurrentHealth");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_CurrentHealth) == 0x000020, "Wrong size on BP_PlayerInventory_C_OnRep_CurrentHealth");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHealth, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_CurrentHealth::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHealth, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_CurrentHealth::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHealth, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_CurrentHealth::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHealth, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_CurrentHealth::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHealth, CallFunc_IsLocalController_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_OnRep_CurrentHealth::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_CurrentHunger
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_OnRep_CurrentHunger final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D78[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_CurrentHunger) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_CurrentHunger");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_CurrentHunger) == 0x000020, "Wrong size on BP_PlayerInventory_C_OnRep_CurrentHunger");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHunger, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_CurrentHunger::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHunger, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_CurrentHunger::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHunger, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_CurrentHunger::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHunger, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_CurrentHunger::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentHunger, CallFunc_IsLocalController_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_OnRep_CurrentHunger::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_CurrentStamina
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_OnRep_CurrentStamina final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D79[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_CurrentStamina) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_CurrentStamina");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_CurrentStamina) == 0x000020, "Wrong size on BP_PlayerInventory_C_OnRep_CurrentStamina");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentStamina, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_CurrentStamina::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentStamina, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_CurrentStamina::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentStamina, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_CurrentStamina::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentStamina, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_CurrentStamina::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentStamina, CallFunc_IsLocalController_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_OnRep_CurrentStamina::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OnRep_CurrentThirst
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_OnRep_CurrentThirst final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OnRep_CurrentThirst) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OnRep_CurrentThirst");
static_assert(sizeof(BP_PlayerInventory_C_OnRep_CurrentThirst) == 0x000020, "Wrong size on BP_PlayerInventory_C_OnRep_CurrentThirst");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentThirst, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OnRep_CurrentThirst::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentThirst, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OnRep_CurrentThirst::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentThirst, K2Node_DynamicCast_AsController) == 0x000010, "Member 'BP_PlayerInventory_C_OnRep_CurrentThirst::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentThirst, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_PlayerInventory_C_OnRep_CurrentThirst::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OnRep_CurrentThirst, CallFunc_IsLocalController_ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_OnRep_CurrentThirst::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenCodeLockUI
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_OpenCodeLockUI final
{
public:
	bool                                          SetCode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Lock;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7C[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenCodeLockUI) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenCodeLockUI");
static_assert(sizeof(BP_PlayerInventory_C_OpenCodeLockUI) == 0x000030, "Wrong size on BP_PlayerInventory_C_OpenCodeLockUI");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, SetCode) == 0x000000, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::SetCode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, Lock) == 0x000008, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::Lock' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenCodeLockUI, CallFunc_GetPlayerController_ReturnValue_2) == 0x000028, "Member 'BP_PlayerInventory_C_OpenCodeLockUI::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenEquipmentMenu
// 0x0148 (0x0148 - 0x0000)
struct BP_PlayerInventory_C_OpenEquipmentMenu final
{
public:
	class UBP_EquipmentInventory_C*               EquipmentInventory;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7D[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7E[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D7F[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponSlot_C*                       K2Node_DynamicCast_AsBP_Weapon_Slot;               // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D80[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0040(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_EquipmentSlot_C*                    K2Node_DynamicCast_AsBP_Equipment_Slot;            // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D81[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D82[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D83[0x3];                                     // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00B0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D84[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_1;        // 0x0100(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenEquipmentMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenEquipmentMenu");
static_assert(sizeof(BP_PlayerInventory_C_OpenEquipmentMenu) == 0x000148, "Wrong size on BP_PlayerInventory_C_OpenEquipmentMenu");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, EquipmentInventory) == 0x000000, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::EquipmentInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, Temp_int_Variable) == 0x000010, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_GetValidValue_ReturnValue) == 0x000015, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, K2Node_DynamicCast_AsBP_Weapon_Slot) == 0x000030, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::K2Node_DynamicCast_AsBP_Weapon_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000040, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, K2Node_DynamicCast_AsBP_Equipment_Slot) == 0x000090, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::K2Node_DynamicCast_AsBP_Equipment_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Array_Length_ReturnValue) == 0x00009C, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000A0, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000B0, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000F8, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenEquipmentMenu, CallFunc_SelectEquipmentSlot_ReturnValue_1) == 0x000100, "Member 'BP_PlayerInventory_C_OpenEquipmentMenu::CallFunc_SelectEquipmentSlot_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenExtCookingMenu
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_OpenExtCookingMenu final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenExtCookingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenExtCookingMenu");
static_assert(sizeof(BP_PlayerInventory_C_OpenExtCookingMenu) == 0x000010, "Wrong size on BP_PlayerInventory_C_OpenExtCookingMenu");
static_assert(offsetof(BP_PlayerInventory_C_OpenExtCookingMenu, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_OpenExtCookingMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenExtCookingMenu, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenExtCookingMenu::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenExtCraftingMenu
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_OpenExtCraftingMenu final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenExtCraftingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenExtCraftingMenu");
static_assert(sizeof(BP_PlayerInventory_C_OpenExtCraftingMenu) == 0x000010, "Wrong size on BP_PlayerInventory_C_OpenExtCraftingMenu");
static_assert(offsetof(BP_PlayerInventory_C_OpenExtCraftingMenu, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_OpenExtCraftingMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenExtCraftingMenu, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenExtCraftingMenu::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenInventory
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_OpenInventory final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D85[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenInventory) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenInventory");
static_assert(sizeof(BP_PlayerInventory_C_OpenInventory) == 0x000020, "Wrong size on BP_PlayerInventory_C_OpenInventory");
static_assert(offsetof(BP_PlayerInventory_C_OpenInventory, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_OpenInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenInventory, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_PlayerInventory_C_OpenInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenInventory, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_OpenInventory::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenInventory, CallFunc_GetPlayerController_ReturnValue_2) == 0x000018, "Member 'BP_PlayerInventory_C_OpenInventory::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenInvMenu
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_OpenInvMenu final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenInvMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenInvMenu");
static_assert(sizeof(BP_PlayerInventory_C_OpenInvMenu) == 0x000010, "Wrong size on BP_PlayerInventory_C_OpenInvMenu");
static_assert(offsetof(BP_PlayerInventory_C_OpenInvMenu, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_OpenInvMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenInvMenu, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenInvMenu::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.OpenVenderMenu
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_OpenVenderMenu final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_OpenVenderMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_OpenVenderMenu");
static_assert(sizeof(BP_PlayerInventory_C_OpenVenderMenu) == 0x000010, "Wrong size on BP_PlayerInventory_C_OpenVenderMenu");
static_assert(offsetof(BP_PlayerInventory_C_OpenVenderMenu, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_OpenVenderMenu::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_OpenVenderMenu, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_OpenVenderMenu::CallFunc_GetOwner_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ParentInventoryCheck
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_ParentInventoryCheck final
{
public:
	class UBP_MasterInventory_C*                  AddInventory;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  ContainerInventory;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowAdd;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D86[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CurrentParentL;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D87[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ParentInventoryCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ParentInventoryCheck");
static_assert(sizeof(BP_PlayerInventory_C_ParentInventoryCheck) == 0x000038, "Wrong size on BP_PlayerInventory_C_ParentInventoryCheck");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, AddInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::AddInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, ContainerInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::ContainerInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, AllowAdd) == 0x000010, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CurrentParentL) == 0x000018, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CurrentParentL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, Temp_int_Variable) == 0x000020, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, Temp_bool_Variable) == 0x00002D, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_Not_PreBool_ReturnValue) == 0x00002E, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_BooleanAND_ReturnValue) == 0x00002F, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_IsValid_ReturnValue_2) == 0x000032, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_IsValid_ReturnValue_3) == 0x000033, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ParentInventoryCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000034, "Member 'BP_PlayerInventory_C_ParentInventoryCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerDied__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_PlayerDied__DelegateSignature final
{
public:
	class AActor*                                 Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      Controller;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerDied__DelegateSignature) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_PlayerDied__DelegateSignature");
static_assert(sizeof(BP_PlayerInventory_C_PlayerDied__DelegateSignature) == 0x000010, "Wrong size on BP_PlayerInventory_C_PlayerDied__DelegateSignature");
static_assert(offsetof(BP_PlayerInventory_C_PlayerDied__DelegateSignature, Player) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerDied__DelegateSignature::Player' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerDied__DelegateSignature, Controller) == 0x000008, "Member 'BP_PlayerInventory_C_PlayerDied__DelegateSignature::Controller' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerFindItemWithUseAmountLeft
// 0x0188 (0x0188 - 0x0000)
struct BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft final
{
public:
	TArray<class FName>                           ItemIDs;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ItemFound;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D88[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ItemSlot;                                          // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_FindItemWithUseAmountLeft_FoundItem;      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D89[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FindItemWithUseAmountLeft_ItemSlot;       // 0x0070(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8A[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindItemWithUseAmountLeft_FoundItem_1;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8B[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FindItemWithUseAmountLeft_ItemSlot_1;     // 0x00D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8C[0x6];                                     // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0128(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8D[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft");
static_assert(sizeof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft) == 0x000188, "Wrong size on BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, ItemIDs) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::ItemIDs' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, ItemFound) == 0x000010, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, ItemSlot) == 0x000018, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_FindItemWithUseAmountLeft_FoundItem) == 0x000068, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_FindItemWithUseAmountLeft_FoundItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_FindItemWithUseAmountLeft_ItemSlot) == 0x000070, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_FindItemWithUseAmountLeft_ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, Temp_bool_Variable) == 0x0000C0, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_Not_PreBool_ReturnValue) == 0x0000C1, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, Temp_int_Variable) == 0x0000C4, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_FindItemWithUseAmountLeft_FoundItem_1) == 0x0000C8, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_FindItemWithUseAmountLeft_FoundItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_FindItemWithUseAmountLeft_ItemSlot_1) == 0x0000D0, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_FindItemWithUseAmountLeft_ItemSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_Conv_IntToByte_ReturnValue) == 0x000120, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_GetValidValue_ReturnValue) == 0x000121, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000128, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_Add_IntInt_ReturnValue) == 0x000170, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_MakeLiteralInt_ReturnValue) == 0x000174, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_Subtract_IntInt_ReturnValue) == 0x00017C, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000180, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_Greater_IntInt_ReturnValue) == 0x000181, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft, CallFunc_BooleanAND_ReturnValue) == 0x000182, "Member 'BP_PlayerInventory_C_PlayerFindItemWithUseAmountLeft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerFindKeyItem
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerInventory_C_PlayerFindKeyItem final
{
public:
	class FName                                   KeyCode;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8E[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindKeyItem_Found;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D8F[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D90[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D91[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0028(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D92[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindKeyItem_Found_1;                      // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerFindKeyItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_PlayerFindKeyItem");
static_assert(sizeof(BP_PlayerInventory_C_PlayerFindKeyItem) == 0x000080, "Wrong size on BP_PlayerInventory_C_PlayerFindKeyItem");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, KeyCode) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::KeyCode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, Found) == 0x000008, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::Found' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_MakeLiteralInt_ReturnValue) == 0x00000C, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_FindKeyItem_Found) == 0x000010, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_FindKeyItem_Found' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, Temp_int_Variable) == 0x000014, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, Temp_int_Variable_1) == 0x000018, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_GetValidValue_ReturnValue) == 0x000024, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000025, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000028, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000074, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_Less_IntInt_ReturnValue) == 0x000079, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindKeyItem, CallFunc_FindKeyItem_Found_1) == 0x00007A, "Member 'BP_PlayerInventory_C_PlayerFindKeyItem::CallFunc_FindKeyItem_Found_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerFindNotFullUseAmountItems
// 0x0180 (0x0180 - 0x0000)
struct BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems final
{
public:
	TArray<class FName>                           ItemIDs;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ItemFound;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D93[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ItemSlot;                                          // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindNotFullUseAmountItems_FoundItem;      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D94[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FindNotFullUseAmountItems_ItemSlot;       // 0x0070(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D95[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00C8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindNotFullUseAmountItems_FoundItem_1;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D96[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FindNotFullUseAmountItems_ItemSlot_1;     // 0x0120(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems");
static_assert(sizeof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems) == 0x000180, "Wrong size on BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, ItemIDs) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::ItemIDs' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, ItemFound) == 0x000010, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, ItemSlot) == 0x000018, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, Temp_int_Variable) == 0x000068, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_FindNotFullUseAmountItems_FoundItem) == 0x00006C, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_FindNotFullUseAmountItems_FoundItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_FindNotFullUseAmountItems_ItemSlot) == 0x000070, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_FindNotFullUseAmountItems_ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_Conv_IntToByte_ReturnValue) == 0x0000C0, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_GetValidValue_ReturnValue) == 0x0000C1, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000C8, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_Add_IntInt_ReturnValue) == 0x000110, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_IsValid_ReturnValue) == 0x000114, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_Greater_IntInt_ReturnValue) == 0x000115, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, Temp_bool_Variable) == 0x000116, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_Not_PreBool_ReturnValue) == 0x000117, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_FindNotFullUseAmountItems_FoundItem_1) == 0x000118, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_FindNotFullUseAmountItems_FoundItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_FindNotFullUseAmountItems_ItemSlot_1) == 0x000120, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_FindNotFullUseAmountItems_ItemSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_MakeLiteralInt_ReturnValue) == 0x000170, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x000174, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000178, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems, CallFunc_BooleanAND_ReturnValue) == 0x000179, "Member 'BP_PlayerInventory_C_PlayerFindNotFullUseAmountItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerInventoryFreeSlotCount
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerInventory_C_PlayerInventoryFreeSlotCount final
{
public:
	int32                                         FreeSlots;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSlotsL;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D97[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D98[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0020(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D99[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9A[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckFreeSlotCount_FreeSlots;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9B[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CheckFreeSlotCount_FreeSlots_1;           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_PlayerInventoryFreeSlotCount");
static_assert(sizeof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount) == 0x000088, "Wrong size on BP_PlayerInventory_C_PlayerInventoryFreeSlotCount");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, FreeSlots) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::FreeSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, FreeSlotsL) == 0x000004, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::FreeSlotsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_MakeLiteralInt_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, Temp_int_Variable) == 0x00000C, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, Temp_int_Variable_1) == 0x000010, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_GetValidValue_ReturnValue) == 0x00001C, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001D, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00006C, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_CheckFreeSlotCount_FreeSlots) == 0x000074, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_CheckFreeSlotCount_FreeSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryFreeSlotCount, CallFunc_CheckFreeSlotCount_FreeSlots_1) == 0x000080, "Member 'BP_PlayerInventory_C_PlayerInventoryFreeSlotCount::CallFunc_CheckFreeSlotCount_FreeSlots_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayerInventoryTotalItemAmount
// 0x0940 (0x0940 - 0x0000)
struct BP_PlayerInventory_C_PlayerInventoryTotalItemAmount final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         TotalAmount;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountL;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9C[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9D[0x2];                                     // 0x08D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x08D8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9E[0x2];                                     // 0x0922(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TotalItemAmount_TotalAmount;              // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TotalItemAmount_TotalAmount_1;            // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_PlayerInventoryTotalItemAmount");
static_assert(sizeof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount) == 0x000940, "Wrong size on BP_PlayerInventory_C_PlayerInventoryTotalItemAmount");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, TotalAmount) == 0x000030, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, AmountL) == 0x000034, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::AmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, Temp_int_Variable) == 0x000038, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_SGK_ItemDetails_ItemFound) == 0x00003C, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_Conv_IntToByte_ReturnValue) == 0x0008D0, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_GetValidValue_ReturnValue) == 0x0008D1, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_Add_IntInt_ReturnValue) == 0x0008D4, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0008D8, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_IsValid_ReturnValue) == 0x000920, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x000921, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_TotalItemAmount_TotalAmount) == 0x000924, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_TotalItemAmount_TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_TotalItemAmount_TotalAmount_1) == 0x000928, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_TotalItemAmount_TotalAmount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_MakeLiteralInt_ReturnValue) == 0x00092C, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000930, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000934, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayerInventoryTotalItemAmount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000938, "Member 'BP_PlayerInventory_C_PlayerInventoryTotalItemAmount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.PlayItemSound
// 0x000C (0x000C - 0x0000)
struct BP_PlayerInventory_C_PlayItemSound final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      SoundType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_PlayItemSound) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_PlayItemSound");
static_assert(sizeof(BP_PlayerInventory_C_PlayItemSound) == 0x00000C, "Wrong size on BP_PlayerInventory_C_PlayItemSound");
static_assert(offsetof(BP_PlayerInventory_C_PlayItemSound, ItemId) == 0x000000, "Member 'BP_PlayerInventory_C_PlayItemSound::ItemId' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_PlayItemSound, SoundType) == 0x000008, "Member 'BP_PlayerInventory_C_PlayItemSound::SoundType' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.QuickMove
// 0x0230 (0x0230 - 0x0000)
struct BP_PlayerInventory_C_QuickMove final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  InvCompL;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemInPlayerInvL;                                  // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             StartInvSlotL;                                     // 0x0020(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA1[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0078(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA2[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00D0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA3[0x3];                                     // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0110(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x0120(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_SpaceFound;  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_Rotation;    // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA4[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SearchEquipmentForEmptySlots_FoundSlots;  // 0x0138(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0148(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA5[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_2;                   // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInPlayerInv_IsInPlayerInv;              // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA6[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x01B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_3;                   // 0x0218(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_QuickMove) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_QuickMove");
static_assert(sizeof(BP_PlayerInventory_C_QuickMove) == 0x000230, "Wrong size on BP_PlayerInventory_C_QuickMove");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_QuickMove::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, ItemIndex) == 0x000008, "Member 'BP_PlayerInventory_C_QuickMove::ItemIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, InvCompL) == 0x000010, "Member 'BP_PlayerInventory_C_QuickMove::InvCompL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, ItemInPlayerInvL) == 0x000018, "Member 'BP_PlayerInventory_C_QuickMove::ItemInPlayerInvL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, StartInvSlotL) == 0x000020, "Member 'BP_PlayerInventory_C_QuickMove::StartInvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000070, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000078, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_IsValid_ReturnValue_1) == 0x0000C9, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, K2Node_MakeStruct_S_NotificationDetails) == 0x0000D0, "Member 'BP_PlayerInventory_C_QuickMove::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_IsValid_ReturnValue_2) == 0x000108, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000109, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00010A, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_BooleanAND_ReturnValue) == 0x00010B, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_IsValid_ReturnValue_3) == 0x00010C, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, K2Node_MakeStruct_S_InvSlotID) == 0x000110, "Member 'BP_PlayerInventory_C_QuickMove::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, K2Node_MakeStruct_S_InvSlotID_1) == 0x000120, "Member 'BP_PlayerInventory_C_QuickMove::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_SearchEquipmentForEmptySlots_SpaceFound) == 0x000130, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_SearchEquipmentForEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_SearchEquipmentForEmptySlots_Rotation) == 0x000131, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_SearchEquipmentForEmptySlots_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_SearchEquipmentForEmptySlots_FoundSlots) == 0x000138, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_SearchEquipmentForEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_Array_Get_Item) == 0x000148, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000198, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, K2Node_MakeStruct_S_InvSlotID_2) == 0x0001A0, "Member 'BP_PlayerInventory_C_QuickMove::K2Node_MakeStruct_S_InvSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_MoveItem_ItemMoved) == 0x0001B0, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_MoveItem_ItemMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_IsInPlayerInv_IsInPlayerInv) == 0x0001B1, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_IsInPlayerInv_IsInPlayerInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_FindEmptySlots_SpaceFound) == 0x0001B2, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_FindEmptySlots_Rotated) == 0x0001B3, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_FindEmptySlots_FoundSlots) == 0x0001B8, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, K2Node_MakeStruct_S_InvSlotID_3) == 0x000218, "Member 'BP_PlayerInventory_C_QuickMove::K2Node_MakeStruct_S_InvSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickMove, CallFunc_MoveItem_ItemMoved_1) == 0x000228, "Member 'BP_PlayerInventory_C_QuickMove::CallFunc_MoveItem_ItemMoved_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.QuickSlotKeyBind
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_QuickSlotKeyBind final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   SlotKey;                                           // 0x0008(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA8[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_QuickSlotKeyBind) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_QuickSlotKeyBind");
static_assert(sizeof(BP_PlayerInventory_C_QuickSlotKeyBind) == 0x000030, "Wrong size on BP_PlayerInventory_C_QuickSlotKeyBind");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotKeyBind, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_QuickSlotKeyBind::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotKeyBind, SlotKey) == 0x000008, "Member 'BP_PlayerInventory_C_QuickSlotKeyBind::SlotKey' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotKeyBind, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_QuickSlotKeyBind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotKeyBind, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000021, "Member 'BP_PlayerInventory_C_QuickSlotKeyBind::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotKeyBind, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PlayerInventory_C_QuickSlotKeyBind::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.QuickSlotUseSelect
// 0x1200 (0x1200 - 0x0000)
struct BP_PlayerInventory_C_QuickSlotUseSelect final
{
public:
	int32                                         QuickSlotIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantPlacement;                                  // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_FindQuickSlot_OutputSlot;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAA[0x5];                                     // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAB[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0070(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0900(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAC[0xF];                                     // 0x0951(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0960(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x11F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_QuickSlotUseSelect) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_QuickSlotUseSelect");
static_assert(sizeof(BP_PlayerInventory_C_QuickSlotUseSelect) == 0x001200, "Wrong size on BP_PlayerInventory_C_QuickSlotUseSelect");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, QuickSlotIndex) == 0x000000, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, InstantPlacement) == 0x000004, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::InstantPlacement' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_FindQuickSlot_OutputSlot) == 0x000008, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_FindQuickSlot_OutputSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000012, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000018, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_ItemDetails_ItemFound) == 0x000069, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000070, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000900, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000950, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000960, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_QuickSlotUseSelect, CallFunc_IsValid_ReturnValue_2) == 0x0011F0, "Member 'BP_PlayerInventory_C_QuickSlotUseSelect::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerInventory_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ReceiveTick");
static_assert(sizeof(BP_PlayerInventory_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerInventory_C_ReceiveTick");
static_assert(offsetof(BP_PlayerInventory_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerInventory_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RechargeStaminaState
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_RechargeStaminaState final
{
public:
	double                                        CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RechargeStaminaState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RechargeStaminaState");
static_assert(sizeof(BP_PlayerInventory_C_RechargeStaminaState) == 0x000010, "Wrong size on BP_PlayerInventory_C_RechargeStaminaState");
static_assert(offsetof(BP_PlayerInventory_C_RechargeStaminaState, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_PlayerInventory_C_RechargeStaminaState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RechargeStaminaState, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_RechargeStaminaState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RechargeStaminaState, CallFunc_Map_Find_Value_1) == 0x000009, "Member 'BP_PlayerInventory_C_RechargeStaminaState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RechargeStaminaState, CallFunc_Map_Find_ReturnValue_1) == 0x00000A, "Member 'BP_PlayerInventory_C_RechargeStaminaState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RechargeStaminaState, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_PlayerInventory_C_RechargeStaminaState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RemoveAttachment
// 0x2090 (0x2090 - 0x0000)
struct BP_PlayerInventory_C_RemoveAttachment final
{
public:
	struct FS_AttachmentSlotID                    AttachmentID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipChecks;                                        // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Swap;                                              // 0x0023(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0024(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAD[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           FPRemoveMontageL;                                  // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAE[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           RemoveMontageL;                                    // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayAnimL;                                         // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaveInventoryL;                                    // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DAF[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             EndInvSlotL;                                       // 0x0048(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_1DB0[0x8];                                     // 0x0098(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         AttachmentDetailsL;                                // 0x00A0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_AttachmentSlot                      AttachmentSlotL;                                   // 0x0930(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB1[0x7];                                     // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x0980(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x09D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight_1;           // 0x09D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB2[0x1];                                     // 0x09D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x09DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x09E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x09E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x09E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB3[0x3];                                     // 0x09E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x09F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x09F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB4[0x5];                                     // 0x09F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x09F8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_SpaceFound;  // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_Rotation;    // 0x0A45(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB5[0x2];                                     // 0x0A46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SearchEquipmentForEmptySlots_FoundSlots;  // 0x0A48(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0A58(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0AAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB6[0x3];                                     // 0x0AAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0AC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB7[0x6];                                     // 0x0AC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0AC8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB8[0xF];                                     // 0x0B01(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B10(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB9[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x13A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_MoveAttachmentAddToContainer_ReturnValue; // 0x13F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x13F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBA[0x6];                                     // 0x13FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x1400(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment;      // 0x1410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBB[0x7];                                     // 0x1411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details; // 0x1418(0x02A0)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x16B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x16C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x16C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x16C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment_1;    // 0x16C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBC[0x1];                                     // 0x16C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details_1; // 0x16C8(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound;                    // 0x1968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBD[0x7];                                     // 0x1969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x1970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterWeapon_C*                     K2Node_DynamicCast_AsBP_Master_Weapon;             // 0x1978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x1980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayDetachWeaponAnim_ReturnValue;         // 0x1981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment_2;    // 0x1982(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBE[0x5];                                     // 0x1983(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details_2; // 0x1988(0x02A0)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x1C28(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_1;                  // 0x1C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DBF[0x7];                                     // 0x1C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_1;                    // 0x1C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_2;                  // 0x1C70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC0[0x7];                                     // 0x1C71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_2;                    // 0x1C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_3;                  // 0x1C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC1[0x7];                                     // 0x1C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_3;                    // 0x1C88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound_4;                  // 0x1C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC2[0x7];                                     // 0x1C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage_4;                    // 0x1C98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x1CA0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment_3;    // 0x1CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC3[0x7];                                     // 0x1CD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details_3; // 0x1CE0(0x02A0)(HasGetValueTypeHash)
	bool                                          CallFunc_MoveAttachmentAddToContainer_ReturnValue_1; // 0x1F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC4[0x7];                                     // 0x1F81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_2;                         // 0x1F88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_RemoveAttachment_self_CastInput;      // 0x1F90(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x1FA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC5[0x3];                                     // 0x1FA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_3;                         // 0x1FA8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x1FB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x1FB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1FB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight_2;           // 0x1FB6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC6[0x1];                                     // 0x1FB7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x1FB8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x2008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight_3;           // 0x2009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x200A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x200B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC7[0x4];                                     // 0x200C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_RemoveAttachment_self_CastInput_1;    // 0x2010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1;        // 0x2020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC8[0x7];                                     // 0x2021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots_1;          // 0x2028(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SelectAttachmentItem_IsValid_1;           // 0x2038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC9[0x7];                                     // 0x2039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue_1;       // 0x2040(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RemoveAttachment) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_RemoveAttachment");
static_assert(sizeof(BP_PlayerInventory_C_RemoveAttachment) == 0x002090, "Wrong size on BP_PlayerInventory_C_RemoveAttachment");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, AttachmentID) == 0x000000, "Member 'BP_PlayerInventory_C_RemoveAttachment::AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, InvSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_RemoveAttachment::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_RemoveAttachment::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_RemoveAttachment::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, SkipChecks) == 0x000022, "Member 'BP_PlayerInventory_C_RemoveAttachment::SkipChecks' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Swap) == 0x000023, "Member 'BP_PlayerInventory_C_RemoveAttachment::Swap' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, ShowNotifications) == 0x000024, "Member 'BP_PlayerInventory_C_RemoveAttachment::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, FPRemoveMontageL) == 0x000028, "Member 'BP_PlayerInventory_C_RemoveAttachment::FPRemoveMontageL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, RotatedL) == 0x000030, "Member 'BP_PlayerInventory_C_RemoveAttachment::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, RemoveMontageL) == 0x000038, "Member 'BP_PlayerInventory_C_RemoveAttachment::RemoveMontageL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, PlayAnimL) == 0x000040, "Member 'BP_PlayerInventory_C_RemoveAttachment::PlayAnimL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, SaveInventoryL) == 0x000041, "Member 'BP_PlayerInventory_C_RemoveAttachment::SaveInventoryL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, EndInvSlotL) == 0x000048, "Member 'BP_PlayerInventory_C_RemoveAttachment::EndInvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, AttachmentDetailsL) == 0x0000A0, "Member 'BP_PlayerInventory_C_RemoveAttachment::AttachmentDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, AttachmentSlotL) == 0x000930, "Member 'BP_PlayerInventory_C_RemoveAttachment::AttachmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue) == 0x000978, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_MakeStruct_S_InvSlot) == 0x000980, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsItemInParentInv_IsInInv) == 0x0009D0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x0009D1, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_WeightCheck_ExceedsMaxWeight_1) == 0x0009D2, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_WeightCheck_ExceedsMaxWeight_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Loop_Counter_Variable) == 0x0009D4, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x0009D8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Array_Index_Variable) == 0x0009DC, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0009E0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0009E1, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0009E2, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_BooleanOR_ReturnValue) == 0x0009E3, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_1) == 0x0009E4, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x0009E8, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_DynamicCast_bSuccess) == 0x0009F0, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0009F1, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_IsValid) == 0x0009F2, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_ReturnValue) == 0x0009F8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Array_Index_Variable_1) == 0x000A40, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SearchEquipmentForEmptySlots_SpaceFound) == 0x000A44, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SearchEquipmentForEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SearchEquipmentForEmptySlots_Rotation) == 0x000A45, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SearchEquipmentForEmptySlots_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SearchEquipmentForEmptySlots_FoundSlots) == 0x000A48, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SearchEquipmentForEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Get_Item) == 0x000A58, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Loop_Counter_Variable_1) == 0x000AA8, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_2) == 0x000AAC, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000AB0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Array_Index_Variable_2) == 0x000AB4, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, Temp_int_Loop_Counter_Variable_2) == 0x000AB8, "Member 'BP_PlayerInventory_C_RemoveAttachment::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Add_IntInt_ReturnValue_2) == 0x000ABC, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_3) == 0x000AC0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000AC1, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_MakeStruct_S_NotificationDetails) == 0x000AC8, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B00, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B10, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0013A0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0013A8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_MoveAttachmentAddToContainer_ReturnValue) == 0x0013F8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_MoveAttachmentAddToContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x0013F9, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x001400, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Is_Attachment) == 0x001410, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Attachment_Details) == 0x001418, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Get_Item_1) == 0x0016B8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Length_ReturnValue) == 0x0016C0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x0016C4, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_4) == 0x0016C5, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Is_Attachment_1) == 0x0016C6, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Is_Attachment_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Attachment_Details_1) == 0x0016C8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Attachment_Details_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_AnimFound) == 0x001968, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_AnimFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_Montage) == 0x001970, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_DynamicCast_AsBP_Master_Weapon) == 0x001978, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_DynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_DynamicCast_bSuccess_1) == 0x001980, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_PlayDetachWeaponAnim_ReturnValue) == 0x001981, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_PlayDetachWeaponAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Is_Attachment_2) == 0x001982, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Is_Attachment_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Attachment_Details_2) == 0x001988, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Attachment_Details_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_MakeStruct_S_NotificationDetails_1) == 0x001C28, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_AnimFound_1) == 0x001C60, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_AnimFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_Montage_1) == 0x001C68, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_AnimFound_2) == 0x001C70, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_AnimFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_Montage_2) == 0x001C78, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_AnimFound_3) == 0x001C80, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_AnimFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_Montage_3) == 0x001C88, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_Montage_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_AnimFound_4) == 0x001C90, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_AnimFound_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_FindMontage_Montage_4) == 0x001C98, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_FindMontage_Montage_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_MakeStruct_S_NotificationDetails_2) == 0x001CA0, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Is_Attachment_3) == 0x001CD8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Is_Attachment_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_AttachmentDetails_Attachment_Details_3) == 0x001CE0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_AttachmentDetails_Attachment_Details_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_MoveAttachmentAddToContainer_ReturnValue_1) == 0x001F80, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_MoveAttachmentAddToContainer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Get_Item_2) == 0x001F88, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RemoveAttachment_self_CastInput) == 0x001F90, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RemoveAttachment_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Length_ReturnValue_1) == 0x001FA0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Less_IntInt_ReturnValue_1) == 0x001FA4, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Get_Item_3) == 0x001FA8, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Array_Length_ReturnValue_2) == 0x001FB0, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_Less_IntInt_ReturnValue_2) == 0x001FB4, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_5) == 0x001FB5, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_WeightCheck_ExceedsMaxWeight_2) == 0x001FB6, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_WeightCheck_ExceedsMaxWeight_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, K2Node_MakeStruct_S_InvSlot_1) == 0x001FB8, "Member 'BP_PlayerInventory_C_RemoveAttachment::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsItemInParentInv_IsInInv_1) == 0x002008, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_WeightCheck_ExceedsMaxWeight_3) == 0x002009, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_WeightCheck_ExceedsMaxWeight_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_6) == 0x00200A, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x00200B, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RemoveAttachment_self_CastInput_1) == 0x002010, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RemoveAttachment_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1) == 0x002020, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SGK_RootSpaceCheck_FoundSlots_1) == 0x002028, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SGK_RootSpaceCheck_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_IsValid_1) == 0x002038, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_ReturnValue_1) == 0x002040, "Member 'BP_PlayerInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RemoveItemFromSlot
// 0x0058 (0x0058 - 0x0000)
struct BP_PlayerInventory_C_RemoveItemFromSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SpecialSlot;                                       // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RemoveItemFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RemoveItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_RemoveItemFromSlot) == 0x000058, "Wrong size on BP_PlayerInventory_C_RemoveItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_RemoveItemFromSlot, InvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_RemoveItemFromSlot::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveItemFromSlot, SpecialSlot) == 0x000050, "Member 'BP_PlayerInventory_C_RemoveItemFromSlot::SpecialSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RemoveQuickSlots
// 0x0330 (0x0330 - 0x0000)
struct BP_PlayerInventory_C_RemoveQuickSlots final
{
public:
	struct FS_InvItem                             EquipmentItem;                                     // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCA[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0040(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1; // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCB[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1; // 0x01B8(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x032A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RemoveQuickSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RemoveQuickSlots");
static_assert(sizeof(BP_PlayerInventory_C_RemoveQuickSlots) == 0x000330, "Wrong size on BP_PlayerInventory_C_RemoveQuickSlots");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, EquipmentItem) == 0x000000, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::EquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, Param_Inventory) == 0x000030, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000038, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000040, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1) == 0x0001B0, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1) == 0x0001B8, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000328, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_IsValid_ReturnValue) == 0x000329, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RemoveQuickSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00032A, "Member 'BP_PlayerInventory_C_RemoveQuickSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RepairActorCheck
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerInventory_C_RepairActorCheck final
{
public:
	class UClass*                                 RepairActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCC[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCD[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCE[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         K2Node_MakeArray_Array_1;                          // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DCF[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD0[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD1[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RepairActorCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RepairActorCheck");
static_assert(sizeof(BP_PlayerInventory_C_RepairActorCheck) == 0x000090, "Wrong size on BP_PlayerInventory_C_RepairActorCheck");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, RepairActor) == 0x000000, "Member 'BP_PlayerInventory_C_RepairActorCheck::RepairActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_RepairActorCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_PlayerInventory_C_RepairActorCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_PlayerInventory_C_RepairActorCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_PlayerInventory_C_RepairActorCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, K2Node_MakeArray_Array_1) == 0x000048, "Member 'BP_PlayerInventory_C_RepairActorCheck::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_SphereOverlapActors_OutActors) == 0x000058, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_SphereOverlapActors_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_GetObjectClass_ReturnValue) == 0x000080, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairActorCheck, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x00008C, "Member 'BP_PlayerInventory_C_RepairActorCheck::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RepairItem
// 0x03F8 (0x03F8 - 0x0000)
struct BP_PlayerInventory_C_RepairItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD2[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             RepairedInvItem;                                   // 0x0038(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x0068(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ItemCostMultiL;                                    // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD3[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD4[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x00B8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_AllRepairActorCheck_ReturnValue;          // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_1;        // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD5[0x5];                                     // 0x010B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_1; // 0x0110(0x0050)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_2;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD6[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_2; // 0x0170(0x0050)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x01C0(0x0038)(HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x01F8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD7[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound;  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD8[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots;    // 0x0220(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots; // 0x0270(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_3;        // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DD9[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_3; // 0x0288(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_4;        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDA[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_4; // 0x02E0(0x0050)(HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0330(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDB[0x3];                                     // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchPlayerInventoryForItem_ItemsFound_1; // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDC[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchPlayerInventoryForItem_InvSlots_1;  // 0x0358(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1; // 0x03A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x03B8(0x0010)(NoDestructor)
	struct FS_CraftingCost                        K2Node_MakeStruct_S_CraftingCost;                  // 0x03C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemRepairCost_ItemCount;             // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDD[0x4];                                     // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SGK_ItemRepairCost_Max_Durability_ImplicitCast; // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_ItemRepairCost_Durability_ImplicitCast; // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RepairItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RepairItem");
static_assert(sizeof(BP_PlayerInventory_C_RepairItem) == 0x0003F8, "Wrong size on BP_PlayerInventory_C_RepairItem");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_RepairItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_RepairItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, RepairedInvItem) == 0x000038, "Member 'BP_PlayerInventory_C_RepairItem::RepairedInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, ItemL) == 0x000068, "Member 'BP_PlayerInventory_C_RepairItem::ItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, ItemCostMultiL) == 0x000098, "Member 'BP_PlayerInventory_C_RepairItem::ItemCostMultiL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'BP_PlayerInventory_C_RepairItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_PlayerInventory_C_RepairItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, Temp_int_Array_Index_Variable_1) == 0x0000AC, "Member 'BP_PlayerInventory_C_RepairItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x0000B0, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x0000B8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_AllRepairActorCheck_ReturnValue) == 0x000108, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_AllRepairActorCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_BooleanAND_ReturnValue) == 0x000109, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_ItemFound_1) == 0x00010A, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails_1) == 0x000110, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, Temp_int_Loop_Counter_Variable_1) == 0x000160, "Member 'BP_PlayerInventory_C_RepairItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_ItemFound_2) == 0x000168, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails_2) == 0x000170, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, K2Node_MakeStruct_S_NotificationDetails) == 0x0001C0, "Member 'BP_PlayerInventory_C_RepairItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Array_Get_Item) == 0x0001F8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Array_Length_ReturnValue) == 0x000210, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Less_IntInt_ReturnValue) == 0x000214, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Multiply_IntInt_ReturnValue) == 0x000218, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_ItemsFound) == 0x00021C, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_InvSlots) == 0x000220, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_InvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_AllInvSlots) == 0x000270, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_AllInvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_ItemFound_3) == 0x000280, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_ItemFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails_3) == 0x000288, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_ItemFound_4) == 0x0002D8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_ItemFound_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails_4) == 0x0002E0, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Array_Get_Item_1) == 0x000330, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Array_Length_ReturnValue_1) == 0x000348, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x00034C, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000350, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_ItemsFound_1) == 0x000354, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_ItemsFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_InvSlots_1) == 0x000358, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_InvSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1) == 0x0003A8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SearchPlayerInventoryForItem_AllInvSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, K2Node_MakeStruct_DataTableRowHandle) == 0x0003B8, "Member 'BP_PlayerInventory_C_RepairItem::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, K2Node_MakeStruct_S_CraftingCost) == 0x0003C8, "Member 'BP_PlayerInventory_C_RepairItem::K2Node_MakeStruct_S_CraftingCost' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_ItemRepairCost_ItemCount) == 0x0003E0, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_ItemRepairCost_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_ItemRepairCost_Max_Durability_ImplicitCast) == 0x0003E8, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_ItemRepairCost_Max_Durability_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItem, CallFunc_SGK_ItemRepairCost_Durability_ImplicitCast) == 0x0003F0, "Member 'BP_PlayerInventory_C_RepairItem::CallFunc_SGK_ItemRepairCost_Durability_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.RepairItemInSlot
// 0x00A0 (0x00A0 - 0x0000)
struct BP_PlayerInventory_C_RepairItemInSlot final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_RepairItem_ReturnValue;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DDF[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_RepairItem_RepairedInvItem;               // 0x0070(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_RepairItemInSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_RepairItemInSlot");
static_assert(sizeof(BP_PlayerInventory_C_RepairItemInSlot) == 0x0000A0, "Wrong size on BP_PlayerInventory_C_RepairItemInSlot");
static_assert(offsetof(BP_PlayerInventory_C_RepairItemInSlot, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_RepairItemInSlot::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItemInSlot, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000010, "Member 'BP_PlayerInventory_C_RepairItemInSlot::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItemInSlot, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000018, "Member 'BP_PlayerInventory_C_RepairItemInSlot::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItemInSlot, CallFunc_RepairItem_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_RepairItemInSlot::CallFunc_RepairItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_RepairItemInSlot, CallFunc_RepairItem_RepairedInvItem) == 0x000070, "Member 'BP_PlayerInventory_C_RepairItemInSlot::CallFunc_RepairItem_RepairedInvItem' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ReturnStateValue
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerInventory_C_ReturnStateValue final
{
public:
	E_CharacterState                              CharacterState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_StatReduction>               Array;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	double                                        Value;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_StatReduction                       CallFunc_Array_Get_Item;                           // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE1[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE2[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_Value_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ReturnStateValue) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ReturnStateValue");
static_assert(sizeof(BP_PlayerInventory_C_ReturnStateValue) == 0x000048, "Wrong size on BP_PlayerInventory_C_ReturnStateValue");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CharacterState) == 0x000000, "Member 'BP_PlayerInventory_C_ReturnStateValue::CharacterState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, Array) == 0x000008, "Member 'BP_PlayerInventory_C_ReturnStateValue::Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, Value) == 0x000018, "Member 'BP_PlayerInventory_C_ReturnStateValue::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_ReturnStateValue::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_PlayerInventory_C_ReturnStateValue::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_PlayerInventory_C_ReturnStateValue::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_PlayerInventory_C_ReturnStateValue::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BP_PlayerInventory_C_ReturnStateValue::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerInventory_C_ReturnStateValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00003C, "Member 'BP_PlayerInventory_C_ReturnStateValue::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ReturnStateValue, K2Node_FunctionResult_Value_ImplicitCast) == 0x000040, "Member 'BP_PlayerInventory_C_ReturnStateValue::K2Node_FunctionResult_Value_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SaveComponentData
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_SaveComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SaveComponentData) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SaveComponentData");
static_assert(sizeof(BP_PlayerInventory_C_SaveComponentData) == 0x000008, "Wrong size on BP_PlayerInventory_C_SaveComponentData");
static_assert(offsetof(BP_PlayerInventory_C_SaveComponentData, SaveGame) == 0x000000, "Member 'BP_PlayerInventory_C_SaveComponentData::SaveGame' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SearchEnemyTrace
// 0x0548 (0x0548 - 0x0000)
struct BP_PlayerInventory_C_SearchEnemyTrace final
{
public:
	class FString                                 Temp_string_Variable;                              // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE3[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE4[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairType                               Temp_byte_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE6[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairType                               Temp_byte_Variable_1;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE7[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_InteractionMath_Start;                    // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InteractionMath_End;                      // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE8[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       CallFunc_SGK_CharacterCamera_CurrentCamera;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CallFunc_SGK_CharacterCamera_CurrentSpringArm;     // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array_2;                          // 0x0110(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0138(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE9[0x7];                                     // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEA[0x2];                                     // 0x025A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEB[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEC[0x4];                                     // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0330(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x041A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x041B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DED[0x4];                                     // 0x0424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0498(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEE[0x4];                                     // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0500(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DEF[0x7];                                     // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF0[0x7];                                     // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_1;        // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairType                               K2Node_Select_Default_1;                           // 0x0542(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SearchEnemyTrace) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SearchEnemyTrace");
static_assert(sizeof(BP_PlayerInventory_C_SearchEnemyTrace) == 0x000548, "Wrong size on BP_PlayerInventory_C_SearchEnemyTrace");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, Temp_string_Variable) == 0x000000, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, Temp_bool_Variable) == 0x000028, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_MakeArray_Array_1) == 0x000030, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_AsBP_SGKController) == 0x000050, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, Temp_byte_Variable) == 0x000059, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000060, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, Temp_byte_Variable_1) == 0x000069, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, Temp_bool_Variable_1) == 0x00006A, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_InteractionMath_Start) == 0x000070, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_InteractionMath_Start' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_InteractionMath_End) == 0x000088, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_InteractionMath_End' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_GetForwardVector_ReturnValue) == 0x0000A0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x0000B8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000D0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SGK_CharacterCamera_CurrentCamera) == 0x0000E8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SGK_CharacterCamera_CurrentCamera' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SGK_CharacterCamera_CurrentSpringArm) == 0x0000F0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SGK_CharacterCamera_CurrentSpringArm' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_MakeArray_Array_2) == 0x000110, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000120, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SphereTraceSingle_OutHit) == 0x000138, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SphereTraceSingle_ReturnValue) == 0x000220, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000228, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000240, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x000258, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x000259, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Time) == 0x00025C, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Distance) == 0x000260, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Location) == 0x000268, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000280, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Normal) == 0x000298, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x0002B0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_TraceStart) == 0x000300, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000318, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000330, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000418, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_IsValid_ReturnValue_3) == 0x000419, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00041A, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00041B, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Time_1) == 0x00041C, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Distance_1) == 0x000420, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Location_1) == 0x000428, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000440, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_Normal_1) == 0x000458, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000470, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_PhysMat_1) == 0x000488, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitActor_1) == 0x000490, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitComponent_1) == 0x000498, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitBoneName_1) == 0x0004A0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_BoneName_1) == 0x0004A8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_HitItem_1) == 0x0004B0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_ElementIndex_1) == 0x0004B4, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_FaceIndex_1) == 0x0004B8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_TraceStart_1) == 0x0004C0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_BreakHitResult_TraceEnd_1) == 0x0004D8, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_GetDisplayName_ReturnValue) == 0x0004F0, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000500, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_bSuccess_3) == 0x000508, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_Select_Default) == 0x000510, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Concat_StrStr_ReturnValue) == 0x000520, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_Not_PreBool_ReturnValue) == 0x000530, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_AsPeak_53Player_State_1) == 0x000538, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_AsPeak_53Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_DynamicCast_bSuccess_4) == 0x000540, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000541, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchEnemyTrace, K2Node_Select_Default_1) == 0x000542, "Member 'BP_PlayerInventory_C_SearchEnemyTrace::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SearchForWeaponMag
// 0x1C20 (0x1C20 - 0x0000)
struct BP_PlayerInventory_C_SearchForWeaponMag final
{
public:
	class UClass*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          MagFound;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ItemSlot;                                          // 0x0010(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ArrayEquipmentSlotL;                               // 0x0060(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         ArrayItemDetailsL;                                 // 0x0090(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ArrayItemL;                                        // 0x0920(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UClass*>                         AllowAttachmentsL;                                 // 0x0970(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0980(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0984(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF2[0xB];                                     // 0x0985(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0990(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x1224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x1228(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x1238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x123C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x1240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF3[0x3];                                     // 0x1241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x1248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF4[0x7];                                     // 0x1249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x1250(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x129C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF5[0xF];                                     // 0x12A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x12B0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x1B41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x1B42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x1B43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF6[0x4];                                     // 0x1B44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x1B48(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x1B99(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x1B9A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x1B9B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x1B9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1BA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF7[0x3];                                     // 0x1BA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x1BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x1BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x1BB1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x1BB2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x1BB3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF8[0x4];                                     // 0x1BB4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x1BB8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x1C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF9[0x3];                                     // 0x1C09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x1C0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x1C10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x1C14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SearchForWeaponMag) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_SearchForWeaponMag");
static_assert(sizeof(BP_PlayerInventory_C_SearchForWeaponMag) == 0x001C20, "Wrong size on BP_PlayerInventory_C_SearchForWeaponMag");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Weapon) == 0x000000, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, MagFound) == 0x000008, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::MagFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, ItemSlot) == 0x000010, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, ArrayEquipmentSlotL) == 0x000060, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::ArrayEquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, ArrayItemDetailsL) == 0x000090, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::ArrayItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, ArrayItemL) == 0x000920, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::ArrayItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, AllowAttachmentsL) == 0x000970, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::AllowAttachmentsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_int_Loop_Counter_Variable) == 0x000980, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_ItemDetails_ItemFound) == 0x000984, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000990, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Add_IntInt_ReturnValue) == 0x001220, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_int_Array_Index_Variable) == 0x001224, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_class_Variable) == 0x001228, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_int_Variable) == 0x001238, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_int_Loop_Counter_Variable_1) == 0x00123C, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Conv_IntToByte_ReturnValue) == 0x001240, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Add_IntInt_ReturnValue_1) == 0x001244, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_GetValidValue_ReturnValue) == 0x001248, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x001250, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Add_IntInt_ReturnValue_2) == 0x001298, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, Temp_int_Array_Index_Variable_1) == 0x00129C, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x0012A0, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x0012B0, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Greater_IntInt_ReturnValue) == 0x001B40, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Greater_IntInt_ReturnValue_1) == 0x001B41, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x001B42, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Contains_ReturnValue) == 0x001B43, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Get_Item) == 0x001B48, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_IsValid_ReturnValue) == 0x001B98, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Greater_IntInt_ReturnValue_2) == 0x001B99, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Greater_IntInt_ReturnValue_3) == 0x001B9A, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x001B9B, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_IsRootSlot_RootIndex) == 0x001B9C, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Length_ReturnValue) == 0x001BA0, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Less_IntInt_ReturnValue) == 0x001BA4, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_MakeLiteralInt_ReturnValue) == 0x001BA8, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Subtract_IntInt_ReturnValue) == 0x001BAC, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001BB0, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Greater_IntInt_ReturnValue_4) == 0x001BB1, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x001BB2, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Contains_ReturnValue_1) == 0x001BB3, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Get_Item_1) == 0x001BB8, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x001C08, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x001C0C, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Array_Length_ReturnValue_1) == 0x001C10, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchForWeaponMag, CallFunc_Less_IntInt_ReturnValue_1) == 0x001C14, "Member 'BP_PlayerInventory_C_SearchForWeaponMag::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SearchPlayerInventoryForItem
// 0x0318 (0x0318 - 0x0000)
struct BP_PlayerInventory_C_SearchPlayerInventoryForItem final
{
public:
	class FName                                   Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_RemoveItem;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemsFound;                                        // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFA[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlots;                                          // 0x0010(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     AllInvSlots;                                       // 0x0060(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     ReturnItemsL;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvSlot                             ReturnItemL;                                       // 0x0080(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ArrayItemL;                                        // 0x00D0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFB[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RemainingSearchAmountL;                            // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFC[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFD[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFE[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DFF[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E00[0x2];                                     // 0x0156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E01[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0160(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E02[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E03[0x3];                                     // 0x01BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E04[0x2];                                     // 0x01C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E05[0x2];                                     // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E06[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01E0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E07[0x2];                                     // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E08[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E09[0x2];                                     // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0250(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0A[0x3];                                     // 0x0299(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x02A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0B[0x3];                                     // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0C[0x1];                                     // 0x02FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0D[0x3];                                     // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0312(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SearchPlayerInventoryForItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SearchPlayerInventoryForItem");
static_assert(sizeof(BP_PlayerInventory_C_SearchPlayerInventoryForItem) == 0x000318, "Wrong size on BP_PlayerInventory_C_SearchPlayerInventoryForItem");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Item) == 0x000000, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Amount) == 0x000008, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Param_RemoveItem) == 0x00000C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Param_RemoveItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, ItemsFound) == 0x00000D, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::ItemsFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, InvSlots) == 0x000010, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::InvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, AllInvSlots) == 0x000060, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::AllInvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, ReturnItemsL) == 0x000070, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::ReturnItemsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, ReturnItemL) == 0x000080, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::ReturnItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, ArrayItemL) == 0x0000D0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::ArrayItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, ReturnValueL) == 0x000120, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, RemainingSearchAmountL) == 0x000124, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::RemainingSearchAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00012C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000138, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00014C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000154, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Not_PreBool_ReturnValue_1) == 0x000155, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Add_ReturnValue) == 0x000158, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_bool_Variable) == 0x00015C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Not_PreBool_ReturnValue_2) == 0x00015D, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Get_Item) == 0x000160, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Length_ReturnValue) == 0x0001B0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0001B4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0001B8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0001BC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Loop_Counter_Variable_2) == 0x0001C0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_BooleanAND_ReturnValue) == 0x0001C5, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001CC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Add_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001D4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0001D5, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001D8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Get_Item_1) == 0x0001E0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000230, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Length_ReturnValue_1) == 0x000234, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000238, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000239, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00023C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000240, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000241, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, Temp_int_Variable) == 0x000244, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Conv_IntToByte_ReturnValue) == 0x000248, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_GetValidValue_ReturnValue) == 0x000249, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Add_IntInt_ReturnValue_3) == 0x00024C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000250, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_IsValid_ReturnValue) == 0x000298, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00029C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Get_Item_2) == 0x0002A0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x0002F0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x0002F4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Length_ReturnValue_2) == 0x0002F8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002FC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0002FD, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_BooleanAND_ReturnValue_1) == 0x0002FE, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Array_Add_ReturnValue_2) == 0x000300, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000304, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_MakeLiteralInt_ReturnValue) == 0x000308, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00030C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000310, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000311, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForItem, CallFunc_BooleanAND_ReturnValue_2) == 0x000312, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForItem::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SearchPlayerInventoryForMultiItems
// 0x0310 (0x0310 - 0x0000)
struct BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems final
{
public:
	TArray<class FName>                           Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_RemoveItem;                                  // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsForReload_;                                      // 0x0015(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0016(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0E[0x1];                                     // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlots;                                          // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ForReload_;                                        // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E0F[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     ReturnItemsL;                                      // 0x0070(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvSlot                             ReturnItemL;                                       // 0x0080(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ArrayItemL;                                        // 0x00D0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0120(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E10[0x3];                                     // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RemainingSearchAmountL;                            // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E11[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E12[0x3];                                     // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E13[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E14[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0158(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E15[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E16[0x3];                                     // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E17[0x2];                                     // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E18[0x2];                                     // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E19[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1A[0x2];                                     // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1B[0x2];                                     // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1C[0x2];                                     // 0x0242(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0248(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1D[0x3];                                     // 0x0291(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0298(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1E[0x3];                                     // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02F6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1F[0x1];                                     // 0x02F7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E20[0x3];                                     // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems");
static_assert(sizeof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems) == 0x000310, "Wrong size on BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Item) == 0x000000, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Amount) == 0x000010, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Param_RemoveItem) == 0x000014, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Param_RemoveItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, IsForReload_) == 0x000015, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::IsForReload_' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ItemFound) == 0x000016, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, InvSlots) == 0x000018, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::InvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ForReload_) == 0x000068, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ForReload_' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ReturnItemsL) == 0x000070, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ReturnItemsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ReturnItemL) == 0x000080, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ReturnItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ArrayItemL) == 0x0000D0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ArrayItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, ReturnValueL) == 0x000120, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, RemainingSearchAmountL) == 0x000124, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::RemainingSearchAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Array_Index_Variable) == 0x000128, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue) == 0x00012C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Add_IntInt_ReturnValue) == 0x000134, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_bool_True_if_break_was_hit_Variable) == 0x000138, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Not_PreBool_ReturnValue) == 0x000140, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Loop_Counter_Variable_1) == 0x000144, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00014C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Array_Index_Variable_2) == 0x000150, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000154, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Not_PreBool_ReturnValue_1) == 0x000155, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_bool_Variable) == 0x000156, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Not_PreBool_ReturnValue_2) == 0x000157, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0001AC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0001B0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0001B4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Loop_Counter_Variable_2) == 0x0001B8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Less_IntInt_ReturnValue) == 0x0001BC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_BooleanAND_ReturnValue) == 0x0001BD, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Add_ReturnValue) == 0x0001C8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001CC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Contains_ReturnValue) == 0x0001CD, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000228, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Length_ReturnValue_1) == 0x00022C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000230, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000231, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000234, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000238, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000239, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, Temp_int_Variable) == 0x00023C, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Conv_IntToByte_ReturnValue) == 0x000240, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_GetValidValue_ReturnValue) == 0x000241, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Add_IntInt_ReturnValue_3) == 0x000244, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000248, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_IsValid_ReturnValue) == 0x000290, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000294, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Get_Item_2) == 0x000298, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x0002E8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x0002EC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Length_ReturnValue_2) == 0x0002F0, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002F4, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Greater_IntInt_ReturnValue_5) == 0x0002F5, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_BooleanAND_ReturnValue_1) == 0x0002F6, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Add_ReturnValue_1) == 0x0002F8, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0002FC, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_MakeLiteralInt_ReturnValue) == 0x000300, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000304, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_Array_Contains_ReturnValue_1) == 0x000308, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000309, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems, CallFunc_BooleanAND_ReturnValue_2) == 0x00030A, "Member 'BP_PlayerInventory_C_SearchPlayerInventoryForMultiItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SelectedContextEntry
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_SelectedContextEntry final
{
public:
	E_WorldActions                                ActionType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E21[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InteractionContextMenu_C*           CallFunc_ContextMenu_ContextMenu;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E22[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InteractContextMenuEntry_C*         K2Node_DynamicCast_AsBP_Interact_Context_Menu_Entry; // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SelectedContextEntry) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SelectedContextEntry");
static_assert(sizeof(BP_PlayerInventory_C_SelectedContextEntry) == 0x000030, "Wrong size on BP_PlayerInventory_C_SelectedContextEntry");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, ActionType) == 0x000000, "Member 'BP_PlayerInventory_C_SelectedContextEntry::ActionType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, CallFunc_ContextMenu_ContextMenu) == 0x000008, "Member 'BP_PlayerInventory_C_SelectedContextEntry::CallFunc_ContextMenu_ContextMenu' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_SelectedContextEntry::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, CallFunc_GetChildAt_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_SelectedContextEntry::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, K2Node_DynamicCast_AsBP_Interact_Context_Menu_Entry) == 0x000020, "Member 'BP_PlayerInventory_C_SelectedContextEntry::K2Node_DynamicCast_AsBP_Interact_Context_Menu_Entry' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SelectedContextEntry, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_PlayerInventory_C_SelectedContextEntry::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerAddAttachmentFromSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerAddAttachmentFromSlot final
{
public:
	struct FS_InvSlotID                           AttachmentItemID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerAddAttachmentFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerAddAttachmentFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerAddAttachmentFromSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerAddAttachmentFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerAddAttachmentFromSlot, AttachmentItemID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerAddAttachmentFromSlot::AttachmentItemID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerAddAttachmentFromSlot, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_ServerAddAttachmentFromSlot::WeaponInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerBuyVenderItem
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerInventory_C_ServerBuyVenderItem final
{
public:
	struct FS_VendorBuy                           VenderBuyListing;                                  // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerBuyVenderItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerBuyVenderItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerBuyVenderItem) == 0x000048, "Wrong size on BP_PlayerInventory_C_ServerBuyVenderItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerBuyVenderItem, VenderBuyListing) == 0x000000, "Member 'BP_PlayerInventory_C_ServerBuyVenderItem::VenderBuyListing' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerBuyVenderItem, Amount) == 0x000040, "Member 'BP_PlayerInventory_C_ServerBuyVenderItem::Amount' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerCheckCode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerCheckCode final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerCheckCode) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerCheckCode");
static_assert(sizeof(BP_PlayerInventory_C_ServerCheckCode) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerCheckCode");
static_assert(offsetof(BP_PlayerInventory_C_ServerCheckCode, Code) == 0x000000, "Member 'BP_PlayerInventory_C_ServerCheckCode::Code' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerCheckCode, Actor) == 0x000018, "Member 'BP_PlayerInventory_C_ServerCheckCode::Actor' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerCreateNewCraftingListing
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerCreateNewCraftingListing final
{
public:
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CraftingRecipeRow;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerCreateNewCraftingListing) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerCreateNewCraftingListing");
static_assert(sizeof(BP_PlayerInventory_C_ServerCreateNewCraftingListing) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerCreateNewCraftingListing");
static_assert(offsetof(BP_PlayerInventory_C_ServerCreateNewCraftingListing, CraftingInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerCreateNewCraftingListing::CraftingInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerCreateNewCraftingListing, CraftingRecipeRow) == 0x000008, "Member 'BP_PlayerInventory_C_ServerCreateNewCraftingListing::CraftingRecipeRow' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerCreateNewCraftingListing, Amount) == 0x000010, "Member 'BP_PlayerInventory_C_ServerCreateNewCraftingListing::Amount' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerDropItemFromSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerDropItemFromSlot final
{
public:
	struct FS_InvSlotID                           SlotID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerDropItemFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerDropItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerDropItemFromSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerDropItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerDropItemFromSlot, SlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerDropItemFromSlot::SlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerDropItemFromSlot, SpecialType) == 0x000010, "Member 'BP_PlayerInventory_C_ServerDropItemFromSlot::SpecialType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerDropItemFromSlot, Split) == 0x000011, "Member 'BP_PlayerInventory_C_ServerDropItemFromSlot::Split' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerEmptyTargetInventory
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerEmptyTargetInventory final
{
public:
	class UBP_MasterInventory_C*                  StartInventory;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  TargetInventory;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerEmptyTargetInventory) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerEmptyTargetInventory");
static_assert(sizeof(BP_PlayerInventory_C_ServerEmptyTargetInventory) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerEmptyTargetInventory");
static_assert(offsetof(BP_PlayerInventory_C_ServerEmptyTargetInventory, StartInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerEmptyTargetInventory::StartInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerEmptyTargetInventory, TargetInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ServerEmptyTargetInventory::TargetInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerEndChamber
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerEndChamber final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FPMontage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerEndChamber) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerEndChamber");
static_assert(sizeof(BP_PlayerInventory_C_ServerEndChamber) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerEndChamber");
static_assert(offsetof(BP_PlayerInventory_C_ServerEndChamber, Montage) == 0x000000, "Member 'BP_PlayerInventory_C_ServerEndChamber::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerEndChamber, FPMontage) == 0x000008, "Member 'BP_PlayerInventory_C_ServerEndChamber::FPMontage' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerEndMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerEndMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FPMontage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerEndMontage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerEndMontage");
static_assert(sizeof(BP_PlayerInventory_C_ServerEndMontage) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerEndMontage");
static_assert(offsetof(BP_PlayerInventory_C_ServerEndMontage, Montage) == 0x000000, "Member 'BP_PlayerInventory_C_ServerEndMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerEndMontage, FPMontage) == 0x000008, "Member 'BP_PlayerInventory_C_ServerEndMontage::FPMontage' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerEquipItemFromSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerEquipItemFromSlot final
{
public:
	struct FS_InvSlotID                           SlotID;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerEquipItemFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerEquipItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerEquipItemFromSlot) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerEquipItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerEquipItemFromSlot, SlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerEquipItemFromSlot::SlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerEquipItemFromSlot, EquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerEquipItemFromSlot::EquipmentSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerEquipWeaponFromSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerEquipWeaponFromSlot final
{
public:
	struct FS_InvSlotID                           Slot_ID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerEquipWeaponFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerEquipWeaponFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerEquipWeaponFromSlot) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerEquipWeaponFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerEquipWeaponFromSlot, Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerEquipWeaponFromSlot::Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerEquipWeaponFromSlot, Weapon_Slot_ID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerEquipWeaponFromSlot::Weapon_Slot_ID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerInteract
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_ServerInteract final
{
public:
	struct FVector                                TraceStart;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                ActionType;                                        // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerInteract) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerInteract");
static_assert(sizeof(BP_PlayerInventory_C_ServerInteract) == 0x000038, "Wrong size on BP_PlayerInventory_C_ServerInteract");
static_assert(offsetof(BP_PlayerInventory_C_ServerInteract, TraceStart) == 0x000000, "Member 'BP_PlayerInventory_C_ServerInteract::TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerInteract, TraceEnd) == 0x000018, "Member 'BP_PlayerInventory_C_ServerInteract::TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerInteract, ActionType) == 0x000030, "Member 'BP_PlayerInventory_C_ServerInteract::ActionType' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerKillPlayerCharacter
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerKillPlayerCharacter final
{
public:
	bool                                          IsMelee;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKnife;                                           // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E23[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MeleeAnim;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerKillPlayerCharacter) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_ServerKillPlayerCharacter");
static_assert(sizeof(BP_PlayerInventory_C_ServerKillPlayerCharacter) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerKillPlayerCharacter");
static_assert(offsetof(BP_PlayerInventory_C_ServerKillPlayerCharacter, IsMelee) == 0x000000, "Member 'BP_PlayerInventory_C_ServerKillPlayerCharacter::IsMelee' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerKillPlayerCharacter, IsKnife) == 0x000001, "Member 'BP_PlayerInventory_C_ServerKillPlayerCharacter::IsKnife' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerKillPlayerCharacter, MeleeAnim) == 0x000004, "Member 'BP_PlayerInventory_C_ServerKillPlayerCharacter::MeleeAnim' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerLoadGame
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerLoadGame final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Level;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerLoadGame) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerLoadGame");
static_assert(sizeof(BP_PlayerInventory_C_ServerLoadGame) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerLoadGame");
static_assert(offsetof(BP_PlayerInventory_C_ServerLoadGame, SlotName) == 0x000000, "Member 'BP_PlayerInventory_C_ServerLoadGame::SlotName' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerLoadGame, Level) == 0x000010, "Member 'BP_PlayerInventory_C_ServerLoadGame::Level' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerMoveItem
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_ServerMoveItem final
{
public:
	struct FS_InvSlotID                           StartSlotID;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           EndSlotID;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Split;                                             // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerMoveItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerMoveItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerMoveItem) == 0x000028, "Wrong size on BP_PlayerInventory_C_ServerMoveItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerMoveItem, StartSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerMoveItem::StartSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerMoveItem, EndSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerMoveItem::EndSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerMoveItem, Rotated) == 0x000020, "Member 'BP_PlayerInventory_C_ServerMoveItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerMoveItem, Split) == 0x000021, "Member 'BP_PlayerInventory_C_ServerMoveItem::Split' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerMoveItem, SpecialType) == 0x000022, "Member 'BP_PlayerInventory_C_ServerMoveItem::SpecialType' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenContainerWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenContainerWindow final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToggleInventory;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenContainerWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenContainerWindow");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenContainerWindow) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerOpenContainerWindow");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenContainerWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenContainerWindow::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenContainerWindow, Param_ToggleInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ServerOpenContainerWindow::Param_ToggleInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenExtCookingMenu
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenExtCookingMenu final
{
public:
	class UBP_MasterInventory_C*                  CookingInventory;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenExtCookingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenExtCookingMenu");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenExtCookingMenu) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerOpenExtCookingMenu");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenExtCookingMenu, CookingInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenExtCookingMenu::CookingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenExtCraftingMenu
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenExtCraftingMenu final
{
public:
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenExtCraftingMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenExtCraftingMenu");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenExtCraftingMenu) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerOpenExtCraftingMenu");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenExtCraftingMenu, CraftingInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenExtCraftingMenu::CraftingInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenExtEquipmentInv
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenExtEquipmentInv final
{
public:
	class UBP_EquipmentInventory_C*               EquipmentInventory;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenExtEquipmentInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenExtEquipmentInv");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenExtEquipmentInv) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerOpenExtEquipmentInv");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenExtEquipmentInv, EquipmentInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenExtEquipmentInv::EquipmentInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenExtInv
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenExtInv final
{
public:
	class UBP_MasterInventory_C*                  Inv;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenExtInv) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenExtInv");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenExtInv) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerOpenExtInv");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenExtInv, Inv) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenExtInv::Inv' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenItemContainerWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenItemContainerWindow final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Toggle_Inventory;                                  // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenItemContainerWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenItemContainerWindow");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenItemContainerWindow) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerOpenItemContainerWindow");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemContainerWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenItemContainerWindow::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemContainerWindow, Param_Index) == 0x000008, "Member 'BP_PlayerInventory_C_ServerOpenItemContainerWindow::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemContainerWindow, Toggle_Inventory) == 0x00000C, "Member 'BP_PlayerInventory_C_ServerOpenItemContainerWindow::Toggle_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenItemWeaponWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenItemWeaponWindow final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToggleInventory;                             // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenItemWeaponWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenItemWeaponWindow");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenItemWeaponWindow) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerOpenItemWeaponWindow");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemWeaponWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenItemWeaponWindow::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemWeaponWindow, Param_Index) == 0x000008, "Member 'BP_PlayerInventory_C_ServerOpenItemWeaponWindow::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenItemWeaponWindow, Param_ToggleInventory) == 0x00000C, "Member 'BP_PlayerInventory_C_ServerOpenItemWeaponWindow::Param_ToggleInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenLockpad
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenLockpad final
{
public:
	bool                                          SetCode;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E24[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Lock;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenLockpad) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenLockpad");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenLockpad) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerOpenLockpad");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenLockpad, SetCode) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenLockpad::SetCode' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenLockpad, Lock) == 0x000008, "Member 'BP_PlayerInventory_C_ServerOpenLockpad::Lock' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenVenderMenu
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenVenderMenu final
{
public:
	class UBP_MasterInventory_C*                  VenderInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenVenderMenu) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenVenderMenu");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenVenderMenu) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerOpenVenderMenu");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenVenderMenu, VenderInventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenVenderMenu::VenderInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerOpenWeaponWindow
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerOpenWeaponWindow final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_ToggleInventory;                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerOpenWeaponWindow) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerOpenWeaponWindow");
static_assert(sizeof(BP_PlayerInventory_C_ServerOpenWeaponWindow) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerOpenWeaponWindow");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenWeaponWindow, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerOpenWeaponWindow::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerOpenWeaponWindow, Param_ToggleInventory) == 0x000008, "Member 'BP_PlayerInventory_C_ServerOpenWeaponWindow::Param_ToggleInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerPlayMontage
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerPlayMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           FPMontage;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerPlayMontage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerPlayMontage");
static_assert(sizeof(BP_PlayerInventory_C_ServerPlayMontage) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerPlayMontage");
static_assert(offsetof(BP_PlayerInventory_C_ServerPlayMontage, Montage) == 0x000000, "Member 'BP_PlayerInventory_C_ServerPlayMontage::Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerPlayMontage, FPMontage) == 0x000008, "Member 'BP_PlayerInventory_C_ServerPlayMontage::FPMontage' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerPrimaryAction) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerPrimaryAction");
static_assert(sizeof(BP_PlayerInventory_C_ServerPrimaryAction) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerPrimaryAction");
static_assert(offsetof(BP_PlayerInventory_C_ServerPrimaryAction, KeyDown) == 0x000000, "Member 'BP_PlayerInventory_C_ServerPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerQuickMoveItem
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerQuickMoveItem final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerQuickMoveItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerQuickMoveItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerQuickMoveItem) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerQuickMoveItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerQuickMoveItem, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerQuickMoveItem::Param_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerQuickMoveItem, ItemIndex) == 0x000008, "Member 'BP_PlayerInventory_C_ServerQuickMoveItem::ItemIndex' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerRemoveUsingPlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerRemoveUsingPlayer final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerRemoveUsingPlayer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerRemoveUsingPlayer");
static_assert(sizeof(BP_PlayerInventory_C_ServerRemoveUsingPlayer) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerRemoveUsingPlayer");
static_assert(offsetof(BP_PlayerInventory_C_ServerRemoveUsingPlayer, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerRemoveUsingPlayer::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerRemoveWeaponAttachment
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_ServerRemoveWeaponAttachment final
{
public:
	struct FS_AttachmentSlotID                    AttachmentID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           EndSlotID;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerRemoveWeaponAttachment");
static_assert(sizeof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment) == 0x000028, "Wrong size on BP_PlayerInventory_C_ServerRemoveWeaponAttachment");
static_assert(offsetof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment, AttachmentID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerRemoveWeaponAttachment::AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment, EndSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerRemoveWeaponAttachment::EndSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_ServerRemoveWeaponAttachment::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerRemoveWeaponAttachment, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_ServerRemoveWeaponAttachment::Rotated' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerRepairItem
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerRepairItem final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerRepairItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerRepairItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerRepairItem) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerRepairItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerRepairItem, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerRepairItem::InvSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerRespawnPlayer
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerRespawnPlayer final
{
public:
	bool                                          Random;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerRespawnPlayer) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerRespawnPlayer");
static_assert(sizeof(BP_PlayerInventory_C_ServerRespawnPlayer) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerRespawnPlayer");
static_assert(offsetof(BP_PlayerInventory_C_ServerRespawnPlayer, Random) == 0x000000, "Member 'BP_PlayerInventory_C_ServerRespawnPlayer::Random' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSaveGame
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerSaveGame final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSaveGame) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSaveGame");
static_assert(sizeof(BP_PlayerInventory_C_ServerSaveGame) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerSaveGame");
static_assert(offsetof(BP_PlayerInventory_C_ServerSaveGame, SlotName) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSaveGame::SlotName' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSecondaryAction) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerSecondaryAction");
static_assert(sizeof(BP_PlayerInventory_C_ServerSecondaryAction) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerSecondaryAction");
static_assert(offsetof(BP_PlayerInventory_C_ServerSecondaryAction, KeyDown) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSellVenderItem
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerInventory_C_ServerSellVenderItem final
{
public:
	struct FS_VendorSell                          VenderSellItem;                                    // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSellVenderItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSellVenderItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerSellVenderItem) == 0x000040, "Wrong size on BP_PlayerInventory_C_ServerSellVenderItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerSellVenderItem, VenderSellItem) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSellVenderItem::VenderSellItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSellVenderItem, Amount) == 0x000038, "Member 'BP_PlayerInventory_C_ServerSellVenderItem::Amount' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSetBuildMode
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerSetBuildMode final
{
public:
	bool                                          Param_BuildMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSetBuildMode) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerSetBuildMode");
static_assert(sizeof(BP_PlayerInventory_C_ServerSetBuildMode) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerSetBuildMode");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetBuildMode, Param_BuildMode) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSetBuildMode::Param_BuildMode' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSetCode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerSetCode final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class AActor*                                 Actor;                                             // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSetCode) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSetCode");
static_assert(sizeof(BP_PlayerInventory_C_ServerSetCode) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerSetCode");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetCode, Code) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSetCode::Code' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetCode, Actor) == 0x000018, "Member 'BP_PlayerInventory_C_ServerSetCode::Actor' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSetIgnoreActor
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerSetIgnoreActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSetIgnoreActor) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSetIgnoreActor");
static_assert(sizeof(BP_PlayerInventory_C_ServerSetIgnoreActor) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerSetIgnoreActor");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetIgnoreActor, Actor) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSetIgnoreActor::Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetIgnoreActor, Time) == 0x000008, "Member 'BP_PlayerInventory_C_ServerSetIgnoreActor::Time' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSetInventoryOpen
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerSetInventoryOpen final
{
public:
	bool                                          Param_InventoryOpen;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSetInventoryOpen) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerSetInventoryOpen");
static_assert(sizeof(BP_PlayerInventory_C_ServerSetInventoryOpen) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerSetInventoryOpen");
static_assert(offsetof(BP_PlayerInventory_C_ServerSetInventoryOpen, Param_InventoryOpen) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSetInventoryOpen::Param_InventoryOpen' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSplitStack
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_ServerSplitStack final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSplitStack) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSplitStack");
static_assert(sizeof(BP_PlayerInventory_C_ServerSplitStack) == 0x000010, "Wrong size on BP_PlayerInventory_C_ServerSplitStack");
static_assert(offsetof(BP_PlayerInventory_C_ServerSplitStack, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSplitStack::InvSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSprintKey
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerSprintKey final
{
public:
	bool                                          Down;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSprintKey) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerSprintKey");
static_assert(sizeof(BP_PlayerInventory_C_ServerSprintKey) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerSprintKey");
static_assert(offsetof(BP_PlayerInventory_C_ServerSprintKey, Down) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSprintKey::Down' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSwapAttachmentItems
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerSwapAttachmentItems final
{
public:
	struct FS_AttachmentSlotID                    AttachmentID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSwapAttachmentItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSwapAttachmentItems");
static_assert(sizeof(BP_PlayerInventory_C_ServerSwapAttachmentItems) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerSwapAttachmentItems");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapAttachmentItems, AttachmentID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSwapAttachmentItems::AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapAttachmentItems, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_ServerSwapAttachmentItems::WeaponInventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSwapEquipmentItems
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerSwapEquipmentItems final
{
public:
	struct FS_EquipmentSlotID                     StartEquipmentSlotID;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EndEquipmentSlotID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSwapEquipmentItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSwapEquipmentItems");
static_assert(sizeof(BP_PlayerInventory_C_ServerSwapEquipmentItems) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerSwapEquipmentItems");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapEquipmentItems, StartEquipmentSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSwapEquipmentItems::StartEquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapEquipmentItems, EndEquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerSwapEquipmentItems::EndEquipmentSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerSwapWeaponItems
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerInventory_C_ServerSwapWeaponItems final
{
public:
	struct FS_WeaponSlotID                        StartWeaponSlotID;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        EndWeaponSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerSwapWeaponItems) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerSwapWeaponItems");
static_assert(sizeof(BP_PlayerInventory_C_ServerSwapWeaponItems) == 0x000020, "Wrong size on BP_PlayerInventory_C_ServerSwapWeaponItems");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapWeaponItems, StartWeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerSwapWeaponItems::StartWeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerSwapWeaponItems, EndWeaponSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerSwapWeaponItems::EndWeaponSlotID' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerToggleMeleeCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerToggleMeleeCollision final
{
public:
	bool                                          TraceOn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerToggleMeleeCollision) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerToggleMeleeCollision");
static_assert(sizeof(BP_PlayerInventory_C_ServerToggleMeleeCollision) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerToggleMeleeCollision");
static_assert(offsetof(BP_PlayerInventory_C_ServerToggleMeleeCollision, TraceOn) == 0x000000, "Member 'BP_PlayerInventory_C_ServerToggleMeleeCollision::TraceOn' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUIFinishedCreating
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ServerUIFinishedCreating final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUIFinishedCreating) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUIFinishedCreating");
static_assert(sizeof(BP_PlayerInventory_C_ServerUIFinishedCreating) == 0x000008, "Wrong size on BP_PlayerInventory_C_ServerUIFinishedCreating");
static_assert(offsetof(BP_PlayerInventory_C_ServerUIFinishedCreating, Param_Inventory) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUIFinishedCreating::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUnequipItem
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_ServerUnequipItem final
{
public:
	struct FS_InvSlotID                           EndInvSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyItem;                                       // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUnequipItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUnequipItem");
static_assert(sizeof(BP_PlayerInventory_C_ServerUnequipItem) == 0x000028, "Wrong size on BP_PlayerInventory_C_ServerUnequipItem");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipItem, EndInvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUnequipItem::EndInvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipItem, EquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUnequipItem::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipItem, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_ServerUnequipItem::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipItem, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_ServerUnequipItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipItem, DestroyItem) == 0x000022, "Member 'BP_PlayerInventory_C_ServerUnequipItem::DestroyItem' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUnequipWeapon
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_ServerUnequipWeapon final
{
public:
	struct FS_InvSlotID                           EndInvSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroy;                                           // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUnequipWeapon) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUnequipWeapon");
static_assert(sizeof(BP_PlayerInventory_C_ServerUnequipWeapon) == 0x000028, "Wrong size on BP_PlayerInventory_C_ServerUnequipWeapon");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipWeapon, EndInvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUnequipWeapon::EndInvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipWeapon, WeaponSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUnequipWeapon::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipWeapon, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_ServerUnequipWeapon::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipWeapon, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_ServerUnequipWeapon::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUnequipWeapon, Destroy) == 0x000022, "Member 'BP_PlayerInventory_C_ServerUnequipWeapon::Destroy' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateClientEquipmentSlot
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot final
{
public:
	E_EquipmentType                               EquipmentSlot;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot, EquipmentSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateClientEquipmentSlot::EquipmentSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateClientWeaponSlot
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateClientWeaponSlot final
{
public:
	E_WeaponSlots                                 WeaponSlot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateClientWeaponSlot) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateClientWeaponSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateClientWeaponSlot) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerUpdateClientWeaponSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateClientWeaponSlot, WeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateClientWeaponSlot::WeaponSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateItemQuickSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateItemQuickSlot final
{
public:
	struct FS_InvSlotID                           Slot_ID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateItemQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateItemQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateItemQuickSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerUpdateItemQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateItemQuickSlot, Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateItemQuickSlot::Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateItemQuickSlot, QuickSlotIndex) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUpdateItemQuickSlot::QuickSlotIndex' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateRespawnPointName
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateRespawnPointName final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateRespawnPointName) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateRespawnPointName");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateRespawnPointName) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerUpdateRespawnPointName");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateRespawnPointName, Param_Name) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateRespawnPointName::Param_Name' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateState
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateState final
{
public:
	E_CharacterState                              CharacterState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateState) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateState");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateState) == 0x000001, "Wrong size on BP_PlayerInventory_C_ServerUpdateState");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateState, CharacterState) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateState::CharacterState' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUpdateWeaponQuickSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot final
{
public:
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot, Weapon_Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot::Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot, QuickSlotIndex) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUpdateWeaponQuickSlot::QuickSlotIndex' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUseItemAction
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerUseItemAction final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantPlacement;                                  // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUseItemAction) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUseItemAction");
static_assert(sizeof(BP_PlayerInventory_C_ServerUseItemAction) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerUseItemAction");
static_assert(offsetof(BP_PlayerInventory_C_ServerUseItemAction, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUseItemAction::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUseItemAction, Action) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUseItemAction::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUseItemAction, InstantPlacement) == 0x000011, "Member 'BP_PlayerInventory_C_ServerUseItemAction::InstantPlacement' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ServerUseWeaponAction
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_ServerUseWeaponAction final
{
public:
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ServerUseWeaponAction) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ServerUseWeaponAction");
static_assert(sizeof(BP_PlayerInventory_C_ServerUseWeaponAction) == 0x000018, "Wrong size on BP_PlayerInventory_C_ServerUseWeaponAction");
static_assert(offsetof(BP_PlayerInventory_C_ServerUseWeaponAction, WeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_ServerUseWeaponAction::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ServerUseWeaponAction, Action) == 0x000010, "Member 'BP_PlayerInventory_C_ServerUseWeaponAction::Action' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SetHoldableMulticast
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_SetHoldableMulticast final
{
public:
	struct FS_WeaponSlot                          Param_HoldingWeaponSlot;                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SetHoldableMulticast) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SetHoldableMulticast");
static_assert(sizeof(BP_PlayerInventory_C_SetHoldableMulticast) == 0x000050, "Wrong size on BP_PlayerInventory_C_SetHoldableMulticast");
static_assert(offsetof(BP_PlayerInventory_C_SetHoldableMulticast, Param_HoldingWeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_SetHoldableMulticast::Param_HoldingWeaponSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SetHoldableServer
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_SetHoldableServer final
{
public:
	struct FS_WeaponSlot                          Param_HoldingWeaponSlot;                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SetHoldableServer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SetHoldableServer");
static_assert(sizeof(BP_PlayerInventory_C_SetHoldableServer) == 0x000050, "Wrong size on BP_PlayerInventory_C_SetHoldableServer");
static_assert(offsetof(BP_PlayerInventory_C_SetHoldableServer, Param_HoldingWeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_SetHoldableServer::Param_HoldingWeaponSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SetInstigatorServer
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_SetInstigatorServer final
{
public:
	class AActor*                                 Param_EnemyInstigator;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SetInstigatorServer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SetInstigatorServer");
static_assert(sizeof(BP_PlayerInventory_C_SetInstigatorServer) == 0x000008, "Wrong size on BP_PlayerInventory_C_SetInstigatorServer");
static_assert(offsetof(BP_PlayerInventory_C_SetInstigatorServer, Param_EnemyInstigator) == 0x000000, "Member 'BP_PlayerInventory_C_SetInstigatorServer::Param_EnemyInstigator' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SetInvSlots
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerInventory_C_SetInvSlots final
{
public:
	struct FS_InvSlot                             InvSlots;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E25[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     UpdatedSlots;                                      // 0x0060(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerInventory_C_SetInvSlots) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SetInvSlots");
static_assert(sizeof(BP_PlayerInventory_C_SetInvSlots) == 0x000090, "Wrong size on BP_PlayerInventory_C_SetInvSlots");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, InvSlots) == 0x000000, "Member 'BP_PlayerInventory_C_SetInvSlots::InvSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, Height) == 0x000050, "Member 'BP_PlayerInventory_C_SetInvSlots::Height' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, Width) == 0x000054, "Member 'BP_PlayerInventory_C_SetInvSlots::Width' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, Rotated) == 0x000058, "Member 'BP_PlayerInventory_C_SetInvSlots::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, UpdatedSlots) == 0x000060, "Member 'BP_PlayerInventory_C_SetInvSlots::UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000070, "Member 'BP_PlayerInventory_C_SetInvSlots::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SetInvSlots, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000080, "Member 'BP_PlayerInventory_C_SetInvSlots::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SGK "Fix" default values being lost
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_SGK__Fix__default_values_being_lost final
{
public:
	TMap<E_Hitbox, E_EquipmentType>               Temp_byte_Variable;                                // 0x0000(0x0050)()
};
static_assert(alignof(BP_PlayerInventory_C_SGK__Fix__default_values_being_lost) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SGK__Fix__default_values_being_lost");
static_assert(sizeof(BP_PlayerInventory_C_SGK__Fix__default_values_being_lost) == 0x000050, "Wrong size on BP_PlayerInventory_C_SGK__Fix__default_values_being_lost");
static_assert(offsetof(BP_PlayerInventory_C_SGK__Fix__default_values_being_lost, Temp_byte_Variable) == 0x000000, "Member 'BP_PlayerInventory_C_SGK__Fix__default_values_being_lost::Temp_byte_Variable' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SGK AllowStartingItems
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerInventory_C_SGK_AllowStartingItems final
{
public:
	bool                                          AllowStartingItems;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_SGK_AllowStartingItems");
static_assert(sizeof(BP_PlayerInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong size on BP_PlayerInventory_C_SGK_AllowStartingItems");
static_assert(offsetof(BP_PlayerInventory_C_SGK_AllowStartingItems, AllowStartingItems) == 0x000000, "Member 'BP_PlayerInventory_C_SGK_AllowStartingItems::AllowStartingItems' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SGK ItemSound
// 0x000C (0x000C - 0x0000)
struct BP_PlayerInventory_C_SGK_ItemSound final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      SoundType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SGK_ItemSound) == 0x000004, "Wrong alignment on BP_PlayerInventory_C_SGK_ItemSound");
static_assert(sizeof(BP_PlayerInventory_C_SGK_ItemSound) == 0x00000C, "Wrong size on BP_PlayerInventory_C_SGK_ItemSound");
static_assert(offsetof(BP_PlayerInventory_C_SGK_ItemSound, ItemId) == 0x000000, "Member 'BP_PlayerInventory_C_SGK_ItemSound::ItemId' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SGK_ItemSound, SoundType) == 0x000008, "Member 'BP_PlayerInventory_C_SGK_ItemSound::SoundType' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SGK RemoveAdditionalChecks
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerInventory_C_SGK_RemoveAdditionalChecks final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SGK_RemoveAdditionalChecks) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SGK_RemoveAdditionalChecks");
static_assert(sizeof(BP_PlayerInventory_C_SGK_RemoveAdditionalChecks) == 0x000050, "Wrong size on BP_PlayerInventory_C_SGK_RemoveAdditionalChecks");
static_assert(offsetof(BP_PlayerInventory_C_SGK_RemoveAdditionalChecks, InvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_SGK_RemoveAdditionalChecks::InvSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SpawnDroppedItem
// 0x0AD0 (0x0AD0 - 0x0000)
struct BP_PlayerInventory_C_SpawnDroppedItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x0030(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E26[0xE];                                     // 0x0062(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E27[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E28[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E29[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0998(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DropItem_ReturnValue;                 // 0x09A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x09AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2A[0x5];                                     // 0x09AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x09E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0AC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SpawnDroppedItem) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_SpawnDroppedItem");
static_assert(sizeof(BP_PlayerInventory_C_SpawnDroppedItem) == 0x000AD0, "Wrong size on BP_PlayerInventory_C_SpawnDroppedItem");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, InvItem) == 0x000000, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, ItemL) == 0x000030, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::ItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_IsValid_ReturnValue_1) == 0x000061, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000D8, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000E0, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_IsValidClass_ReturnValue) == 0x000970, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000978, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x000980, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000988, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, K2Node_DynamicCast_bSuccess) == 0x000990, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000998, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, K2Node_DynamicCast_bSuccess_1) == 0x0009A8, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_SGK_DropItem_ReturnValue) == 0x0009A9, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_SGK_DropItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_IsValid_ReturnValue_2) == 0x0009AA, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0009B0, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_Add_VectorVector_ReturnValue) == 0x0009C8, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0009E0, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnDroppedItem, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000AC8, "Member 'BP_PlayerInventory_C_SpawnDroppedItem::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SpawnMainHand
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerInventory_C_SpawnMainHand final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SpawnMainHand) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_SpawnMainHand");
static_assert(sizeof(BP_PlayerInventory_C_SpawnMainHand) == 0x000090, "Wrong size on BP_PlayerInventory_C_SpawnMainHand");
static_assert(offsetof(BP_PlayerInventory_C_SpawnMainHand, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_SpawnMainHand::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnMainHand, CallFunc_Add_VectorVector_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_SpawnMainHand::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SpawnMainHand, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_SpawnMainHand::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SplitStack
// 0x03D8 (0x03D8 - 0x0000)
struct BP_PlayerInventory_C_SplitStack final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RemainingL;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2B[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x0018(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             RemainingItemL;                                    // 0x0068(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         SplitAmountL;                                      // 0x0098(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2C[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             ItemL;                                             // 0x00A0(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2D[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x00D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x012D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2E[0x2];                                     // 0x012E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E2F[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0138(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E30[0x2];                                     // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E31[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0198(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E32[0x6];                                     // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x01D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x01E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0238(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved;                       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E33[0x6];                                     // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0250(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0288(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound_1;              // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated_1;                 // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E34[0x6];                                     // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots_1;              // 0x02C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E35[0x7];                                     // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x02E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E36[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x0340(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved_1;                     // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0355(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound_2;              // 0x0356(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated_2;                 // 0x0357(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots_2;              // 0x0358(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0368(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_2;                   // 0x03B8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_MoveItem_ItemMoved_2;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E37[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SplitStack) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SplitStack");
static_assert(sizeof(BP_PlayerInventory_C_SplitStack) == 0x0003D8, "Wrong size on BP_PlayerInventory_C_SplitStack");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_SplitStack::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, RemainingL) == 0x000010, "Member 'BP_PlayerInventory_C_SplitStack::RemainingL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, InvSlotL) == 0x000018, "Member 'BP_PlayerInventory_C_SplitStack::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, RemainingItemL) == 0x000068, "Member 'BP_PlayerInventory_C_SplitStack::RemainingItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, SplitAmountL) == 0x000098, "Member 'BP_PlayerInventory_C_SplitStack::SplitAmountL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, ItemL) == 0x0000A0, "Member 'BP_PlayerInventory_C_SplitStack::ItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0000D0, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0000D8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, Temp_int_Variable) == 0x000128, "Member 'BP_PlayerInventory_C_SplitStack::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Conv_IntToByte_ReturnValue) == 0x00012C, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_GetValidValue_ReturnValue) == 0x00012D, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000138, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Greater_IntInt_ReturnValue) == 0x000181, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000184, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FMod_Remainder) == 0x000188, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FMod_ReturnValue) == 0x000190, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_NotificationDetails) == 0x000198, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_SpaceFound) == 0x0001D0, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_Rotated) == 0x0001D1, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_FoundSlots) == 0x0001D8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Array_Get_Item) == 0x0001E8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_InvSlotID) == 0x000238, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_MoveItem_ItemMoved) == 0x000248, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_MoveItem_ItemMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000249, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000250, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000288, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_SpaceFound_1) == 0x0002C0, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_SpaceFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_Rotated_1) == 0x0002C1, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_Rotated_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_FoundSlots_1) == 0x0002C8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x0002D8, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_DynamicCast_bSuccess) == 0x0002E0, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Array_Get_Item_1) == 0x0002E8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_MakeLiteralInt_ReturnValue) == 0x000338, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_InvSlotID_1) == 0x000340, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Subtract_IntInt_ReturnValue) == 0x000350, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_MoveItem_ItemMoved_1) == 0x000354, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_MoveItem_ItemMoved_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000355, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_SpaceFound_2) == 0x000356, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_SpaceFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_Rotated_2) == 0x000357, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_Rotated_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FindEmptySlots_FoundSlots_2) == 0x000358, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FindEmptySlots_FoundSlots_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_Array_Get_Item_2) == 0x000368, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, K2Node_MakeStruct_S_InvSlotID_2) == 0x0003B8, "Member 'BP_PlayerInventory_C_SplitStack::K2Node_MakeStruct_S_InvSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_MoveItem_ItemMoved_2) == 0x0003C8, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_MoveItem_ItemMoved_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SplitStack, CallFunc_FMod_Dividend_ImplicitCast) == 0x0003D0, "Member 'BP_PlayerInventory_C_SplitStack::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SprintCheck
// 0x0005 (0x0005 - 0x0000)
struct BP_PlayerInventory_C_SprintCheck final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SprintCheck) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_SprintCheck");
static_assert(sizeof(BP_PlayerInventory_C_SprintCheck) == 0x000005, "Wrong size on BP_PlayerInventory_C_SprintCheck");
static_assert(offsetof(BP_PlayerInventory_C_SprintCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_SprintCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SprintCheck, CallFunc_IsFalling_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_SprintCheck::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SprintCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_PlayerInventory_C_SprintCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SprintCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_PlayerInventory_C_SprintCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SprintCheck, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_PlayerInventory_C_SprintCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.StaminaStateCheck
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_StaminaStateCheck final
{
public:
	E_CharacterState                              State;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E38[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Min_Stamina;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanUseState;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_StaminaStateCheck) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_StaminaStateCheck");
static_assert(sizeof(BP_PlayerInventory_C_StaminaStateCheck) == 0x000018, "Wrong size on BP_PlayerInventory_C_StaminaStateCheck");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, State) == 0x000000, "Member 'BP_PlayerInventory_C_StaminaStateCheck::State' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, Min_Stamina) == 0x000008, "Member 'BP_PlayerInventory_C_StaminaStateCheck::Min_Stamina' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, CanUseState) == 0x000010, "Member 'BP_PlayerInventory_C_StaminaStateCheck::CanUseState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'BP_PlayerInventory_C_StaminaStateCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, CallFunc_Map_Find_Value) == 0x000012, "Member 'BP_PlayerInventory_C_StaminaStateCheck::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, CallFunc_Map_Find_ReturnValue) == 0x000013, "Member 'BP_PlayerInventory_C_StaminaStateCheck::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StaminaStateCheck, CallFunc_BooleanAND_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_StaminaStateCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.StartBleedDamage
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerInventory_C_StartBleedDamage final
{
public:
	int32                                         TickDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E39[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickTime;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BleedLength;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_StartBleedDamage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_StartBleedDamage");
static_assert(sizeof(BP_PlayerInventory_C_StartBleedDamage) == 0x000030, "Wrong size on BP_PlayerInventory_C_StartBleedDamage");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, TickDamage) == 0x000000, "Member 'BP_PlayerInventory_C_StartBleedDamage::TickDamage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, TickTime) == 0x000008, "Member 'BP_PlayerInventory_C_StartBleedDamage::TickTime' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, BleedLength) == 0x000010, "Member 'BP_PlayerInventory_C_StartBleedDamage::BleedLength' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_StartBleedDamage::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000020, "Member 'BP_PlayerInventory_C_StartBleedDamage::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000028, "Member 'BP_PlayerInventory_C_StartBleedDamage::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StartBleedDamage, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x00002C, "Member 'BP_PlayerInventory_C_StartBleedDamage::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.StarvationState
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerInventory_C_StarvationState final
{
public:
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_StarvationState) == 0x000001, "Wrong alignment on BP_PlayerInventory_C_StarvationState");
static_assert(sizeof(BP_PlayerInventory_C_StarvationState) == 0x000002, "Wrong size on BP_PlayerInventory_C_StarvationState");
static_assert(offsetof(BP_PlayerInventory_C_StarvationState, CallFunc_Greater_IntInt_ReturnValue) == 0x000000, "Member 'BP_PlayerInventory_C_StarvationState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StarvationState, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_StarvationState::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.StateTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_StateTimer final
{
public:
	double                                        CallFunc_ReturnStateValue_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_ReturnStateValue_Value_1;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_StateTimer) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_StateTimer");
static_assert(sizeof(BP_PlayerInventory_C_StateTimer) == 0x000010, "Wrong size on BP_PlayerInventory_C_StateTimer");
static_assert(offsetof(BP_PlayerInventory_C_StateTimer, CallFunc_ReturnStateValue_Value) == 0x000000, "Member 'BP_PlayerInventory_C_StateTimer::CallFunc_ReturnStateValue_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_StateTimer, CallFunc_ReturnStateValue_Value_1) == 0x000008, "Member 'BP_PlayerInventory_C_StateTimer::CallFunc_ReturnStateValue_Value_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SwapAttachments
// 0x0790 (0x0790 - 0x0000)
struct BP_PlayerInventory_C_SwapAttachments final
{
public:
	struct FS_AttachmentSlotID                    AttachmentID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckOnly;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SameInventoryL;                                    // 0x001A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3A[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      AttachmentSlotL;                                   // 0x0020(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3B[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0070(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x00C0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentDetails_Is_Attachment;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3C[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentDetails                   CallFunc_SGK_AttachmentDetails_Attachment_Details; // 0x0100(0x02A0)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x03A0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3D[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x03E0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x0430(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv;                // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3E[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_2;                     // 0x0488(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E3F[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_3;                     // 0x04E0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_1;              // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E40[0x6];                                     // 0x0532(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0538(0x0038)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0570(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x057C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E41[0x7];                                     // 0x0581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_RemoveAttachment_self_CastInput;      // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E42[0x3];                                     // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight_1;           // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E43[0x3];                                     // 0x05A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_4;                     // 0x05A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_5;                     // 0x05F8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_6;                     // 0x0648(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_2;              // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x069A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E44[0x1];                                     // 0x069B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x069C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_7;                     // 0x06A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemInParentInv_IsInInv_3;              // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid_1;           // 0x06F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E45[0x6];                                     // 0x06FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue_1;       // 0x0700(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_SelfItem_self_CastInput;              // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0758(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment; // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SwapAttachments) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_SwapAttachments");
static_assert(sizeof(BP_PlayerInventory_C_SwapAttachments) == 0x000790, "Wrong size on BP_PlayerInventory_C_SwapAttachments");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, AttachmentID) == 0x000000, "Member 'BP_PlayerInventory_C_SwapAttachments::AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, WeaponInventory) == 0x000010, "Member 'BP_PlayerInventory_C_SwapAttachments::WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CheckOnly) == 0x000018, "Member 'BP_PlayerInventory_C_SwapAttachments::CheckOnly' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, ReturnValue) == 0x000019, "Member 'BP_PlayerInventory_C_SwapAttachments::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, SameInventoryL) == 0x00001A, "Member 'BP_PlayerInventory_C_SwapAttachments::SameInventoryL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, AttachmentSlotL) == 0x000020, "Member 'BP_PlayerInventory_C_SwapAttachments::AttachmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BP_PlayerInventory_C_SwapAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SelectAttachmentItem_IsValid) == 0x00006C, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, Temp_int_Array_Index_Variable) == 0x0000BC, "Member 'BP_PlayerInventory_C_SwapAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_NotificationDetails) == 0x0000C0, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_AttachmentDetails_Is_Attachment) == 0x0000F8, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_AttachmentDetails_Is_Attachment' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_AttachmentDetails_Attachment_Details) == 0x000100, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_AttachmentDetails_Attachment_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0003A0, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x0003D8, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot) == 0x0003E0, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_1) == 0x000430, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsItemInParentInv_IsInInv) == 0x000480, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsItemInParentInv_IsInInv' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_2) == 0x000488, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsValid_ReturnValue) == 0x0004D8, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_3) == 0x0004E0, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsItemInParentInv_IsInInv_1) == 0x000530, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsItemInParentInv_IsInInv_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Not_PreBool_ReturnValue) == 0x000531, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000538, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Array_Get_Item) == 0x000570, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Array_Length_ReturnValue) == 0x000578, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Array_Length_ReturnValue_1) == 0x00057C, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x000580, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_RemoveAttachment_self_CastInput) == 0x000588, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_RemoveAttachment_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, Temp_int_Loop_Counter_Variable_1) == 0x000598, "Member 'BP_PlayerInventory_C_SwapAttachments::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Less_IntInt_ReturnValue_1) == 0x00059C, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Add_IntInt_ReturnValue_1) == 0x0005A0, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_WeightCheck_ExceedsMaxWeight_1) == 0x0005A4, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_WeightCheck_ExceedsMaxWeight_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_4) == 0x0005A8, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_5) == 0x0005F8, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_6) == 0x000648, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsItemInParentInv_IsInInv_2) == 0x000698, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsItemInParentInv_IsInInv_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsValid_ReturnValue_1) == 0x000699, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00069A, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, Temp_int_Array_Index_Variable_1) == 0x00069C, "Member 'BP_PlayerInventory_C_SwapAttachments::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_Array_Get_Item_1) == 0x0006A0, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, K2Node_MakeStruct_S_InvSlot_7) == 0x0006A8, "Member 'BP_PlayerInventory_C_SwapAttachments::K2Node_MakeStruct_S_InvSlot_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_IsItemInParentInv_IsInInv_3) == 0x0006F8, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_IsItemInParentInv_IsInInv_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SelectAttachmentItem_IsValid_1) == 0x0006F9, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SelectAttachmentItem_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SelectAttachmentItem_ReturnValue_1) == 0x000700, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SelectAttachmentItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_SelfItem_self_CastInput) == 0x000748, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_SelfItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_SelfItem_SelfItem) == 0x000758, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapAttachments, CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment) == 0x000788, "Member 'BP_PlayerInventory_C_SwapAttachments::CallFunc_SGK_AttachmentCompatibilityCheck_AllowAttachment' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SwapEquipmentSlots
// 0x0E10 (0x0E10 - 0x0000)
struct BP_PlayerInventory_C_SwapEquipmentSlots final
{
public:
	struct FS_EquipmentSlotID                     StartEquipmentSlotID;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EndEquipmentSlotID;                                // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       EndTempL;                                          // 0x0020(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       StartTempL;                                        // 0x0068(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       EndEquipSlotL;                                     // 0x00B0(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       StartEquipSlotL;                                   // 0x00F8(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E46[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0160(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E47[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_1;             // 0x0178(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped_1;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E48[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_2;             // 0x0190(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_3;             // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E49[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4A[0x1];                                     // 0x01C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x01C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4B[0x6];                                     // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x01E0(0x0170)(HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0351(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4C[0xE];                                     // 0x0352(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0360(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1; // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4D[0x7];                                     // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1; // 0x0BF8(0x0170)(HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_4;             // 0x0D68(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4E[0x7];                                     // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0D80(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_1;        // 0x0DC8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SwapEquipmentSlots) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_SwapEquipmentSlots");
static_assert(sizeof(BP_PlayerInventory_C_SwapEquipmentSlots) == 0x000E10, "Wrong size on BP_PlayerInventory_C_SwapEquipmentSlots");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, StartEquipmentSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::StartEquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, EndEquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::EndEquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, EndTempL) == 0x000020, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::EndTempL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, StartTempL) == 0x000068, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::StartTempL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, EndEquipSlotL) == 0x0000B0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::EndEquipSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, StartEquipSlotL) == 0x0000F8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::StartEquipSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, Temp_int_Loop_Counter_Variable) == 0x000140, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, Temp_int_Array_Index_Variable) == 0x000148, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, Temp_int_Array_Index_Variable_1) == 0x00014C, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, Temp_int_Loop_Counter_Variable_1) == 0x000150, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000154, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000158, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000160, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_EquipItem_ItemEquipped) == 0x000170, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, K2Node_MakeStruct_S_EquipmentSlotID_1) == 0x000178, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::K2Node_MakeStruct_S_EquipmentSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_EquipItem_ItemEquipped_1) == 0x000188, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_EquipItem_ItemEquipped_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, K2Node_MakeStruct_S_EquipmentSlotID_2) == 0x000190, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::K2Node_MakeStruct_S_EquipmentSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, K2Node_MakeStruct_S_EquipmentSlotID_3) == 0x0001A0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::K2Node_MakeStruct_S_EquipmentSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Array_Get_Item) == 0x0001B8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Array_Length_ReturnValue) == 0x0001C0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0001C4, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001C5, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_IsValid_ReturnValue_1) == 0x0001C6, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Array_Get_Item_1) == 0x0001C8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Array_Length_ReturnValue_1) == 0x0001D0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001D4, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001D5, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_IsValid_ReturnValue_2) == 0x0001D6, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_IsValid_ReturnValue_3) == 0x0001D7, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0001D8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x0001D9, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x0001E0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Set_Contains_ReturnValue) == 0x000350, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemDetails_ItemFound) == 0x000351, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000360, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1) == 0x000BF0, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1) == 0x000BF8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, K2Node_MakeStruct_S_EquipmentSlotID_4) == 0x000D68, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::K2Node_MakeStruct_S_EquipmentSlotID_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_Set_Contains_ReturnValue_1) == 0x000D78, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000D80, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapEquipmentSlots, CallFunc_SelectEquipmentSlot_ReturnValue_1) == 0x000DC8, "Member 'BP_PlayerInventory_C_SwapEquipmentSlots::CallFunc_SelectEquipmentSlot_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.SwapWeaponSlots
// 0x2D30 (0x2D30 - 0x0000)
struct BP_PlayerInventory_C_SwapWeaponSlots final
{
public:
	struct FS_WeaponSlotID                        StartWeaponSlotID;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        EndWeaponSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          EndWeaponSlotL;                                    // 0x0020(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          StartWeaponSlotL;                                  // 0x0070(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4F[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E50[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory_1;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E51[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory_2;        // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E52[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E53[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh;                         // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E54[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0120(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E55[0x3];                                     // 0x09B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x09B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x09BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E56[0x3];                                     // 0x09BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x09C0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E57[0x7];                                     // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1;  // 0x09D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E58[0x6];                                     // 0x09EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x09F0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh_1;                       // 0x1280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x1288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E59[0x7];                                     // 0x1291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x1298(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5A[0x7];                                     // 0x12A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x12B0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_3;              // 0x1B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5B[0xF];                                     // 0x1B41(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_3;            // 0x1B50(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x23E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_4;              // 0x23E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5C[0xE];                                     // 0x23E2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_4;            // 0x23F0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x2C80(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue_1;               // 0x2CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5D[0x7];                                     // 0x2CD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x2CD8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_SwapWeaponSlots) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_SwapWeaponSlots");
static_assert(sizeof(BP_PlayerInventory_C_SwapWeaponSlots) == 0x002D30, "Wrong size on BP_PlayerInventory_C_SwapWeaponSlots");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, StartWeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::StartWeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, EndWeaponSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::EndWeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, EndWeaponSlotL) == 0x000020, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::EndWeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, StartWeaponSlotL) == 0x000070, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::StartWeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x0000C8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_AsBP_Player_Inventory_1) == 0x0000D8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_AsBP_Player_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_AsBP_Player_Inventory_2) == 0x0000E8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_AsBP_Player_Inventory_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_bSuccess_2) == 0x0000F0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x0000F8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_bSuccess_3) == 0x000108, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_GetMesh_Mesh) == 0x000110, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_GetMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemFound) == 0x000118, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000120, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_IsValid_ReturnValue_1) == 0x0009B0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Map_Find_Value) == 0x0009B4, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Map_Find_ReturnValue) == 0x0009BC, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_MakeStruct_S_WeaponSlotID) == 0x0009C0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_IsValid_ReturnValue_2) == 0x0009D0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1) == 0x0009D8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_DynamicCast_bSuccess_4) == 0x0009E8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x0009E9, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x0009F0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_GetMesh_Mesh_1) == 0x001280, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_GetMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Map_Find_Value_1) == 0x001288, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Map_Find_ReturnValue_1) == 0x001290, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x001298, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x0012A8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x0012B0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemFound_3) == 0x001B40, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemFound_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemDetails_3) == 0x001B50, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Set_Contains_ReturnValue) == 0x0023E0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemFound_4) == 0x0023E1, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemFound_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SGK_ItemDetails_ItemDetails_4) == 0x0023F0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SGK_ItemDetails_ItemDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x002C80, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_Set_Contains_ReturnValue_1) == 0x002CD0, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_Set_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_SwapWeaponSlots, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x002CD8, "Member 'BP_PlayerInventory_C_SwapWeaponSlots::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.TakeDamage
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerInventory_C_TakeDamage final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInNoDamageZone_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5F[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ArmourDamageReduction_FinalDamage;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_TakeDamage) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_TakeDamage");
static_assert(sizeof(BP_PlayerInventory_C_TakeDamage) == 0x000018, "Wrong size on BP_PlayerInventory_C_TakeDamage");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, Damage) == 0x000000, "Member 'BP_PlayerInventory_C_TakeDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, DamageType) == 0x000004, "Member 'BP_PlayerInventory_C_TakeDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, HitBox) == 0x000005, "Member 'BP_PlayerInventory_C_TakeDamage::HitBox' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, NewLocalVar_0) == 0x000008, "Member 'BP_PlayerInventory_C_TakeDamage::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, CallFunc_IsInNoDamageZone_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_TakeDamage::CallFunc_IsInNoDamageZone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000011, "Member 'BP_PlayerInventory_C_TakeDamage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, CallFunc_IsValid_ReturnValue) == 0x000012, "Member 'BP_PlayerInventory_C_TakeDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_TakeDamage, CallFunc_ArmourDamageReduction_FinalDamage) == 0x000014, "Member 'BP_PlayerInventory_C_TakeDamage::CallFunc_ArmourDamageReduction_FinalDamage' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ThirstState
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerInventory_C_ThirstState final
{
public:
	double                                        CallFunc_ReturnStateValue_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ThirstState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ThirstState");
static_assert(sizeof(BP_PlayerInventory_C_ThirstState) == 0x000008, "Wrong size on BP_PlayerInventory_C_ThirstState");
static_assert(offsetof(BP_PlayerInventory_C_ThirstState, CallFunc_ReturnStateValue_Value) == 0x000000, "Member 'BP_PlayerInventory_C_ThirstState::CallFunc_ReturnStateValue_Value' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.ToggleBuildPartNameUI
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerInventory_C_ToggleBuildPartNameUI final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E60[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_3;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_4;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_5;        // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_ToggleBuildPartNameUI) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_ToggleBuildPartNameUI");
static_assert(sizeof(BP_PlayerInventory_C_ToggleBuildPartNameUI) == 0x000038, "Wrong size on BP_PlayerInventory_C_ToggleBuildPartNameUI");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, Open) == 0x000000, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::Open' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue_1) == 0x000010, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue_2) == 0x000018, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue_3) == 0x000020, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue_4) == 0x000028, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_ToggleBuildPartNameUI, CallFunc_GetPlayerController_ReturnValue_5) == 0x000030, "Member 'BP_PlayerInventory_C_ToggleBuildPartNameUI::CallFunc_GetPlayerController_ReturnValue_5' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UnequipItem
// 0x0C70 (0x0C70 - 0x0000)
struct BP_PlayerInventory_C_UnequipItem final
{
public:
	struct FS_InvSlotID                           EndSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyItem;                                       // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E61[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  UsingPlayerL;                                      // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             EndInvSlotL;                                       // 0x0030(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       EquipmentSlotL;                                    // 0x0080(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00C8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_SpaceFound;  // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_Rotation;    // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E62[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SearchEquipmentForEmptySlots_FoundSlots;  // 0x0118(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E63[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0130(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0180(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x01B8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E64[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x01F8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E65[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x0238(0x0038)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E66[0x6];                                     // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x0280(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x02B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E67[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_4;         // 0x02C8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0302(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0303(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0306(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped;           // 0x0307(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParentInventoryCheck_AllowAdd;            // 0x030A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E68[0x5];                                     // 0x030B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToContainer_RemainingItem;         // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E69[0x2];                                     // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItemToContainer_InvItem;               // 0x0320(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6A[0xF];                                     // 0x0351(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0360(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0BF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0BF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x0BF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x0BFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6B[0x3];                                     // 0x0BFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x0C00(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6C[0x7];                                     // 0x0C11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0C18(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0C68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UnequipItem) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UnequipItem");
static_assert(sizeof(BP_PlayerInventory_C_UnequipItem) == 0x000C70, "Wrong size on BP_PlayerInventory_C_UnequipItem");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, EndSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UnequipItem::EndSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, EquipmentSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_UnequipItem::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_UnequipItem::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_UnequipItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, DestroyItem) == 0x000022, "Member 'BP_PlayerInventory_C_UnequipItem::DestroyItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, RotatedL) == 0x000023, "Member 'BP_PlayerInventory_C_UnequipItem::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, UsingPlayerL) == 0x000028, "Member 'BP_PlayerInventory_C_UnequipItem::UsingPlayerL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, EndInvSlotL) == 0x000030, "Member 'BP_PlayerInventory_C_UnequipItem::EndInvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, EquipmentSlotL) == 0x000080, "Member 'BP_PlayerInventory_C_UnequipItem::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000C8, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000110, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000111, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SearchEquipmentForEmptySlots_SpaceFound) == 0x000112, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SearchEquipmentForEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SearchEquipmentForEmptySlots_Rotation) == 0x000113, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SearchEquipmentForEmptySlots_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SearchEquipmentForEmptySlots_FoundSlots) == 0x000118, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SearchEquipmentForEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_Array_Get_Item) == 0x000130, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, K2Node_MakeStruct_S_NotificationDetails) == 0x000180, "Member 'BP_PlayerInventory_C_UnequipItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, K2Node_MakeStruct_S_NotificationDetails_1) == 0x0001B8, "Member 'BP_PlayerInventory_C_UnequipItem::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x0001F0, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, K2Node_MakeStruct_S_NotificationDetails_2) == 0x0001F8, "Member 'BP_PlayerInventory_C_UnequipItem::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_1) == 0x000230, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, Temp_int_Array_Index_Variable) == 0x000234, "Member 'BP_PlayerInventory_C_UnequipItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, K2Node_MakeStruct_S_NotificationDetails_3) == 0x000238, "Member 'BP_PlayerInventory_C_UnequipItem::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, Temp_int_Loop_Counter_Variable) == 0x000270, "Member 'BP_PlayerInventory_C_UnequipItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_Add_IntInt_ReturnValue) == 0x000274, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_BooleanOR_ReturnValue) == 0x000278, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_AttemptToAddItem_RemainingItem) == 0x000279, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x000280, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_AttemptToAddItem_NewItemSlot) == 0x0002B0, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_2) == 0x0002C0, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, K2Node_MakeStruct_S_NotificationDetails_4) == 0x0002C8, "Member 'BP_PlayerInventory_C_UnequipItem::K2Node_MakeStruct_S_NotificationDetails_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000300, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_3) == 0x000301, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_4) == 0x000302, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_5) == 0x000303, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000304, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000305, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_6) == 0x000306, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsInventoryEquipped_IsEquipped) == 0x000307, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsInventoryEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_BooleanOR_ReturnValue_1) == 0x000308, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_7) == 0x000309, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_ParentInventoryCheck_AllowAdd) == 0x00030A, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_ParentInventoryCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_Array_Get_Item_1) == 0x000310, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_Array_Length_ReturnValue) == 0x000318, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_Less_IntInt_ReturnValue) == 0x00031C, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_AddItemToContainer_RemainingItem) == 0x00031D, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_AddItemToContainer_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_AddItemToContainer_InvItem) == 0x000320, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_AddItemToContainer_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000350, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000360, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000BF0, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000BF1, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_8) == 0x000BF2, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_IsValid_ReturnValue_9) == 0x000BF3, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_ItemSize_Height) == 0x000BF4, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_ItemSize_Width) == 0x000BF8, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x000BFC, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x000C00, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000C10, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000C18, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipItem, CallFunc_BooleanOR_ReturnValue_2) == 0x000C68, "Member 'BP_PlayerInventory_C_UnequipItem::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UnequipWeapon
// 0x1570 (0x1570 - 0x0000)
struct BP_PlayerInventory_C_UnequipWeapon final
{
public:
	struct FS_InvSlotID                           EndInvSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          DropItem;                                          // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroy;                                           // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DroppedL;                                          // 0x0023(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6D[0xB];                                     // 0x0025(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         WeaponDetailsL;                                    // 0x0030(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             EndInvSlotL;                                       // 0x08C0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          FoundWeaponSlotL;                                  // 0x0910(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0960(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x09B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnterCombatMode_Finished1;                // 0x09BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6E[0x5];                                     // 0x09BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x09C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E6F[0x7];                                     // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E70[0x6];                                     // 0x09EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x09F0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0A00(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E71[0x7];                                     // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0A40(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E72[0x7];                                     // 0x0A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_SpaceFound;  // 0x0A8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchEquipmentForEmptySlots_Rotation;    // 0x0A8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E73[0x4];                                     // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SearchEquipmentForEmptySlots_FoundSlots;  // 0x0A90(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_PlayerInventory_C*                  Temp_object_Variable;                              // 0x0AA0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0AA8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0AF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0AF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E74[0x6];                                     // 0x0AFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_Select_Default;                             // 0x0B00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E75[0x7];                                     // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0B10(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0B4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E76[0x3];                                     // 0x0B4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B50(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x13E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x13E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E77[0x6];                                     // 0x13E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_DestroyWeaponAttachments_self_CastInput; // 0x13E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x13F8(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HoldingWeaponCheck_ReturnValue;           // 0x1431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HoldingWeaponCheck_ReturnValue_1;         // 0x1432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E78[0x1];                                     // 0x1433(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x1434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x1438(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x1468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E79[0x7];                                     // 0x1469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x1470(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x14A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x14A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7A[0x2];                                     // 0x14A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x14A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x14A8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKHoldableInterface_C> K2Node_DynamicCast_AsBP_SGKHoldable_Interface;     // 0x14B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x14C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x14C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x14CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToContainer_RemainingItem;         // 0x14CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7B[0x4];                                     // 0x14CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItemToContainer_InvItem;               // 0x14D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ParentInventoryCheck_AllowAdd;            // 0x1500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x1501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7C[0x6];                                     // 0x1502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x1508(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x1518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7D[0x7];                                     // 0x1519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x1520(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UnequipWeapon) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UnequipWeapon");
static_assert(sizeof(BP_PlayerInventory_C_UnequipWeapon) == 0x001570, "Wrong size on BP_PlayerInventory_C_UnequipWeapon");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, EndInvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UnequipWeapon::EndInvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, WeaponSlotID) == 0x000010, "Member 'BP_PlayerInventory_C_UnequipWeapon::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, DropItem) == 0x000020, "Member 'BP_PlayerInventory_C_UnequipWeapon::DropItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Rotated) == 0x000021, "Member 'BP_PlayerInventory_C_UnequipWeapon::Rotated' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Destroy) == 0x000022, "Member 'BP_PlayerInventory_C_UnequipWeapon::Destroy' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, DroppedL) == 0x000023, "Member 'BP_PlayerInventory_C_UnequipWeapon::DroppedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, RotatedL) == 0x000024, "Member 'BP_PlayerInventory_C_UnequipWeapon::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, WeaponDetailsL) == 0x000030, "Member 'BP_PlayerInventory_C_UnequipWeapon::WeaponDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, EndInvSlotL) == 0x0008C0, "Member 'BP_PlayerInventory_C_UnequipWeapon::EndInvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, FoundWeaponSlotL) == 0x000910, "Member 'BP_PlayerInventory_C_UnequipWeapon::FoundWeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000960, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x0009B0, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_bSuccess) == 0x0009B8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_SwitchEnum_CmpSuccess) == 0x0009B9, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_EnterCombatMode_Finished1) == 0x0009BA, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_EnterCombatMode_Finished1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_GetGameMode_ReturnValue) == 0x0009C0, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0009C8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_bSuccess_1) == 0x0009D8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0009E0, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_BooleanOR_ReturnValue) == 0x0009E8, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0009E9, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_WeaponSlotID) == 0x0009F0, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_NotificationDetails) == 0x000A00, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x000A38, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000A40, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue) == 0x000A78, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x000A80, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_bSuccess_2) == 0x000A88, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A89, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SearchEquipmentForEmptySlots_SpaceFound) == 0x000A8A, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SearchEquipmentForEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SearchEquipmentForEmptySlots_Rotation) == 0x000A8B, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SearchEquipmentForEmptySlots_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SearchEquipmentForEmptySlots_FoundSlots) == 0x000A90, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SearchEquipmentForEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Temp_object_Variable) == 0x000AA0, "Member 'BP_PlayerInventory_C_UnequipWeapon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_Array_Get_Item) == 0x000AA8, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000AF8, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Temp_bool_Variable) == 0x000AF9, "Member 'BP_PlayerInventory_C_UnequipWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_Select_Default) == 0x000B00, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_1) == 0x000B08, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000B10, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000B48, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000B49, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_BooleanOR_ReturnValue_1) == 0x000B4A, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_2) == 0x000B4B, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B4C, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B50, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_3) == 0x0013E0, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_4) == 0x0013E1, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_DestroyWeaponAttachments_self_CastInput) == 0x0013E8, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_DestroyWeaponAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_NotificationDetails_3) == 0x0013F8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x001430, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_HoldingWeaponCheck_ReturnValue) == 0x001431, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_HoldingWeaponCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_HoldingWeaponCheck_ReturnValue_1) == 0x001432, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_HoldingWeaponCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Temp_int_Variable) == 0x001434, "Member 'BP_PlayerInventory_C_UnequipWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_InvSlotItem_InvItem) == 0x001438, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x001468, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x001470, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, Temp_bool_Variable_1) == 0x0014A0, "Member 'BP_PlayerInventory_C_UnequipWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x0014A1, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_Select_Default_1) == 0x0014A4, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0014A8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_AsBP_SGKHoldable_Interface) == 0x0014B8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_AsBP_SGKHoldable_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, K2Node_DynamicCast_bSuccess_3) == 0x0014C8, "Member 'BP_PlayerInventory_C_UnequipWeapon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_5) == 0x0014C9, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_IsValid_ReturnValue_6) == 0x0014CA, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_AddItemToContainer_RemainingItem) == 0x0014CB, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_AddItemToContainer_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_AddItemToContainer_InvItem) == 0x0014D0, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_AddItemToContainer_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_ParentInventoryCheck_AllowAdd) == 0x001500, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_ParentInventoryCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x001501, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x001508, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_GetInvSlot_SlotFound) == 0x001518, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnequipWeapon, CallFunc_SGK_GetInvSlot_InvSlot) == 0x001520, "Member 'BP_PlayerInventory_C_UnequipWeapon::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UnHoldItem
// 0x0460 (0x0460 - 0x0000)
struct BP_PlayerInventory_C_UnHoldItem final
{
public:
	bool                                          Force;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     HoldableDetailsL;                                  // 0x0008(0x0150)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E7F[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_3;            // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindMontage_AnimFound;                    // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E80[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_FindMontage_Montage;                      // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E81[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails; // 0x0180(0x0150)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E82[0x6];                                     // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x02D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound_1;      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E83[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1; // 0x0310(0x0150)(HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UnHoldItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UnHoldItem");
static_assert(sizeof(BP_PlayerInventory_C_UnHoldItem) == 0x000460, "Wrong size on BP_PlayerInventory_C_UnHoldItem");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, Force) == 0x000000, "Member 'BP_PlayerInventory_C_UnHoldItem::Force' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, HoldableDetailsL) == 0x000008, "Member 'BP_PlayerInventory_C_UnHoldItem::HoldableDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000158, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000159, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_IsValid_ReturnValue) == 0x00015A, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_IsValid_ReturnValue_1) == 0x00015B, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000160, "Member 'BP_PlayerInventory_C_UnHoldItem::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, K2Node_DynamicCast_bSuccess) == 0x000168, "Member 'BP_PlayerInventory_C_UnHoldItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x000169, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_NotEqual_IntInt_ReturnValue_3) == 0x00016A, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_NotEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_FindMontage_AnimFound) == 0x00016B, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_FindMontage_AnimFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_FindMontage_Montage) == 0x000170, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_FindMontage_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_SGK_ItemHoldableDetails_ItemFound) == 0x000178, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_SGK_ItemHoldableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails) == 0x000180, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_IsValid_ReturnValue_2) == 0x0002D0, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_IsValid_ReturnValue_3) == 0x0002D1, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x0002D8, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_SGK_ItemHoldableDetails_ItemFound_1) == 0x000308, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_SGK_ItemHoldableDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UnHoldItem, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1) == 0x000310, "Member 'BP_PlayerInventory_C_UnHoldItem::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateDetails
// 0x0078 (0x0078 - 0x0000)
struct BP_PlayerInventory_C_UpdateDetails final
{
public:
	struct FS_ContainerDetails                    Param_InventoryDetails;                            // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateDetails) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateDetails");
static_assert(sizeof(BP_PlayerInventory_C_UpdateDetails) == 0x000078, "Wrong size on BP_PlayerInventory_C_UpdateDetails");
static_assert(offsetof(BP_PlayerInventory_C_UpdateDetails, Param_InventoryDetails) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateDetails::Param_InventoryDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateDetails, Param_Inventory) == 0x000070, "Member 'BP_PlayerInventory_C_UpdateDetails::Param_Inventory' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateEquipmentSlotWidget
// 0x0090 (0x0090 - 0x0000)
struct BP_PlayerInventory_C_UpdateEquipmentSlotWidget final
{
public:
	struct FS_EquipmentSlot                       EquipmentSlot;                                     // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UWidget*>                        FoundChildrenL;                                    // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E84[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E85[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E86[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_EquipmentSlot_C*                    K2Node_DynamicCast_AsBP_Equipment_Slot;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E87[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateEquipmentSlotWidget");
static_assert(sizeof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget) == 0x000090, "Wrong size on BP_PlayerInventory_C_UpdateEquipmentSlotWidget");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, EquipmentSlot) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, FoundChildrenL) == 0x000048, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::FoundChildrenL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, Temp_bool_True_if_break_was_hit_Variable) == 0x000058, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000060, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, K2Node_DynamicCast_AsBP_Equipment_Slot) == 0x000078, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::K2Node_DynamicCast_AsBP_Equipment_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00008B, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateEquipmentSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00008C, "Member 'BP_PlayerInventory_C_UpdateEquipmentSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateItemQuickSlot
// 0x0120 (0x0120 - 0x0000)
struct BP_PlayerInventory_C_UpdateItemQuickSlot final
{
public:
	struct FS_InvSlotID                           Slot_ID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E88[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x0018(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x0068(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E89[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x00C0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x00F0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateItemQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateItemQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_UpdateItemQuickSlot) == 0x000120, "Wrong size on BP_PlayerInventory_C_UpdateItemQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, QuickSlotIndex) == 0x000010, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, InvSlotL) == 0x000018, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x000068, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, CallFunc_SGK_InvSlotItem_InvItem) == 0x0000C0, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemQuickSlot, K2Node_SetFieldsInStruct_StructOut) == 0x0000F0, "Member 'BP_PlayerInventory_C_UpdateItemQuickSlot::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateItemUseAmount
// 0x11E0 (0x11E0 - 0x0000)
struct BP_PlayerInventory_C_UpdateItemUseAmount final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Change_Amount;                                     // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemEmpty;                                         // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8A[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             ItemOut;                                           // 0x0038(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         Pad_1E8B[0x8];                                     // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0070(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x0900(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8C[0xF];                                     // 0x0931(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0940(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x11D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x11D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x11D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8D[0x2];                                     // 0x11D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x11D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x11DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateItemUseAmount) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UpdateItemUseAmount");
static_assert(sizeof(BP_PlayerInventory_C_UpdateItemUseAmount) == 0x0011E0, "Wrong size on BP_PlayerInventory_C_UpdateItemUseAmount");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, Item) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, Change_Amount) == 0x000030, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::Change_Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, ItemEmpty) == 0x000034, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::ItemEmpty' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, ItemOut) == 0x000038, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::ItemOut' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, ItemDetailsL) == 0x000070, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, ItemL) == 0x000900, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::ItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_SGK_ItemDetails_ItemFound) == 0x000930, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000940, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_Add_IntInt_ReturnValue) == 0x0011D0, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x0011D4, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0011D5, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x0011D8, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateItemUseAmount, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0011DC, "Member 'BP_PlayerInventory_C_UpdateItemUseAmount::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateMaxMovementSpeed
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerInventory_C_UpdateMaxMovementSpeed final
{
public:
	E_CharacterState                              CharacterState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8E[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E8F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateMaxMovementSpeed) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateMaxMovementSpeed");
static_assert(sizeof(BP_PlayerInventory_C_UpdateMaxMovementSpeed) == 0x000028, "Wrong size on BP_PlayerInventory_C_UpdateMaxMovementSpeed");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CharacterState) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CharacterState' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_Map_Find_Value_1) == 0x000018, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateMaxMovementSpeed, CallFunc_Map_Find_ReturnValue_1) == 0x000020, "Member 'BP_PlayerInventory_C_UpdateMaxMovementSpeed::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateQuickSlotItem
// 0x0088 (0x0088 - 0x0000)
struct BP_PlayerInventory_C_UpdateQuickSlotItem final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlot;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E90[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_QuickSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInventoryEquipped_IsEquipped;           // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E91[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateQuickSlotItem) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateQuickSlotItem");
static_assert(sizeof(BP_PlayerInventory_C_UpdateQuickSlotItem) == 0x000088, "Wrong size on BP_PlayerInventory_C_UpdateQuickSlotItem");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, QuickSlot) == 0x000010, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::QuickSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x000018, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_IsInventoryEquipped_IsEquipped) == 0x000071, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_IsInventoryEquipped_IsEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_BooleanOR_ReturnValue) == 0x000072, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotItem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'BP_PlayerInventory_C_UpdateQuickSlotItem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateQuickSlotWeapon
// 0x0920 (0x0920 - 0x0000)
struct BP_PlayerInventory_C_UpdateQuickSlotWeapon final
{
public:
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlot;                                         // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E92[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        QuickSlotL;                                        // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E93[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_QuickSlot_C*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0030(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E94[0xF];                                     // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0090(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateQuickSlotWeapon) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UpdateQuickSlotWeapon");
static_assert(sizeof(BP_PlayerInventory_C_UpdateQuickSlotWeapon) == 0x000920, "Wrong size on BP_PlayerInventory_C_UpdateQuickSlotWeapon");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, WeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, QuickSlot) == 0x000010, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::QuickSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, QuickSlotL) == 0x000018, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000021, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000030, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_SGK_ItemDetails_ItemFound) == 0x000080, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateQuickSlotWeapon, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000090, "Member 'BP_PlayerInventory_C_UpdateQuickSlotWeapon::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateWeaponQuickSlot
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerInventory_C_UpdateWeaponQuickSlot final
{
public:
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E95[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateWeaponQuickSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateWeaponQuickSlot");
static_assert(sizeof(BP_PlayerInventory_C_UpdateWeaponQuickSlot) == 0x000068, "Wrong size on BP_PlayerInventory_C_UpdateWeaponQuickSlot");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponQuickSlot, Weapon_Slot_ID) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateWeaponQuickSlot::Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponQuickSlot, QuickSlotIndex) == 0x000010, "Member 'BP_PlayerInventory_C_UpdateWeaponQuickSlot::QuickSlotIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponQuickSlot, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000018, "Member 'BP_PlayerInventory_C_UpdateWeaponQuickSlot::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UpdateWeaponSlotWidget
// 0x00A8 (0x00A8 - 0x0000)
struct BP_PlayerInventory_C_UpdateWeaponSlotWidget final
{
public:
	struct FS_WeaponSlot                          WeaponSlot;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<class UWidget*>                        FoundChildrenL;                                    // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E96[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E97[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E98[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0078(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E99[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponSlot_C*                       K2Node_DynamicCast_AsBP_Weapon_Slot;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UpdateWeaponSlotWidget) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UpdateWeaponSlotWidget");
static_assert(sizeof(BP_PlayerInventory_C_UpdateWeaponSlotWidget) == 0x0000A8, "Wrong size on BP_PlayerInventory_C_UpdateWeaponSlotWidget");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, WeaponSlot) == 0x000000, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, FoundChildrenL) == 0x000050, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::FoundChildrenL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, Temp_bool_True_if_break_was_hit_Variable) == 0x000060, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_IsValid_ReturnValue) == 0x000074, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000075, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, K2Node_MakeStruct_S_WeaponSlotID) == 0x000078, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, K2Node_DynamicCast_AsBP_Weapon_Slot) == 0x000098, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::K2Node_DynamicCast_AsBP_Weapon_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000A3, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A4, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A5, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x0000A6, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UpdateWeaponSlotWidget, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x0000A7, "Member 'BP_PlayerInventory_C_UpdateWeaponSlotWidget::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UseInventoryAction
// 0x1F30 (0x1F30 - 0x0000)
struct BP_PlayerInventory_C_UseInventoryAction final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantPlacement;                                  // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RecipeLearntL;                                     // 0x0052(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9A[0x1];                                     // 0x0053(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         QuickSlotL;                                        // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9B[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0060(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ConsumedItemL;                                     // 0x08F0(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             InvItemL;                                          // 0x0920(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0950(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ConsumeItem_Consumed;                     // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x0981(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9C[0x6];                                     // 0x0982(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x0988(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound_1;    // 0x09C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9D[0x7];                                     // 0x09C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails_1;  // 0x09D0(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0A15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9E[0x2];                                     // 0x0A16(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0A18(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0A49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0A4A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0A4B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemBuildPartDetails_ItemFound;       // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9F[0x3];                                     // 0x0A4D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_BuildPartDetails                    CallFunc_SGK_ItemBuildPartDetails_Build_Part_Details; // 0x0A50(0x00E8)(HasGetValueTypeHash)
	bool                                          CallFunc_LearnAllItemRecipes_RecipeLearnt;         // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA0[0x3];                                     // 0x0B39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0B40(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0B50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA1[0x3];                                     // 0x0B51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA2[0x3];                                     // 0x0B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToEquipItem_ItemEquipped;          // 0x0B61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA3[0x6];                                     // 0x0B62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_2;                // 0x0B68(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA4[0x7];                                     // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0BA0(0x0170)(HasGetValueTypeHash)
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0D14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA5[0x3];                                     // 0x0D15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x0D18(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0D28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA6[0x7];                                     // 0x0D29(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0D30(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_FindCompatiableWeaponSlot_ReturnValue;    // 0x15C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 CallFunc_FindCompatiableWeaponSlot_Slot;           // 0x15C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA7[0x6];                                     // 0x15C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x15C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x1618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA8[0x7];                                     // 0x1619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x1620(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToHoldItem_ItemHeld;               // 0x1630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EA9[0x7];                                     // 0x1631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_2;                   // 0x1638(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid_1;            // 0x1648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAA[0x3];                                     // 0x1649(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount_1;               // 0x164C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x1650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x1651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAB[0xE];                                     // 0x1652(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x1660(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x1EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateItemUseAmount_ItemEmpty;            // 0x1EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAC[0x6];                                     // 0x1EF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_UpdateItemUseAmount_ItemOut;              // 0x1EF8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ItemActionCheck_AllowUse;                 // 0x1F28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x1F29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UseInventoryAction) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UseInventoryAction");
static_assert(sizeof(BP_PlayerInventory_C_UseInventoryAction) == 0x001F30, "Wrong size on BP_PlayerInventory_C_UseInventoryAction");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, InvSlot) == 0x000000, "Member 'BP_PlayerInventory_C_UseInventoryAction::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, Action) == 0x000050, "Member 'BP_PlayerInventory_C_UseInventoryAction::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, InstantPlacement) == 0x000051, "Member 'BP_PlayerInventory_C_UseInventoryAction::InstantPlacement' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, RecipeLearntL) == 0x000052, "Member 'BP_PlayerInventory_C_UseInventoryAction::RecipeLearntL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, QuickSlotL) == 0x000054, "Member 'BP_PlayerInventory_C_UseInventoryAction::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, ItemDetailsL) == 0x000060, "Member 'BP_PlayerInventory_C_UseInventoryAction::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, ConsumedItemL) == 0x0008F0, "Member 'BP_PlayerInventory_C_UseInventoryAction::ConsumedItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, InvItemL) == 0x000920, "Member 'BP_PlayerInventory_C_UseInventoryAction::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotItem_InvItem) == 0x000950, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_ConsumeItem_Consumed) == 0x000980, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_ConsumeItem_Consumed' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x000981, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x000988, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemConsumableDetails_ItemFound_1) == 0x0009C8, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemConsumableDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemConsumableDetails_ItemDetails_1) == 0x0009D0, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemConsumableDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Greater_IntInt_ReturnValue) == 0x000A10, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue) == 0x000A11, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue_1) == 0x000A12, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue_2) == 0x000A13, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue_3) == 0x000A14, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000A15, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000A18, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000A48, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000A49, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000A4A, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_BooleanAND_ReturnValue) == 0x000A4B, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemBuildPartDetails_ItemFound) == 0x000A4C, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemBuildPartDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemBuildPartDetails_Build_Part_Details) == 0x000A50, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemBuildPartDetails_Build_Part_Details' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_LearnAllItemRecipes_RecipeLearnt) == 0x000B38, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_LearnAllItemRecipes_RecipeLearnt' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000B3C, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, K2Node_MakeStruct_S_InvSlotID) == 0x000B40, "Member 'BP_PlayerInventory_C_UseInventoryAction::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000B50, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotAmount_Amount) == 0x000B54, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000B58, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000B5C, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue_4) == 0x000B60, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_AttemptToEquipItem_ItemEquipped) == 0x000B61, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_AttemptToEquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotItem_InvItem_2) == 0x000B68, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotItem_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000B98, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000BA0, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Set_Length_ReturnValue) == 0x000D10, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000D14, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, K2Node_MakeStruct_S_InvSlotID_1) == 0x000D18, "Member 'BP_PlayerInventory_C_UseInventoryAction::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemDetails_ItemFound) == 0x000D28, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000D30, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_FindCompatiableWeaponSlot_ReturnValue) == 0x0015C0, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_FindCompatiableWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_FindCompatiableWeaponSlot_Slot) == 0x0015C1, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_FindCompatiableWeaponSlot_Slot' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x0015C8, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_ClassIsChildOf_ReturnValue) == 0x001618, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, K2Node_MakeStruct_S_WeaponSlotID) == 0x001620, "Member 'BP_PlayerInventory_C_UseInventoryAction::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_AttemptToHoldItem_ItemHeld) == 0x001630, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_AttemptToHoldItem_ItemHeld' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, K2Node_MakeStruct_S_InvSlotID_2) == 0x001638, "Member 'BP_PlayerInventory_C_UseInventoryAction::K2Node_MakeStruct_S_InvSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotAmount_ItemValid_1) == 0x001648, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotAmount_ItemValid_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_InvSlotAmount_Amount_1) == 0x00164C, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_InvSlotAmount_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_Greater_IntInt_ReturnValue_3) == 0x001650, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x001651, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x001660, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_IsValid_ReturnValue_5) == 0x001EF0, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_UpdateItemUseAmount_ItemEmpty) == 0x001EF1, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_UpdateItemUseAmount_ItemEmpty' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_UpdateItemUseAmount_ItemOut) == 0x001EF8, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_UpdateItemUseAmount_ItemOut' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, CallFunc_ItemActionCheck_AllowUse) == 0x001F28, "Member 'BP_PlayerInventory_C_UseInventoryAction::CallFunc_ItemActionCheck_AllowUse' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseInventoryAction, K2Node_SwitchEnum_CmpSuccess) == 0x001F29, "Member 'BP_PlayerInventory_C_UseInventoryAction::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UseItemFromSlot
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerInventory_C_UseItemFromSlot final
{
public:
	struct FS_InvSlotID                           InvSlotID;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InstantPlacement;                                  // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAD[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_InvSlotFromSlotID_InvSlot;            // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UseItemFromSlot) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UseItemFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_UseItemFromSlot) == 0x000068, "Wrong size on BP_PlayerInventory_C_UseItemFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_UseItemFromSlot, InvSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UseItemFromSlot::InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseItemFromSlot, Action) == 0x000010, "Member 'BP_PlayerInventory_C_UseItemFromSlot::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseItemFromSlot, InstantPlacement) == 0x000011, "Member 'BP_PlayerInventory_C_UseItemFromSlot::InstantPlacement' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseItemFromSlot, CallFunc_SGK_InvSlotFromSlotID_InvSlot) == 0x000018, "Member 'BP_PlayerInventory_C_UseItemFromSlot::CallFunc_SGK_InvSlotFromSlotID_InvSlot' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UseStaminaState
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerInventory_C_UseStaminaState final
{
public:
	double                                        CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_Value_1;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UseStaminaState) == 0x000008, "Wrong alignment on BP_PlayerInventory_C_UseStaminaState");
static_assert(sizeof(BP_PlayerInventory_C_UseStaminaState) == 0x000010, "Wrong size on BP_PlayerInventory_C_UseStaminaState");
static_assert(offsetof(BP_PlayerInventory_C_UseStaminaState, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_PlayerInventory_C_UseStaminaState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseStaminaState, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_PlayerInventory_C_UseStaminaState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseStaminaState, CallFunc_Map_Find_Value_1) == 0x000009, "Member 'BP_PlayerInventory_C_UseStaminaState::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseStaminaState, CallFunc_Map_Find_ReturnValue_1) == 0x00000A, "Member 'BP_PlayerInventory_C_UseStaminaState::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseStaminaState, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'BP_PlayerInventory_C_UseStaminaState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerInventory.BP_PlayerInventory_C.UseWeaponFromSlot
// 0x1230 (0x1230 - 0x0000)
struct BP_PlayerInventory_C_UseWeaponFromSlot final
{
public:
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_InventoryActions                            Action;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAE[0xF];                                     // 0x0011(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0020(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         QuickSlotL;                                        // 0x08B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EAF[0x4];                                     // 0x08B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          WeaponSlotL;                                       // 0x08B8(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB0[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0910(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB1[0x7];                                     // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0968(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0973(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0975(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0976(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0977(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EB2[0x6];                                     // 0x097A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0989(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x098A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_2;            // 0x098B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x098C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x098D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x098E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x098F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0990(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_ItemActionCheck_AllowUse;                 // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerInventory_C_UseWeaponFromSlot) == 0x000010, "Wrong alignment on BP_PlayerInventory_C_UseWeaponFromSlot");
static_assert(sizeof(BP_PlayerInventory_C_UseWeaponFromSlot) == 0x001230, "Wrong size on BP_PlayerInventory_C_UseWeaponFromSlot");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, WeaponSlotID) == 0x000000, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, Action) == 0x000010, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::Action' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, ItemDetailsL) == 0x000020, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, QuickSlotL) == 0x0008B0, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::QuickSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, WeaponSlotL) == 0x0008B8, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue) == 0x000908, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000910, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_1) == 0x000960, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000968, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, K2Node_DynamicCast_bSuccess) == 0x000970, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_2) == 0x000971, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_3) == 0x000972, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_4) == 0x000973, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_5) == 0x000974, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_6) == 0x000975, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_7) == 0x000976, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_8) == 0x000977, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_9) == 0x000978, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_10) == 0x000979, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x000980, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, K2Node_DynamicCast_bSuccess_1) == 0x000988, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000989, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00098A, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_NotEqual_IntInt_ReturnValue_2) == 0x00098B, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_NotEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_IsValid_ReturnValue_11) == 0x00098C, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00098D, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, K2Node_SwitchEnum_CmpSuccess) == 0x00098E, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_SGK_ItemDetails_ItemFound) == 0x00098F, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000990, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_PlayerInventory_C_UseWeaponFromSlot, CallFunc_ItemActionCheck_AllowUse) == 0x001220, "Member 'BP_PlayerInventory_C_UseWeaponFromSlot::CallFunc_ItemActionCheck_AllowUse' has a wrong offset!");

}

