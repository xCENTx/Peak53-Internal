#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Keybind

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "Slate_structs.hpp"


namespace SDK::Params
{

// Function BP_Keybind.BP_Keybind_C.BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(sizeof(BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature");
static_assert(offsetof(BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'BP_Keybind_C_BndEvt__KeySelector1_K2Node_ComponentBoundEvent_1_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature final
{
public:
	struct FInputChord                            SelectedKey;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature) == 0x000008, "Wrong alignment on BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");
static_assert(sizeof(BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature) == 0x000020, "Wrong size on BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature");
static_assert(offsetof(BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature, SelectedKey) == 0x000000, "Member 'BP_Keybind_C_BndEvt__KeySelector2_K2Node_ComponentBoundEvent_2_OnKeySelected__DelegateSignature::SelectedKey' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.ExecuteUbergraph_BP_Keybind
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Keybind_C_ExecuteUbergraph_BP_Keybind final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Up_1;                           // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Up;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0008(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x0028(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_2;                    // 0x0048(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_MakeStruct_InputChord_3;                    // 0x0068(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey_1;          // 0x0088(0x0020)(HasGetValueTypeHash)
	struct FInputChord                            K2Node_ComponentBoundEvent_SelectedKey;            // 0x00A8(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind) == 0x000008, "Wrong alignment on BP_Keybind_C_ExecuteUbergraph_BP_Keybind");
static_assert(sizeof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind) == 0x0000C8, "Wrong size on BP_Keybind_C_ExecuteUbergraph_BP_Keybind");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, EntryPoint) == 0x000000, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, CallFunc_Not_PreBool_ReturnValue_1) == 0x000005, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_CustomEvent_Up_1) == 0x000006, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_CustomEvent_Up_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_CustomEvent_Up) == 0x000007, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_CustomEvent_Up' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_MakeStruct_InputChord) == 0x000008, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_MakeStruct_InputChord_1) == 0x000028, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_MakeStruct_InputChord_2) == 0x000048, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_MakeStruct_InputChord_2' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_MakeStruct_InputChord_3) == 0x000068, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_MakeStruct_InputChord_3' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_ComponentBoundEvent_SelectedKey_1) == 0x000088, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_ComponentBoundEvent_SelectedKey_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_ExecuteUbergraph_BP_Keybind, K2Node_ComponentBoundEvent_SelectedKey) == 0x0000A8, "Member 'BP_Keybind_C_ExecuteUbergraph_BP_Keybind::K2Node_ComponentBoundEvent_SelectedKey' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.Find Action Keys
// 0x00C8 (0x00C8 - 0x0000)
struct BP_Keybind_C_Find_Action_Keys final
{
public:
	TArray<struct FEnhancedActionKeyMapping>      ActionKeys;                                        // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FEnhancedActionKeyMapping>      ActionKeysL;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x0030(0x0088)(ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5601[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_Find_Action_Keys) == 0x000008, "Wrong alignment on BP_Keybind_C_Find_Action_Keys");
static_assert(sizeof(BP_Keybind_C_Find_Action_Keys) == 0x0000C8, "Wrong size on BP_Keybind_C_Find_Action_Keys");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, ActionKeys) == 0x000000, "Member 'BP_Keybind_C_Find_Action_Keys::ActionKeys' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, ActionKeysL) == 0x000010, "Member 'BP_Keybind_C_Find_Action_Keys::ActionKeysL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_Keybind_C_Find_Action_Keys::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_Keybind_C_Find_Action_Keys::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_Less_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_Array_AddUnique_ReturnValue) == 0x0000BC, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_Find_Action_Keys, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'BP_Keybind_C_Find_Action_Keys::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.FindActionBind
// 0x0090 (0x0090 - 0x0000)
struct BP_Keybind_C_FindActionBind final
{
public:
	class FName                                   ActionBindName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BindIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindFound;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5602[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionKeyMapping                 ActionBind;                                        // 0x0010(0x0028)(Parm, OutParm)
	TArray<struct FInputActionKeyMapping>         MappingsL;                                         // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FInputActionKeyMapping                 CallFunc_Array_Get_Item;                           // 0x0048(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputActionKeyMapping>         CallFunc_GetActionMappingByName_OutMappings;       // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_FindActionBind) == 0x000008, "Wrong alignment on BP_Keybind_C_FindActionBind");
static_assert(sizeof(BP_Keybind_C_FindActionBind) == 0x000090, "Wrong size on BP_Keybind_C_FindActionBind");
static_assert(offsetof(BP_Keybind_C_FindActionBind, ActionBindName) == 0x000000, "Member 'BP_Keybind_C_FindActionBind::ActionBindName' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, BindIndex) == 0x000008, "Member 'BP_Keybind_C_FindActionBind::BindIndex' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, BindFound) == 0x00000C, "Member 'BP_Keybind_C_FindActionBind::BindFound' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, ActionBind) == 0x000010, "Member 'BP_Keybind_C_FindActionBind::ActionBind' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, MappingsL) == 0x000038, "Member 'BP_Keybind_C_FindActionBind::MappingsL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Keybind_C_FindActionBind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, CallFunc_GetInputSettings_ReturnValue) == 0x000070, "Member 'BP_Keybind_C_FindActionBind::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, CallFunc_GetActionMappingByName_OutMappings) == 0x000078, "Member 'BP_Keybind_C_FindActionBind::CallFunc_GetActionMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindActionBind, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'BP_Keybind_C_FindActionBind::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.FindAxisBind
// 0x0090 (0x0090 - 0x0000)
struct BP_Keybind_C_FindAxisBind final
{
public:
	class FName                                   ActionBindName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BindIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BindFound;                                         // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5603[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   ActionBind;                                        // 0x0010(0x0028)(Parm, OutParm)
	TArray<struct FInputAxisKeyMapping>           MappingsL;                                         // 0x0038(0x0010)(Edit, BlueprintVisible)
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0048(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_FindAxisBind) == 0x000008, "Wrong alignment on BP_Keybind_C_FindAxisBind");
static_assert(sizeof(BP_Keybind_C_FindAxisBind) == 0x000090, "Wrong size on BP_Keybind_C_FindAxisBind");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, ActionBindName) == 0x000000, "Member 'BP_Keybind_C_FindAxisBind::ActionBindName' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, BindIndex) == 0x000008, "Member 'BP_Keybind_C_FindAxisBind::BindIndex' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, BindFound) == 0x00000C, "Member 'BP_Keybind_C_FindAxisBind::BindFound' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, ActionBind) == 0x000010, "Member 'BP_Keybind_C_FindAxisBind::ActionBind' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, MappingsL) == 0x000038, "Member 'BP_Keybind_C_FindAxisBind::MappingsL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_Keybind_C_FindAxisBind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, CallFunc_GetInputSettings_ReturnValue) == 0x000070, "Member 'BP_Keybind_C_FindAxisBind::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, CallFunc_GetAxisMappingByName_OutMappings) == 0x000078, "Member 'BP_Keybind_C_FindAxisBind::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_FindAxisBind, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000088, "Member 'BP_Keybind_C_FindAxisBind::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.InitializeKeybind
// 0x01E0 (0x01E0 - 0x0000)
struct BP_Keybind_C_InitializeKeybind final
{
public:
	class FName                                   Param_BindName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAxis;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5604[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Param_Action;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputMappingContext*                   Param_Mapping;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           AxisMappingsL;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FInputActionKeyMapping>         ActionMappingsL;                                   // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FEnhancedActionKeyMapping>      CallFunc_Find_Action_Keys_ActionKeys;              // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5605[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x0058(0x0088)(ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5606[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x00E8(0x0020)(HasGetValueTypeHash)
	TArray<struct FEnhancedActionKeyMapping>      CallFunc_Find_Action_Keys_ActionKeys_1;            // 0x0108(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item_1;                         // 0x0118(0x0088)(ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5607[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputChord                            K2Node_MakeStruct_InputChord_1;                    // 0x01A8(0x0020)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x01C8(0x0018)()
};
static_assert(alignof(BP_Keybind_C_InitializeKeybind) == 0x000008, "Wrong alignment on BP_Keybind_C_InitializeKeybind");
static_assert(sizeof(BP_Keybind_C_InitializeKeybind) == 0x0001E0, "Wrong size on BP_Keybind_C_InitializeKeybind");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, Param_BindName) == 0x000000, "Member 'BP_Keybind_C_InitializeKeybind::Param_BindName' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, IsAxis) == 0x000008, "Member 'BP_Keybind_C_InitializeKeybind::IsAxis' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, Param_Action) == 0x000010, "Member 'BP_Keybind_C_InitializeKeybind::Param_Action' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, Param_Mapping) == 0x000018, "Member 'BP_Keybind_C_InitializeKeybind::Param_Mapping' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, AxisMappingsL) == 0x000020, "Member 'BP_Keybind_C_InitializeKeybind::AxisMappingsL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, ActionMappingsL) == 0x000030, "Member 'BP_Keybind_C_InitializeKeybind::ActionMappingsL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Find_Action_Keys_ActionKeys) == 0x000040, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Find_Action_Keys_ActionKeys' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0000E0, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, K2Node_MakeStruct_InputChord) == 0x0000E8, "Member 'BP_Keybind_C_InitializeKeybind::K2Node_MakeStruct_InputChord' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Find_Action_Keys_ActionKeys_1) == 0x000108, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Find_Action_Keys_ActionKeys_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Array_Get_Item_1) == 0x000118, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001A0, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, K2Node_MakeStruct_InputChord_1) == 0x0001A8, "Member 'BP_Keybind_C_InitializeKeybind::K2Node_MakeStruct_InputChord_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_InitializeKeybind, CallFunc_Conv_NameToText_ReturnValue) == 0x0001C8, "Member 'BP_Keybind_C_InitializeKeybind::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.KeySelect1Scroll
// 0x0001 (0x0001 - 0x0000)
struct BP_Keybind_C_KeySelect1Scroll final
{
public:
	bool                                          Up;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_KeySelect1Scroll) == 0x000001, "Wrong alignment on BP_Keybind_C_KeySelect1Scroll");
static_assert(sizeof(BP_Keybind_C_KeySelect1Scroll) == 0x000001, "Wrong size on BP_Keybind_C_KeySelect1Scroll");
static_assert(offsetof(BP_Keybind_C_KeySelect1Scroll, Up) == 0x000000, "Member 'BP_Keybind_C_KeySelect1Scroll::Up' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.KeySelect2Scroll
// 0x0001 (0x0001 - 0x0000)
struct BP_Keybind_C_KeySelect2Scroll final
{
public:
	bool                                          Up;                                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_KeySelect2Scroll) == 0x000001, "Wrong alignment on BP_Keybind_C_KeySelect2Scroll");
static_assert(sizeof(BP_Keybind_C_KeySelect2Scroll) == 0x000001, "Wrong size on BP_Keybind_C_KeySelect2Scroll");
static_assert(offsetof(BP_Keybind_C_KeySelect2Scroll, Up) == 0x000000, "Member 'BP_Keybind_C_KeySelect2Scroll::Up' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.OnMouseWheel
// 0x0310 (0x0310 - 0x0000)
struct BP_Keybind_C_OnMouseWheel final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0190(0x00B8)()
	float                                         CallFunc_PointerEvent_GetWheelDelta_ReturnValue;   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5608[0x3];                                     // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0250(0x00B8)()
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_OnMouseWheel) == 0x000008, "Wrong alignment on BP_Keybind_C_OnMouseWheel");
static_assert(sizeof(BP_Keybind_C_OnMouseWheel) == 0x000310, "Wrong size on BP_Keybind_C_OnMouseWheel");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, MyGeometry) == 0x000000, "Member 'BP_Keybind_C_OnMouseWheel::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, MouseEvent) == 0x000040, "Member 'BP_Keybind_C_OnMouseWheel::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, ReturnValue) == 0x0000D8, "Member 'BP_Keybind_C_OnMouseWheel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, CallFunc_Unhandled_ReturnValue) == 0x000190, "Member 'BP_Keybind_C_OnMouseWheel::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, CallFunc_PointerEvent_GetWheelDelta_ReturnValue) == 0x000248, "Member 'BP_Keybind_C_OnMouseWheel::CallFunc_PointerEvent_GetWheelDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00024C, "Member 'BP_Keybind_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, CallFunc_Handled_ReturnValue) == 0x000250, "Member 'BP_Keybind_C_OnMouseWheel::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_OnMouseWheel, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000308, "Member 'BP_Keybind_C_OnMouseWheel::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.RebindAction
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Keybind_C_RebindAction final
{
public:
	struct FInputChord                            Key;                                               // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         RebindIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5609[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              KeyTempL;                                          // 0x0028(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_560A[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Keybind_C_RebindAction) == 0x000008, "Wrong alignment on BP_Keybind_C_RebindAction");
static_assert(sizeof(BP_Keybind_C_RebindAction) == 0x0000C0, "Wrong size on BP_Keybind_C_RebindAction");
static_assert(offsetof(BP_Keybind_C_RebindAction, Key) == 0x000000, "Member 'BP_Keybind_C_RebindAction::Key' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAction, RebindIndex) == 0x000020, "Member 'BP_Keybind_C_RebindAction::RebindIndex' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAction, KeyTempL) == 0x000028, "Member 'BP_Keybind_C_RebindAction::KeyTempL' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAction, K2Node_SwitchInteger_CmpSuccess) == 0x0000B0, "Member 'BP_Keybind_C_RebindAction::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAction, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'BP_Keybind_C_RebindAction::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAction, CallFunc_Array_Add_ReturnValue_1) == 0x0000B8, "Member 'BP_Keybind_C_RebindAction::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_Keybind.BP_Keybind_C.RebindAxis
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Keybind_C_RebindAxis final
{
public:
	struct FInputChord                            Key;                                               // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	int32                                         RebindIndex;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_560B[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputAxisKeyMapping                   K2Node_MakeStruct_InputAxisKeyMapping;             // 0x0030(0x0028)()
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputSettings*                         CallFunc_GetInputSettings_ReturnValue_3;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FInputAxisKeyMapping>           CallFunc_GetAxisMappingByName_OutMappings;         // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_560C[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputAxisKeyMapping                   CallFunc_Array_Get_Item;                           // 0x0088(0x0028)()
};
static_assert(alignof(BP_Keybind_C_RebindAxis) == 0x000008, "Wrong alignment on BP_Keybind_C_RebindAxis");
static_assert(sizeof(BP_Keybind_C_RebindAxis) == 0x0000B0, "Wrong size on BP_Keybind_C_RebindAxis");
static_assert(offsetof(BP_Keybind_C_RebindAxis, Key) == 0x000000, "Member 'BP_Keybind_C_RebindAxis::Key' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, RebindIndex) == 0x000020, "Member 'BP_Keybind_C_RebindAxis::RebindIndex' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_GetInputSettings_ReturnValue) == 0x000028, "Member 'BP_Keybind_C_RebindAxis::CallFunc_GetInputSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, K2Node_MakeStruct_InputAxisKeyMapping) == 0x000030, "Member 'BP_Keybind_C_RebindAxis::K2Node_MakeStruct_InputAxisKeyMapping' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_GetInputSettings_ReturnValue_1) == 0x000058, "Member 'BP_Keybind_C_RebindAxis::CallFunc_GetInputSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_GetInputSettings_ReturnValue_2) == 0x000060, "Member 'BP_Keybind_C_RebindAxis::CallFunc_GetInputSettings_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_GetInputSettings_ReturnValue_3) == 0x000068, "Member 'BP_Keybind_C_RebindAxis::CallFunc_GetInputSettings_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_GetAxisMappingByName_OutMappings) == 0x000070, "Member 'BP_Keybind_C_RebindAxis::CallFunc_GetAxisMappingByName_OutMappings' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000080, "Member 'BP_Keybind_C_RebindAxis::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Keybind_C_RebindAxis, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_Keybind_C_RebindAxis::CallFunc_Array_Get_Item' has a wrong offset!");

}

