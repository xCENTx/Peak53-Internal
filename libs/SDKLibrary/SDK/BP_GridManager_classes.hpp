#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GridManager

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_BuildType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_GridManager.BP_GridManager_C
// 0x0068 (0x02F8 - 0x0290)
class ABP_GridManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       FoundationGrid;                                    // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       WallGrid;                                          // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       TriangleFoundationGrid;                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       FloorGrid;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       TriangleFloorGrid;                                 // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       StairsGrid;                                        // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       DoorGrid;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       WindowGrid;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       LockGrid;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       RoofGrid;                                          // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       DoubleDoorGrid;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CreateGridActors();
	void DeleteGrid(class UBoxComponent* Grid);
	void ExecuteUbergraph_BP_GridManager(int32 EntryPoint);
	void GetAllGrids(TArray<class ABP_MasterGrid_C*>* AllGrids);
	void ReceiveBeginPlay();
	void SelectGridActor(E_BuildType GridType, class ABP_MasterGrid_C** Grid);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GridManager_C">();
	}
	static class ABP_GridManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_GridManager_C>();
	}
};
static_assert(alignof(ABP_GridManager_C) == 0x000008, "Wrong alignment on ABP_GridManager_C");
static_assert(sizeof(ABP_GridManager_C) == 0x0002F8, "Wrong size on ABP_GridManager_C");
static_assert(offsetof(ABP_GridManager_C, UberGraphFrame) == 0x000290, "Member 'ABP_GridManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_GridManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, FoundationGrid) == 0x0002A0, "Member 'ABP_GridManager_C::FoundationGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, WallGrid) == 0x0002A8, "Member 'ABP_GridManager_C::WallGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, TriangleFoundationGrid) == 0x0002B0, "Member 'ABP_GridManager_C::TriangleFoundationGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, FloorGrid) == 0x0002B8, "Member 'ABP_GridManager_C::FloorGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, TriangleFloorGrid) == 0x0002C0, "Member 'ABP_GridManager_C::TriangleFloorGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, StairsGrid) == 0x0002C8, "Member 'ABP_GridManager_C::StairsGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, DoorGrid) == 0x0002D0, "Member 'ABP_GridManager_C::DoorGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, WindowGrid) == 0x0002D8, "Member 'ABP_GridManager_C::WindowGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, LockGrid) == 0x0002E0, "Member 'ABP_GridManager_C::LockGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, RoofGrid) == 0x0002E8, "Member 'ABP_GridManager_C::RoofGrid' has a wrong offset!");
static_assert(offsetof(ABP_GridManager_C, DoubleDoorGrid) == 0x0002F0, "Member 'ABP_GridManager_C::DoubleDoorGrid' has a wrong offset!");

}

