#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ExtCookingMenu

#include "Basic.hpp"

#include "S_CookingRecipe_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_CookingSlot_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_InvSlot_structs.hpp"


namespace SDK::Params
{

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ClearCurrentSlots
// 0x0018 (0x0018 - 0x0000)
struct BP_ExtCookingMenu_C_ClearCurrentSlots final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ClearCurrentSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ClearCurrentSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_ClearCurrentSlots) == 0x000018, "Wrong size on BP_ExtCookingMenu_C_ClearCurrentSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_ClearCurrentSlots, Temp_int_Variable) == 0x000000, "Member 'BP_ExtCookingMenu_C_ClearCurrentSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ClearCurrentSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_ExtCookingMenu_C_ClearCurrentSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ClearCurrentSlots, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_ExtCookingMenu_C_ClearCurrentSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ClearCurrentSlots, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_ExtCookingMenu_C_ClearCurrentSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ClearCurrentSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_ClearCurrentSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructCookingSlots
// 0x02B0 (0x02B0 - 0x0000)
struct BP_ExtCookingMenu_C_ConstructCookingSlots final
{
public:
	int32                                         LastIndexL;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndexL;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UIIndexL;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      NewCookingSlotL;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayIndexL;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CB[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CC[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CD[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CE[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_Array_Get_Item;                           // 0x004C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x0060(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56CF[0x4];                                     // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x00B8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D0[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x00F0(0x0078)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D1[0x2];                                     // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D2[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D3[0x4];                                     // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x01A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D4[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item_3;                         // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_4;                         // 0x0208(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D5[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CallFunc_Create_ReturnValue;                       // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast;   // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast_1;     // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ConstructCookingSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ConstructCookingSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_ConstructCookingSlots) == 0x0002B0, "Wrong size on BP_ExtCookingMenu_C_ConstructCookingSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, LastIndexL) == 0x000000, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::LastIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, StartIndexL) == 0x000004, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::StartIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, UIIndexL) == 0x000008, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::UIIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, NewCookingSlotL) == 0x000010, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::NewCookingSlotL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, ArrayIndexL) == 0x000018, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, Temp_int_Variable) == 0x00001C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Contains_ReturnValue) == 0x000024, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000030, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x000044, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Get_Item) == 0x00004C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, K2Node_MakeStruct_S_InvItem) == 0x0000B8, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x0000E8, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x0000F0, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, Temp_int_Variable_1) == 0x000168, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00016C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00016D, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000178, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000198, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001A0, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Get_Item_2) == 0x0001A8, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F8, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Get_Item_3) == 0x000200, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Array_Get_Item_4) == 0x000208, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x000258, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Percent_IntInt_ReturnValue) == 0x00025C, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_IntInt_ReturnValue) == 0x000260, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000268, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_GetOwningPlayer_ReturnValue) == 0x000270, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Create_ReturnValue) == 0x000278, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000280, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000288, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast) == 0x000290, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Divide_DoubleDouble_A_ImplicitCast_1) == 0x000298, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Divide_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0002A0, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructCookingSlots, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0002A8, "Member 'BP_ExtCookingMenu_C_ConstructCookingSlots::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructFuelInvSlots
// 0x00C8 (0x00C8 - 0x0000)
struct BP_ExtCookingMenu_C_ConstructFuelInvSlots final
{
public:
	int32                                         IndexL;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryItemIcon_C*                NewItemIconL;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    NewCellL;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopIndexL;                                        // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D7[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D8[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56D9[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DA[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DB[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_GetItemIconFromPool_ItemIcon;             // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_GetCellFromPool_Cell;                     // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ConstructFuelInvSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ConstructFuelInvSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_ConstructFuelInvSlots) == 0x0000C8, "Wrong size on BP_ExtCookingMenu_C_ConstructFuelInvSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, IndexL) == 0x000000, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::IndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, NewItemIconL) == 0x000008, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::NewItemIconL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, NewCellL) == 0x000010, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::NewCellL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, LoopIndexL) == 0x000018, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::LoopIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, Temp_int_Variable) == 0x000020, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000038, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x00003C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000040, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000044, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x00004C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000054, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000058, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x00005C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000068, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x00006C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_7) == 0x000070, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Add_IntInt_ReturnValue_8) == 0x000074, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000078, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Percent_IntInt_ReturnValue) == 0x000094, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Divide_IntInt_ReturnValue) == 0x000098, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_AddChildToGrid_ReturnValue) == 0x0000A0, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_GetItemIconFromPool_ItemIcon) == 0x0000A8, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_GetItemIconFromPool_ItemIcon' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_Divide_IntInt_ReturnValue_1) == 0x0000B4, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x0000B8, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructFuelInvSlots, CallFunc_GetCellFromPool_Cell) == 0x0000C0, "Member 'BP_ExtCookingMenu_C_ConstructFuelInvSlots::CallFunc_GetCellFromPool_Cell' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ConstructStorageInvSlots
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ExtCookingMenu_C_ConstructStorageInvSlots final
{
public:
	class UBP_InventoryItemIcon_C*                NewItemIconL;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    NewCellL;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LoopIndexL;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DC[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_GetCellFromPool_Cell;                     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DD[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DE[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGridSlot*                              CallFunc_AddChildToGrid_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_GetItemIconFromPool_ItemIcon;             // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ConstructStorageInvSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ConstructStorageInvSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_ConstructStorageInvSlots) == 0x0000B0, "Wrong size on BP_ExtCookingMenu_C_ConstructStorageInvSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, NewItemIconL) == 0x000000, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::NewItemIconL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, NewCellL) == 0x000008, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::NewCellL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, LoopIndexL) == 0x000010, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::LoopIndexL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, Temp_int_Variable) == 0x000014, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, Temp_bool_Variable) == 0x000020, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, Temp_int_Variable_1) == 0x000024, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000034, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_GetCellFromPool_Cell) == 0x000038, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_GetCellFromPool_Cell' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Percent_IntInt_ReturnValue) == 0x000068, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Divide_IntInt_ReturnValue) == 0x00006C, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_AddChildToGrid_ReturnValue) == 0x000070, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_AddChildToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_GetItemIconFromPool_ItemIcon) == 0x000078, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_GetItemIconFromPool_ItemIcon' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000088, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000090, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000094, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000098, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x0000A0, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, K2Node_Select_Default) == 0x0000A4, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ConstructStorageInvSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_ExtCookingMenu_C_ConstructStorageInvSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ExecuteUbergraph_BP_ExtCookingMenu
// 0x0050 (0x0050 - 0x0000)
struct BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56DF[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_Event_GridInventory;                        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E1[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingComponent_C*                 K2Node_DynamicCast_AsBP_Cooking_Component;         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E2[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu");
static_assert(sizeof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu) == 0x000050, "Wrong size on BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, EntryPoint) == 0x000000, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_Event_GridInventory) == 0x000008, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_Event_GridInventory' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_Event_IsDesignTime) == 0x000010, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_CustomEvent_CraftingInventory) == 0x000028, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_CustomEvent_CraftingInventory' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_DynamicCast_AsBP_Cooking_Component) == 0x000038, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_DynamicCast_AsBP_Cooking_Component' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_ExtCookingMenu_C_ExecuteUbergraph_BP_ExtCookingMenu::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.FindCookingSlot
// 0x0048 (0x0048 - 0x0000)
struct BP_ExtCookingMenu_C_FindCookingSlot final
{
public:
	struct FS_CookingSlot                         ConvertSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E3[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CookingSlot;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      ArrayElementL;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E4[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_FindCookingSlot) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_FindCookingSlot");
static_assert(sizeof(BP_ExtCookingMenu_C_FindCookingSlot) == 0x000048, "Wrong size on BP_ExtCookingMenu_C_FindCookingSlot");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, ConvertSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::ConvertSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CookingSlot) == 0x000018, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, ArrayElementL) == 0x000020, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_FindCookingSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_ExtCookingMenu_C_FindCookingSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.Get_OnButtonText_Text_0
// 0x0470 (0x0470 - 0x0000)
struct BP_ExtCookingMenu_C_Get_OnButtonText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E5[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0038(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E6[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           K2Node_Select_Default;                             // 0x0060(0x03F0)(ConstParm)
	class FText                                   K2Node_Select_Default_1;                           // 0x0450(0x0018)()
};
static_assert(alignof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0) == 0x000010, "Wrong alignment on BP_ExtCookingMenu_C_Get_OnButtonText_Text_0");
static_assert(sizeof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0) == 0x000470, "Wrong size on BP_ExtCookingMenu_C_Get_OnButtonText_Text_0");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, ReturnValue) == 0x000000, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, Temp_bool_Variable) == 0x000018, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, Temp_bool_Variable_1) == 0x000019, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, Temp_text_Variable) == 0x000020, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, Temp_text_Variable_1) == 0x000038, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, K2Node_Select_Default) == 0x000060, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_Get_OnButtonText_Text_0, K2Node_Select_Default_1) == 0x000450, "Member 'BP_ExtCookingMenu_C_Get_OnButtonText_Text_0::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.InitializeExtCookingMenu
// 0x0008 (0x0008 - 0x0000)
struct BP_ExtCookingMenu_C_InitializeExtCookingMenu final
{
public:
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_InitializeExtCookingMenu) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_InitializeExtCookingMenu");
static_assert(sizeof(BP_ExtCookingMenu_C_InitializeExtCookingMenu) == 0x000008, "Wrong size on BP_ExtCookingMenu_C_InitializeExtCookingMenu");
static_assert(offsetof(BP_ExtCookingMenu_C_InitializeExtCookingMenu, CraftingInventory) == 0x000000, "Member 'BP_ExtCookingMenu_C_InitializeExtCookingMenu::CraftingInventory' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.InitizlizeCookingInvGrids
// 0x0008 (0x0008 - 0x0000)
struct BP_ExtCookingMenu_C_InitizlizeCookingInvGrids final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E7[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_InitizlizeCookingInvGrids) == 0x000004, "Wrong alignment on BP_ExtCookingMenu_C_InitizlizeCookingInvGrids");
static_assert(sizeof(BP_ExtCookingMenu_C_InitizlizeCookingInvGrids) == 0x000008, "Wrong size on BP_ExtCookingMenu_C_InitizlizeCookingInvGrids");
static_assert(offsetof(BP_ExtCookingMenu_C_InitizlizeCookingInvGrids, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_ExtCookingMenu_C_InitizlizeCookingInvGrids::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_InitizlizeCookingInvGrids, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000004, "Member 'BP_ExtCookingMenu_C_InitizlizeCookingInvGrids::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UnPauseSingleSlot
// 0x0028 (0x0028 - 0x0000)
struct BP_ExtCookingMenu_C_UnPauseSingleSlot final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E8[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_UnPauseSingleSlot) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_UnPauseSingleSlot");
static_assert(sizeof(BP_ExtCookingMenu_C_UnPauseSingleSlot) == 0x000028, "Wrong size on BP_ExtCookingMenu_C_UnPauseSingleSlot");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, Param_Index) == 0x000000, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, Pause) == 0x000004, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::Pause' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UnPauseSingleSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000022, "Member 'BP_ExtCookingMenu_C_UnPauseSingleSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PauseAllCookingSlots
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_PauseAllCookingSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_PauseAllCookingSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_PauseAllCookingSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_PauseAllCookingSlots) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_PauseAllCookingSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseAllCookingSlots, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ExtCookingMenu_C_PauseAllCookingSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PauseCookingSlotTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_PauseCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         ConvertSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCookingSlot_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56E9[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_FindCookingSlot_CookingSlot;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_PauseCookingSlotTimer) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_PauseCookingSlotTimer");
static_assert(sizeof(BP_ExtCookingMenu_C_PauseCookingSlotTimer) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_PauseCookingSlotTimer");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseCookingSlotTimer, ConvertSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_PauseCookingSlotTimer::ConvertSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseCookingSlotTimer, CallFunc_FindCookingSlot_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_PauseCookingSlotTimer::CallFunc_FindCookingSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_PauseCookingSlotTimer, CallFunc_FindCookingSlot_CookingSlot) == 0x000018, "Member 'BP_ExtCookingMenu_C_PauseCookingSlotTimer::CallFunc_FindCookingSlot_CookingSlot' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ExtCookingMenu_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ExtCookingMenu_C_PreConstruct");
static_assert(sizeof(BP_ExtCookingMenu_C_PreConstruct) == 0x000001, "Wrong size on BP_ExtCookingMenu_C_PreConstruct");
static_assert(offsetof(BP_ExtCookingMenu_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ExtCookingMenu_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.RestartCookingSlotTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_RestartCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         ConvertSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCookingSlot_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EA[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_FindCookingSlot_CookingSlot;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_RestartCookingSlotTimer) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_RestartCookingSlotTimer");
static_assert(sizeof(BP_ExtCookingMenu_C_RestartCookingSlotTimer) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_RestartCookingSlotTimer");
static_assert(offsetof(BP_ExtCookingMenu_C_RestartCookingSlotTimer, ConvertSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_RestartCookingSlotTimer::ConvertSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_RestartCookingSlotTimer, CallFunc_FindCookingSlot_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_RestartCookingSlotTimer::CallFunc_FindCookingSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_RestartCookingSlotTimer, CallFunc_FindCookingSlot_CookingSlot) == 0x000018, "Member 'BP_ExtCookingMenu_C_RestartCookingSlotTimer::CallFunc_FindCookingSlot_CookingSlot' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ResumeAllCookingSlots
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_ResumeAllCookingSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ResumeAllCookingSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ResumeAllCookingSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_ResumeAllCookingSlots) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_ResumeAllCookingSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeAllCookingSlots, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_ExtCookingMenu_C_ResumeAllCookingSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.ResumeCookingSlotTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_ResumeCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         ConvertSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCookingSlot_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EB[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_FindCookingSlot_CookingSlot;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_ResumeCookingSlotTimer) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_ResumeCookingSlotTimer");
static_assert(sizeof(BP_ExtCookingMenu_C_ResumeCookingSlotTimer) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_ResumeCookingSlotTimer");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeCookingSlotTimer, ConvertSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_ResumeCookingSlotTimer::ConvertSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeCookingSlotTimer, CallFunc_FindCookingSlot_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_ResumeCookingSlotTimer::CallFunc_FindCookingSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_ResumeCookingSlotTimer, CallFunc_FindCookingSlot_CookingSlot) == 0x000018, "Member 'BP_ExtCookingMenu_C_ResumeCookingSlotTimer::CallFunc_FindCookingSlot_CookingSlot' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK CellSlots
// 0x0020 (0x0020 - 0x0000)
struct BP_ExtCookingMenu_C_SGK_CellSlots final
{
public:
	TArray<class UBP_InventoryCell_C*>            Cells;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UBP_InventoryCell_C*>            AllCellsL;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
};
static_assert(alignof(BP_ExtCookingMenu_C_SGK_CellSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_SGK_CellSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_SGK_CellSlots) == 0x000020, "Wrong size on BP_ExtCookingMenu_C_SGK_CellSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_SGK_CellSlots, Cells) == 0x000000, "Member 'BP_ExtCookingMenu_C_SGK_CellSlots::Cells' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_SGK_CellSlots, AllCellsL) == 0x000010, "Member 'BP_ExtCookingMenu_C_SGK_CellSlots::AllCellsL' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK ConstructGrid
// 0x0008 (0x0008 - 0x0000)
struct BP_ExtCookingMenu_C_SGK_ConstructGrid final
{
public:
	class UBP_MasterInventory_C*                  GridInventory;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_SGK_ConstructGrid) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_SGK_ConstructGrid");
static_assert(sizeof(BP_ExtCookingMenu_C_SGK_ConstructGrid) == 0x000008, "Wrong size on BP_ExtCookingMenu_C_SGK_ConstructGrid");
static_assert(offsetof(BP_ExtCookingMenu_C_SGK_ConstructGrid, GridInventory) == 0x000000, "Member 'BP_ExtCookingMenu_C_SGK_ConstructGrid::GridInventory' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.SGK InvItemSlots
// 0x0010 (0x0010 - 0x0000)
struct BP_ExtCookingMenu_C_SGK_InvItemSlots final
{
public:
	TArray<class UBP_InventoryItemIcon_C*>        ItemInvWidgets;                                    // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_ExtCookingMenu_C_SGK_InvItemSlots) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_SGK_InvItemSlots");
static_assert(sizeof(BP_ExtCookingMenu_C_SGK_InvItemSlots) == 0x000010, "Wrong size on BP_ExtCookingMenu_C_SGK_InvItemSlots");
static_assert(offsetof(BP_ExtCookingMenu_C_SGK_InvItemSlots, ItemInvWidgets) == 0x000000, "Member 'BP_ExtCookingMenu_C_SGK_InvItemSlots::ItemInvWidgets' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.StartCookingSlotTimer
// 0x0028 (0x0028 - 0x0000)
struct BP_ExtCookingMenu_C_StartCookingSlotTimer final
{
public:
	struct FS_CookingSlot                         ConvertSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCookingSlot_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EC[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_FindCookingSlot_CookingSlot;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_StartTimer_Time_ImplicitCast;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_StartCookingSlotTimer) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_StartCookingSlotTimer");
static_assert(sizeof(BP_ExtCookingMenu_C_StartCookingSlotTimer) == 0x000028, "Wrong size on BP_ExtCookingMenu_C_StartCookingSlotTimer");
static_assert(offsetof(BP_ExtCookingMenu_C_StartCookingSlotTimer, ConvertSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_StartCookingSlotTimer::ConvertSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_StartCookingSlotTimer, CallFunc_FindCookingSlot_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_StartCookingSlotTimer::CallFunc_FindCookingSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_StartCookingSlotTimer, CallFunc_FindCookingSlot_CookingSlot) == 0x000018, "Member 'BP_ExtCookingMenu_C_StartCookingSlotTimer::CallFunc_FindCookingSlot_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_StartCookingSlotTimer, CallFunc_StartTimer_Time_ImplicitCast) == 0x000020, "Member 'BP_ExtCookingMenu_C_StartCookingSlotTimer::CallFunc_StartTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UpdateCookingSlot
// 0x0078 (0x0078 - 0x0000)
struct BP_ExtCookingMenu_C_UpdateCookingSlot final
{
public:
	struct FS_InvSlot                             CookingSlot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CookingSlot_C*                      CookingSlotL;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56ED[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingSlot_C*                      CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_UpdateCookingSlot) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_UpdateCookingSlot");
static_assert(sizeof(BP_ExtCookingMenu_C_UpdateCookingSlot) == 0x000078, "Wrong size on BP_ExtCookingMenu_C_UpdateCookingSlot");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CookingSlot) == 0x000000, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CookingSlotL) == 0x000050, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CookingSlotL' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateCookingSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_ExtCookingMenu_C_UpdateCookingSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ExtCookingMenu.BP_ExtCookingMenu_C.UpdateWeight
// 0x0100 (0x0100 - 0x0000)
struct BP_ExtCookingMenu_C_UpdateWeight final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EE[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56EF[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0030(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56F0[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0060(0x0018)()
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0078(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0090(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D8(0x0018)()
	double                                        CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToText_Value_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ExtCookingMenu_C_UpdateWeight) == 0x000008, "Wrong alignment on BP_ExtCookingMenu_C_UpdateWeight");
static_assert(sizeof(BP_ExtCookingMenu_C_UpdateWeight) == 0x000100, "Wrong size on BP_ExtCookingMenu_C_UpdateWeight");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'BP_ExtCookingMenu_C_UpdateWeight::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'BP_ExtCookingMenu_C_UpdateWeight::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, Temp_bool_Variable) == 0x00002C, "Member 'BP_ExtCookingMenu_C_UpdateWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00002D, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000030, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000060, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_MakeLiteralText_ReturnValue) == 0x000078, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, K2Node_Select_Default) == 0x000090, "Member 'BP_ExtCookingMenu_C_UpdateWeight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000A8, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D8, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast) == 0x0000F0, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_GreaterEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ExtCookingMenu_C_UpdateWeight, CallFunc_Conv_DoubleToText_Value_ImplicitCast) == 0x0000F8, "Member 'BP_ExtCookingMenu_C_UpdateWeight::CallFunc_Conv_DoubleToText_Value_ImplicitCast' has a wrong offset!");

}

