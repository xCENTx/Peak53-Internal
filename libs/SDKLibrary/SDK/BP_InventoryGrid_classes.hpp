#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryGrid

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_InventoryGrid.BP_InventoryGrid_C
// 0x0080 (0x02F8 - 0x0278)
class UBP_InventoryGrid_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UUniformGridPanel*                      CellGrid;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             ItemGrid;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  GridInventory;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    NewCell;                                           // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                NewItemIcon;                                       // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         BlockIndex;                                        // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D48[0x4];                                     // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryHUD_C*                     PlayerHUD;                                         // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           Timer;                                             // 0x02C0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          Resuffle;                                          // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CustomLayout;                                      // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D49[0x6];                                     // 0x02CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_InventoryCell_C*>            InvCells;                                          // 0x02D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class UBP_InventoryItemIcon_C*>        InvItemIcons;                                      // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         ArrayIndex;                                        // 0x02F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClearInvGrid();
	void Construct();
	void ConstructInvGrid(bool Preview);
	void Destruct();
	void ExecuteUbergraph_BP_InventoryGrid(int32 EntryPoint);
	void GetCellCount(int32* InventoryCells);
	void GetInvColumns(int32* Columns);
	void SGK_CellSlots(TArray<class UBP_InventoryCell_C*>* Cells);
	void SGK_ConstructGrid(class UBP_MasterInventory_C* Param_GridInventory);
	void SGK_InvItemSlots(TArray<class UBP_InventoryItemIcon_C*>* ItemInvWidgets);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InventoryGrid_C">();
	}
	static class UBP_InventoryGrid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_InventoryGrid_C>();
	}
};
static_assert(alignof(UBP_InventoryGrid_C) == 0x000008, "Wrong alignment on UBP_InventoryGrid_C");
static_assert(sizeof(UBP_InventoryGrid_C) == 0x0002F8, "Wrong size on UBP_InventoryGrid_C");
static_assert(offsetof(UBP_InventoryGrid_C, UberGraphFrame) == 0x000278, "Member 'UBP_InventoryGrid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, CellGrid) == 0x000280, "Member 'UBP_InventoryGrid_C::CellGrid' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, ItemGrid) == 0x000288, "Member 'UBP_InventoryGrid_C::ItemGrid' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, GridInventory) == 0x000290, "Member 'UBP_InventoryGrid_C::GridInventory' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, PlayerInventory) == 0x000298, "Member 'UBP_InventoryGrid_C::PlayerInventory' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, NewCell) == 0x0002A0, "Member 'UBP_InventoryGrid_C::NewCell' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, NewItemIcon) == 0x0002A8, "Member 'UBP_InventoryGrid_C::NewItemIcon' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, BlockIndex) == 0x0002B0, "Member 'UBP_InventoryGrid_C::BlockIndex' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, PlayerHUD) == 0x0002B8, "Member 'UBP_InventoryGrid_C::PlayerHUD' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, Timer) == 0x0002C0, "Member 'UBP_InventoryGrid_C::Timer' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, Resuffle) == 0x0002C8, "Member 'UBP_InventoryGrid_C::Resuffle' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, CustomLayout) == 0x0002C9, "Member 'UBP_InventoryGrid_C::CustomLayout' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, InvCells) == 0x0002D0, "Member 'UBP_InventoryGrid_C::InvCells' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, InvItemIcons) == 0x0002E0, "Member 'UBP_InventoryGrid_C::InvItemIcons' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_C, ArrayIndex) == 0x0002F0, "Member 'UBP_InventoryGrid_C::ArrayIndex' has a wrong offset!");

}

