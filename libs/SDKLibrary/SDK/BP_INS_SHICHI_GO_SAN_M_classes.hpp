#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_INS_SHICHI_GO_SAN_M

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_INS_Breakwater_M2_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_INS_SHICHI_GO_SAN_M.BP_INS_SHICHI_GO_SAN_M_C
// 0x0040 (0x1C40 - 0x1C00)
class ABP_INS_SHICHI_GO_SAN_M_C : public ABP_INS_Breakwater_M2_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_INS_SHICHI_GO_SAN_M_C;           // 0x1C00(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Holster;                                           // 0x1C08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Vest;                                              // 0x1C10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Backpack;                                          // 0x1C18(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Shoulders;                                         // 0x1C20(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hat;                                               // 0x1C28(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_Samurai_Ronin_Body_Set4;                        // 0x1C30(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_INS_SHICHI_GO_SAN_M(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_INS_SHICHI_GO_SAN_M_C">();
	}
	static class ABP_INS_SHICHI_GO_SAN_M_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_INS_SHICHI_GO_SAN_M_C>();
	}
};
static_assert(alignof(ABP_INS_SHICHI_GO_SAN_M_C) == 0x000010, "Wrong alignment on ABP_INS_SHICHI_GO_SAN_M_C");
static_assert(sizeof(ABP_INS_SHICHI_GO_SAN_M_C) == 0x001C40, "Wrong size on ABP_INS_SHICHI_GO_SAN_M_C");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, UberGraphFrame_BP_INS_SHICHI_GO_SAN_M_C) == 0x001C00, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::UberGraphFrame_BP_INS_SHICHI_GO_SAN_M_C' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, Holster) == 0x001C08, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::Holster' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, Vest) == 0x001C10, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::Vest' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, Backpack) == 0x001C18, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::Backpack' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, Shoulders) == 0x001C20, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::Shoulders' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, Hat) == 0x001C28, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::Hat' has a wrong offset!");
static_assert(offsetof(ABP_INS_SHICHI_GO_SAN_M_C, SK_Samurai_Ronin_Body_Set4) == 0x001C30, "Member 'ABP_INS_SHICHI_GO_SAN_M_C::SK_Samurai_Ronin_Body_Set4' has a wrong offset!");

}

