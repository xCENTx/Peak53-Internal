#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScoreboardPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Peak53Teams_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ScoreboardPlayer.ScoreboardPlayer_C
// 0x0090 (0x0308 - 0x0278)
class UScoreboardPlayer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BombImage;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bot;                                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClanIcon;                                          // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       CommonTextBlock_71;                                // 0x0298(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Left;                                              // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_0;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerDeaths;                                      // 0x02B0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerKills;                                       // 0x02B8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerMVP;                                         // 0x02C0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerScore;                                       // 0x02C8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       PlayerTag;                                         // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Rank;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right;                                             // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 StripeColor;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Top;                                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          DistinctStripe_;                                   // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EPeak53Teams                                  Team;                                              // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_44E6[0x6];                                     // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   PlayerState;                                       // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ClanImage(class UObject* Image);
	void Construct();
	void ExecuteUbergraph_ScoreboardPlayer(int32 EntryPoint);
	class FText Get_PlayerDeaths_Text_0();
	class FText Get_PlayerKills_Text_0();
	class FText Get_PlayerMVP_Text();
	class FText Get_PlayerName_Text_0();
	class FText Get_PlayerScore_Text_0();
	struct FSlateColor Get_PlayerTag_ColorAndOpacity();
	class FText Get_PlayerTag_Text_0();
	struct FSlateBrush Get_Rank_Brush();
	struct FSlateColor GetColorAndOpacity();
	ESlateVisibility GetVisibility_0();
	ESlateVisibility GetVisibility_1();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ScoreboardPlayer_C">();
	}
	static class UScoreboardPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UScoreboardPlayer_C>();
	}
};
static_assert(alignof(UScoreboardPlayer_C) == 0x000008, "Wrong alignment on UScoreboardPlayer_C");
static_assert(sizeof(UScoreboardPlayer_C) == 0x000308, "Wrong size on UScoreboardPlayer_C");
static_assert(offsetof(UScoreboardPlayer_C, UberGraphFrame) == 0x000278, "Member 'UScoreboardPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, BombImage) == 0x000280, "Member 'UScoreboardPlayer_C::BombImage' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Bot) == 0x000288, "Member 'UScoreboardPlayer_C::Bot' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, ClanIcon) == 0x000290, "Member 'UScoreboardPlayer_C::ClanIcon' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, CommonTextBlock_71) == 0x000298, "Member 'UScoreboardPlayer_C::CommonTextBlock_71' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Left) == 0x0002A0, "Member 'UScoreboardPlayer_C::Left' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Overlay_0) == 0x0002A8, "Member 'UScoreboardPlayer_C::Overlay_0' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerDeaths) == 0x0002B0, "Member 'UScoreboardPlayer_C::PlayerDeaths' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerKills) == 0x0002B8, "Member 'UScoreboardPlayer_C::PlayerKills' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerMVP) == 0x0002C0, "Member 'UScoreboardPlayer_C::PlayerMVP' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerScore) == 0x0002C8, "Member 'UScoreboardPlayer_C::PlayerScore' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerTag) == 0x0002D0, "Member 'UScoreboardPlayer_C::PlayerTag' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Rank) == 0x0002D8, "Member 'UScoreboardPlayer_C::Rank' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Right) == 0x0002E0, "Member 'UScoreboardPlayer_C::Right' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, StripeColor) == 0x0002E8, "Member 'UScoreboardPlayer_C::StripeColor' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Top) == 0x0002F0, "Member 'UScoreboardPlayer_C::Top' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, DistinctStripe_) == 0x0002F8, "Member 'UScoreboardPlayer_C::DistinctStripe_' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, Team) == 0x0002F9, "Member 'UScoreboardPlayer_C::Team' has a wrong offset!");
static_assert(offsetof(UScoreboardPlayer_C, PlayerState) == 0x000300, "Member 'UScoreboardPlayer_C::PlayerState' has a wrong offset!");

}

