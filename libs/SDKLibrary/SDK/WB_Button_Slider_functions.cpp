#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Button_Slider

#include "Basic.hpp"

#include "WB_Button_Slider_classes.hpp"
#include "WB_Button_Slider_parameters.hpp"


namespace SDK
{

// Function WB_Button_Slider.WB_Button_Slider_C.AlignStateTextWidth
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Button_Slider_C::AlignStateTextWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "AlignStateTextWidth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BndEvt__WB_Button_Slider_Slider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::BndEvt__WB_Button_Slider_Slider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BndEvt__WB_Button_Slider_Slider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");

	Params::WB_Button_Slider_C_BndEvt__WB_Button_Slider_Slider_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    Param_bUsingGamepad                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool Param_bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature");

	Params::WB_Button_Slider_C_BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.Param_bUsingGamepad = Param_bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnDisabled
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnEnabled
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UWB_Button_Slider_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_Button_Slider_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.CustomValueChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::CustomValueChanged(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "CustomValueChanged");

	Params::WB_Button_Slider_C_CustomValueChanged Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.ExecuteUbergraph_WB_Button_Slider
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::ExecuteUbergraph_WB_Button_Slider(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "ExecuteUbergraph_WB_Button_Slider");

	Params::WB_Button_Slider_C_ExecuteUbergraph_WB_Button_Slider Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.FindTextInfoByButtonState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECommonButtonState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ButtonTextInfo_PMM            S_ButtonTextInfo_PMM                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FS_TextInfo_PMM                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FS_TextInfo_PMM UWB_Button_Slider_C::FindTextInfoByButtonState(ECommonButtonState State, const struct FS_ButtonTextInfo_PMM& S_ButtonTextInfo_PMM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "FindTextInfoByButtonState");

	Params::WB_Button_Slider_C_FindTextInfoByButtonState Parms{};

	Parms.State = State;
	Parms.S_ButtonTextInfo_PMM = std::move(S_ButtonTextInfo_PMM);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_Slider.WB_Button_Slider_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FAnalogInputEvent                InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_Button_Slider_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "OnAnalogValueChanged");

	Params::WB_Button_Slider_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_Slider.WB_Button_Slider_C.OnLeftExecute
// (BlueprintCallable, BlueprintEvent)

void UWB_Button_Slider_C::OnLeftExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "OnLeftExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_Button_Slider_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "OnPreviewKeyDown");

	Params::WB_Button_Slider_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_Slider.WB_Button_Slider_C.OnRightExecute
// (BlueprintCallable, BlueprintEvent)

void UWB_Button_Slider_C::OnRightExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "OnRightExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_Slider.WB_Button_Slider_C.OnValueChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_Button_Slider_C*              Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "OnValueChanged__DelegateSignature");

	Params::WB_Button_Slider_C_OnValueChanged__DelegateSignature Parms{};

	Parms.Button = Button;
	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "PreConstruct");

	Params::WB_Button_Slider_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_Button_Slider_C::SetButtonText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetButtonText");

	Params::WB_Button_Slider_C_SetButtonText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetButtonTextInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonButtonState                      InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetButtonTextInfo(ECommonButtonState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetButtonTextInfo");

	Params::WB_Button_Slider_C_SetButtonTextInfo Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetInputSwitcherGamepad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetInputSwitcherGamepad(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetInputSwitcherGamepad");

	Params::WB_Button_Slider_C_SetInputSwitcherGamepad Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetInputSwitcherVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetInputSwitcherVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetInputSwitcherVisibility");

	Params::WB_Button_Slider_C_SetInputSwitcherVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetSliderText
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetSliderText(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetSliderText");

	Params::WB_Button_Slider_C_SetSliderText Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetSliderValue
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InValue                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Param_bSkipCallback                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetSliderValue(float InValue, bool Param_bSkipCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetSliderValue");

	Params::WB_Button_Slider_C_SetSliderValue Parms{};

	Parms.InValue = InValue;
	Parms.Param_bSkipCallback = Param_bSkipCallback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetSliderWidth
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PC_Width                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Gamepad_Width                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetSliderWidth(float PC_Width, float Gamepad_Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetSliderWidth");

	Params::WB_Button_Slider_C_SetSliderWidth Parms{};

	Parms.PC_Width = PC_Width;
	Parms.Gamepad_Width = Gamepad_Width;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetTextInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonTextBlock*                 InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FS_TextInfo_PMM                  TextInfo                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetTextInfo(class UCommonTextBlock* InText, const struct FS_TextInfo_PMM& TextInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetTextInfo");

	Params::WB_Button_Slider_C_SetTextInfo Parms{};

	Parms.InText = InText;
	Parms.TextInfo = std::move(TextInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetTextVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::SetTextVisibility(class UWidget* InText, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetTextVisibility");

	Params::WB_Button_Slider_C_SetTextVisibility Parms{};

	Parms.InText = InText;
	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.SetValueText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_Button_Slider_C::SetValueText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "SetValueText");

	Params::WB_Button_Slider_C_SetValueText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_ClampValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UWB_Button_Slider_C::Slider_ClampValue(double Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_ClampValue");

	Params::WB_Button_Slider_C_Slider_ClampValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_GetValue
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UWB_Button_Slider_C::Slider_GetValue()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_GetValue");

	Params::WB_Button_Slider_C_Slider_GetValue Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_SetMaxValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_MaxValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::Slider_SetMaxValue(float Param_MaxValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_SetMaxValue");

	Params::WB_Button_Slider_C_Slider_SetMaxValue Parms{};

	Parms.Param_MaxValue = Param_MaxValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_SetMinValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_MinValue                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::Slider_SetMinValue(float Param_MinValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_SetMinValue");

	Params::WB_Button_Slider_C_Slider_SetMinValue Parms{};

	Parms.Param_MinValue = Param_MinValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_SetStepSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Param_StepSize                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::Slider_SetStepSize(float Param_StepSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_SetStepSize");

	Params::WB_Button_Slider_C_Slider_SetStepSize Parms{};

	Parms.Param_StepSize = Param_StepSize;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_Slider.WB_Button_Slider_C.Slider_SetValue
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_Slider_C::Slider_SetValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_Slider_C", "Slider_SetValue");

	Params::WB_Button_Slider_C_Slider_SetValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}

}

