#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_leaderboards_details

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SteamCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass w_leaderboards_details.w_leaderboards_details_C
// 0x0080 (0x02F8 - 0x0278)
class UW_leaderboards_details_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Insignia;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_player_name;                                 // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_rank;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Label_score;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RankName;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSteamLeaderboardEntry                 LeaderboardEntry;                                  // 0x02A8(0x0020)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	class FString                                 LeaderboardName;                                   // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ShowGlobalRank;                                    // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_41EA[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   MyCurrentScore;                                    // 0x02E0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Construct();
	void ExecuteUbergraph_w_leaderboards_details(int32 EntryPoint);
	struct FSlateBrush Get_Insignia_Brush();
	class FText Get_RankName_Text();
	void OnCallback_21F3C685470459C24F2FC3B140CE5300();
	void PersonaStateChange_Event_0(const struct FPersonaStateChange& Data);
	void UpdateEntry();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"w_leaderboards_details_C">();
	}
	static class UW_leaderboards_details_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_leaderboards_details_C>();
	}
};
static_assert(alignof(UW_leaderboards_details_C) == 0x000008, "Wrong alignment on UW_leaderboards_details_C");
static_assert(sizeof(UW_leaderboards_details_C) == 0x0002F8, "Wrong size on UW_leaderboards_details_C");
static_assert(offsetof(UW_leaderboards_details_C, UberGraphFrame) == 0x000278, "Member 'UW_leaderboards_details_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, Insignia) == 0x000280, "Member 'UW_leaderboards_details_C::Insignia' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, Label_player_name) == 0x000288, "Member 'UW_leaderboards_details_C::Label_player_name' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, Label_rank) == 0x000290, "Member 'UW_leaderboards_details_C::Label_rank' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, Label_score) == 0x000298, "Member 'UW_leaderboards_details_C::Label_score' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, RankName) == 0x0002A0, "Member 'UW_leaderboards_details_C::RankName' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, LeaderboardEntry) == 0x0002A8, "Member 'UW_leaderboards_details_C::LeaderboardEntry' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, LeaderboardName) == 0x0002C8, "Member 'UW_leaderboards_details_C::LeaderboardName' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, ShowGlobalRank) == 0x0002D8, "Member 'UW_leaderboards_details_C::ShowGlobalRank' has a wrong offset!");
static_assert(offsetof(UW_leaderboards_details_C, MyCurrentScore) == 0x0002E0, "Member 'UW_leaderboards_details_C::MyCurrentScore' has a wrong offset!");

}

