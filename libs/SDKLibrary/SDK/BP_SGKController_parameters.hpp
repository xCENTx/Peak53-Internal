#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKController

#include "Basic.hpp"

#include "S_InvItem_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "S_PlayerSave_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "E_WeaponSlots_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "E_EquipmentType_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_WeaponSlot_structs.hpp"
#include "S_EquipmentSlotID_structs.hpp"
#include "S_EquipmentSlot_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AttachmentType_structs.hpp"
#include "E_Sounds_structs.hpp"
#include "Peak53Teams_structs.hpp"
#include "Slate_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_StartingWeaponItem_structs.hpp"
#include "SteamCore_structs.hpp"
#include "S_ScoreValues_structs.hpp"
#include "Peak53_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "UMG_structs.hpp"
#include "EnhancedInput_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKController.BP_SGKController_C.AddEquipmentComponent
// 0x02D0 (0x02D0 - 0x0000)
struct BP_SGKController_C_AddEquipmentComponent final
{
public:
	struct FS_ContainerDetails                    InvDetailsL;                                       // 0x0000(0x0070)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_CharacterComponent_C*               CharacterCompL;                                    // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 WeaponSlotL;                                       // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               EquipmentSlotL;                                    // 0x0079(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9F[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               NewEquipmentInvL;                                  // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA0[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA1[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_CraftingCost>                K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA2[0x2];                                     // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA3[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA4[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0138(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0148(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA5[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x01A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA6[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x01D8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x01E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA7[0x3];                                     // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA8[0x7];                                     // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0250(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0260(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA9[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_1;             // 0x02B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAA[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               CallFunc_AddComponent_ReturnValue;                 // 0x02C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_AddEquipmentComponent) == 0x000010, "Wrong alignment on BP_SGKController_C_AddEquipmentComponent");
static_assert(sizeof(BP_SGKController_C_AddEquipmentComponent) == 0x0002D0, "Wrong size on BP_SGKController_C_AddEquipmentComponent");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, InvDetailsL) == 0x000000, "Member 'BP_SGKController_C_AddEquipmentComponent::InvDetailsL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CharacterCompL) == 0x000070, "Member 'BP_SGKController_C_AddEquipmentComponent::CharacterCompL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, WeaponSlotL) == 0x000078, "Member 'BP_SGKController_C_AddEquipmentComponent::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, EquipmentSlotL) == 0x000079, "Member 'BP_SGKController_C_AddEquipmentComponent::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, NewEquipmentInvL) == 0x000080, "Member 'BP_SGKController_C_AddEquipmentComponent::NewEquipmentInvL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, Temp_struct_Variable) == 0x000090, "Member 'BP_SGKController_C_AddEquipmentComponent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x0000F0, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_MakeArray_Array) == 0x000100, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, Temp_int_Variable) == 0x000110, "Member 'BP_SGKController_C_AddEquipmentComponent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Conv_IntToByte_ReturnValue) == 0x000114, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_GetValidValue_ReturnValue) == 0x000115, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_MakeLiteralInt_ReturnValue) == 0x00011C, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000120, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000128, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000130, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_MakeStruct_S_WeaponSlotID) == 0x000138, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000148, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, Temp_int_Variable_1) == 0x000198, "Member 'BP_SGKController_C_AddEquipmentComponent::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00019C, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_SetFieldsInStruct_StructOut) == 0x0001A0, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_GetValidValue_ReturnValue_1) == 0x0001D0, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0001D8, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x0001E8, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x000238, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Greater_IntInt_ReturnValue) == 0x00023C, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000240, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000244, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000248, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000250, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000260, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_CheckEquipmentSlot_SlotFull) == 0x0002A8, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, K2Node_MakeStruct_S_EquipmentSlotID_1) == 0x0002B0, "Member 'BP_SGKController_C_AddEquipmentComponent::K2Node_MakeStruct_S_EquipmentSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_EquipItem_ItemEquipped) == 0x0002C0, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_AddEquipmentComponent, CallFunc_AddComponent_ReturnValue) == 0x0002C8, "Member 'BP_SGKController_C_AddEquipmentComponent::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.AddOnScreenMarker
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_AddOnScreenMarker final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_AddOnScreenMarker) == 0x000008, "Wrong alignment on BP_SGKController_C_AddOnScreenMarker");
static_assert(sizeof(BP_SGKController_C_AddOnScreenMarker) == 0x000008, "Wrong size on BP_SGKController_C_AddOnScreenMarker");
static_assert(offsetof(BP_SGKController_C_AddOnScreenMarker, Target) == 0x000000, "Member 'BP_SGKController_C_AddOnScreenMarker::Target' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.BreachMulticast
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_BreachMulticast final
{
public:
	bool                                          Param_bCanBreach_;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_BreachMulticast) == 0x000001, "Wrong alignment on BP_SGKController_C_BreachMulticast");
static_assert(sizeof(BP_SGKController_C_BreachMulticast) == 0x000001, "Wrong size on BP_SGKController_C_BreachMulticast");
static_assert(offsetof(BP_SGKController_C_BreachMulticast, Param_bCanBreach_) == 0x000000, "Member 'BP_SGKController_C_BreachMulticast::Param_bCanBreach_' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.BreachServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_BreachServer final
{
public:
	bool                                          Param_bCanBreach_;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_BreachServer) == 0x000001, "Wrong alignment on BP_SGKController_C_BreachServer");
static_assert(sizeof(BP_SGKController_C_BreachServer) == 0x000001, "Wrong size on BP_SGKController_C_BreachServer");
static_assert(offsetof(BP_SGKController_C_BreachServer, Param_bCanBreach_) == 0x000000, "Member 'BP_SGKController_C_BreachServer::Param_bCanBreach_' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ChangeTeamMulticast
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_ChangeTeamMulticast final
{
public:
	EPeak53Teams                                  Param_PlayerTeam;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ChangeTeamMulticast) == 0x000001, "Wrong alignment on BP_SGKController_C_ChangeTeamMulticast");
static_assert(sizeof(BP_SGKController_C_ChangeTeamMulticast) == 0x000001, "Wrong size on BP_SGKController_C_ChangeTeamMulticast");
static_assert(offsetof(BP_SGKController_C_ChangeTeamMulticast, Param_PlayerTeam) == 0x000000, "Member 'BP_SGKController_C_ChangeTeamMulticast::Param_PlayerTeam' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ChangeTeamServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_ChangeTeamServer final
{
public:
	EPeak53Teams                                  Param_PlayerTeam;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ChangeTeamServer) == 0x000001, "Wrong alignment on BP_SGKController_C_ChangeTeamServer");
static_assert(sizeof(BP_SGKController_C_ChangeTeamServer) == 0x000001, "Wrong size on BP_SGKController_C_ChangeTeamServer");
static_assert(offsetof(BP_SGKController_C_ChangeTeamServer, Param_PlayerTeam) == 0x000000, "Member 'BP_SGKController_C_ChangeTeamServer::Param_PlayerTeam' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CheckFFA
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKController_C_CheckFFA final
{
public:
	bool                                          FFA_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CheckFFA) == 0x000008, "Wrong alignment on BP_SGKController_C_CheckFFA");
static_assert(sizeof(BP_SGKController_C_CheckFFA) == 0x000020, "Wrong size on BP_SGKController_C_CheckFFA");
static_assert(offsetof(BP_SGKController_C_CheckFFA, FFA_) == 0x000000, "Member 'BP_SGKController_C_CheckFFA::FFA_' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckFFA, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_SGKController_C_CheckFFA::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckFFA, CallFunc_Contains_ReturnValue) == 0x000018, "Member 'BP_SGKController_C_CheckFFA::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CheckIfActorHasOnScreenMarker
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKController_C_CheckIfActorHasOnScreenMarker final
{
public:
	class UObject*                                TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          My_result;                                         // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAC[0x1];                                     // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAD[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAE[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_on_screen_marker_C*                  K2Node_DynamicCast_AsW_On_Screen_Marker;           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CheckIfActorHasOnScreenMarker) == 0x000008, "Wrong alignment on BP_SGKController_C_CheckIfActorHasOnScreenMarker");
static_assert(sizeof(BP_SGKController_C_CheckIfActorHasOnScreenMarker) == 0x000040, "Wrong size on BP_SGKController_C_CheckIfActorHasOnScreenMarker");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, TargetActor) == 0x000000, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, Result) == 0x000008, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::Result' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, My_result) == 0x000009, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::My_result' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, Temp_bool_True_if_break_was_hit_Variable) == 0x00000A, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, K2Node_DynamicCast_AsW_On_Screen_Marker) == 0x000030, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::K2Node_DynamicCast_AsW_On_Screen_Marker' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CheckIfActorHasOnScreenMarker, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00003A, "Member 'BP_SGKController_C_CheckIfActorHasOnScreenMarker::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ClientPlaySound2d
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_ClientPlaySound2d final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ClientPlaySound2d) == 0x000008, "Wrong alignment on BP_SGKController_C_ClientPlaySound2d");
static_assert(sizeof(BP_SGKController_C_ClientPlaySound2d) == 0x000008, "Wrong size on BP_SGKController_C_ClientPlaySound2d");
static_assert(offsetof(BP_SGKController_C_ClientPlaySound2d, Sound) == 0x000000, "Member 'BP_SGKController_C_ClientPlaySound2d::Sound' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ClientSpectatePlayer
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_ClientSpectatePlayer final
{
public:
	class AActor*                                 NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ClientSpectatePlayer) == 0x000008, "Wrong alignment on BP_SGKController_C_ClientSpectatePlayer");
static_assert(sizeof(BP_SGKController_C_ClientSpectatePlayer) == 0x000008, "Wrong size on BP_SGKController_C_ClientSpectatePlayer");
static_assert(offsetof(BP_SGKController_C_ClientSpectatePlayer, NewViewTarget) == 0x000000, "Member 'BP_SGKController_C_ClientSpectatePlayer::NewViewTarget' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDAddOnScreenMarker
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_CMDAddOnScreenMarker final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDAddOnScreenMarker) == 0x000008, "Wrong alignment on BP_SGKController_C_CMDAddOnScreenMarker");
static_assert(sizeof(BP_SGKController_C_CMDAddOnScreenMarker) == 0x000008, "Wrong size on BP_SGKController_C_CMDAddOnScreenMarker");
static_assert(offsetof(BP_SGKController_C_CMDAddOnScreenMarker, Target) == 0x000000, "Member 'BP_SGKController_C_CMDAddOnScreenMarker::Target' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDCallVoteForKick
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKController_C_CMDCallVoteForKick final
{
public:
	EPeak53Teams                                  Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FAF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   CurrentPlayerPlayerstate;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDCallVoteForKick) == 0x000008, "Wrong alignment on BP_SGKController_C_CMDCallVoteForKick");
static_assert(sizeof(BP_SGKController_C_CMDCallVoteForKick) == 0x000010, "Wrong size on BP_SGKController_C_CMDCallVoteForKick");
static_assert(offsetof(BP_SGKController_C_CMDCallVoteForKick, Team) == 0x000000, "Member 'BP_SGKController_C_CMDCallVoteForKick::Team' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CMDCallVoteForKick, CurrentPlayerPlayerstate) == 0x000008, "Member 'BP_SGKController_C_CMDCallVoteForKick::CurrentPlayerPlayerstate' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDRemoveOnScreenMarker
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_CMDRemoveOnScreenMarker final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDRemoveOnScreenMarker) == 0x000008, "Wrong alignment on BP_SGKController_C_CMDRemoveOnScreenMarker");
static_assert(sizeof(BP_SGKController_C_CMDRemoveOnScreenMarker) == 0x000008, "Wrong size on BP_SGKController_C_CMDRemoveOnScreenMarker");
static_assert(offsetof(BP_SGKController_C_CMDRemoveOnScreenMarker, TargetActor) == 0x000000, "Member 'BP_SGKController_C_CMDRemoveOnScreenMarker::TargetActor' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDServerAuth
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKController_C_CMDServerAuth final
{
public:
	TArray<uint8>                                 Param_SessionAuthTicket;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 Value;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDServerAuth) == 0x000008, "Wrong alignment on BP_SGKController_C_CMDServerAuth");
static_assert(sizeof(BP_SGKController_C_CMDServerAuth) == 0x000020, "Wrong size on BP_SGKController_C_CMDServerAuth");
static_assert(offsetof(BP_SGKController_C_CMDServerAuth, Param_SessionAuthTicket) == 0x000000, "Member 'BP_SGKController_C_CMDServerAuth::Param_SessionAuthTicket' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_CMDServerAuth, Value) == 0x000010, "Member 'BP_SGKController_C_CMDServerAuth::Value' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDVoteForVoteableMap
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKController_C_CMDVoteForVoteableMap final
{
public:
	int32                                         LevelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDVoteForVoteableMap) == 0x000004, "Wrong alignment on BP_SGKController_C_CMDVoteForVoteableMap");
static_assert(sizeof(BP_SGKController_C_CMDVoteForVoteableMap) == 0x000004, "Wrong size on BP_SGKController_C_CMDVoteForVoteableMap");
static_assert(offsetof(BP_SGKController_C_CMDVoteForVoteableMap, LevelIndex) == 0x000000, "Member 'BP_SGKController_C_CMDVoteForVoteableMap::LevelIndex' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CMDVoteYesOrNo
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_CMDVoteYesOrNo final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CMDVoteYesOrNo) == 0x000001, "Wrong alignment on BP_SGKController_C_CMDVoteYesOrNo");
static_assert(sizeof(BP_SGKController_C_CMDVoteYesOrNo) == 0x000001, "Wrong size on BP_SGKController_C_CMDVoteYesOrNo");
static_assert(offsetof(BP_SGKController_C_CMDVoteYesOrNo, Yes) == 0x000000, "Member 'BP_SGKController_C_CMDVoteYesOrNo::Yes' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ControllerRefreshScoreboard
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_ControllerRefreshScoreboard final
{
public:
	EPeak53Teams                                  Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ControllerRefreshScoreboard) == 0x000001, "Wrong alignment on BP_SGKController_C_ControllerRefreshScoreboard");
static_assert(sizeof(BP_SGKController_C_ControllerRefreshScoreboard) == 0x000001, "Wrong size on BP_SGKController_C_ControllerRefreshScoreboard");
static_assert(offsetof(BP_SGKController_C_ControllerRefreshScoreboard, Team) == 0x000000, "Member 'BP_SGKController_C_ControllerRefreshScoreboard::Team' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ControllerSendMessage
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKController_C_ControllerSendMessage final
{
public:
	class FText                                   MessageFeedVar;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	ETextJustify                                  Justification;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB0[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            In_Color_and_Opacity;                              // 0x001C(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         In_Font_Info_Size;                                 // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ControllerSendMessage) == 0x000008, "Wrong alignment on BP_SGKController_C_ControllerSendMessage");
static_assert(sizeof(BP_SGKController_C_ControllerSendMessage) == 0x000038, "Wrong size on BP_SGKController_C_ControllerSendMessage");
static_assert(offsetof(BP_SGKController_C_ControllerSendMessage, MessageFeedVar) == 0x000000, "Member 'BP_SGKController_C_ControllerSendMessage::MessageFeedVar' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ControllerSendMessage, Justification) == 0x000018, "Member 'BP_SGKController_C_ControllerSendMessage::Justification' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ControllerSendMessage, In_Color_and_Opacity) == 0x00001C, "Member 'BP_SGKController_C_ControllerSendMessage::In_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ControllerSendMessage, In_Font_Info_Size) == 0x000030, "Member 'BP_SGKController_C_ControllerSendMessage::In_Font_Info_Size' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.CrosshairHop
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_CrosshairHop final
{
public:
	double                                        CounterBounce;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_CrosshairHop) == 0x000008, "Wrong alignment on BP_SGKController_C_CrosshairHop");
static_assert(sizeof(BP_SGKController_C_CrosshairHop) == 0x000008, "Wrong size on BP_SGKController_C_CrosshairHop");
static_assert(offsetof(BP_SGKController_C_CrosshairHop, CounterBounce) == 0x000000, "Member 'BP_SGKController_C_CrosshairHop::CounterBounce' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ExecuteUbergraph_BP_SGKController
// 0x1B60 (0x1B60 - 0x0000)
struct BP_SGKController_C_ExecuteUbergraph_BP_SGKController final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB1[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetMapIntroSettings_bFound;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPKMapIntroSettings                    CallFunc_GetMapIntroSettings_OutSettings;          // 0x0020(0x0010)(NoDestructor)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayIntro_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB3[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USteamGameServer*                       CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB4[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0050(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB5[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                Temp_object_Variable;                              // 0x0088(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	const class APlayerController*                Temp_object_Variable_1;                            // 0x0090(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB6[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x00C0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_7;                        // 0x00D8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentType                              K2Node_Event_Attachment;                           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB7[0x5];                                     // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_Event_InvSlot_1;                            // 0x00F8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_Event_InvSlot;                              // 0x0148(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ItemID;                               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      K2Node_Event_SoundType;                            // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB8[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target_1;                       // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor_1;                  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_TargetActor;                    // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FB9[0x7];                                     // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USettingsUI_C*                          CallFunc_Create_ReturnValue_1;                     // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBA[0x5];                                     // 0x0203(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isSteamLoggedIn_NewParam;                 // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBB[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         K2Node_MakeArray_Array;                            // 0x0240(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0250(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBC[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_MyGameManager;                  // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerScore;                    // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerKills_2;                  // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_PlayerDeath;                    // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MVPScore;                       // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MVPKills;                       // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_MVPDeaths;                      // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_MVPName;                        // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SealsScoreGlobal;               // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SealsKillsGlobal;               // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_SealsDeathsGlobal;              // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InsurgentsScoreGlobal;          // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InsurgentsKillsGlobal;          // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InsurgentsDeathsGlobal;         // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_WinnerTeam;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBD[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_UnlockedItem;                   // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_8;                        // 0x02B8(0x0018)(HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetKeyGroupStatic_ReturnValue;            // 0x02D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBE[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_1;        // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FBF[0x5];                                     // 0x02F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC0[0x2];                                     // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float NewValue)>               K2Node_CreateDelegate_OutputDelegate_1;            // 0x0304(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC1[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_PlayerName_1;                   // 0x0318(0x0018)()
	class FText                                   K2Node_CustomEvent_PlayerName;                     // 0x0330(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC2[0x6];                                     // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Score_1;                        // 0x0350(0x0018)()
	class FText                                   K2Node_CustomEvent_Score;                          // 0x0368(0x0018)()
	EPeak53Teams                                  K2Node_CustomEvent_Team_3;                         // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC3[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC4[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_PlayerTeam_1;                   // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_PlayerTeam;                     // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC5[0x6];                                     // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_MessageFeedVar;                 // 0x0398(0x0018)()
	ETextJustify                                  K2Node_CustomEvent_Justification;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC6[0x3];                                     // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_CustomEvent_In_Color_and_Opacity;           // 0x03B4(0x0014)()
	int32                                         K2Node_CustomEvent_In_Font_Info_Size;              // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC7[0x4];                                     // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_PlayerKills_1;                  // 0x03D0(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC8[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_PlayerKills;                    // 0x03F0(0x0018)()
	class FText                                   K2Node_CustomEvent_PlayerDeaths_1;                 // 0x0408(0x0018)()
	class FText                                   K2Node_CustomEvent_PlayerDeaths;                   // 0x0420(0x0018)()
	class FText                                   K2Node_CustomEvent_MessageToBeSendFeedController_1; // 0x0438(0x0018)()
	class FText                                   K2Node_CustomEvent_MessageToBeSendFeedController;  // 0x0450(0x0018)()
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC9[0x7];                                     // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_1;        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCA[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_2;        // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCB[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_3;        // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCC[0x7];                                     // 0x04A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_4;        // 0x04A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCD[0x7];                                     // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_5;        // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x04C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x04C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCE[0x5];                                     // 0x04C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x04C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FCF[0x4];                                     // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x04E0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          K2Node_CustomEvent_S_WeaponSlot;                   // 0x0530(0x0050)(ConstParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0580(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0590(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x05A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x05B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD0[0x4];                                     // 0x05C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClass_OutActors;            // 0x05C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_Array_Get_Item_1;                         // 0x05E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ACineCameraActor*>               CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x05F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD1[0x4];                                     // 0x0604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue_1;               // 0x0608(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACineCameraActor*                       CallFunc_Array_Get_Item_2;                         // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue_1;       // 0x0620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD2[0x2];                                     // 0x062A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD3[0x4];                                     // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0638(0x0018)(HasGetValueTypeHash)
	class UClass*                                 K2Node_CustomEvent_Loadout;                        // 0x0650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_StartingWeaponItem>          K2Node_CustomEvent_WeaponsPrimary;                 // 0x0658(0x0010)(ReferenceParm)
	TArray<struct FS_StartingWeaponItem>          K2Node_CustomEvent_WeaponsSecondary;               // 0x0668(0x0010)(ReferenceParm)
	TArray<struct FS_CraftingCost>                K2Node_CustomEvent_WeaponsTool1;                   // 0x0678(0x0010)(ReferenceParm)
	TArray<struct FS_CraftingCost>                K2Node_CustomEvent_WeaponsTool2;                   // 0x0688(0x0010)(ReferenceParm)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_6;        // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x06A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x06A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD4[0x6];                                     // 0x06A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD5[0x3];                                     // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD6[0x4];                                     // 0x06C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UScoreboard_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x06C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UScoreboard_C*                          CallFunc_Create_ReturnValue_2;                     // 0x06D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UScoreboard_C*                          CallFunc_Array_Get_Item_3;                         // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD7[0x2];                                     // 0x06EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   Temp_struct_Variable;                              // 0x06F0(0x0018)(HasGetValueTypeHash)
	class UBombsiteInteractionWidget_C*           CallFunc_Create_ReturnValue_3;                     // 0x0708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD8[0x7];                                     // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD9[0x7];                                     // 0x0721(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDA[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0738(0x0018)(HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0750(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0760(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDB[0x7];                                     // 0x0769(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlantedBomb_C*                         K2Node_DynamicCast_AsPlanted_Bomb;                 // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDC[0x3];                                     // 0x0779(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDD[0x6];                                     // 0x0782(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_7;        // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0791(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0792(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0793(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDE[0x4];                                     // 0x0794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_8;        // 0x0798(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FDF[0xF];                                     // 0x07A1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x07B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_Team_2;                         // 0x0810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0811(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE0[0x6];                                     // 0x0812(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0818(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlantedBomb_C*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0828(0x0018)(HasGetValueTypeHash)
	class UBombDefuseWidget_C*                    CallFunc_Create_ReturnValue_4;                     // 0x0840(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE1[0x6];                                     // 0x084A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlantedBomb_C*>                 CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0850(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHasBomb_;                      // 0x0864(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingNetworkedRootMotionMontage_ReturnValue; // 0x0865(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE2[0x2];                                     // 0x0866(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0868(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_2;     // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE3[0x7];                                     // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_2;        // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE4[0x7];                                     // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0898(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE5[0x7];                                     // 0x08B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_1;            // 0x08B8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_1;        // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE6[0x7];                                     // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_2;            // 0x08D8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_2;        // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE7[0x7];                                     // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_3;            // 0x08F8(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_3;        // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE8[0x7];                                     // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue_4;            // 0x0918(0x0018)()
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue_4;        // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FE9[0x2];                                     // 0x0932(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_9;                        // 0x0938(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_10;                       // 0x0950(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FEA[0x3];                                     // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0979(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FEB[0x6];                                     // 0x097A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_5;                         // 0x0980(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_2;                   // 0x09D0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x09E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x09F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x09FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x09FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FEC[0x2];                                     // 0x09FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FED[0x4];                                     // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_9;        // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FEE[0x2];                                     // 0x0A12(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0A18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0A30(0x0018)()
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_10;       // 0x0A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FEF[0x7];                                     // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_11;       // 0x0A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF0[0x6];                                     // 0x0A62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0A70(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x0A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF1[0x3];                                     // 0x0A89(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF2[0x4];                                     // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_12;       // 0x0A98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF3[0x7];                                     // 0x0AA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0AA8(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_1;          // 0x0AC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF4[0x7];                                     // 0x0AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_13;       // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF5[0x3];                                     // 0x0AE1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PlayersAlive_PlayersLeftAlive;            // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_InInt;                          // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF6[0x4];                                     // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0AF0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0B01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA_;                            // 0x0B02(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__1;                          // 0x0B03(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF7[0x4];                                     // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_2;          // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0B22(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x0B23(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__2;                          // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__3;                          // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF8[0x6];                                     // 0x0B2A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_CounterBounce;                  // 0x0B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0B40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FF9[0x4];                                     // 0x0B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0B50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0B59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFA[0x2];                                     // 0x0B5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFB[0x4];                                     // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVaultWidget_C*                         CallFunc_Create_ReturnValue_5;                     // 0x0B68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0B71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFC[0x2];                                     // 0x0B72(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0B74(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFD[0x4];                                     // 0x0B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0B88(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0B90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0B91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFE[0x6];                                     // 0x0B92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBreachWidget_C*                        CallFunc_Create_ReturnValue_6;                     // 0x0B98(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0BA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKGameMode_C*                      K2Node_DynamicCast_AsBP_SGKGame_Mode;              // 0x0BA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0BB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FFF[0x7];                                     // 0x0BB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0BB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_3;          // 0x0BC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4000[0x7];                                     // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_4;          // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x0BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4001[0x7];                                     // 0x0BE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_5;          // 0x0BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4002[0x7];                                     // 0x0BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_2;                // 0x0C00(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_3;                // 0x0C10(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_NewViewTarget;                  // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0C28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4003[0x4];                                     // 0x0C2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0C30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0C58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0C70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0C88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0CA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x0CB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_6;          // 0x0CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4004[0x7];                                     // 0x0CC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class APlayerController*                Temp_object_Variable_2;                            // 0x0CD0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__4;                          // 0x0CD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__5;                          // 0x0CD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4005[0x6];                                     // 0x0CDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKGameMode_C*                      K2Node_DynamicCast_AsBP_SGKGame_Mode_1;            // 0x0CE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4006[0x7];                                     // 0x0CF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_14;       // 0x0CF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4007[0x7];                                     // 0x0D01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0D08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4008[0x4];                                     // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorCharacter_C*                  K2Node_DynamicCast_AsSpectator_Character;          // 0x0D18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4009[0x3];                                     // 0x0D21(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0D24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0D28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0D2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400A[0x3];                                     // 0x0D2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0D30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKGameMode_C*                      K2Node_DynamicCast_AsBP_SGKGame_Mode_2;            // 0x0D38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400B[0x7];                                     // 0x0D41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_15;       // 0x0D48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0D51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400C[0x6];                                     // 0x0D52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0D58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0D60(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_7;          // 0x0DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x0DC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400D[0x7];                                     // 0x0DC9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0DD0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0DE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400E[0x7];                                     // 0x0DF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0E00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0E10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0E18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0E20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x0E30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x0E31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_400F[0x6];                                     // 0x0E32(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetPosition_ReturnValue_1;                // 0x0E38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0E48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4010[0x4];                                     // 0x0E4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0E50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4011[0x7];                                     // 0x0E61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0E68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0E70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0E80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4012[0x3];                                     // 0x0E81(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0E84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x0E88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x0E8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0E90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0E94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_3;     // 0x0EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x0EA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4013[0x7];                                     // 0x0EA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x0EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_8;          // 0x0EB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x0EC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4014[0x7];                                     // 0x0EC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0EC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_4;     // 0x0ED0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4015[0x7];                                     // 0x0ED9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0EE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_5;     // 0x0EE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4016[0x7];                                     // 0x0EF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0EF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_6;     // 0x0F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4017[0x7];                                     // 0x0F09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0F10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_7;     // 0x0F18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x0F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4018[0x7];                                     // 0x0F21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameManager_C*                         CallFunc_GetActorOfClass_ReturnValue;              // 0x0F28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0F30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_8;     // 0x0F38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4019[0x3];                                     // 0x0F41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0F48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401A[0x3];                                     // 0x0F49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x0F4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABombPlantingSite_C*>            CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0F50(0x0010)(ReferenceParm)
	class ABombPlantingSite_C*                    CallFunc_Array_Get_Item_6;                         // 0x0F60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x0F68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0F6C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0F6D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401B[0x2];                                     // 0x0F6E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABombPlantingSite_C*>            CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0F70(0x0010)(ReferenceParm)
	class ABombPlantingSite_C*                    CallFunc_Array_Get_Item_7;                         // 0x0F80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0F88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0F8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0F8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401C[0x2];                                     // 0x0F8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x0F90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_3;        // 0x0F98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x0FA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401D[0x7];                                     // 0x0FA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_8;                         // 0x0FA8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0FB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401E[0x4];                                     // 0x0FBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         K2Node_CustomEvent_BannedIDs;                      // 0x0FC0(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401F[0x3];                                     // 0x0FD1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0FD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0FD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0FD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4020[0x6];                                     // 0x0FDA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0FE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_4;        // 0x0FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x0FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bHasFlag_;                      // 0x0FF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4021[0x6];                                     // 0x0FF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue_2;               // 0x0FF8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue_3;               // 0x1008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4022[0x7];                                     // 0x1019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_16;       // 0x1020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x1028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4023[0x3];                                     // 0x1029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x102C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_17;       // 0x1030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_46;                    // 0x1038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4024[0x3];                                     // 0x1039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x103C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x1040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4025[0x7];                                     // 0x1041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x1048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1; // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4026[0x3];                                     // 0x1059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_2;           // 0x105C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x1064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x1068(0x0018)()
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x1080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_9;          // 0x1088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_47;                    // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4027[0x7];                                     // 0x1091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_18;       // 0x1098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_48;                    // 0x10A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4028[0x7];                                     // 0x10A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Clan;                           // 0x10A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x10B8(0x0018)()
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_19;       // 0x10D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_49;                    // 0x10D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4029[0x7];                                     // 0x10D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue_4;               // 0x10E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCanBreach__1;                  // 0x10F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCanBreach_;                    // 0x10F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402A[0x5];                                     // 0x10F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_9;     // 0x10F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_50;                    // 0x1100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402B[0x7];                                     // 0x1101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         K2Node_CustomEvent_Key_1;                          // 0x1108(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x1110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x1120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402C[0x7];                                     // 0x1121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_20;       // 0x1128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_51;                    // 0x1130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402D[0x7];                                     // 0x1131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x1138(0x0018)()
	int64                                         CallFunc_MakeLiteralInt64_ReturnValue;             // 0x1150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_MakeLiteralInt64_ReturnValue_1;           // 0x1158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_CustomEvent_Key;                            // 0x1160(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamID_Pure_ReturnValue;              // 0x1168(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue_5;               // 0x1170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue_6;               // 0x1180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402E[0x7];                                     // 0x1191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_ParseStringIntoLong_ReturnValue;          // 0x1198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_ParseStringIntoLong_ReturnValue_1;        // 0x11A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         K2Node_Select_Default;                             // 0x11A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_GetVisibility_ReturnValue;                // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x11B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_402F[0x6];                                     // 0x11B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_10;    // 0x11B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_52;                    // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4030[0x7];                                     // 0x11C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_11;    // 0x11C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_53;                    // 0x11D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActivate;                      // 0x11D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4031[0x6];                                     // 0x11D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScopeWidget_C*                         CallFunc_Create_ReturnValue_7;                     // 0x11D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x11E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x11E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x11E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x11E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4032[0x4];                                     // 0x11E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x11E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_54;                    // 0x11F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_NewHidden;                      // 0x11F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x11F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x11F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x11F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x11F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x11F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4033[0x2];                                     // 0x11FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewValue;                       // 0x11FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x1200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4034[0x7];                                     // 0x1201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x1208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x1210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4035[0x7];                                     // 0x1211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDoorWidget_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x1218(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UDoorWidget_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x1228(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UDoorWidget_C*                          CallFunc_Array_Get_Item_9;                         // 0x1238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDoorWidget_C*                          CallFunc_Array_Get_Item_10;                        // 0x1240(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x1248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x124C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x1251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4036[0x6];                                     // 0x1252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUW_Scope_C*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets_3;      // 0x1258(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUW_Scope_C*                            CallFunc_Array_Get_Item_11;                        // 0x1268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x1270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4037[0x4];                                     // 0x1274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUW_Scope_C*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets_4;      // 0x1278(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x1288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4038[0x7];                                     // 0x1289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUW_Scope_C*                            CallFunc_Array_Get_Item_12;                        // 0x1290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x1298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x129C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4039[0x3];                                     // 0x129D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_10;              // 0x12A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x12A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403A[0x7];                                     // 0x12A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_10;         // 0x12B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_55;                    // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403B[0x3];                                     // 0x12B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_LevelIndex_1;                   // 0x12BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LevelIndex;                     // 0x12C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x12C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x12C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403C[0x2];                                     // 0x12C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_11;              // 0x12C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_11;         // 0x12D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_56;                    // 0x12D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403D[0x3];                                     // 0x12D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x12DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x12E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403E[0x7];                                     // 0x12E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x12E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x12F0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x1340(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x1350(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x1368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_5;                 // 0x1378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x1380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x1381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403F[0x6];                                     // 0x1382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_12;              // 0x1388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_13;              // 0x1390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_12;         // 0x1398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_57;                    // 0x13A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4040[0x7];                                     // 0x13A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_13;         // 0x13A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_58;                    // 0x13B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_3;                   // 0x13B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes_1;                          // 0x13B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes;                            // 0x13B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x13B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4041[0x3];                                     // 0x13B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x13B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4042[0x4];                                     // 0x13BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Array_Get_Item_13;                        // 0x13C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_on_screen_marker_C*                  K2Node_DynamicCast_AsW_On_Screen_Marker;           // 0x13C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_59;                    // 0x13D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x13D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4043[0x6];                                     // 0x13D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_vote_kick_for_player_C*              CallFunc_Create_ReturnValue_8;                     // 0x13D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_14;              // 0x13E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_CustomEvent_CurrentPlayerPlayerstate_2;     // 0x13E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_14;         // 0x13F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_60;                    // 0x13F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_4;                   // 0x13F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_Team_1;                         // 0x13FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4044[0x5];                                     // 0x13FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_CustomEvent_CurrentPlayerPlayerstate_1;     // 0x1400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  K2Node_CustomEvent_Team;                           // 0x1408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4045[0x7];                                     // 0x1409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_CustomEvent_CurrentPlayerPlayerstate;       // 0x1410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x1418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x1419(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4046[0x6];                                     // 0x141A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_vote_kick_menu_C*                    CallFunc_Create_ReturnValue_9;                     // 0x1420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ForceClose;                     // 0x1428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4047[0x7];                                     // 0x1429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_15;              // 0x1430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_15;         // 0x1438(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_61;                    // 0x1440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x1441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESteamBeginAuthSessionResult                  CallFunc_BeginAuthSession_ReturnValue;             // 0x1442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4048[0x5];                                     // 0x1443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x1448(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x1458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4049[0x7];                                     // 0x1459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x1460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x1470(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 K2Node_CustomEvent_SessionAuthTicket;              // 0x1480(0x0010)(ReferenceParm)
	class FString                                 K2Node_CustomEvent_Value;                          // 0x1490(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x14A0(0x0018)()
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x14B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x14C0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x1510(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x1520(0x0018)()
	struct FSteamID                               K2Node_CustomEvent_SteamID;                        // 0x1538(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x1540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_GetAuthSessionTicket_Ticket;              // 0x1550(0x0010)(ReferenceParm)
	struct FSteamTicketHandle                     CallFunc_GetAuthSessionTicket_ReturnValue;         // 0x1560(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x1564(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x1565(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x1566(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404A[0x1];                                     // 0x1567(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_DeathScreen_C*>              CallFunc_GetAllWidgetsOfClass_FoundWidgets_5;      // 0x1568(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_DeathScreen_C*                      CallFunc_Array_Get_Item_14;                        // 0x1578(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x1580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404B[0x7];                                     // 0x1581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_11;                       // 0x1588(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x15A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x15A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404C[0x3];                                     // 0x15A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlantedBomb_C*                         CallFunc_Array_Get_Item_15;                        // 0x15A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x15B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x15B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404D[0x3];                                     // 0x15B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x15B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x15BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404E[0x3];                                     // 0x15BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_16;              // 0x15C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_16;         // 0x15C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_62;                    // 0x15D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404F[0x7];                                     // 0x15D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_game_end_C*                          CallFunc_Create_ReturnValue_10;                    // 0x15D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x15E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4050[0x4];                                     // 0x15E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_16;                        // 0x15E8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x1600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4051[0x4];                                     // 0x1604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_17;              // 0x1608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_17;         // 0x1610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_63;                    // 0x1618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CalledFromGameMode_1;           // 0x1619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x161A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4052[0x5];                                     // 0x161B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_game_choose_team_C*                  CallFunc_Create_ReturnValue_11;                    // 0x1620(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CalledFromGameMode;             // 0x1628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x1629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x162A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4053[0x5];                                     // 0x162B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x1630(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x1648(0x0018)(HasGetValueTypeHash)
	TArray<class UBombsiteInteractionWidget_C*>   CallFunc_GetAllWidgetsOfClass_FoundWidgets_6;      // 0x1660(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBombsiteInteractionWidget_C*           CallFunc_Array_Get_Item_17;                        // 0x1670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x1678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x167C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA__6;                          // 0x167D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4054[0x2];                                     // 0x167E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ScoreValues                         K2Node_CustomEvent_scoreInfo;                      // 0x1680(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x1698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FModifyContextOptions                  Temp_struct_Variable_1;                            // 0x16A0(0x0001)(ConstParm, NoDestructor)
	uint8                                         Pad_4055[0x3];                                     // 0x16A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_5;                               // 0x16A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_AddPlayerMappableConfig_self_CastInput;   // 0x16A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USteamGameServer*                       CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x16B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x16C0(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x16D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x16DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x16E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4056[0x3];                                     // 0x16E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x16E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x16E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4057[0x4];                                     // 0x16EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_18;                        // 0x16F0(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x1708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x170C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x170D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4058[0x2];                                     // 0x170E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_1;        // 0x1710(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue_2;        // 0x1720(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x1730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess_1;                  // 0x1731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4059[0x6];                                     // 0x1732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_12;    // 0x1738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_64;                    // 0x1740(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405A[0x3];                                     // 0x1741(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x1744(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x1748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405B[0x7];                                     // 0x1749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_21;       // 0x1750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_65;                    // 0x1758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x1759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x175A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x175B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x175C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405C[0x3];                                     // 0x175D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x1760(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x1770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405D[0x7];                                     // 0x1771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_2;        // 0x1778(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UPeak53MainWidget_C*                    CallFunc_Create_ReturnValue_12;                    // 0x1780(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x1788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x178C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405E[0x3];                                     // 0x178D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_25;                // 0x1790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_405F[0x4];                                     // 0x1794(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x1798(0x0018)(HasGetValueTypeHash)
	class UBP_InventoryHUD_C*                     CallFunc_Create_ReturnValue_13;                    // 0x17B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class APlayerController*                Temp_object_Variable_3;                            // 0x17B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x17C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4060[0x4];                                     // 0x17C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingWeaponItem                  CallFunc_Array_Get_Item_19;                        // 0x17C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x17E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4061[0x4];                                     // 0x17E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x17E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_18;              // 0x17F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Pawn;                           // 0x17F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerState*                           CallFunc_Array_Get_Item_20;                        // 0x1800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x1808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x180C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x180D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4062[0x2];                                     // 0x180E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x1810(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x1818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x1819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4063[0x6];                                     // 0x181A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x1820(0x0018)(HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_5;            // 0x1838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_5;        // 0x1840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_66;                    // 0x1848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isSteamLoggedIn_NewParam_1;               // 0x1849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4064[0x6];                                     // 0x184A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x1850(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x1868(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4065[0x7];                                     // 0x1869(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_6;            // 0x1870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_6;        // 0x1878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_67;                    // 0x1880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4066[0x3];                                     // 0x1881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x1884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x1888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4067[0x3];                                     // 0x1889(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_26;                // 0x188C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x1890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x1894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4068[0x3];                                     // 0x1895(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_AllWeaponActors_Actors;                   // 0x1898(0x0010)(ReferenceParm)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x18A8(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_21;                        // 0x18C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x18C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x18CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4069[0x3];                                     // 0x18CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_6;                 // 0x18D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x18D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_68;                    // 0x18E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406A[0x7];                                     // 0x18E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_7;                 // 0x18E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_1;                  // 0x18F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_69;                    // 0x18F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406B[0x7];                                     // 0x18F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_development_tools_C*                 CallFunc_Create_ReturnValue_14;                    // 0x1900(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x1908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406C[0x4];                                     // 0x190C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingWeaponItem                  CallFunc_Array_Get_Item_22;                        // 0x1910(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x1928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406D[0x4];                                     // 0x192C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_8;                 // 0x1930(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x1938(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_9;                 // 0x1940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x1948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_10;                // 0x1950(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_12;                       // 0x1958(0x0018)(HasGetValueTypeHash)
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue_2;        // 0x1970(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_11;                // 0x1978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_2;                  // 0x1980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_70;                    // 0x1988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406E[0x7];                                     // 0x1989(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_12;                // 0x1990(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_3;                  // 0x1998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_71;                    // 0x19A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_406F[0x7];                                     // 0x19A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryHUD_C*                     CallFunc_Create_ReturnValue_15;                    // 0x19A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_13;                // 0x19B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x19B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4070[0x4];                                     // 0x19BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter_4;                  // 0x19C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_72;                    // 0x19C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x19C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4071[0x2];                                     // 0x19CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_27;                // 0x19CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_Event_InvItem;                              // 0x19D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x1A00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x1A10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x1A20(0x0018)(HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_3;                // 0x1A38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x1A40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_73;                    // 0x1A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4072[0x7];                                     // 0x1A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x1A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x1A60(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x1AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x1AB4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x1AB5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4073[0x2];                                     // 0x1AB6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_4;                // 0x1AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x1AC0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_74;                    // 0x1AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4074[0x7];                                     // 0x1AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x1AD8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x1B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x1B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x1B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4075[0x2];                                     // 0x1B2A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x1B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4076[0x7];                                     // 0x1B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_5;                // 0x1B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKGameMode_C*                      K2Node_DynamicCast_AsBP_SGKGame_Mode_3;            // 0x1B40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_75;                    // 0x1B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4077[0x7];                                     // 0x1B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x1B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDeprecatedInputPitchScale_NewValue_ImplicitCast; // 0x1B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController) == 0x000010, "Wrong alignment on BP_SGKController_C_ExecuteUbergraph_BP_SGKController");
static_assert(sizeof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController) == 0x001B60, "Wrong size on BP_SGKController_C_ExecuteUbergraph_BP_SGKController");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, EntryPoint) == 0x000000, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetMapIntroSettings_bFound) == 0x000018, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetMapIntroSettings_bFound' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetMapIntroSettings_OutSettings) == 0x000020, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetMapIntroSettings_OutSettings' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue) == 0x000030, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_Variable) == 0x000038, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_ShouldPlayIntro_ReturnValue) == 0x000039, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_ShouldPlayIntro_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000040, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_5) == 0x000050, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable) == 0x00006C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_1) == 0x000070, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_1) == 0x000078, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_2) == 0x00007C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_2) == 0x000080, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_object_Variable) == 0x000088, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_object_Variable_1) == 0x000090, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_2) == 0x000098, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_3) == 0x00009C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_3) == 0x0000A4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_4) == 0x0000AC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_4) == 0x0000B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_5) == 0x0000B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000BC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_6) == 0x0000C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_7) == 0x0000D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_HasAuthority_ReturnValue) == 0x0000F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_Visible) == 0x0000F1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_Attachment) == 0x0000F2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_Attachment' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_InvSlot_1) == 0x0000F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_InvSlot) == 0x000148, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_ItemID) == 0x000198, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_ItemID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_SoundType) == 0x0001A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_SoundType' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Target_1) == 0x0001A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Target_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_5) == 0x0001B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_6) == 0x0001B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_TargetActor_1) == 0x0001B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_TargetActor_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Target) == 0x0001C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_1) == 0x0001CC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_TargetActor) == 0x0001D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_TargetActor' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_IntInt_ReturnValue) == 0x0001D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_1) == 0x0001E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_1) == 0x0001E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_True_if_break_was_hit_Variable) == 0x000200, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue) == 0x000201, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_1) == 0x000202, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue) == 0x000208, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000210, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_isSteamLoggedIn_NewParam) == 0x000219, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_isSteamLoggedIn_NewParam' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue) == 0x000220, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralString_ReturnValue) == 0x000230, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeArray_Array) == 0x000240, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CreateDelegate_OutputDelegate) == 0x000250, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Contains_ReturnValue) == 0x000260, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_7) == 0x000264, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MyGameManager) == 0x000268, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MyGameManager' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerScore) == 0x000270, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerScore' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerKills_2) == 0x000274, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerKills_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerDeath) == 0x000278, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerDeath' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MVPScore) == 0x00027C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MVPScore' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MVPKills) == 0x000280, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MVPKills' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MVPDeaths) == 0x000284, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MVPDeaths' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MVPName) == 0x000288, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MVPName' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SealsScoreGlobal) == 0x000298, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SealsScoreGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SealsKillsGlobal) == 0x00029C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SealsKillsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SealsDeathsGlobal) == 0x0002A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SealsDeathsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_InsurgentsScoreGlobal) == 0x0002A4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_InsurgentsScoreGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_InsurgentsKillsGlobal) == 0x0002A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_InsurgentsKillsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_InsurgentsDeathsGlobal) == 0x0002AC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_InsurgentsDeathsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_WinnerTeam) == 0x0002B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_WinnerTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_UnlockedItem) == 0x0002B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_UnlockedItem' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_8) == 0x0002B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetKeyGroupStatic_ReturnValue) == 0x0002D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetKeyGroupStatic_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_1) == 0x0002D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_1) == 0x0002E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_1) == 0x0002E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_2) == 0x0002F1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_3) == 0x0002F2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x0002F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_2) == 0x000300, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_4) == 0x000301, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CreateDelegate_OutputDelegate_1) == 0x000304, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerName_1) == 0x000318, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerName_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerName) == 0x000330, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_5) == 0x000348, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_6) == 0x000349, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Score_1) == 0x000350, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Score_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Score) == 0x000368, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Score' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Team_3) == 0x000380, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Team_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_6) == 0x000384, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_7) == 0x000388, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_6) == 0x00038C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerTeam_1) == 0x000390, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerTeam_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerTeam) == 0x000391, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MessageFeedVar) == 0x000398, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MessageFeedVar' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Justification) == 0x0003B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Justification' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_In_Color_and_Opacity) == 0x0003B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_In_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_In_Font_Info_Size) == 0x0003C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_In_Font_Info_Size' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerKills_1) == 0x0003D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerKills_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_8) == 0x0003E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerKills) == 0x0003F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerKills' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerDeaths_1) == 0x000408, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerDeaths_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_PlayerDeaths) == 0x000420, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_PlayerDeaths' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MessageToBeSendFeedController_1) == 0x000438, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MessageToBeSendFeedController_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_MessageToBeSendFeedController) == 0x000450, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_MessageToBeSendFeedController' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000468, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_3) == 0x000470, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_1) == 0x000478, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_4) == 0x000480, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_2) == 0x000488, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_5) == 0x000490, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_3) == 0x000498, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_6) == 0x0004A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_4) == 0x0004A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_7) == 0x0004B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_5) == 0x0004B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_8) == 0x0004C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_FindEmptySlots_SpaceFound) == 0x0004C1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_FindEmptySlots_Rotated) == 0x0004C2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_FindEmptySlots_FoundSlots) == 0x0004C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_2) == 0x0004D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item) == 0x0004E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_S_WeaponSlot) == 0x000530, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_S_WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_InvSlotID) == 0x000580, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_WeaponSlotID) == 0x000590, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0005A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_InvSlotID_1) == 0x0005B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_7) == 0x0005C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllActorsOfClass_OutActors) == 0x0005C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_3) == 0x0005D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_7) == 0x0005DC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x0005E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_1) == 0x0005E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0005F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_4) == 0x000600, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_1) == 0x000608, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_2) == 0x000618, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SpawnSoundAtLocation_ReturnValue_1) == 0x000620, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SpawnSoundAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000628, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000629, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Subtract_IntInt_ReturnValue) == 0x00062C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_8) == 0x000630, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_2) == 0x000638, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Loadout) == 0x000650, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Loadout' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_WeaponsPrimary) == 0x000658, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_WeaponsPrimary' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_WeaponsSecondary) == 0x000668, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_WeaponsSecondary' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_WeaponsTool1) == 0x000678, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_WeaponsTool1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_WeaponsTool2) == 0x000688, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_WeaponsTool2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_6) == 0x000698, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_9) == 0x0006A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_9) == 0x0006A1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x0006A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_10) == 0x0006B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_5) == 0x0006B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_6) == 0x0006B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_7) == 0x0006BC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_8) == 0x0006C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0006C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_2) == 0x0006D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_3) == 0x0006E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_9) == 0x0006E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue) == 0x0006EC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BooleanAND_ReturnValue) == 0x0006ED, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_struct_Variable) == 0x0006F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_3) == 0x000708, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_10) == 0x000710, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue) == 0x000718, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_11) == 0x000720, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000728, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_11) == 0x000730, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_3) == 0x000738, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000750, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_4) == 0x000760, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000768, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPlanted_Bomb) == 0x000770, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPlanted_Bomb' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_12) == 0x000778, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_10) == 0x00077C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000780, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_1) == 0x000781, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_7) == 0x000788, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_13) == 0x000790, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000791, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_2) == 0x000792, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BooleanAND_ReturnValue_1) == 0x000793, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_8) == 0x000798, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_14) == 0x0007A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SpawnTransform) == 0x0007B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Team_2) == 0x000810, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Team_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000811, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000818, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_FinishSpawningActor_ReturnValue) == 0x000820, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_4) == 0x000828, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_4) == 0x000840, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_12) == 0x000848, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_13) == 0x000849, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000850, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_11) == 0x000860, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_bHasBomb_) == 0x000864, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_bHasBomb_' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsPlayingNetworkedRootMotionMontage_ReturnValue) == 0x000865, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsPlayingNetworkedRootMotionMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000868, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_2) == 0x000870, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_15) == 0x000878, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_2) == 0x000880, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_2) == 0x000888, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_16) == 0x000890, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralText_ReturnValue) == 0x000898, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0008B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralText_ReturnValue_1) == 0x0008B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_TextText_ReturnValue_1) == 0x0008D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_TextText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralText_ReturnValue_2) == 0x0008D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_TextText_ReturnValue_2) == 0x0008F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_TextText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralText_ReturnValue_3) == 0x0008F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_TextText_ReturnValue_3) == 0x000910, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_TextText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralText_ReturnValue_4) == 0x000918, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_TextText_ReturnValue_4) == 0x000930, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_TextText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_Variable_1) == 0x000931, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_8) == 0x000934, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_9) == 0x000938, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_10) == 0x000950, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_9) == 0x000968, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable) == 0x00096C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000970, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_9) == 0x000974, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_2) == 0x000978, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000979, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_5) == 0x000980, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_InvSlotID_2) == 0x0009D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_InvSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CreateDelegate_OutputDelegate_2) == 0x0009E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0009F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_10) == 0x0009F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0009FC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_3) == 0x0009FD, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_8) == 0x000A00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_9) == 0x000A08, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_17) == 0x000A10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_3) == 0x000A11, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_10) == 0x000A14, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_TextToString_ReturnValue) == 0x000A18, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToInt_ReturnValue) == 0x000A28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_11) == 0x000A2C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToText_ReturnValue) == 0x000A30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_10) == 0x000A48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_18) == 0x000A50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_11) == 0x000A58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_19) == 0x000A60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchEnum_CmpSuccess) == 0x000A61, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue) == 0x000A68, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000A70, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State) == 0x000A80, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_20) == 0x000A88, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000A8C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_12) == 0x000A90, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_12) == 0x000A98, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_21) == 0x000AA0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000AA8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_1) == 0x000AC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_1) == 0x000AC8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_22) == 0x000AD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_13) == 0x000AD8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_23) == 0x000AE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_PlayersAlive_PlayersLeftAlive) == 0x000AE4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_PlayersAlive_PlayersLeftAlive' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_InInt) == 0x000AE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_InInt' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToString_ReturnValue) == 0x000AF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_14) == 0x000B00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_15) == 0x000B01, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA_) == 0x000B02, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA_' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__1) == 0x000B03, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_1) == 0x000B04, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_2) == 0x000B08, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_13) == 0x000B10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_2) == 0x000B18, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_24) == 0x000B20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToByte_ReturnValue) == 0x000B21, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000B22, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x000B23, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000B24, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__2) == 0x000B28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__3) == 0x000B29, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Sound) == 0x000B30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CounterBounce) == 0x000B38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CounterBounce' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SpawnSound2D_ReturnValue) == 0x000B40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_2) == 0x000B48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000B50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000B58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetValidValue_ReturnValue) == 0x000B59, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_9) == 0x000B5C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_14) == 0x000B60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_5) == 0x000B68, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_16) == 0x000B70, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_17) == 0x000B71, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CreateDelegate_OutputDelegate_3) == 0x000B74, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000B88, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_18) == 0x000B90, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_19) == 0x000B91, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_6) == 0x000B98, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue) == 0x000BA0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode) == 0x000BA8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_25) == 0x000BB0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_3) == 0x000BB8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_4) == 0x000BC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_3) == 0x000BC8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_26) == 0x000BD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_4) == 0x000BD8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_27) == 0x000BE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_5) == 0x000BE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_5) == 0x000BF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_28) == 0x000BF8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_WeaponSlotID_2) == 0x000C00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_WeaponSlotID_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_S_WeaponSlotID_3) == 0x000C10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_S_WeaponSlotID_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_NewViewTarget) == 0x000C20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_NewViewTarget' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_11) == 0x000C28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeVector2D_ReturnValue) == 0x000C30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000C40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000C58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000C70, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000C88, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000CA0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_6) == 0x000CB8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_6) == 0x000CC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_29) == 0x000CC8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_object_Variable_2) == 0x000CD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__4) == 0x000CD8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__5) == 0x000CD9, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue_1) == 0x000CE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode_1) == 0x000CE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_30) == 0x000CF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_14) == 0x000CF8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_31) == 0x000D00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000D08, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_10) == 0x000D10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsSpectator_Character) == 0x000D18, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsSpectator_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_32) == 0x000D20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_15) == 0x000D24, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_16) == 0x000D28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_4) == 0x000D2C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue_2) == 0x000D30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode_2) == 0x000D38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_33) == 0x000D40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_15) == 0x000D48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_34) == 0x000D50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000D51, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_7) == 0x000D58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetTransform_ReturnValue) == 0x000D60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_7) == 0x000DC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_35) == 0x000DC8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPosition_ReturnValue) == 0x000DD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakVector2D_X) == 0x000DE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakVector2D_Y) == 0x000DE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000DF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000DF8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeVector2D_ReturnValue_1) == 0x000E00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MapRangeClamped_ReturnValue) == 0x000E10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000E18, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeVector2D_ReturnValue_2) == 0x000E20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_20) == 0x000E30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_21) == 0x000E31, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPosition_ReturnValue_1) == 0x000E38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPosition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_11) == 0x000E48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakVector2D_X_1) == 0x000E50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakVector2D_Y_1) == 0x000E58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000E60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000E68, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeVector2D_ReturnValue_3) == 0x000E70, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000E80, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_17) == 0x000E84, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_12) == 0x000E88, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_12) == 0x000E8C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000E90, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_18) == 0x000E94, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000E98, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_3) == 0x000EA0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_36) == 0x000EA8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_8) == 0x000EB0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_8) == 0x000EB8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_37) == 0x000EC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000EC8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_4) == 0x000ED0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_38) == 0x000ED8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000EE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_5) == 0x000EE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_39) == 0x000EF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000EF8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_6) == 0x000F00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_40) == 0x000F08, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000F10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_7) == 0x000F18, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_41) == 0x000F20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetActorOfClass_ReturnValue) == 0x000F28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000F30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_8) == 0x000F38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_42) == 0x000F40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_13) == 0x000F44, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_5) == 0x000F48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_19) == 0x000F4C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000F50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_6) == 0x000F60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_12) == 0x000F68, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchEnum_CmpSuccess_1) == 0x000F6C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_6) == 0x000F6D, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000F70, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_7) == 0x000F80, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_13) == 0x000F88, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_7) == 0x000F8C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchEnum_CmpSuccess_2) == 0x000F8D, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_3) == 0x000F90, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_3) == 0x000F98, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_43) == 0x000FA0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_8) == 0x000FA8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_14) == 0x000FB8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_BannedIDs) == 0x000FC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_BannedIDs' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_8) == 0x000FD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_15) == 0x000FD4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BooleanAND_ReturnValue_2) == 0x000FD8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000FD9, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_4) == 0x000FE0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_4) == 0x000FE8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_44) == 0x000FF0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_bHasFlag_) == 0x000FF1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_bHasFlag_' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_2) == 0x000FF8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_3) == 0x001008, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x001018, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_16) == 0x001020, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_45) == 0x001028, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_3) == 0x00102C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_17) == 0x001030, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_46) == 0x001038, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_46' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_20) == 0x00103C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x001040, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_TextToString_ReturnValue_2) == 0x001048, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1) == 0x001058, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetEnumeratorValueFromIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToInt_ReturnValue_2) == 0x00105C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x001060, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_21) == 0x001064, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToText_ReturnValue_2) == 0x001068, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_9) == 0x001080, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_9) == 0x001088, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_47) == 0x001090, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_47' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_18) == 0x001098, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_48) == 0x0010A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_48' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Clan) == 0x0010A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Clan' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToText_ReturnValue) == 0x0010B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_19) == 0x0010D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_49) == 0x0010D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_49' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_4) == 0x0010E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_WithEditor_ReturnValue) == 0x0010F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_bCanBreach__1) == 0x0010F1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_bCanBreach__1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_bCanBreach_) == 0x0010F2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_bCanBreach_' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_9) == 0x0010F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_50) == 0x001100, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_50' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Key_1) == 0x001108, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Map_Find_Value) == 0x001110, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Map_Find_ReturnValue) == 0x001120, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_20) == 0x001128, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_51) == 0x001130, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_51' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToText_ReturnValue_1) == 0x001138, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralInt64_ReturnValue) == 0x001150, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralInt64_ReturnValue_1) == 0x001158, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Key) == 0x001160, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetSteamID_Pure_ReturnValue) == 0x001168, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetSteamID_Pure_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_5) == 0x001170, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BreakSteamID_ReturnValue_6) == 0x001180, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BreakSteamID_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsEmpty_ReturnValue) == 0x001190, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_ParseStringIntoLong_ReturnValue) == 0x001198, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_ParseStringIntoLong_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_ParseStringIntoLong_ReturnValue_1) == 0x0011A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_ParseStringIntoLong_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Select_Default) == 0x0011A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetVisibility_ReturnValue) == 0x0011B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetVisibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0011B1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_10) == 0x0011B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_52) == 0x0011C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_52' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_11) == 0x0011C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_53) == 0x0011D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_53' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_bActivate) == 0x0011D1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_bActivate' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_7) == 0x0011D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_Variable_2) == 0x0011E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_4) == 0x0011E1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_22) == 0x0011E2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_23) == 0x0011E3, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x0011E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_54) == 0x0011F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_54' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_NewHidden) == 0x0011F1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_NewHidden' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_5) == 0x0011F2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_6) == 0x0011F3, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_4) == 0x0011F4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x0011F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetValidValue_ReturnValue_1) == 0x0011F9, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_NewValue) == 0x0011FC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_NewValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_24) == 0x001200, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x001208, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_25) == 0x001210, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x001218, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x001228, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_9) == 0x001238, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_10) == 0x001240, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_16) == 0x001248, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_17) == 0x00124C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_9) == 0x001250, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_10) == 0x001251, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_3) == 0x001258, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_11) == 0x001268, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_18) == 0x001270, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_4) == 0x001278, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_11) == 0x001288, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_12) == 0x001290, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_19) == 0x001298, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_12) == 0x00129C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_10) == 0x0012A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsServer_ReturnValue) == 0x0012A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_10) == 0x0012B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_55) == 0x0012B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_55' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_LevelIndex_1) == 0x0012BC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_LevelIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_LevelIndex) == 0x0012C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_LevelIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_26) == 0x0012C4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_27) == 0x0012C5, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_11) == 0x0012C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_11) == 0x0012D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_56) == 0x0012D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_56' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_22) == 0x0012DC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsServer_ReturnValue_1) == 0x0012E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_IntToInt64_ReturnValue) == 0x0012E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_FormatArgumentData) == 0x0012F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeArray_Array_1) == 0x001340, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Format_ReturnValue) == 0x001350, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_TextToString_ReturnValue_3) == 0x001368, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_5) == 0x001378, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Greater_IntInt_ReturnValue_4) == 0x001380, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsServer_ReturnValue_2) == 0x001381, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_12) == 0x001388, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_13) == 0x001390, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_12) == 0x001398, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_57) == 0x0013A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_57' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_13) == 0x0013A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_58) == 0x0013B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_58' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsServer_ReturnValue_3) == 0x0013B1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Yes_1) == 0x0013B2, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Yes_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Yes) == 0x0013B3, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Yes' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_28) == 0x0013B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_13) == 0x0013B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_13) == 0x0013C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsW_On_Screen_Marker) == 0x0013C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsW_On_Screen_Marker' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_59) == 0x0013D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_59' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0013D1, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_8) == 0x0013D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_14) == 0x0013E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CurrentPlayerPlayerstate_2) == 0x0013E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CurrentPlayerPlayerstate_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_14) == 0x0013F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_60) == 0x0013F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_60' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsServer_ReturnValue_4) == 0x0013F9, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Team_1) == 0x0013FA, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CurrentPlayerPlayerstate_1) == 0x001400, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CurrentPlayerPlayerstate_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Team) == 0x001408, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CurrentPlayerPlayerstate) == 0x001410, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CurrentPlayerPlayerstate' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_29) == 0x001418, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_30) == 0x001419, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_9) == 0x001420, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_ForceClose) == 0x001428, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_ForceClose' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_15) == 0x001430, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_15) == 0x001438, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_61) == 0x001440, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_61' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_True_if_break_was_hit_Variable_3) == 0x001441, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BeginAuthSession_ReturnValue) == 0x001442, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BeginAuthSession_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x001448, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_7) == 0x001458, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Concat_StrStr_ReturnValue) == 0x001460, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Concat_StrStr_ReturnValue_1) == 0x001470, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SessionAuthTicket) == 0x001480, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SessionAuthTicket' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Value) == 0x001490, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0014A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeSteamID_ReturnValue) == 0x0014B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeStruct_FormatArgumentData_1) == 0x0014C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_MakeArray_Array_2) == 0x001510, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Format_ReturnValue_1) == 0x001520, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_SteamID) == 0x001538, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_SteamID' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Conv_TextToString_ReturnValue_4) == 0x001540, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAuthSessionTicket_Ticket) == 0x001550, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAuthSessionTicket_Ticket' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAuthSessionTicket_ReturnValue) == 0x001560, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAuthSessionTicket_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_True_if_break_was_hit_Variable_4) == 0x001564, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Not_PreBool_ReturnValue_8) == 0x001565, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BooleanAND_ReturnValue_3) == 0x001566, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_5) == 0x001568, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_14) == 0x001578, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_31) == 0x001580, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_11) == 0x001588, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_14) == 0x0015A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsLocalController_ReturnValue) == 0x0015A4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_15) == 0x0015A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_14) == 0x0015B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_13) == 0x0015B4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_23) == 0x0015B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_BooleanAND_ReturnValue_4) == 0x0015BC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_16) == 0x0015C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_16) == 0x0015C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_62) == 0x0015D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_62' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_10) == 0x0015D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_15) == 0x0015E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_16) == 0x0015E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Add_ReturnValue) == 0x001600, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_17) == 0x001608, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Game_State_17) == 0x001610, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Game_State_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_63) == 0x001618, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_63' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CalledFromGameMode_1) == 0x001619, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CalledFromGameMode_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_32) == 0x00161A, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_11) == 0x001620, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_CalledFromGameMode) == 0x001628, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_CalledFromGameMode' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_Has_Been_Initd_Variable) == 0x001629, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_bool_IsClosed_Variable) == 0x00162A, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key) == 0x001630, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_1) == 0x001648, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetAllWidgetsOfClass_FoundWidgets_6) == 0x001660, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetAllWidgetsOfClass_FoundWidgets_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_17) == 0x001670, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_20) == 0x001678, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_14) == 0x00167C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_CheckFFA_FFA__6) == 0x00167D, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_CheckFFA_FFA__6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_scoreInfo) == 0x001680, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_scoreInfo' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x001698, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_struct_Variable_1) == 0x0016A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_5) == 0x0016A4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_AddPlayerMappableConfig_self_CastInput) == 0x0016A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_AddPlayerMappableConfig_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0016B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key) == 0x0016C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_6) == 0x0016D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_15) == 0x0016DC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_15) == 0x0016E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_24) == 0x0016E4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_16) == 0x0016E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_18) == 0x0016F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Add_ReturnValue_1) == 0x001708, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_33) == 0x00170C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_34) == 0x00170D, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetCurrentLevelName_ReturnValue_1) == 0x001710, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetCurrentLevelName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetCurrentLevelName_ReturnValue_2) == 0x001720, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetCurrentLevelName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchString_CmpSuccess) == 0x001730, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchString_CmpSuccess_1) == 0x001731, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchString_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKMaster_Character_12) == 0x001738, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKMaster_Character_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_64) == 0x001740, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_64' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_7) == 0x001744, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_35) == 0x001748, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsPeak_53Player_State_21) == 0x001750, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsPeak_53Player_State_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_65) == 0x001758, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_65' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_SwitchEnum_CmpSuccess_3) == 0x001759, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_36) == 0x00175A, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_37) == 0x00175B, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_38) == 0x00175C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CreateDelegate_OutputDelegate_4) == 0x001760, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_39) == 0x001770, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_SetTimerDelegate_ReturnValue_2) == 0x001778, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_SetTimerDelegate_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_12) == 0x001780, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_16) == 0x001788, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_16) == 0x00178C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_25) == 0x001790, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_2) == 0x001798, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_13) == 0x0017B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_object_Variable_3) == 0x0017B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_17) == 0x0017C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_19) == 0x0017C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Add_ReturnValue_2) == 0x0017E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_Pawn) == 0x0017E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameState_ReturnValue_18) == 0x0017F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameState_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_CustomEvent_Pawn) == 0x0017F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_CustomEvent_Pawn' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_20) == 0x001800, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_21) == 0x001808, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_17) == 0x00180C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_40) == 0x00180D, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetComponentByClass_ReturnValue) == 0x001810, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x001818, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_41) == 0x001819, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_5) == 0x001820, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_5) == 0x001838, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_5) == 0x001840, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_66) == 0x001848, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_66' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_isSteamLoggedIn_NewParam_1) == 0x001849, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_isSteamLoggedIn_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_3) == 0x001850, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsLocalPlayerController_ReturnValue) == 0x001868, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameInstance_ReturnValue_6) == 0x001870, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Instance_6) == 0x001878, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Instance_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_67) == 0x001880, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_67' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_17) == 0x001884, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_18) == 0x001888, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_26) == 0x00188C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Variable_8) == 0x001890, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_EndPlayReason) == 0x001894, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_AllWeaponActors_Actors) == 0x001898, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_AllWeaponActors_Actors' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputActionEvent_Key_6) == 0x0018A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_21) == 0x0018C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Length_ReturnValue_22) == 0x0018C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_19) == 0x0018CC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_6) == 0x0018D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsCharacter) == 0x0018D8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_68) == 0x0018E0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_68' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_7) == 0x0018E8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsCharacter_1) == 0x0018F0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_69) == 0x0018F8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_69' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_14) == 0x001900, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Array_Index_Variable_18) == 0x001908, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Get_Item_22) == 0x001910, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Array_Add_ReturnValue_3) == 0x001928, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_8) == 0x001930, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetComponentByClass_ReturnValue_1) == 0x001938, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_9) == 0x001940, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_PossessedPawn) == 0x001948, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_10) == 0x001950, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_12) == 0x001958, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetComponentByClass_ReturnValue_2) == 0x001970, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_11) == 0x001978, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsCharacter_2) == 0x001980, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_70) == 0x001988, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_70' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_12) == 0x001990, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsCharacter_3) == 0x001998, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsCharacter_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_71) == 0x0019A0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_71' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Create_ReturnValue_15) == 0x0019A8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Create_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_K2_GetPawn_ReturnValue_13) == 0x0019B0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_K2_GetPawn_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, Temp_int_Loop_Counter_Variable_18) == 0x0019B8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsCharacter_4) == 0x0019C0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsCharacter_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_72) == 0x0019C8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_72' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_20) == 0x0019C9, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Add_IntInt_ReturnValue_27) == 0x0019CC, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Add_IntInt_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_Event_InvItem) == 0x0019D0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_Event_InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetDisplayName_ReturnValue) == 0x001A00, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetDisplayName_ReturnValue_1) == 0x001A10, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_InputKeyEvent_Key_4) == 0x001A20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue_3) == 0x001A38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x001A40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_73) == 0x001A50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_73' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x001A58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x001A60, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralInt_ReturnValue) == 0x001AB0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_21) == 0x001AB4, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_42) == 0x001AB5, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue_4) == 0x001AB8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x001AC0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_74) == 0x001AD0, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_74' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x001AD8, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x001B20, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsStandalone_ReturnValue) == 0x001B28, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_IsValid_ReturnValue_43) == 0x001B29, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x001B2C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Less_IntInt_ReturnValue_22) == 0x001B30, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_GetGameMode_ReturnValue_5) == 0x001B38, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_GetGameMode_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_AsBP_SGKGame_Mode_3) == 0x001B40, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_AsBP_SGKGame_Mode_3' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, K2Node_DynamicCast_bSuccess_75) == 0x001B48, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::K2Node_DynamicCast_bSuccess_75' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x001B50, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_SetDeprecatedInputPitchScale_NewValue_ImplicitCast) == 0x001B58, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_SetDeprecatedInputPitchScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ExecuteUbergraph_BP_SGKController, CallFunc_Delay_Duration_ImplicitCast) == 0x001B5C, "Member 'BP_SGKController_C_ExecuteUbergraph_BP_SGKController::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.GetPlayerName
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKController_C_GetPlayerName final
{
public:
	class FText                                   Param_PlayerName;                                  // 0x0000(0x0018)(Parm, OutParm)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0028(0x0018)()
};
static_assert(alignof(BP_SGKController_C_GetPlayerName) == 0x000008, "Wrong alignment on BP_SGKController_C_GetPlayerName");
static_assert(sizeof(BP_SGKController_C_GetPlayerName) == 0x000040, "Wrong size on BP_SGKController_C_GetPlayerName");
static_assert(offsetof(BP_SGKController_C_GetPlayerName, Param_PlayerName) == 0x000000, "Member 'BP_SGKController_C_GetPlayerName::Param_PlayerName' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_GetPlayerName, CallFunc_GetPlayerName_ReturnValue) == 0x000018, "Member 'BP_SGKController_C_GetPlayerName::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_GetPlayerName, CallFunc_Conv_StringToText_ReturnValue) == 0x000028, "Member 'BP_SGKController_C_GetPlayerName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.HideMeshes
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_HideMeshes final
{
public:
	bool                                          NewHidden;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_HideMeshes) == 0x000001, "Wrong alignment on BP_SGKController_C_HideMeshes");
static_assert(sizeof(BP_SGKController_C_HideMeshes) == 0x000001, "Wrong size on BP_SGKController_C_HideMeshes");
static_assert(offsetof(BP_SGKController_C_HideMeshes, NewHidden) == 0x000000, "Member 'BP_SGKController_C_HideMeshes::NewHidden' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8");
static_assert(sizeof(BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8");
static_assert(offsetof(BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_8::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_B_K2Node_InputKeyEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11");
static_assert(sizeof(BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11");
static_assert(offsetof(BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_B_K2Node_InputKeyEvent_11::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_DropBomb_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_DropBomb_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Escape_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Escape_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_F1_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_F1_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_F2_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_F2_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_F3_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_F3_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_GlobalChat_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_GlobalChat_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_H_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_H_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_M_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_M_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_N_K2Node_InputKeyEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7");
static_assert(sizeof(BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7");
static_assert(offsetof(BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_N_K2Node_InputKeyEvent_7::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_NumPadFive_K2Node_InputKeyEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12");
static_assert(sizeof(BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12");
static_assert(offsetof(BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_NumPadFive_K2Node_InputKeyEvent_12::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_OpenSettings_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_OpenSettings_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_PlantBomb_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_PlantBomb_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Scoreboard_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Scoreboard_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Shift_Eight_K2Node_InputKeyEvent_9::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Shift_Nine_K2Node_InputKeyEvent_10::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_TeamChat_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_TeamChat_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.InpActEvt_Y_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_SGKController_C_InpActEvt_Y_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.MulticastApplyClan
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKController_C_MulticastApplyClan final
{
public:
	class FString                                 Clan;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_MulticastApplyClan) == 0x000008, "Wrong alignment on BP_SGKController_C_MulticastApplyClan");
static_assert(sizeof(BP_SGKController_C_MulticastApplyClan) == 0x000010, "Wrong size on BP_SGKController_C_MulticastApplyClan");
static_assert(offsetof(BP_SGKController_C_MulticastApplyClan, Clan) == 0x000000, "Member 'BP_SGKController_C_MulticastApplyClan::Clan' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.MulticastSetBannedIDs
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKController_C_MulticastSetBannedIDs final
{
public:
	TArray<class FString>                         Param_BannedIDs;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SGKController_C_MulticastSetBannedIDs) == 0x000008, "Wrong alignment on BP_SGKController_C_MulticastSetBannedIDs");
static_assert(sizeof(BP_SGKController_C_MulticastSetBannedIDs) == 0x000010, "Wrong size on BP_SGKController_C_MulticastSetBannedIDs");
static_assert(offsetof(BP_SGKController_C_MulticastSetBannedIDs, Param_BannedIDs) == 0x000000, "Member 'BP_SGKController_C_MulticastSetBannedIDs::Param_BannedIDs' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OnRep_bCanSpectate?
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OnRep_bCanSpectate_ final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OnRep_bCanSpectate_) == 0x000001, "Wrong alignment on BP_SGKController_C_OnRep_bCanSpectate_");
static_assert(sizeof(BP_SGKController_C_OnRep_bCanSpectate_) == 0x000001, "Wrong size on BP_SGKController_C_OnRep_bCanSpectate_");
static_assert(offsetof(BP_SGKController_C_OnRep_bCanSpectate_, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SGKController_C_OnRep_bCanSpectate_::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OnRep_bHasBomb?
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKController_C_OnRep_bHasBomb_ final
{
public:
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4078[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OnRep_bHasBomb_) == 0x000008, "Wrong alignment on BP_SGKController_C_OnRep_bHasBomb_");
static_assert(sizeof(BP_SGKController_C_OnRep_bHasBomb_) == 0x000020, "Wrong size on BP_SGKController_C_OnRep_bHasBomb_");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasBomb_, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000000, "Member 'BP_SGKController_C_OnRep_bHasBomb_::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasBomb_, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_SGKController_C_OnRep_bHasBomb_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasBomb_, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000010, "Member 'BP_SGKController_C_OnRep_bHasBomb_::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasBomb_, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'BP_SGKController_C_OnRep_bHasBomb_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OnRep_bHasFlag?
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKController_C_OnRep_bHasFlag_ final
{
public:
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4079[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OnRep_bHasFlag_) == 0x000008, "Wrong alignment on BP_SGKController_C_OnRep_bHasFlag_");
static_assert(sizeof(BP_SGKController_C_OnRep_bHasFlag_) == 0x000020, "Wrong size on BP_SGKController_C_OnRep_bHasFlag_");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasFlag_, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000000, "Member 'BP_SGKController_C_OnRep_bHasFlag_::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasFlag_, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'BP_SGKController_C_OnRep_bHasFlag_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasFlag_, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000010, "Member 'BP_SGKController_C_OnRep_bHasFlag_::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OnRep_bHasFlag_, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'BP_SGKController_C_OnRep_bHasFlag_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OnToggleChat__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OnToggleChat__DelegateSignature final
{
public:
	bool                                          bIsTeamChat;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OnToggleChat__DelegateSignature) == 0x000001, "Wrong alignment on BP_SGKController_C_OnToggleChat__DelegateSignature");
static_assert(sizeof(BP_SGKController_C_OnToggleChat__DelegateSignature) == 0x000001, "Wrong size on BP_SGKController_C_OnToggleChat__DelegateSignature");
static_assert(offsetof(BP_SGKController_C_OnToggleChat__DelegateSignature, bIsTeamChat) == 0x000000, "Member 'BP_SGKController_C_OnToggleChat__DelegateSignature::bIsTeamChat' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNAddScoreInfo
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_OWNAddScoreInfo final
{
public:
	struct FS_ScoreValues                         ScoreInfo;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNAddScoreInfo) == 0x000008, "Wrong alignment on BP_SGKController_C_OWNAddScoreInfo");
static_assert(sizeof(BP_SGKController_C_OWNAddScoreInfo) == 0x000018, "Wrong size on BP_SGKController_C_OWNAddScoreInfo");
static_assert(offsetof(BP_SGKController_C_OWNAddScoreInfo, ScoreInfo) == 0x000000, "Member 'BP_SGKController_C_OWNAddScoreInfo::ScoreInfo' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNCallVoteForKick
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKController_C_OWNCallVoteForKick final
{
public:
	EPeak53Teams                                  Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407A[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   CurrentPlayerPlayerstate;                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNCallVoteForKick) == 0x000008, "Wrong alignment on BP_SGKController_C_OWNCallVoteForKick");
static_assert(sizeof(BP_SGKController_C_OWNCallVoteForKick) == 0x000010, "Wrong size on BP_SGKController_C_OWNCallVoteForKick");
static_assert(offsetof(BP_SGKController_C_OWNCallVoteForKick, Team) == 0x000000, "Member 'BP_SGKController_C_OWNCallVoteForKick::Team' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_OWNCallVoteForKick, CurrentPlayerPlayerstate) == 0x000008, "Member 'BP_SGKController_C_OWNCallVoteForKick::CurrentPlayerPlayerstate' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNShowJoinUi
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OWNShowJoinUi final
{
public:
	bool                                          CalledFromGameMode;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNShowJoinUi) == 0x000001, "Wrong alignment on BP_SGKController_C_OWNShowJoinUi");
static_assert(sizeof(BP_SGKController_C_OWNShowJoinUi) == 0x000001, "Wrong size on BP_SGKController_C_OWNShowJoinUi");
static_assert(offsetof(BP_SGKController_C_OWNShowJoinUi, CalledFromGameMode) == 0x000000, "Member 'BP_SGKController_C_OWNShowJoinUi::CalledFromGameMode' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNStartAuth
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_OWNStartAuth final
{
public:
	struct FSteamID                               Param_SteamID;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNStartAuth) == 0x000008, "Wrong alignment on BP_SGKController_C_OWNStartAuth");
static_assert(sizeof(BP_SGKController_C_OWNStartAuth) == 0x000008, "Wrong size on BP_SGKController_C_OWNStartAuth");
static_assert(offsetof(BP_SGKController_C_OWNStartAuth, Param_SteamID) == 0x000000, "Member 'BP_SGKController_C_OWNStartAuth::Param_SteamID' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNToggleShowJoinUi
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OWNToggleShowJoinUi final
{
public:
	bool                                          CalledFromGameMode;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNToggleShowJoinUi) == 0x000001, "Wrong alignment on BP_SGKController_C_OWNToggleShowJoinUi");
static_assert(sizeof(BP_SGKController_C_OWNToggleShowJoinUi) == 0x000001, "Wrong size on BP_SGKController_C_OWNToggleShowJoinUi");
static_assert(offsetof(BP_SGKController_C_OWNToggleShowJoinUi, CalledFromGameMode) == 0x000000, "Member 'BP_SGKController_C_OWNToggleShowJoinUi::CalledFromGameMode' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNToggleShowKickMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OWNToggleShowKickMenu final
{
public:
	bool                                          ForceClose;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNToggleShowKickMenu) == 0x000001, "Wrong alignment on BP_SGKController_C_OWNToggleShowKickMenu");
static_assert(sizeof(BP_SGKController_C_OWNToggleShowKickMenu) == 0x000001, "Wrong size on BP_SGKController_C_OWNToggleShowKickMenu");
static_assert(offsetof(BP_SGKController_C_OWNToggleShowKickMenu, ForceClose) == 0x000000, "Member 'BP_SGKController_C_OWNToggleShowKickMenu::ForceClose' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNToggleVoteForKick
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_OWNToggleVoteForKick final
{
public:
	class APeak53PlayerState_C*                   CurrentPlayerPlayerstate;                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNToggleVoteForKick) == 0x000008, "Wrong alignment on BP_SGKController_C_OWNToggleVoteForKick");
static_assert(sizeof(BP_SGKController_C_OWNToggleVoteForKick) == 0x000008, "Wrong size on BP_SGKController_C_OWNToggleVoteForKick");
static_assert(offsetof(BP_SGKController_C_OWNToggleVoteForKick, CurrentPlayerPlayerstate) == 0x000000, "Member 'BP_SGKController_C_OWNToggleVoteForKick::CurrentPlayerPlayerstate' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNVoteForVoteableMap
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKController_C_OWNVoteForVoteableMap final
{
public:
	int32                                         LevelIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNVoteForVoteableMap) == 0x000004, "Wrong alignment on BP_SGKController_C_OWNVoteForVoteableMap");
static_assert(sizeof(BP_SGKController_C_OWNVoteForVoteableMap) == 0x000004, "Wrong size on BP_SGKController_C_OWNVoteForVoteableMap");
static_assert(offsetof(BP_SGKController_C_OWNVoteForVoteableMap, LevelIndex) == 0x000000, "Member 'BP_SGKController_C_OWNVoteForVoteableMap::LevelIndex' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.OWNVoteYesOrNo
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_OWNVoteYesOrNo final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_OWNVoteYesOrNo) == 0x000001, "Wrong alignment on BP_SGKController_C_OWNVoteYesOrNo");
static_assert(sizeof(BP_SGKController_C_OWNVoteYesOrNo) == 0x000001, "Wrong size on BP_SGKController_C_OWNVoteYesOrNo");
static_assert(offsetof(BP_SGKController_C_OWNVoteYesOrNo, Yes) == 0x000000, "Member 'BP_SGKController_C_OWNVoteYesOrNo::Yes' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.PlayersAlive
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKController_C_PlayersAlive final
{
public:
	int32                                         PlayersLeftAlive;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Value;                                             // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407B[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SGKController_C*>            CallFunc_GetAllActorsOfClass_OutActors;            // 0x0020(0x0010)(ReferenceParm)
	class ABP_SGKController_C*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_PlayersAlive) == 0x000008, "Wrong alignment on BP_SGKController_C_PlayersAlive");
static_assert(sizeof(BP_SGKController_C_PlayersAlive) == 0x000040, "Wrong size on BP_SGKController_C_PlayersAlive");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, PlayersLeftAlive) == 0x000000, "Member 'BP_SGKController_C_PlayersAlive::PlayersLeftAlive' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, Value) == 0x000004, "Member 'BP_SGKController_C_PlayersAlive::Value' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_SGKController_C_PlayersAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SGKController_C_PlayersAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, Temp_int_Variable) == 0x000014, "Member 'BP_SGKController_C_PlayersAlive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000018, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_GetAllActorsOfClass_OutActors) == 0x000020, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_PlayersAlive, CallFunc_IsValid_ReturnValue) == 0x00003D, "Member 'BP_SGKController_C_PlayersAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.PlayersAliveClient
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKController_C_PlayersAliveClient final
{
public:
	int32                                         InInt;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_PlayersAliveClient) == 0x000004, "Wrong alignment on BP_SGKController_C_PlayersAliveClient");
static_assert(sizeof(BP_SGKController_C_PlayersAliveClient) == 0x000004, "Wrong size on BP_SGKController_C_PlayersAliveClient");
static_assert(offsetof(BP_SGKController_C_PlayersAliveClient, InInt) == 0x000000, "Member 'BP_SGKController_C_PlayersAliveClient::InInt' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_SGKController_C_ReceiveEndPlay");
static_assert(sizeof(BP_SGKController_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_SGKController_C_ReceiveEndPlay");
static_assert(offsetof(BP_SGKController_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_SGKController_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ReceivePossess) == 0x000008, "Wrong alignment on BP_SGKController_C_ReceivePossess");
static_assert(sizeof(BP_SGKController_C_ReceivePossess) == 0x000008, "Wrong size on BP_SGKController_C_ReceivePossess");
static_assert(offsetof(BP_SGKController_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'BP_SGKController_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ReloadControllerCharacter
// 0x0490 (0x0490 - 0x0000)
struct BP_SGKController_C_ReloadControllerCharacter final
{
public:
	class UBP_SGKSaveGame_C*                      Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LocationFoundL;                                    // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407C[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnL;                                            // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  NewCharacterL;                                     // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407D[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerSave                          PlayerSaveL;                                       // 0x0080(0x0140)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class APawn*                                  OldPawnL;                                          // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407E[0x8];                                     // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0230(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_407F[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4080[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4081[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_FinishSpawningActor_ReturnValue;          // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindPlayerSave_ReturnValue;               // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4082[0x7];                                     // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_PlayerSave                          CallFunc_FindPlayerSave_PlayerSave;                // 0x0320(0x0140)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4083[0x7];                                     // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4084[0x7];                                     // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ReloadControllerCharacter) == 0x000010, "Wrong alignment on BP_SGKController_C_ReloadControllerCharacter");
static_assert(sizeof(BP_SGKController_C_ReloadControllerCharacter) == 0x000490, "Wrong size on BP_SGKController_C_ReloadControllerCharacter");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, Save) == 0x000000, "Member 'BP_SGKController_C_ReloadControllerCharacter::Save' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, LocationFoundL) == 0x000008, "Member 'BP_SGKController_C_ReloadControllerCharacter::LocationFoundL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, SpawnL) == 0x000010, "Member 'BP_SGKController_C_ReloadControllerCharacter::SpawnL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, NewCharacterL) == 0x000070, "Member 'BP_SGKController_C_ReloadControllerCharacter::NewCharacterL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, PlayerSaveL) == 0x000080, "Member 'BP_SGKController_C_ReloadControllerCharacter::PlayerSaveL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, OldPawnL) == 0x0001C0, "Member 'BP_SGKController_C_ReloadControllerCharacter::OldPawnL' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_MakeTransform_ReturnValue) == 0x0001D0, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000230, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_Array_Length_ReturnValue) == 0x000240, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x000244, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_GetObjectClass_ReturnValue) == 0x000248, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_Subtract_IntInt_ReturnValue) == 0x000250, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000254, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, K2Node_DynamicCast_AsCharacter) == 0x000258, "Member 'BP_SGKController_C_ReloadControllerCharacter::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, K2Node_DynamicCast_bSuccess) == 0x000260, "Member 'BP_SGKController_C_ReloadControllerCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_Array_Get_Item) == 0x000268, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000270, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_SelectVector_ReturnValue) == 0x000288, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_MakeTransform_ReturnValue_1) == 0x0002A0, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000300, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_IsValid_ReturnValue) == 0x000308, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000310, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_FindPlayerSave_ReturnValue) == 0x000318, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_FindPlayerSave_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_FindPlayerSave_PlayerSave) == 0x000320, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_FindPlayerSave_PlayerSave' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000460, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_GetObjectClass_ReturnValue_1) == 0x000468, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_K2_GetPawn_ReturnValue) == 0x000470, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000478, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000480, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_ReloadControllerCharacter, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000488, "Member 'BP_SGKController_C_ReloadControllerCharacter::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.RemoveOnScreenMarker
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_RemoveOnScreenMarker final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_RemoveOnScreenMarker) == 0x000008, "Wrong alignment on BP_SGKController_C_RemoveOnScreenMarker");
static_assert(sizeof(BP_SGKController_C_RemoveOnScreenMarker) == 0x000008, "Wrong size on BP_SGKController_C_RemoveOnScreenMarker");
static_assert(offsetof(BP_SGKController_C_RemoveOnScreenMarker, TargetActor) == 0x000000, "Member 'BP_SGKController_C_RemoveOnScreenMarker::TargetActor' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ScopeWidget
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_ScopeWidget final
{
public:
	bool                                          bActivate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ScopeWidget) == 0x000001, "Wrong alignment on BP_SGKController_C_ScopeWidget");
static_assert(sizeof(BP_SGKController_C_ScopeWidget) == 0x000001, "Wrong size on BP_SGKController_C_ScopeWidget");
static_assert(offsetof(BP_SGKController_C_ScopeWidget, bActivate) == 0x000000, "Member 'BP_SGKController_C_ScopeWidget::bActivate' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SendMessageFeedMulticast
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SendMessageFeedMulticast final
{
public:
	class FText                                   Param_MessageToBeSendFeedController;               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SendMessageFeedMulticast) == 0x000008, "Wrong alignment on BP_SGKController_C_SendMessageFeedMulticast");
static_assert(sizeof(BP_SGKController_C_SendMessageFeedMulticast) == 0x000018, "Wrong size on BP_SGKController_C_SendMessageFeedMulticast");
static_assert(offsetof(BP_SGKController_C_SendMessageFeedMulticast, Param_MessageToBeSendFeedController) == 0x000000, "Member 'BP_SGKController_C_SendMessageFeedMulticast::Param_MessageToBeSendFeedController' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SendMessageFeedServer
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SendMessageFeedServer final
{
public:
	class FText                                   Param_MessageToBeSendFeedController;               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SendMessageFeedServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SendMessageFeedServer");
static_assert(sizeof(BP_SGKController_C_SendMessageFeedServer) == 0x000018, "Wrong size on BP_SGKController_C_SendMessageFeedServer");
static_assert(offsetof(BP_SGKController_C_SendMessageFeedServer, Param_MessageToBeSendFeedController) == 0x000000, "Member 'BP_SGKController_C_SendMessageFeedServer::Param_MessageToBeSendFeedController' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SensitivityChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKController_C_SensitivityChanged final
{
public:
	float                                         NewValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SensitivityChanged) == 0x000004, "Wrong alignment on BP_SGKController_C_SensitivityChanged");
static_assert(sizeof(BP_SGKController_C_SensitivityChanged) == 0x000004, "Wrong size on BP_SGKController_C_SensitivityChanged");
static_assert(offsetof(BP_SGKController_C_SensitivityChanged, NewValue) == 0x000000, "Member 'BP_SGKController_C_SensitivityChanged::NewValue' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ServerUpdateCharacterYaw
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_ServerUpdateCharacterYaw final
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_ServerUpdateCharacterYaw) == 0x000008, "Wrong alignment on BP_SGKController_C_ServerUpdateCharacterYaw");
static_assert(sizeof(BP_SGKController_C_ServerUpdateCharacterYaw) == 0x000008, "Wrong size on BP_SGKController_C_ServerUpdateCharacterYaw");
static_assert(offsetof(BP_SGKController_C_ServerUpdateCharacterYaw, Param_Pawn) == 0x000000, "Member 'BP_SGKController_C_ServerUpdateCharacterYaw::Param_Pawn' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetBombServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_SetBombServer final
{
public:
	bool                                          Param_bHasBomb_;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SetBombServer) == 0x000001, "Wrong alignment on BP_SGKController_C_SetBombServer");
static_assert(sizeof(BP_SGKController_C_SetBombServer) == 0x000001, "Wrong size on BP_SGKController_C_SetBombServer");
static_assert(offsetof(BP_SGKController_C_SetBombServer, Param_bHasBomb_) == 0x000000, "Member 'BP_SGKController_C_SetBombServer::Param_bHasBomb_' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetClanLocallyClient
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_SetClanLocallyClient final
{
public:
	int64                                         Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SetClanLocallyClient) == 0x000008, "Wrong alignment on BP_SGKController_C_SetClanLocallyClient");
static_assert(sizeof(BP_SGKController_C_SetClanLocallyClient) == 0x000008, "Wrong size on BP_SGKController_C_SetClanLocallyClient");
static_assert(offsetof(BP_SGKController_C_SetClanLocallyClient, Key) == 0x000000, "Member 'BP_SGKController_C_SetClanLocallyClient::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetClanLocallyServer
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_SetClanLocallyServer final
{
public:
	int64                                         Key;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SetClanLocallyServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetClanLocallyServer");
static_assert(sizeof(BP_SGKController_C_SetClanLocallyServer) == 0x000008, "Wrong size on BP_SGKController_C_SetClanLocallyServer");
static_assert(offsetof(BP_SGKController_C_SetClanLocallyServer, Key) == 0x000000, "Member 'BP_SGKController_C_SetClanLocallyServer::Key' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetFlagServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_SetFlagServer final
{
public:
	bool                                          Param_bHasFlag_;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SetFlagServer) == 0x000001, "Wrong alignment on BP_SGKController_C_SetFlagServer");
static_assert(sizeof(BP_SGKController_C_SetFlagServer) == 0x000001, "Wrong size on BP_SGKController_C_SetFlagServer");
static_assert(offsetof(BP_SGKController_C_SetFlagServer, Param_bHasFlag_) == 0x000000, "Member 'BP_SGKController_C_SetFlagServer::Param_bHasFlag_' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetLoadoutServer
// 0x0048 (0x0048 - 0x0000)
struct BP_SGKController_C_SetLoadoutServer final
{
public:
	class UClass*                                 Param_Loadout;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_StartingWeaponItem>          WeaponsPrimary;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_StartingWeaponItem>          WeaponsSecondary;                                  // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_CraftingCost>                WeaponsTool1;                                      // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_CraftingCost>                WeaponsTool2;                                      // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SGKController_C_SetLoadoutServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetLoadoutServer");
static_assert(sizeof(BP_SGKController_C_SetLoadoutServer) == 0x000048, "Wrong size on BP_SGKController_C_SetLoadoutServer");
static_assert(offsetof(BP_SGKController_C_SetLoadoutServer, Param_Loadout) == 0x000000, "Member 'BP_SGKController_C_SetLoadoutServer::Param_Loadout' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SetLoadoutServer, WeaponsPrimary) == 0x000008, "Member 'BP_SGKController_C_SetLoadoutServer::WeaponsPrimary' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SetLoadoutServer, WeaponsSecondary) == 0x000018, "Member 'BP_SGKController_C_SetLoadoutServer::WeaponsSecondary' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SetLoadoutServer, WeaponsTool1) == 0x000028, "Member 'BP_SGKController_C_SetLoadoutServer::WeaponsTool1' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SetLoadoutServer, WeaponsTool2) == 0x000038, "Member 'BP_SGKController_C_SetLoadoutServer::WeaponsTool2' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerDeathsMulticast
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerDeathsMulticast final
{
public:
	class FText                                   Param_PlayerDeaths;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerDeathsMulticast) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerDeathsMulticast");
static_assert(sizeof(BP_SGKController_C_SetPlayerDeathsMulticast) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerDeathsMulticast");
static_assert(offsetof(BP_SGKController_C_SetPlayerDeathsMulticast, Param_PlayerDeaths) == 0x000000, "Member 'BP_SGKController_C_SetPlayerDeathsMulticast::Param_PlayerDeaths' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerDeathsServer
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerDeathsServer final
{
public:
	class FText                                   Param_PlayerDeaths;                                // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerDeathsServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerDeathsServer");
static_assert(sizeof(BP_SGKController_C_SetPlayerDeathsServer) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerDeathsServer");
static_assert(offsetof(BP_SGKController_C_SetPlayerDeathsServer, Param_PlayerDeaths) == 0x000000, "Member 'BP_SGKController_C_SetPlayerDeathsServer::Param_PlayerDeaths' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerKillsMulticast
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerKillsMulticast final
{
public:
	class FText                                   Param_PlayerKills;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerKillsMulticast) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerKillsMulticast");
static_assert(sizeof(BP_SGKController_C_SetPlayerKillsMulticast) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerKillsMulticast");
static_assert(offsetof(BP_SGKController_C_SetPlayerKillsMulticast, Param_PlayerKills) == 0x000000, "Member 'BP_SGKController_C_SetPlayerKillsMulticast::Param_PlayerKills' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerKillsServer
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerKillsServer final
{
public:
	class FText                                   Param_PlayerKills;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerKillsServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerKillsServer");
static_assert(sizeof(BP_SGKController_C_SetPlayerKillsServer) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerKillsServer");
static_assert(offsetof(BP_SGKController_C_SetPlayerKillsServer, Param_PlayerKills) == 0x000000, "Member 'BP_SGKController_C_SetPlayerKillsServer::Param_PlayerKills' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerNameMulticast
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerNameMulticast final
{
public:
	class FText                                   Param_PlayerName;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerNameMulticast) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerNameMulticast");
static_assert(sizeof(BP_SGKController_C_SetPlayerNameMulticast) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerNameMulticast");
static_assert(offsetof(BP_SGKController_C_SetPlayerNameMulticast, Param_PlayerName) == 0x000000, "Member 'BP_SGKController_C_SetPlayerNameMulticast::Param_PlayerName' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerNameServer
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerNameServer final
{
public:
	class FText                                   Param_PlayerName;                                  // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerNameServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerNameServer");
static_assert(sizeof(BP_SGKController_C_SetPlayerNameServer) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerNameServer");
static_assert(offsetof(BP_SGKController_C_SetPlayerNameServer, Param_PlayerName) == 0x000000, "Member 'BP_SGKController_C_SetPlayerNameServer::Param_PlayerName' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerScoreMulticast
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerScoreMulticast final
{
public:
	class FText                                   Score;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerScoreMulticast) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerScoreMulticast");
static_assert(sizeof(BP_SGKController_C_SetPlayerScoreMulticast) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerScoreMulticast");
static_assert(offsetof(BP_SGKController_C_SetPlayerScoreMulticast, Score) == 0x000000, "Member 'BP_SGKController_C_SetPlayerScoreMulticast::Score' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SetPlayerScoreServer
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKController_C_SetPlayerScoreServer final
{
public:
	class FText                                   Score;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_SGKController_C_SetPlayerScoreServer) == 0x000008, "Wrong alignment on BP_SGKController_C_SetPlayerScoreServer");
static_assert(sizeof(BP_SGKController_C_SetPlayerScoreServer) == 0x000018, "Wrong size on BP_SGKController_C_SetPlayerScoreServer");
static_assert(offsetof(BP_SGKController_C_SetPlayerScoreServer, Score) == 0x000000, "Member 'BP_SGKController_C_SetPlayerScoreServer::Score' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK AllowStartingItems
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_SGK_AllowStartingItems final
{
public:
	bool                                          AllowStartingItems;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_AllowStartingItems) == 0x000001, "Wrong alignment on BP_SGKController_C_SGK_AllowStartingItems");
static_assert(sizeof(BP_SGKController_C_SGK_AllowStartingItems) == 0x000001, "Wrong size on BP_SGKController_C_SGK_AllowStartingItems");
static_assert(offsetof(BP_SGKController_C_SGK_AllowStartingItems, AllowStartingItems) == 0x000000, "Member 'BP_SGKController_C_SGK_AllowStartingItems::AllowStartingItems' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK ItemSound
// 0x000C (0x000C - 0x0000)
struct BP_SGKController_C_SGK_ItemSound final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      SoundType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_ItemSound) == 0x000004, "Wrong alignment on BP_SGKController_C_SGK_ItemSound");
static_assert(sizeof(BP_SGKController_C_SGK_ItemSound) == 0x00000C, "Wrong size on BP_SGKController_C_SGK_ItemSound");
static_assert(offsetof(BP_SGKController_C_SGK_ItemSound, ItemId) == 0x000000, "Member 'BP_SGKController_C_SGK_ItemSound::ItemId' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SGK_ItemSound, SoundType) == 0x000008, "Member 'BP_SGKController_C_SGK_ItemSound::SoundType' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK LoadWeaponAttachments
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_SGK_LoadWeaponAttachments final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong alignment on BP_SGKController_C_SGK_LoadWeaponAttachments");
static_assert(sizeof(BP_SGKController_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong size on BP_SGKController_C_SGK_LoadWeaponAttachments");
static_assert(offsetof(BP_SGKController_C_SGK_LoadWeaponAttachments, Visible) == 0x000000, "Member 'BP_SGKController_C_SGK_LoadWeaponAttachments::Visible' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK RemoveAdditionalChecks
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKController_C_SGK_RemoveAdditionalChecks final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_RemoveAdditionalChecks) == 0x000008, "Wrong alignment on BP_SGKController_C_SGK_RemoveAdditionalChecks");
static_assert(sizeof(BP_SGKController_C_SGK_RemoveAdditionalChecks) == 0x000050, "Wrong size on BP_SGKController_C_SGK_RemoveAdditionalChecks");
static_assert(offsetof(BP_SGKController_C_SGK_RemoveAdditionalChecks, InvSlot) == 0x000000, "Member 'BP_SGKController_C_SGK_RemoveAdditionalChecks::InvSlot' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK RemoveAttachment
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKController_C_SGK_RemoveAttachment final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_RemoveAttachment) == 0x000001, "Wrong alignment on BP_SGKController_C_SGK_RemoveAttachment");
static_assert(sizeof(BP_SGKController_C_SGK_RemoveAttachment) == 0x000001, "Wrong size on BP_SGKController_C_SGK_RemoveAttachment");
static_assert(offsetof(BP_SGKController_C_SGK_RemoveAttachment, Attachment) == 0x000000, "Member 'BP_SGKController_C_SGK_RemoveAttachment::Attachment' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK SelfItem
// 0x0030 (0x0030 - 0x0000)
struct BP_SGKController_C_SGK_SelfItem final
{
public:
	struct FS_InvItem                             SelfItem;                                          // 0x0000(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_SelfItem) == 0x000008, "Wrong alignment on BP_SGKController_C_SGK_SelfItem");
static_assert(sizeof(BP_SGKController_C_SGK_SelfItem) == 0x000030, "Wrong size on BP_SGKController_C_SGK_SelfItem");
static_assert(offsetof(BP_SGKController_C_SGK_SelfItem, SelfItem) == 0x000000, "Member 'BP_SGKController_C_SGK_SelfItem::SelfItem' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK SpawnOverflowItems
// 0x0030 (0x0030 - 0x0000)
struct BP_SGKController_C_SGK_SpawnOverflowItems final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_SpawnOverflowItems) == 0x000008, "Wrong alignment on BP_SGKController_C_SGK_SpawnOverflowItems");
static_assert(sizeof(BP_SGKController_C_SGK_SpawnOverflowItems) == 0x000030, "Wrong size on BP_SGKController_C_SGK_SpawnOverflowItems");
static_assert(offsetof(BP_SGKController_C_SGK_SpawnOverflowItems, InvItem) == 0x000000, "Member 'BP_SGKController_C_SGK_SpawnOverflowItems::InvItem' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK UpdateCharacterYaw
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKController_C_SGK_UpdateCharacterYaw final
{
public:
	class APawn*                                  Param_Pawn;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong alignment on BP_SGKController_C_SGK_UpdateCharacterYaw");
static_assert(sizeof(BP_SGKController_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong size on BP_SGKController_C_SGK_UpdateCharacterYaw");
static_assert(offsetof(BP_SGKController_C_SGK_UpdateCharacterYaw, Param_Pawn) == 0x000000, "Member 'BP_SGKController_C_SGK_UpdateCharacterYaw::Param_Pawn' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SGK UpdateSpecialSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKController_C_SGK_UpdateSpecialSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SGK_UpdateSpecialSlot) == 0x000008, "Wrong alignment on BP_SGKController_C_SGK_UpdateSpecialSlot");
static_assert(sizeof(BP_SGKController_C_SGK_UpdateSpecialSlot) == 0x000050, "Wrong size on BP_SGKController_C_SGK_UpdateSpecialSlot");
static_assert(offsetof(BP_SGKController_C_SGK_UpdateSpecialSlot, InvSlot) == 0x000000, "Member 'BP_SGKController_C_SGK_UpdateSpecialSlot::InvSlot' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.SpawnPlantedBombActor
// 0x0070 (0x0070 - 0x0000)
struct BP_SGKController_C_SpawnPlantedBombActor final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  Team;                                              // 0x0060(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_SpawnPlantedBombActor) == 0x000010, "Wrong alignment on BP_SGKController_C_SpawnPlantedBombActor");
static_assert(sizeof(BP_SGKController_C_SpawnPlantedBombActor) == 0x000070, "Wrong size on BP_SGKController_C_SpawnPlantedBombActor");
static_assert(offsetof(BP_SGKController_C_SpawnPlantedBombActor, SpawnTransform) == 0x000000, "Member 'BP_SGKController_C_SpawnPlantedBombActor::SpawnTransform' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_SpawnPlantedBombActor, Team) == 0x000060, "Member 'BP_SGKController_C_SpawnPlantedBombActor::Team' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.ui_toggle_game_end_screen
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKController_C_Ui_toggle_game_end_screen final
{
public:
	class AActor*                                 Param_MyGameManager;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_PlayerScore;                                 // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_PlayerKills;                                 // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerDeath;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MVPScore;                                          // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MVPKills;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MVPDeaths;                                         // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 MVPName;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         SealsScoreGlobal;                                  // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SealsKillsGlobal;                                  // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SealsDeathsGlobal;                                 // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsurgentsScoreGlobal;                             // 0x003C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsurgentsKillsGlobal;                             // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InsurgentsDeathsGlobal;                            // 0x0044(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  WinnerTeam;                                        // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4085[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UnlockedItem;                                      // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_Ui_toggle_game_end_screen) == 0x000008, "Wrong alignment on BP_SGKController_C_Ui_toggle_game_end_screen");
static_assert(sizeof(BP_SGKController_C_Ui_toggle_game_end_screen) == 0x000050, "Wrong size on BP_SGKController_C_Ui_toggle_game_end_screen");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, Param_MyGameManager) == 0x000000, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::Param_MyGameManager' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, Param_PlayerScore) == 0x000008, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::Param_PlayerScore' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, Param_PlayerKills) == 0x00000C, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::Param_PlayerKills' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, PlayerDeath) == 0x000010, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::PlayerDeath' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, MVPScore) == 0x000014, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::MVPScore' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, MVPKills) == 0x000018, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::MVPKills' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, MVPDeaths) == 0x00001C, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::MVPDeaths' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, MVPName) == 0x000020, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::MVPName' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, SealsScoreGlobal) == 0x000030, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::SealsScoreGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, SealsKillsGlobal) == 0x000034, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::SealsKillsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, SealsDeathsGlobal) == 0x000038, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::SealsDeathsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, InsurgentsScoreGlobal) == 0x00003C, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::InsurgentsScoreGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, InsurgentsKillsGlobal) == 0x000040, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::InsurgentsKillsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, InsurgentsDeathsGlobal) == 0x000044, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::InsurgentsDeathsGlobal' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, WinnerTeam) == 0x000048, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::WinnerTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKController_C_Ui_toggle_game_end_screen, UnlockedItem) == 0x00004C, "Member 'BP_SGKController_C_Ui_toggle_game_end_screen::UnlockedItem' has a wrong offset!");

// Function BP_SGKController.BP_SGKController_C.UnequipWeapon
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKController_C_UnequipWeapon final
{
public:
	struct FS_WeaponSlot                          S_WeaponSlot;                                      // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKController_C_UnequipWeapon) == 0x000008, "Wrong alignment on BP_SGKController_C_UnequipWeapon");
static_assert(sizeof(BP_SGKController_C_UnequipWeapon) == 0x000050, "Wrong size on BP_SGKController_C_UnequipWeapon");
static_assert(offsetof(BP_SGKController_C_UnequipWeapon, S_WeaponSlot) == 0x000000, "Member 'BP_SGKController_C_UnequipWeapon::S_WeaponSlot' has a wrong offset!");

}

