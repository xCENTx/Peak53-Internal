#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKGameInstanceInterface

#include "Basic.hpp"

#include "BP_SGKGameInstanceInterface_classes.hpp"
#include "BP_SGKGameInstanceInterface_parameters.hpp"


namespace SDK
{

// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK AimedSense
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimedSense                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_AimedSense(double* AimedSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK AimedSense");

	Params::BP_SGKGameInstanceInterface_C_SGK_AimedSense Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AimedSense != nullptr)
		*AimedSense = Parms.AimedSense;
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK GetLoadSaveGame
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LoadSaveGame                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_GetLoadSaveGame(bool* LoadSaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK GetLoadSaveGame");

	Params::BP_SGKGameInstanceInterface_C_SGK_GetLoadSaveGame Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LoadSaveGame != nullptr)
		*LoadSaveGame = Parms.LoadSaveGame;
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK GetMenuOpenedLevel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MenuOpenedLevel                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_GetMenuOpenedLevel(bool* MenuOpenedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK GetMenuOpenedLevel");

	Params::BP_SGKGameInstanceInterface_C_SGK_GetMenuOpenedLevel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MenuOpenedLevel != nullptr)
		*MenuOpenedLevel = Parms.MenuOpenedLevel;
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK GetSaveGameSlotName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SaveGameSlotName                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_GetSaveGameSlotName(class FString* SaveGameSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK GetSaveGameSlotName");

	Params::BP_SGKGameInstanceInterface_C_SGK_GetSaveGameSlotName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SaveGameSlotName != nullptr)
		*SaveGameSlotName = std::move(Parms.SaveGameSlotName);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK MouseSense
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MouseSense                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_MouseSense(double* MouseSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK MouseSense");

	Params::BP_SGKGameInstanceInterface_C_SGK_MouseSense Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MouseSense != nullptr)
		*MouseSense = Parms.MouseSense;
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK Options Save
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_SGKSettingsSaveData_C*        Settings                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_Options_Save(class UBP_SGKSettingsSaveData_C** Settings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK Options Save");

	Params::BP_SGKGameInstanceInterface_C_SGK_Options_Save Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Settings != nullptr)
		*Settings = Parms.Settings;
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)

void IBP_SGKGameInstanceInterface_C::SGK_SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetAimedSense
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimedSense                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetAimedSense(double AimedSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetAimedSense");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetAimedSense Parms{};

	Parms.AimedSense = AimedSense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetLoadSaveGame
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LoadSaveGame                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetLoadSaveGame(bool LoadSaveGame)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetLoadSaveGame");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetLoadSaveGame Parms{};

	Parms.LoadSaveGame = LoadSaveGame;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetMenuOpenedLevel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    MenuOpenedLevel                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetMenuOpenedLevel(bool MenuOpenedLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetMenuOpenedLevel");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetMenuOpenedLevel Parms{};

	Parms.MenuOpenedLevel = MenuOpenedLevel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetMouseSense
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MouseSense                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetMouseSense(double MouseSense)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetMouseSense");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetMouseSense Parms{};

	Parms.MouseSense = MouseSense;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetSaveGameSlotName
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SaveGameSlotName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetSaveGameSlotName(const class FString& SaveGameSlotName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetSaveGameSlotName");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetSaveGameSlotName Parms{};

	Parms.SaveGameSlotName = std::move(SaveGameSlotName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_SGKGameInstanceInterface.BP_SGKGameInstanceInterface_C.SGK SetVolume
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_SoundVolumes                          Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Volume                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_SGKGameInstanceInterface_C::SGK_SetVolume(E_SoundVolumes Sound, double Volume)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_SGKGameInstanceInterface_C", "SGK SetVolume");

	Params::BP_SGKGameInstanceInterface_C_SGK_SetVolume Parms{};

	Parms.Sound = Sound;
	Parms.Volume = Volume;

	UObject::ProcessEvent(Func, &Parms);
}

}

