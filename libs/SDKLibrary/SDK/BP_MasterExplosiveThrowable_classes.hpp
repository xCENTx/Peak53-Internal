#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterExplosiveThrowable

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BP_MasterThrowable_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterExplosiveThrowable.BP_MasterExplosiveThrowable_C
// 0x0060 (0x0830 - 0x07D0)
#pragma pack(push, 0x1)
class alignas(0x10) ABP_MasterExplosiveThrowable_C : public ABP_MasterThrowable_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_MasterExplosiveThrowable_C;      // 0x07C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	int32                                         Damage;                                            // 0x07D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinDamage;                                         // 0x07D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExplosionInnerRadius;                              // 0x07D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ExplosionOuterRadius;                              // 0x07E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageFalloff;                                     // 0x07E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TimeToExplode;                                     // 0x07F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystem*                        ExplosionEffect;                                   // 0x07F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ExplosionEffectScale;                              // 0x0800(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             ExplosionSound;                                    // 0x0818(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterExplosiveThrowableProjectile_C* ThrownExplosiveProjectile;                         // 0x0820(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MasterExplosiveThrowable(int32 EntryPoint);
	void InitializeThrowProjectile();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterExplosiveThrowable_C">();
	}
	static class ABP_MasterExplosiveThrowable_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterExplosiveThrowable_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(ABP_MasterExplosiveThrowable_C) == 0x000010, "Wrong alignment on ABP_MasterExplosiveThrowable_C");
static_assert(sizeof(ABP_MasterExplosiveThrowable_C) == 0x000830, "Wrong size on ABP_MasterExplosiveThrowable_C");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, UberGraphFrame_BP_MasterExplosiveThrowable_C) == 0x0007C8, "Member 'ABP_MasterExplosiveThrowable_C::UberGraphFrame_BP_MasterExplosiveThrowable_C' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, Damage) == 0x0007D0, "Member 'ABP_MasterExplosiveThrowable_C::Damage' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, MinDamage) == 0x0007D4, "Member 'ABP_MasterExplosiveThrowable_C::MinDamage' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ExplosionInnerRadius) == 0x0007D8, "Member 'ABP_MasterExplosiveThrowable_C::ExplosionInnerRadius' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ExplosionOuterRadius) == 0x0007E0, "Member 'ABP_MasterExplosiveThrowable_C::ExplosionOuterRadius' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, DamageFalloff) == 0x0007E8, "Member 'ABP_MasterExplosiveThrowable_C::DamageFalloff' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, TimeToExplode) == 0x0007F0, "Member 'ABP_MasterExplosiveThrowable_C::TimeToExplode' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ExplosionEffect) == 0x0007F8, "Member 'ABP_MasterExplosiveThrowable_C::ExplosionEffect' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ExplosionEffectScale) == 0x000800, "Member 'ABP_MasterExplosiveThrowable_C::ExplosionEffectScale' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ExplosionSound) == 0x000818, "Member 'ABP_MasterExplosiveThrowable_C::ExplosionSound' has a wrong offset!");
static_assert(offsetof(ABP_MasterExplosiveThrowable_C, ThrownExplosiveProjectile) == 0x000820, "Member 'ABP_MasterExplosiveThrowable_C::ThrownExplosiveProjectile' has a wrong offset!");

}

