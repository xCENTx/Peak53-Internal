#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemName

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ItemName.BP_ItemName_C
// 0x0040 (0x02B8 - 0x0278)
class UBP_ItemName_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Backround;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_86;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          SetNameToUpper;                                    // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowInteraction;                                  // 0x0291(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5233[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 LastActor;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        LastComponent;                                     // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackroundColor;                                    // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_ItemName(int32 EntryPoint);
	void InitializeName(class AActor* LookAtActor, class UActorComponent* LookAtComponent);
	ESlateVisibility NamePanelVisibility();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemName_C">();
	}
	static class UBP_ItemName_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ItemName_C>();
	}
};
static_assert(alignof(UBP_ItemName_C) == 0x000008, "Wrong alignment on UBP_ItemName_C");
static_assert(sizeof(UBP_ItemName_C) == 0x0002B8, "Wrong size on UBP_ItemName_C");
static_assert(offsetof(UBP_ItemName_C, UberGraphFrame) == 0x000278, "Member 'UBP_ItemName_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, Backround) == 0x000280, "Member 'UBP_ItemName_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, TextBlock_86) == 0x000288, "Member 'UBP_ItemName_C::TextBlock_86' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, SetNameToUpper) == 0x000290, "Member 'UBP_ItemName_C::SetNameToUpper' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, AllowInteraction) == 0x000291, "Member 'UBP_ItemName_C::AllowInteraction' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, LastActor) == 0x000298, "Member 'UBP_ItemName_C::LastActor' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, LastComponent) == 0x0002A0, "Member 'UBP_ItemName_C::LastComponent' has a wrong offset!");
static_assert(offsetof(UBP_ItemName_C, BackroundColor) == 0x0002A8, "Member 'UBP_ItemName_C::BackroundColor' has a wrong offset!");

}

