#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKInteractionInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "E_WorldActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SGKInteractionInterface.BP_SGKInteractionInterface_C
// 0x0000 (0x0028 - 0x0028)
class IBP_SGKInteractionInterface_C final : public IInterface
{
public:
	void SGK_AllowInteraction(bool* AllowInteraction);
	void SGK_CodeCheck(const class FText& Code, bool* CodeAccepted);
	bool SGK_DropItem(const struct FS_InvItem& InvItem, bool Dropped, bool Spawned, bool SaveLoaded);
	bool SGK_EndInteraction(class UBP_PlayerInventory_C* PlayerInventory);
	void SGK_GetVerifiedPlayers(TArray<class FText>* VerifiedPlayers);
	bool SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action);
	void SGK_InteractName(class FText* InteractName);
	void SGK_InvItem(bool* IsItem, struct FS_InvItem* InvItem);
	void SGK_ItemAmount(int32* Amount);
	void SGK_Mesh(class UPrimitiveComponent** Mesh);
	void SGK_PlayerInProximity();
	void SGK_PlayerOutProximity();
	void SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions);
	void SGK_SetVerifiedPlayers(TArray<class FText>& VerifiedPlayers);
	void SGK_TurnedOnEffect(bool TurnedOn);
	bool SGK_UpdateCode(const class FText& Code);
	bool SGK_VerifyPlayer(const class FText& Text);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SGKInteractionInterface_C">();
	}
	static class IBP_SGKInteractionInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBP_SGKInteractionInterface_C>();
	}
};
static_assert(alignof(IBP_SGKInteractionInterface_C) == 0x000008, "Wrong alignment on IBP_SGKInteractionInterface_C");
static_assert(sizeof(IBP_SGKInteractionInterface_C) == 0x000028, "Wrong size on IBP_SGKInteractionInterface_C");

}

