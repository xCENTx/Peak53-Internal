#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKFunctions

#include "Basic.hpp"

#include "BP_SGKFunctions_classes.hpp"
#include "BP_SGKFunctions_parameters.hpp"


namespace SDK
{

// Function BP_SGKFunctions.BP_SGKFunctions_C.AddKeyToSave
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UInputMappingContext*             MappingContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FEnhancedActionKeyMapping        KeyAction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::AddKeyToSave(class UInputMappingContext* MappingContext, const struct FEnhancedActionKeyMapping& KeyAction, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "AddKeyToSave");

	Params::BP_SGKFunctions_C_AddKeyToSave Parms{};

	Parms.MappingContext = MappingContext;
	Parms.KeyAction = std::move(KeyAction);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.LoadControls
// (Static, Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::LoadControls(class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "LoadControls");

	Params::BP_SGKFunctions_C_LoadControls Parms{};

	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AllowStacking
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       InvSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    AllowStacking                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_AllowStacking(const struct FS_InvSlot& InvSlot, class UObject* __WorldContext, bool* AllowStacking)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK AllowStacking");

	Params::BP_SGKFunctions_C_SGK_AllowStacking Parms{};

	Parms.InvSlot = std::move(InvSlot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AllowStacking != nullptr)
		*AllowStacking = Parms.AllowStacking;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AttachmentCompatibilityCheck
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvItem                       WeaponItem                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_InvItem                       AttachmentItem                                         (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    AllowAttachment                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_AttachmentCompatibilityCheck(const struct FS_InvItem& WeaponItem, const struct FS_InvItem& AttachmentItem, class UObject* __WorldContext, bool* AllowAttachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK AttachmentCompatibilityCheck");

	Params::BP_SGKFunctions_C_SGK_AttachmentCompatibilityCheck Parms{};

	Parms.WeaponItem = std::move(WeaponItem);
	Parms.AttachmentItem = std::move(AttachmentItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (AllowAttachment != nullptr)
		*AllowAttachment = Parms.AllowAttachment;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK AttachmentDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Is_Attachment                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_AttachmentDetails             Attachment_Details                                     (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_AttachmentDetails(const struct FS_InvItem& Item, class UObject* __WorldContext, bool* Is_Attachment, struct FS_AttachmentDetails* Attachment_Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK AttachmentDetails");

	Params::BP_SGKFunctions_C_SGK_AttachmentDetails Parms{};

	Parms.Item = std::move(Item);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Is_Attachment != nullptr)
		*Is_Attachment = Parms.Is_Attachment;

	if (Attachment_Details != nullptr)
		*Attachment_Details = std::move(Parms.Attachment_Details);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK BuildPartDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             BuildPartID                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    BuildPartFound                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_BuildPartDetails              BuildPartDetails                                       (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_BuildPartDetails(class FName BuildPartID, class UObject* __WorldContext, bool* BuildPartFound, struct FS_BuildPartDetails* BuildPartDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK BuildPartDetails");

	Params::BP_SGKFunctions_C_SGK_BuildPartDetails Parms{};

	Parms.BuildPartID = BuildPartID;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (BuildPartFound != nullptr)
		*BuildPartFound = Parms.BuildPartFound;

	if (BuildPartDetails != nullptr)
		*BuildPartDetails = std::move(Parms.BuildPartDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK BuildPartRepairCost
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UBP_SGKFunctions_C::SGK_BuildPartRepairCost(class AActor* Actor, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK BuildPartRepairCost");

	Params::BP_SGKFunctions_C_SGK_BuildPartRepairCost Parms{};

	Parms.Actor = Actor;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK DurabilityDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_DurabilityDetails             DurabilityDetails                                      (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_DurabilityDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_DurabilityDetails* DurabilityDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK DurabilityDetails");

	Params::BP_SGKFunctions_C_SGK_DurabilityDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (DurabilityDetails != nullptr)
		*DurabilityDetails = std::move(Parms.DurabilityDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetInvSlot
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_MasterInventory_C*            MasterInventory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SlotFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_InvSlot                       InvSlot                                                (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_GetInvSlot(class UBP_MasterInventory_C* MasterInventory, int32 Param_Index, class UObject* __WorldContext, bool* SlotFound, struct FS_InvSlot* InvSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK GetInvSlot");

	Params::BP_SGKFunctions_C_SGK_GetInvSlot Parms{};

	Parms.MasterInventory = MasterInventory;
	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SlotFound != nullptr)
		*SlotFound = Parms.SlotFound;

	if (InvSlot != nullptr)
		*InvSlot = std::move(Parms.InvSlot);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetItemRangeClass
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           RangeWeapon                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

bool UBP_SGKFunctions_C::SGK_GetItemRangeClass(const struct FS_InvItem& Item, class UObject* __WorldContext, class UClass** RangeWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK GetItemRangeClass");

	Params::BP_SGKFunctions_C_SGK_GetItemRangeClass Parms{};

	Parms.Item = std::move(Item);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RangeWeapon != nullptr)
		*RangeWeapon = Parms.RangeWeapon;

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetItemWeaponClass
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UClass*                           RangeWeapon                                            (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

bool UBP_SGKFunctions_C::SGK_GetItemWeaponClass(const struct FS_InvItem& Item, class UObject* __WorldContext, class UClass** RangeWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK GetItemWeaponClass");

	Params::BP_SGKFunctions_C_SGK_GetItemWeaponClass Parms{};

	Parms.Item = std::move(Item);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RangeWeapon != nullptr)
		*RangeWeapon = Parms.RangeWeapon;

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GetRootSlot
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       InvSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_InvSlot                       RootInvSlot                                            (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_GetRootSlot(const struct FS_InvSlot& InvSlot, class UObject* __WorldContext, struct FS_InvSlot* RootInvSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK GetRootSlot");

	Params::BP_SGKFunctions_C_SGK_GetRootSlot Parms{};

	Parms.InvSlot = std::move(InvSlot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (RootInvSlot != nullptr)
		*RootInvSlot = std::move(Parms.RootInvSlot);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK GridClasses
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_BuildType                             BuildType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           Grid                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_GridClasses(E_BuildType BuildType, class UObject* __WorldContext, class UClass** Grid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK GridClasses");

	Params::BP_SGKFunctions_C_SGK_GridClasses Parms{};

	Parms.BuildType = BuildType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Grid != nullptr)
		*Grid = Parms.Grid;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK HitboxDamage
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_Damage>                HitboxDamage                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// E_Hitbox                                HitBox                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_HitboxDamage(TArray<struct FS_Damage>& HitboxDamage, E_Hitbox HitBox, class UObject* __WorldContext, int32* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK HitboxDamage");

	Params::BP_SGKFunctions_C_SGK_HitboxDamage Parms{};

	Parms.HitboxDamage = std::move(HitboxDamage);
	Parms.HitBox = HitBox;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	HitboxDamage = std::move(Parms.HitboxDamage);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InventoryGridDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDataTableRowHandle              RowHandle                                              (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    FoundGrid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CustomGridLayoutData          InventoryGridData                                      (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_InventoryGridDetails(const struct FDataTableRowHandle& RowHandle, class UObject* __WorldContext, bool* FoundGrid, struct FS_CustomGridLayoutData* InventoryGridData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK InventoryGridDetails");

	Params::BP_SGKFunctions_C_SGK_InventoryGridDetails Parms{};

	Parms.RowHandle = std::move(RowHandle);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FoundGrid != nullptr)
		*FoundGrid = Parms.FoundGrid;

	if (InventoryGridData != nullptr)
		*InventoryGridData = std::move(Parms.InventoryGridData);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotAmount
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       InvSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemValid                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_InvSlotAmount(const struct FS_InvSlot& InvSlot, class UObject* __WorldContext, bool* ItemValid, int32* Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK InvSlotAmount");

	Params::BP_SGKFunctions_C_SGK_InvSlotAmount Parms{};

	Parms.InvSlot = std::move(InvSlot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemValid != nullptr)
		*ItemValid = Parms.ItemValid;

	if (Amount != nullptr)
		*Amount = Parms.Amount;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotFromSlotID
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlotID                     SlotID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_InvSlot                       InvSlot                                                (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_InvSlotFromSlotID(const struct FS_InvSlotID& SlotID, class UObject* __WorldContext, struct FS_InvSlot* InvSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK InvSlotFromSlotID");

	Params::BP_SGKFunctions_C_SGK_InvSlotFromSlotID Parms{};

	Parms.SlotID = std::move(SlotID);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InvSlot != nullptr)
		*InvSlot = std::move(Parms.InvSlot);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotItem
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       Inv_Slot                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_InvItem                       InvItem                                                (Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_InvSlotItem(const struct FS_InvSlot& Inv_Slot, class UObject* __WorldContext, struct FS_InvItem* InvItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK InvSlotItem");

	Params::BP_SGKFunctions_C_SGK_InvSlotItem Parms{};

	Parms.Inv_Slot = std::move(Inv_Slot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (InvItem != nullptr)
		*InvItem = std::move(Parms.InvItem);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK InvSlotOccupied
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       InvSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Occupied                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_InvSlotOccupied(const struct FS_InvSlot& InvSlot, class UObject* __WorldContext, bool* Occupied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK InvSlotOccupied");

	Params::BP_SGKFunctions_C_SGK_InvSlotOccupied Parms{};

	Parms.InvSlot = std::move(InvSlot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Occupied != nullptr)
		*Occupied = Parms.Occupied;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsHitbox
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// E_Hitbox                                HitBox                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_IsHitbox(class FName BoneName, class UObject* __WorldContext, E_Hitbox* HitBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK IsHitbox");

	Params::BP_SGKFunctions_C_SGK_IsHitbox Parms{};

	Parms.BoneName = BoneName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (HitBox != nullptr)
		*HitBox = Parms.HitBox;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsMaxAmount
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       InvSlot                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    MaxCount                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_IsMaxAmount(const struct FS_InvSlot& InvSlot, class UObject* __WorldContext, bool* MaxCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK IsMaxAmount");

	Params::BP_SGKFunctions_C_SGK_IsMaxAmount Parms{};

	Parms.InvSlot = std::move(InvSlot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MaxCount != nullptr)
		*MaxCount = Parms.MaxCount;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsRootSlot
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvSlot                       Inv_Slot                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsRootSlot                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   RootIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_IsRootSlot(const struct FS_InvSlot& Inv_Slot, class UObject* __WorldContext, bool* IsRootSlot, int32* RootIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK IsRootSlot");

	Params::BP_SGKFunctions_C_SGK_IsRootSlot Parms{};

	Parms.Inv_Slot = std::move(Inv_Slot);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsRootSlot != nullptr)
		*IsRootSlot = Parms.IsRootSlot;

	if (RootIndex != nullptr)
		*RootIndex = Parms.RootIndex;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK IsSlotsSameItem
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       SlotOne                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FS_InvSlot                       SlotTwo                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsSameItem                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_IsSlotsSameItem(const struct FS_InvSlot& SlotOne, const struct FS_InvSlot& SlotTwo, class UObject* __WorldContext, bool* IsSameItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK IsSlotsSameItem");

	Params::BP_SGKFunctions_C_SGK_IsSlotsSameItem Parms{};

	Parms.SlotOne = std::move(SlotOne);
	Parms.SlotTwo = std::move(SlotTwo);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsSameItem != nullptr)
		*IsSameItem = Parms.IsSameItem;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemAmmoDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_AmmoDetails                   ItemAmmoDetails                                        (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemAmmoDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_AmmoDetails* ItemAmmoDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemAmmoDetails");

	Params::BP_SGKFunctions_C_SGK_ItemAmmoDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemAmmoDetails != nullptr)
		*ItemAmmoDetails = std::move(Parms.ItemAmmoDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemBuildPartDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_BuildPartDetails              Build_Part_Details                                     (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemBuildPartDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_BuildPartDetails* Build_Part_Details)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemBuildPartDetails");

	Params::BP_SGKFunctions_C_SGK_ItemBuildPartDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (Build_Part_Details != nullptr)
		*Build_Part_Details = std::move(Parms.Build_Part_Details);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemConsumableDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ConsumableDetails             ItemDetails                                            (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemConsumableDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_ConsumableDetails* ItemDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemConsumableDetails");

	Params::BP_SGKFunctions_C_SGK_ItemConsumableDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemDetails != nullptr)
		*ItemDetails = std::move(Parms.ItemDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemContainerDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ContainerDetails              ItemContainerDetails                                   (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemContainerDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_ContainerDetails* ItemContainerDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemContainerDetails");

	Params::BP_SGKFunctions_C_SGK_ItemContainerDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemContainerDetails != nullptr)
		*ItemContainerDetails = std::move(Parms.ItemContainerDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemCookingRecipe
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// E_CookingType                           CookingType                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CookingRecipe                 CookingRecipe                                          (Parm, OutParm, HasGetValueTypeHash)

bool UBP_SGKFunctions_C::SGK_ItemCookingRecipe(const struct FS_InvItem& Item, E_CookingType CookingType, class UObject* __WorldContext, struct FS_CookingRecipe* CookingRecipe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemCookingRecipe");

	Params::BP_SGKFunctions_C_SGK_ItemCookingRecipe Parms{};

	Parms.Item = std::move(Item);
	Parms.CookingType = CookingType;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CookingRecipe != nullptr)
		*CookingRecipe = std::move(Parms.CookingRecipe);

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ItemDetails                   ItemDetails                                            (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_ItemDetails* ItemDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemDetails");

	Params::BP_SGKFunctions_C_SGK_ItemDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemDetails != nullptr)
		*ItemDetails = std::move(Parms.ItemDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemEquipmentDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       S_InvItem                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    IsEquipmentItem                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_EquipmentDetails              EquipmentDetails                                       (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemEquipmentDetails(const struct FS_InvItem& S_InvItem, class UObject* __WorldContext, bool* IsEquipmentItem, struct FS_EquipmentDetails* EquipmentDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemEquipmentDetails");

	Params::BP_SGKFunctions_C_SGK_ItemEquipmentDetails Parms{};

	Parms.S_InvItem = std::move(S_InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (IsEquipmentItem != nullptr)
		*IsEquipmentItem = Parms.IsEquipmentItem;

	if (EquipmentDetails != nullptr)
		*EquipmentDetails = std::move(Parms.EquipmentDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemHoldableDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_HoldableDetails               ItemHoldableDetails                                    (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemHoldableDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_HoldableDetails* ItemHoldableDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemHoldableDetails");

	Params::BP_SGKFunctions_C_SGK_ItemHoldableDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemHoldableDetails != nullptr)
		*ItemHoldableDetails = std::move(Parms.ItemHoldableDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemRecipeDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_RecipeDetails                 ItemRecipeDetails                                      (Parm, OutParm, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemRecipeDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_RecipeDetails* ItemRecipeDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemRecipeDetails");

	Params::BP_SGKFunctions_C_SGK_ItemRecipeDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemRecipeDetails != nullptr)
		*ItemRecipeDetails = std::move(Parms.ItemRecipeDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemRepairCost
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CraftingCost                  RepairItems                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// double                                  Durability                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Max_Durability                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ItemCount                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemRepairCost(const struct FS_CraftingCost& RepairItems, double Durability, double Max_Durability, class UObject* __WorldContext, int32* ItemCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemRepairCost");

	Params::BP_SGKFunctions_C_SGK_ItemRepairCost Parms{};

	Parms.RepairItems = std::move(RepairItems);
	Parms.Durability = Durability;
	Parms.Max_Durability = Max_Durability;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemCount != nullptr)
		*ItemCount = Parms.ItemCount;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemSize
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   Height                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Width                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemSize(const struct FS_InvItem& InvItem, class UObject* __WorldContext, int32* Height, int32* Width)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemSize");

	Params::BP_SGKFunctions_C_SGK_ItemSize Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (Height != nullptr)
		*Height = Parms.Height;

	if (Width != nullptr)
		*Width = Parms.Width;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemUIDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_UIDetails                     ItemUIDetails                                          (Parm, OutParm, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemUIDetails(const struct FS_InvItem& InvItem, class UObject* __WorldContext, bool* ItemFound, struct FS_UIDetails* ItemUIDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemUIDetails");

	Params::BP_SGKFunctions_C_SGK_ItemUIDetails Parms{};

	Parms.InvItem = std::move(InvItem);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemUIDetails != nullptr)
		*ItemUIDetails = std::move(Parms.ItemUIDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK ItemWeight
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FS_InvItem                       Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  TotalWeight                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_ItemWeight(const struct FS_InvItem& Item, class UObject* __WorldContext, double* TotalWeight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK ItemWeight");

	Params::BP_SGKFunctions_C_SGK_ItemWeight Parms{};

	Parms.Item = std::move(Item);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (TotalWeight != nullptr)
		*TotalWeight = Parms.TotalWeight;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK RecipeDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RecipeRowName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_CraftingRecipe                CraftingRecipe                                         (Parm, OutParm, HasGetValueTypeHash)

bool UBP_SGKFunctions_C::SGK_RecipeDetails(class FName RecipeRowName, class UObject* __WorldContext, struct FS_CraftingRecipe* CraftingRecipe)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK RecipeDetails");

	Params::BP_SGKFunctions_C_SGK_RecipeDetails Parms{};

	Parms.RecipeRowName = RecipeRowName;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (CraftingRecipe != nullptr)
		*CraftingRecipe = std::move(Parms.CraftingRecipe);

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK RootSpaceCheck
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       RootInvSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Width                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_InvSlotID                     IgnoreItem                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SlotsBlocked                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_InvSlot>               FoundSlots                                             (Parm, OutParm, ContainsInstancedReference)

void UBP_SGKFunctions_C::SGK_RootSpaceCheck(const struct FS_InvSlot& RootInvSlot, int32 Height, int32 Width, const struct FS_InvSlotID& IgnoreItem, bool Rotated, class UObject* __WorldContext, bool* SlotsBlocked, TArray<struct FS_InvSlot>* FoundSlots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK RootSpaceCheck");

	Params::BP_SGKFunctions_C_SGK_RootSpaceCheck Parms{};

	Parms.RootInvSlot = std::move(RootInvSlot);
	Parms.Height = Height;
	Parms.Width = Width;
	Parms.IgnoreItem = std::move(IgnoreItem);
	Parms.Rotated = Rotated;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (SlotsBlocked != nullptr)
		*SlotsBlocked = Parms.SlotsBlocked;

	if (FoundSlots != nullptr)
		*FoundSlots = std::move(Parms.FoundSlots);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK SlotFinder
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       RootInvSlot                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// int32                                   Height                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Width                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Rotated                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<struct FS_InvSlot>               FoundSlots                                             (Parm, OutParm, ContainsInstancedReference)

void UBP_SGKFunctions_C::SGK_SlotFinder(const struct FS_InvSlot& RootInvSlot, int32 Height, int32 Width, bool Rotated, class UObject* __WorldContext, TArray<struct FS_InvSlot>* FoundSlots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK SlotFinder");

	Params::BP_SGKFunctions_C_SGK_SlotFinder Parms{};

	Parms.RootInvSlot = std::move(RootInvSlot);
	Parms.Height = Height;
	Parms.Width = Width;
	Parms.Rotated = Rotated;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (FoundSlots != nullptr)
		*FoundSlots = std::move(Parms.FoundSlots);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK SlotItemDetails
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UBP_MasterInventory_C*            Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ItemDetails                   ItemDetails                                            (Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)

void UBP_SGKFunctions_C::SGK_SlotItemDetails(class UBP_MasterInventory_C* Inventory, int32 Param_Index, class UObject* __WorldContext, bool* ItemFound, struct FS_ItemDetails* ItemDetails)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK SlotItemDetails");

	Params::BP_SGKFunctions_C_SGK_SlotItemDetails Parms{};

	Parms.Inventory = Inventory;
	Parms.Param_Index = Param_Index;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (ItemFound != nullptr)
		*ItemFound = Parms.ItemFound;

	if (ItemDetails != nullptr)
		*ItemDetails = std::move(Parms.ItemDetails);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.SGK VectorTransform
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Forward                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Right                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Up                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UBP_SGKFunctions_C::SGK_VectorTransform(const struct FTransform& InTransform, double Forward, double Right, double Up, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "SGK VectorTransform");

	Params::BP_SGKFunctions_C_SGK_VectorTransform Parms{};

	Parms.InTransform = std::move(InTransform);
	Parms.Forward = Forward;
	Parms.Right = Right;
	Parms.Up = Up;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.UpdateAimedSense
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MouseSence                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::UpdateAimedSense(double MouseSence, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "UpdateAimedSense");

	Params::BP_SGKFunctions_C_UpdateAimedSense Parms{};

	Parms.MouseSence = MouseSence;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_SGKFunctions.BP_SGKFunctions_C.UpdateMouseSense
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  AimedSense                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_SGKFunctions_C::UpdateMouseSense(double AimedSense, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_SGKFunctions_C", "UpdateMouseSense");

	Params::BP_SGKFunctions_C_UpdateMouseSense Parms{};

	Parms.AimedSense = AimedSense;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}

}

