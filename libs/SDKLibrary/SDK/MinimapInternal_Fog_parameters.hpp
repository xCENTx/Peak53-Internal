#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Fog

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.ExecuteUbergraph_MinimapInternal_Fog
// 0x0088 (0x0088 - 0x0000)
struct MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3718[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3719[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_CustomEvent_EndPlayReason;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371A[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AMapFog* MapFog)>        K2Node_CreateDelegate_OutputDelegate;              // 0x005C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* Actor, EEndPlayReason EndPlayReason)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371B[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMapFog*                                K2Node_CustomEvent_MapFog;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog");
static_assert(sizeof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog) == 0x000088, "Wrong size on MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, EntryPoint) == 0x000000, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_Event_MyGeometry) == 0x000008, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_Event_InDeltaTime) == 0x000048, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_CustomEvent_Actor) == 0x000050, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_CustomEvent_EndPlayReason) == 0x000058, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_CustomEvent_EndPlayReason' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_CreateDelegate_OutputDelegate) == 0x00005C, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_CreateDelegate_OutputDelegate_1) == 0x00006C, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog, K2Node_CustomEvent_MapFog) == 0x000080, "Member 'MinimapInternal_Fog_C_ExecuteUbergraph_MinimapInternal_Fog::K2Node_CustomEvent_MapFog' has a wrong offset!");

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.OnEndPlay
// 0x0010 (0x0010 - 0x0000)
struct MinimapInternal_Fog_C_OnEndPlay final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                EndPlayReason;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_OnEndPlay) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_OnEndPlay");
static_assert(sizeof(MinimapInternal_Fog_C_OnEndPlay) == 0x000010, "Wrong size on MinimapInternal_Fog_C_OnEndPlay");
static_assert(offsetof(MinimapInternal_Fog_C_OnEndPlay, Actor) == 0x000000, "Member 'MinimapInternal_Fog_C_OnEndPlay::Actor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_OnEndPlay, EndPlayReason) == 0x000008, "Member 'MinimapInternal_Fog_C_OnEndPlay::EndPlayReason' has a wrong offset!");

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.OnMapFogMaterialChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0 final
{
public:
	class AMapFog*                                Param_MapFog;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0");
static_assert(sizeof(MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0) == 0x000008, "Wrong size on MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0");
static_assert(offsetof(MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0, Param_MapFog) == 0x000000, "Member 'MinimapInternal_Fog_C_OnMapFogMaterialChanged_Event_0::Param_MapFog' has a wrong offset!");

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct MinimapInternal_Fog_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_Tick) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_Tick");
static_assert(sizeof(MinimapInternal_Fog_C_Tick) == 0x000048, "Wrong size on MinimapInternal_Fog_C_Tick");
static_assert(offsetof(MinimapInternal_Fog_C_Tick, MyGeometry) == 0x000000, "Member 'MinimapInternal_Fog_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_Tick, InDeltaTime) == 0x000040, "Member 'MinimapInternal_Fog_C_Tick::InDeltaTime' has a wrong offset!");

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.TickFog
// 0x0138 (0x0138 - 0x0000)
struct MinimapInternal_Fog_C_TickFog final
{
public:
	struct FVector2D                              V1;                                                // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              V2;                                                // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      ViewCornersUV;                                     // 0x0020(0x0010)(Edit, BlueprintVisible)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371C[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureRenderTarget2D*                 CallFunc_GetDestinationFogRenderTarget_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_GetMapViewCornerUVs_CornerUVs;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetMapViewCornerUVs_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_TickFog) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_TickFog");
static_assert(sizeof(MinimapInternal_Fog_C_TickFog) == 0x000138, "Wrong size on MinimapInternal_Fog_C_TickFog");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, V1) == 0x000000, "Member 'MinimapInternal_Fog_C_TickFog::V1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, V2) == 0x000010, "Member 'MinimapInternal_Fog_C_TickFog::V2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, ViewCornersUV) == 0x000020, "Member 'MinimapInternal_Fog_C_TickFog::ViewCornersUV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_IsValid_ReturnValue_1) == 0x000031, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_GetDestinationFogRenderTarget_ReturnValue) == 0x000038, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_GetDestinationFogRenderTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_GetMapViewCornerUVs_CornerUVs) == 0x000040, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_GetMapViewCornerUVs_CornerUVs' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_GetMapViewCornerUVs_ReturnValue) == 0x000050, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_GetMapViewCornerUVs_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000058, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000060, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Array_Get_Item) == 0x000068, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_X) == 0x000078, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_LinearColor) == 0x000098, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0000D8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_X_1) == 0x0000E8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_Y_1) == 0x0000F0, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_X_2) == 0x0000F8, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_BreakVector2D_Y_2) == 0x000100, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_LinearColor_1) == 0x000108, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000118, "Member 'MinimapInternal_Fog_C_TickFog::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_R_ImplicitCast) == 0x00011C, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_G_ImplicitCast) == 0x000120, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_B_ImplicitCast) == 0x000124, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_A_ImplicitCast) == 0x000128, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_R_ImplicitCast_1) == 0x00012C, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_TickFog, K2Node_MakeStruct_G_ImplicitCast_1) == 0x000130, "Member 'MinimapInternal_Fog_C_TickFog::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");

// Function MinimapInternal_Fog.MinimapInternal_Fog_C.UpdateMaterial
// 0x0030 (0x0030 - 0x0000)
struct MinimapInternal_Fog_C_UpdateMaterial final
{
public:
	class UTexture2D*                             ObscuredTexture;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               BackgroundTexture;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371E[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetFogMaterialForUMG_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Fog_C_UpdateMaterial) == 0x000008, "Wrong alignment on MinimapInternal_Fog_C_UpdateMaterial");
static_assert(sizeof(MinimapInternal_Fog_C_UpdateMaterial) == 0x000030, "Wrong size on MinimapInternal_Fog_C_UpdateMaterial");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, ObscuredTexture) == 0x000000, "Member 'MinimapInternal_Fog_C_UpdateMaterial::ObscuredTexture' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, BackgroundTexture) == 0x000008, "Member 'MinimapInternal_Fog_C_UpdateMaterial::BackgroundTexture' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'MinimapInternal_Fog_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, CallFunc_GetFogMaterialForUMG_ReturnValue) == 0x000018, "Member 'MinimapInternal_Fog_C_UpdateMaterial::CallFunc_GetFogMaterialForUMG_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'MinimapInternal_Fog_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Fog_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000028, "Member 'MinimapInternal_Fog_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");

}

