#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioSettings

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'BP_AudioSettings_C_BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.ExecuteUbergraph_BP_AudioSettings
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B60[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B61[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_5;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_4;                // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B62[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_3; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B63[0x6];                                     // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_4; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B64[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_5; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B65[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_6; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B66[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_Value_3;                // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_2;                // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_Value_1;                // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast_2;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast_3;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast_4;      // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SGK_SetVolume_Volume_ImplicitCast_5;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings) == 0x000008, "Wrong alignment on BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings");
static_assert(sizeof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings) == 0x0000F0, "Wrong size on BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, EntryPoint) == 0x000000, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value) == 0x000004, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface) == 0x000008, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1) == 0x000020, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue_1) == 0x000032, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_Event_IsDesignTime) == 0x000033, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_2) == 0x000038, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue_2) == 0x000049, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_5) == 0x00004C, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_5' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_4) == 0x000050, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_3) == 0x000058, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_3) == 0x000068, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue_3) == 0x000069, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_4) == 0x000070, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_4) == 0x000080, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue_4) == 0x000081, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_5) == 0x000088, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_5' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_5) == 0x000098, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_6) == 0x0000A0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_6' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_DynamicCast_bSuccess_6) == 0x0000B0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_IsValid_ReturnValue_5) == 0x0000B1, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_3) == 0x0000B4, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_2) == 0x0000B8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, K2Node_ComponentBoundEvent_Value_1) == 0x0000BC, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::K2Node_ComponentBoundEvent_Value_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast) == 0x0000C0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast_1) == 0x0000C8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast_2) == 0x0000D0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast_3) == 0x0000D8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast_4) == 0x0000E0, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings, CallFunc_SGK_SetVolume_Volume_ImplicitCast_5) == 0x0000E8, "Member 'BP_AudioSettings_C_ExecuteUbergraph_BP_AudioSettings::CallFunc_SGK_SetVolume_Volume_ImplicitCast_5' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.GetSaveSetting
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioSettings_C_GetSaveSetting final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B67[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_GetSaveSetting) == 0x000008, "Wrong alignment on BP_AudioSettings_C_GetSaveSetting");
static_assert(sizeof(BP_AudioSettings_C_GetSaveSetting) == 0x000010, "Wrong size on BP_AudioSettings_C_GetSaveSetting");
static_assert(offsetof(BP_AudioSettings_C_GetSaveSetting, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_AudioSettings_C_GetSaveSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_GetSaveSetting, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_GetSaveSetting::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.LoadAudioSaveVolumes
// 0x0038 (0x0038 - 0x0000)
struct BP_AudioSettings_C_LoadAudioSaveVolumes final
{
public:
	class UBP_SGKSettingsSaveData_C*              SaveL;                                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B68[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B69[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSettingsSaveData_C*              CallFunc_SGK_Options_Save_Settings;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_LoadAudioSaveVolumes) == 0x000008, "Wrong alignment on BP_AudioSettings_C_LoadAudioSaveVolumes");
static_assert(sizeof(BP_AudioSettings_C_LoadAudioSaveVolumes) == 0x000038, "Wrong size on BP_AudioSettings_C_LoadAudioSaveVolumes");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, SaveL) == 0x000000, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::SaveL' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface) == 0x000018, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioSettings_C_LoadAudioSaveVolumes, CallFunc_SGK_Options_Save_Settings) == 0x000030, "Member 'BP_AudioSettings_C_LoadAudioSaveVolumes::CallFunc_SGK_Options_Save_Settings' has a wrong offset!");

// Function BP_AudioSettings.BP_AudioSettings_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioSettings_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioSettings_C_PreConstruct) == 0x000001, "Wrong alignment on BP_AudioSettings_C_PreConstruct");
static_assert(sizeof(BP_AudioSettings_C_PreConstruct) == 0x000001, "Wrong size on BP_AudioSettings_C_PreConstruct");
static_assert(offsetof(BP_AudioSettings_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_AudioSettings_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

