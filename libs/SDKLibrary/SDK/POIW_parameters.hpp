#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: POIW

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function POIW.POIW_C.AdjustPadding
// 0x0002 (0x0002 - 0x0000)
struct POIW_C_AdjustPadding final
{
public:
	bool                                          Param_bIsOut;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinimapRotates;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_AdjustPadding) == 0x000001, "Wrong alignment on POIW_C_AdjustPadding");
static_assert(sizeof(POIW_C_AdjustPadding) == 0x000002, "Wrong size on POIW_C_AdjustPadding");
static_assert(offsetof(POIW_C_AdjustPadding, Param_bIsOut) == 0x000000, "Member 'POIW_C_AdjustPadding::Param_bIsOut' has a wrong offset!");
static_assert(offsetof(POIW_C_AdjustPadding, bMinimapRotates) == 0x000001, "Member 'POIW_C_AdjustPadding::bMinimapRotates' has a wrong offset!");

// Function POIW.POIW_C.bLinkEnabled
// 0x0001 (0x0001 - 0x0000)
struct POIW_C_bLinkEnabled final
{
public:
	bool                                          Enabled;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_bLinkEnabled) == 0x000001, "Wrong alignment on POIW_C_bLinkEnabled");
static_assert(sizeof(POIW_C_bLinkEnabled) == 0x000001, "Wrong size on POIW_C_bLinkEnabled");
static_assert(offsetof(POIW_C_bLinkEnabled, Enabled) == 0x000000, "Member 'POIW_C_bLinkEnabled::Enabled' has a wrong offset!");

// Function POIW.POIW_C.ChangeColor
// 0x0014 (0x0014 - 0x0000)
struct POIW_C_ChangeColor final
{
public:
	struct FSlateColor                            Tint;                                              // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(POIW_C_ChangeColor) == 0x000004, "Wrong alignment on POIW_C_ChangeColor");
static_assert(sizeof(POIW_C_ChangeColor) == 0x000014, "Wrong size on POIW_C_ChangeColor");
static_assert(offsetof(POIW_C_ChangeColor, Tint) == 0x000000, "Member 'POIW_C_ChangeColor::Tint' has a wrong offset!");

// Function POIW.POIW_C.ChangeHeightIndicSettings
// 0x0050 (0x0050 - 0x0000)
struct POIW_C_ChangeHeightIndicSettings final
{
public:
	class UTexture2D*                             Texture1;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Texture2;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            Color1;                                            // 0x0010(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSlateColor                            Color2;                                            // 0x0024(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FVector2D                              Size;                                              // 0x0038(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AccepDiff;                                         // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_ChangeHeightIndicSettings) == 0x000008, "Wrong alignment on POIW_C_ChangeHeightIndicSettings");
static_assert(sizeof(POIW_C_ChangeHeightIndicSettings) == 0x000050, "Wrong size on POIW_C_ChangeHeightIndicSettings");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, Texture1) == 0x000000, "Member 'POIW_C_ChangeHeightIndicSettings::Texture1' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, Texture2) == 0x000008, "Member 'POIW_C_ChangeHeightIndicSettings::Texture2' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, Color1) == 0x000010, "Member 'POIW_C_ChangeHeightIndicSettings::Color1' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, Color2) == 0x000024, "Member 'POIW_C_ChangeHeightIndicSettings::Color2' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, Size) == 0x000038, "Member 'POIW_C_ChangeHeightIndicSettings::Size' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeHeightIndicSettings, AccepDiff) == 0x000048, "Member 'POIW_C_ChangeHeightIndicSettings::AccepDiff' has a wrong offset!");

// Function POIW.POIW_C.ChangeTexture
// 0x0018 (0x0018 - 0x0000)
struct POIW_C_ChangeTexture final
{
public:
	class UObject*                                Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Image_Size;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_ChangeTexture) == 0x000008, "Wrong alignment on POIW_C_ChangeTexture");
static_assert(sizeof(POIW_C_ChangeTexture) == 0x000018, "Wrong size on POIW_C_ChangeTexture");
static_assert(offsetof(POIW_C_ChangeTexture, Image) == 0x000000, "Member 'POIW_C_ChangeTexture::Image' has a wrong offset!");
static_assert(offsetof(POIW_C_ChangeTexture, Image_Size) == 0x000008, "Member 'POIW_C_ChangeTexture::Image_Size' has a wrong offset!");

// Function POIW.POIW_C.ExecuteUbergraph_POIW
// 0x0440 (0x0440 - 0x0000)
struct POIW_C_ExecuteUbergraph_POIW final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D60[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMinimapRotates_1;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsOut_1;                       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsOut;                         // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMinimapRotates;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D61[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_CustomEvent_Tint;                           // 0x0058(0x0014)()
	uint8                                         Pad_3D62[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Image;                          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_Image_Size;                     // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D63[0x8];                                     // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0090(0x00D0)()
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D64[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsOut;                          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bMinimapRotates_2;              // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D65[0x6];                                     // 0x0172(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_LastKnownLocation;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_LastKnowRotation;               // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D66[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D67[0x4];                                     // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLookAtRot_Result;                      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D68[0x4];                                     // 0x01F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D69[0x7];                                     // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0238(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0278(0x0098)(ConstParm)
	double                                        K2Node_Select_Default;                             // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0328(0x0098)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Enabled;                        // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6A[0x5];                                     // 0x03C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x03E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6B[0x4];                                     // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_PlaybackSpeed;                  // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6C[0x7];                                     // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast_1;             // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1; // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2; // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Bottom_ImplicitCast;             // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1; // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_ExecuteUbergraph_POIW) == 0x000010, "Wrong alignment on POIW_C_ExecuteUbergraph_POIW");
static_assert(sizeof(POIW_C_ExecuteUbergraph_POIW) == 0x000440, "Wrong size on POIW_C_ExecuteUbergraph_POIW");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, EntryPoint) == 0x000000, "Member 'POIW_C_ExecuteUbergraph_POIW::EntryPoint' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_bMinimapRotates_1) == 0x00002C, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_bMinimapRotates_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_bIsOut_1) == 0x00002D, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_bIsOut_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_IsValid_ReturnValue) == 0x00002E, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_bIsOut) == 0x00002F, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_bIsOut' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_bMinimapRotates) == 0x000030, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_bMinimapRotates' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000038, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakVector2D_X) == 0x000040, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakVector2D_Y) == 0x000048, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_Tint) == 0x000058, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_Tint' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_Image) == 0x000070, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_Image' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_Image_Size) == 0x000078, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_Image_Size' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_MakeStruct_SlateBrush) == 0x000090, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BooleanAND_ReturnValue) == 0x000160, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000168, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_IsOut) == 0x000170, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_IsOut' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_bMinimapRotates_2) == 0x000171, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_bMinimapRotates_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_LastKnownLocation) == 0x000178, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_LastKnownLocation' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_LastKnowRotation) == 0x000190, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_LastKnowRotation' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Roll_1) == 0x0001A8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Pitch_1) == 0x0001AC, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Yaw_1) == 0x0001B0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue) == 0x0001B8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0001C0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue_1) == 0x0001C8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Roll_2) == 0x0001D0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Pitch_2) == 0x0001D4, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Yaw_2) == 0x0001D8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_GetLookAtRot_Result) == 0x0001E0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_GetLookAtRot_Result' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Roll_3) == 0x0001E8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Pitch_3) == 0x0001EC, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BreakRotator_Yaw_3) == 0x0001F0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0001F8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue_2) == 0x000200, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue_3) == 0x000208, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000210, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue_4) == 0x000218, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_ReturnValue_5) == 0x000220, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, Temp_real_Variable) == 0x000228, "Member 'POIW_C_ExecuteUbergraph_POIW::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, Temp_bool_Variable) == 0x000230, "Member 'POIW_C_ExecuteUbergraph_POIW::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_Event_MyGeometry) == 0x000238, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_Event_MouseEvent_1) == 0x000278, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_Select_Default) == 0x000310, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_MakeStruct_Margin) == 0x000318, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_Event_MouseEvent) == 0x000328, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_TextIsEmpty_ReturnValue) == 0x0003C0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_Enabled) == 0x0003C1, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_Enabled' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0003C2, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_PlayAnimation_ReturnValue) == 0x0003C8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_MakeColor_ReturnValue) == 0x0003D0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Not_PreBool_ReturnValue) == 0x0003E0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BooleanAND_ReturnValue_1) == 0x0003E1, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Not_PreBool_ReturnValue_1) == 0x0003E2, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_BooleanAND_ReturnValue_2) == 0x0003E3, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_CustomEvent_PlaybackSpeed) == 0x0003E8, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_CustomEvent_PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0003F0, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_PlayAnimation_ReturnValue_1) == 0x0003F8, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000400, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_A_ImplicitCast) == 0x000408, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000410, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SelectFloat_A_ImplicitCast_1) == 0x000418, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SelectFloat_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000420, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1) == 0x000424, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2) == 0x000428, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, K2Node_MakeStruct_Bottom_ImplicitCast) == 0x00042C, "Member 'POIW_C_ExecuteUbergraph_POIW::K2Node_MakeStruct_Bottom_ImplicitCast' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000430, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(POIW_C_ExecuteUbergraph_POIW, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1) == 0x000434, "Member 'POIW_C_ExecuteUbergraph_POIW::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast_1' has a wrong offset!");

// Function POIW.POIW_C.GetLookAtRot
// 0x0090 (0x0090 - 0x0000)
struct POIW_C_GetLookAtRot final
{
public:
	double                                        Result;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6D[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TempLookAt_ImplicitCast;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_GetLookAtRot) == 0x000008, "Wrong alignment on POIW_C_GetLookAtRot");
static_assert(sizeof(POIW_C_GetLookAtRot) == 0x000090, "Wrong size on POIW_C_GetLookAtRot");
static_assert(offsetof(POIW_C_GetLookAtRot, Result) == 0x000000, "Member 'POIW_C_GetLookAtRot::Result' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_BreakVector2D_X) == 0x000008, "Member 'POIW_C_GetLookAtRot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_BreakVector2D_Y) == 0x000010, "Member 'POIW_C_GetLookAtRot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'POIW_C_GetLookAtRot::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'POIW_C_GetLookAtRot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'POIW_C_GetLookAtRot::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_FindLookAtRotation_ReturnValue) == 0x000060, "Member 'POIW_C_GetLookAtRot::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'POIW_C_GetLookAtRot::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'POIW_C_GetLookAtRot::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'POIW_C_GetLookAtRot::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(POIW_C_GetLookAtRot, K2Node_VariableSet_TempLookAt_ImplicitCast) == 0x000088, "Member 'POIW_C_GetLookAtRot::K2Node_VariableSet_TempLookAt_ImplicitCast' has a wrong offset!");

// Function POIW.POIW_C.HandleHeightIndic
// 0x0070 (0x0070 - 0x0000)
struct POIW_C_HandleHeightIndic final
{
public:
	bool                                          bIsOffMinimap;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MinimapRotates;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6E[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HeightDiff;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D6F[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_HandleHeightIndic) == 0x000008, "Wrong alignment on POIW_C_HandleHeightIndic");
static_assert(sizeof(POIW_C_HandleHeightIndic) == 0x000070, "Wrong size on POIW_C_HandleHeightIndic");
static_assert(offsetof(POIW_C_HandleHeightIndic, bIsOffMinimap) == 0x000000, "Member 'POIW_C_HandleHeightIndic::bIsOffMinimap' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, MinimapRotates) == 0x000001, "Member 'POIW_C_HandleHeightIndic::MinimapRotates' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, HeightDiff) == 0x000008, "Member 'POIW_C_HandleHeightIndic::HeightDiff' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'POIW_C_HandleHeightIndic::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'POIW_C_HandleHeightIndic::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000019, "Member 'POIW_C_HandleHeightIndic::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_X) == 0x000020, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_Y) == 0x000028, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_Z) == 0x000030, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'POIW_C_HandleHeightIndic::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_X_1) == 0x000050, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_Y_1) == 0x000058, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_BreakVector_Z_1) == 0x000060, "Member 'POIW_C_HandleHeightIndic::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(POIW_C_HandleHeightIndic, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'POIW_C_HandleHeightIndic::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function POIW.POIW_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct POIW_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(POIW_C_OnMouseEnter) == 0x000008, "Wrong alignment on POIW_C_OnMouseEnter");
static_assert(sizeof(POIW_C_OnMouseEnter) == 0x0000D8, "Wrong size on POIW_C_OnMouseEnter");
static_assert(offsetof(POIW_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'POIW_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(POIW_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'POIW_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function POIW.POIW_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct POIW_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(POIW_C_OnMouseLeave) == 0x000008, "Wrong alignment on POIW_C_OnMouseLeave");
static_assert(sizeof(POIW_C_OnMouseLeave) == 0x000098, "Wrong size on POIW_C_OnMouseLeave");
static_assert(offsetof(POIW_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'POIW_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function POIW.POIW_C.OutOfMap
// 0x0038 (0x0038 - 0x0000)
struct POIW_C_OutOfMap final
{
public:
	bool                                          IsOut;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMinimapRotates;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D70[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastKnownLocation;                                 // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LastKnowRotation;                                  // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(POIW_C_OutOfMap) == 0x000008, "Wrong alignment on POIW_C_OutOfMap");
static_assert(sizeof(POIW_C_OutOfMap) == 0x000038, "Wrong size on POIW_C_OutOfMap");
static_assert(offsetof(POIW_C_OutOfMap, IsOut) == 0x000000, "Member 'POIW_C_OutOfMap::IsOut' has a wrong offset!");
static_assert(offsetof(POIW_C_OutOfMap, bMinimapRotates) == 0x000001, "Member 'POIW_C_OutOfMap::bMinimapRotates' has a wrong offset!");
static_assert(offsetof(POIW_C_OutOfMap, LastKnownLocation) == 0x000008, "Member 'POIW_C_OutOfMap::LastKnownLocation' has a wrong offset!");
static_assert(offsetof(POIW_C_OutOfMap, LastKnowRotation) == 0x000020, "Member 'POIW_C_OutOfMap::LastKnowRotation' has a wrong offset!");

// Function POIW.POIW_C.SetRotation
// 0x0002 (0x0002 - 0x0000)
struct POIW_C_SetRotation final
{
public:
	bool                                          bMinimapRotates;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bIsOut;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_SetRotation) == 0x000001, "Wrong alignment on POIW_C_SetRotation");
static_assert(sizeof(POIW_C_SetRotation) == 0x000002, "Wrong size on POIW_C_SetRotation");
static_assert(offsetof(POIW_C_SetRotation, bMinimapRotates) == 0x000000, "Member 'POIW_C_SetRotation::bMinimapRotates' has a wrong offset!");
static_assert(offsetof(POIW_C_SetRotation, Param_bIsOut) == 0x000001, "Member 'POIW_C_SetRotation::Param_bIsOut' has a wrong offset!");

// Function POIW.POIW_C.updateBlinkSpeed
// 0x0008 (0x0008 - 0x0000)
struct POIW_C_UpdateBlinkSpeed final
{
public:
	double                                        PlaybackSpeed;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(POIW_C_UpdateBlinkSpeed) == 0x000008, "Wrong alignment on POIW_C_UpdateBlinkSpeed");
static_assert(sizeof(POIW_C_UpdateBlinkSpeed) == 0x000008, "Wrong size on POIW_C_UpdateBlinkSpeed");
static_assert(offsetof(POIW_C_UpdateBlinkSpeed, PlaybackSpeed) == 0x000000, "Member 'POIW_C_UpdateBlinkSpeed::PlaybackSpeed' has a wrong offset!");

}

