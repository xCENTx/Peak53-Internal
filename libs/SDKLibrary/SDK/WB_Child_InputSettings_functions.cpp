#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Child_InputSettings

#include "Basic.hpp"

#include "WB_Child_InputSettings_classes.hpp"
#include "WB_Child_InputSettings_parameters.hpp"


namespace SDK
{

// Function WB_Child_InputSettings.WB_Child_InputSettings_C.ActionMappingToInputChord
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping           InputActionKeyMapping                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FInputChord                      InputChord                                             (Parm, OutParm, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::ActionMappingToInputChord(const struct FInputActionKeyMapping& InputActionKeyMapping, struct FInputChord* InputChord)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "ActionMappingToInputChord");

	Params::WB_Child_InputSettings_C_ActionMappingToInputChord Parms{};

	Parms.InputActionKeyMapping = std::move(InputActionKeyMapping);

	UObject::ProcessEvent(Func, &Parms);

	if (InputChord != nullptr)
		*InputChord = std::move(Parms.InputChord);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.AxisToInputChord
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             InputAxisKeyMapping                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FInputChord                      InputChord                                             (Parm, OutParm, HasGetValueTypeHash)
// float                                   Scale                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::AxisToInputChord(const struct FInputAxisKeyMapping& InputAxisKeyMapping, struct FInputChord* InputChord, float* Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "AxisToInputChord");

	Params::WB_Child_InputSettings_C_AxisToInputChord Parms{};

	Parms.InputAxisKeyMapping = std::move(InputAxisKeyMapping);

	UObject::ProcessEvent(Func, &Parms);

	if (InputChord != nullptr)
		*InputChord = std::move(Parms.InputChord);

	if (Scale != nullptr)
		*Scale = Parms.Scale;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.BindPanelWidgetChildren_ButtonOnHovered
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     Panel_Widget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Bind_Unbind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UCommonButtonBase* Button)>EventToBind                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::BindPanelWidgetChildren_ButtonOnHovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "BindPanelWidgetChildren_ButtonOnHovered");

	Params::WB_Child_InputSettings_C_BindPanelWidgetChildren_ButtonOnHovered Parms{};

	Parms.Panel_Widget = Panel_Widget;
	Parms.Bind_Unbind = Bind_Unbind;
	Parms.EventToBind = EventToBind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.BindPanelWidgetChildren_ButtonOnUnhovered
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPanelWidget*                     Panel_Widget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    Bind_Unbind                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TDelegate<void(class UCommonButtonBase* Button)>EventToBind                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::BindPanelWidgetChildren_ButtonOnUnhovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "BindPanelWidgetChildren_ButtonOnUnhovered");

	Params::WB_Child_InputSettings_C_BindPanelWidgetChildren_ButtonOnUnhovered Parms{};

	Parms.Panel_Widget = Panel_Widget;
	Parms.Bind_Unbind = Bind_Unbind;
	Parms.EventToBind = EventToBind;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_Child_InputSettings_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.ExecuteUbergraph_WB_Child_InputSettings
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::ExecuteUbergraph_WB_Child_InputSettings(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "ExecuteUbergraph_WB_Child_InputSettings");

	Params::WB_Child_InputSettings_C_ExecuteUbergraph_WB_Child_InputSettings Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FilterByVisibility
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPanelWidget*                     PanelWidget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// ESlateVisibility                        Filter                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class UWidget*>                  ReturnValue                                            (Parm, OutParm, ReturnParm, ContainsInstancedReference)

TArray<class UWidget*> UWB_Child_InputSettings_C::FilterByVisibility(class UPanelWidget* PanelWidget, ESlateVisibility Filter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FilterByVisibility");

	Params::WB_Child_InputSettings_C_FilterByVisibility Parms{};

	Parms.PanelWidget = PanelWidget;
	Parms.Filter = Filter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.Find_PC_ActionKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InActionName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputActionKeyMapping           Key1                                                   (Parm, OutParm)
// struct FInputActionKeyMapping           Key2                                                   (Parm, OutParm)

bool UWB_Child_InputSettings_C::Find_PC_ActionKey(const class FName InActionName, struct FInputActionKeyMapping* Key1, struct FInputActionKeyMapping* Key2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "Find_PC_ActionKey");

	Params::WB_Child_InputSettings_C_Find_PC_ActionKey Parms{};

	Parms.InActionName = InActionName;

	UObject::ProcessEvent(Func, &Parms);

	if (Key1 != nullptr)
		*Key1 = std::move(Parms.Key1);

	if (Key2 != nullptr)
		*Key2 = std::move(Parms.Key2);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.Find_PC_AxisKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InActionName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputAxisKeyMapping             Key1                                                   (Parm, OutParm)
// struct FInputAxisKeyMapping             Key2                                                   (Parm, OutParm)

bool UWB_Child_InputSettings_C::Find_PC_AxisKey(const class FName InActionName, struct FInputAxisKeyMapping* Key1, struct FInputAxisKeyMapping* Key2)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "Find_PC_AxisKey");

	Params::WB_Child_InputSettings_C_Find_PC_AxisKey Parms{};

	Parms.InActionName = InActionName;

	UObject::ProcessEvent(Func, &Parms);

	if (Key1 != nullptr)
		*Key1 = std::move(Parms.Key1);

	if (Key2 != nullptr)
		*Key2 = std::move(Parms.Key2);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FindActionKey_PC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InActionName                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (Parm, OutParm, HasGetValueTypeHash)

bool UWB_Child_InputSettings_C::FindActionKey_PC(const class FName InActionName, int32 Param_Index, struct FKey* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FindActionKey_PC");

	Params::WB_Child_InputSettings_C_FindActionKey_PC Parms{};

	Parms.InActionName = InActionName;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FindActiveActionMappingNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class FName> UWB_Child_InputSettings_C::FindActiveActionMappingNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FindActiveActionMappingNames");

	Params::WB_Child_InputSettings_C_FindActiveActionMappingNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FindActiveAxisMappingNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<class FName> UWB_Child_InputSettings_C::FindActiveAxisMappingNames()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FindActiveAxisMappingNames");

	Params::WB_Child_InputSettings_C_FindActiveAxisMappingNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FindAxisKey_PC
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InAxisName                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Param_Index                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             Key                                                    (Parm, OutParm, HasGetValueTypeHash)

bool UWB_Child_InputSettings_C::FindAxisKey_PC(const class FName InAxisName, int32 Param_Index, struct FKey* Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FindAxisKey_PC");

	Params::WB_Child_InputSettings_C_FindAxisKey_PC Parms{};

	Parms.InAxisName = InAxisName;
	Parms.Param_Index = Param_Index;

	UObject::ProcessEvent(Func, &Parms);

	if (Key != nullptr)
		*Key = std::move(Parms.Key);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.FindDefaultAxisValueByName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             AxisMapping                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DefaultAxis                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::FindDefaultAxisValueByName(const class FName& AxisMapping, double* DefaultAxis)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "FindDefaultAxisValueByName");

	Params::WB_Child_InputSettings_C_FindDefaultAxisValueByName Parms{};

	Parms.AxisMapping = AxisMapping;

	UObject::ProcessEvent(Func, &Parms);

	if (DefaultAxis != nullptr)
		*DefaultAxis = Parms.DefaultAxis;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetActionMappingByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FInputActionKeyMapping>   OutMappings                                            (Parm, OutParm)

void UWB_Child_InputSettings_C::GetActionMappingByName(const class FName InputPin, TArray<struct FInputActionKeyMapping>* OutMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetActionMappingByName");

	Params::WB_Child_InputSettings_C_GetActionMappingByName Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMappings != nullptr)
		*OutMappings = std::move(Parms.OutMappings);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetAxisMappingByName
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FInputAxisKeyMapping>     OutMappings                                            (Parm, OutParm)

void UWB_Child_InputSettings_C::GetAxisMappingByName(const class FName InputPin, TArray<struct FInputAxisKeyMapping>* OutMappings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetAxisMappingByName");

	Params::WB_Child_InputSettings_C_GetAxisMappingByName Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);

	if (OutMappings != nullptr)
		*OutMappings = std::move(Parms.OutMappings);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetDefaultInputMappingInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             MappingName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Value                                                  (Parm, OutParm)

void UWB_Child_InputSettings_C::GetDefaultInputMappingInfo(class FName MappingName, class FText* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetDefaultInputMappingInfo");

	Params::WB_Child_InputSettings_C_GetDefaultInputMappingInfo Parms{};

	Parms.MappingName = MappingName;

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetDefaultInputNames
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FName>                     Names                                                  (Parm, OutParm)

void UWB_Child_InputSettings_C::GetDefaultInputNames(TArray<class FName>* Names)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetDefaultInputNames");

	Params::WB_Child_InputSettings_C_GetDefaultInputNames Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Names != nullptr)
		*Names = std::move(Parms.Names);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetDefaultInputText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class FText>                     Text                                                   (Parm, OutParm)

void UWB_Child_InputSettings_C::GetDefaultInputText(TArray<class FText>* Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetDefaultInputText");

	Params::WB_Child_InputSettings_C_GetDefaultInputText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Text != nullptr)
		*Text = std::move(Parms.Text);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.GetStateButtonInfo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             Head                                                   (Parm, OutParm)
// class FText                             Body                                                   (Parm, OutParm)

void UWB_Child_InputSettings_C::GetStateButtonInfo(class UCommonButtonBase* Button, class FText* Head, class FText* Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "GetStateButtonInfo");

	Params::WB_Child_InputSettings_C_GetStateButtonInfo Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);

	if (Head != nullptr)
		*Head = std::move(Parms.Head);

	if (Body != nullptr)
		*Body = std::move(Parms.Body);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.InputChordToActionMapping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputChord                      InputChord                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// struct FInputActionKeyMapping           InputActionKeyMapping                                  (Parm, OutParm)

void UWB_Child_InputSettings_C::InputChordToActionMapping(const struct FInputChord& InputChord, struct FInputActionKeyMapping* InputActionKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "InputChordToActionMapping");

	Params::WB_Child_InputSettings_C_InputChordToActionMapping Parms{};

	Parms.InputChord = std::move(InputChord);

	UObject::ProcessEvent(Func, &Parms);

	if (InputActionKeyMapping != nullptr)
		*InputActionKeyMapping = std::move(Parms.InputActionKeyMapping);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.InputChordToAxisMapping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputChord                      InputChord                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FInputAxisKeyMapping             InputActionKeyMapping                                  (Parm, OutParm)

void UWB_Child_InputSettings_C::InputChordToAxisMapping(const struct FInputChord& InputChord, float Scale, struct FInputAxisKeyMapping* InputActionKeyMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "InputChordToAxisMapping");

	Params::WB_Child_InputSettings_C_InputChordToAxisMapping Parms{};

	Parms.InputChord = std::move(InputChord);
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);

	if (InputActionKeyMapping != nullptr)
		*InputActionKeyMapping = std::move(Parms.InputActionKeyMapping);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.IsActionMapping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             ItemToFind                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWB_Child_InputSettings_C::IsActionMapping(const class FName& ItemToFind)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "IsActionMapping");

	Params::WB_Child_InputSettings_C_IsActionMapping Parms{};

	Parms.ItemToFind = ItemToFind;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.IsActionPC_Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputActionKeyMapping           Mapping                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWB_Child_InputSettings_C::IsActionPC_Key(const struct FInputActionKeyMapping& Mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "IsActionPC_Key");

	Params::WB_Child_InputSettings_C_IsActionPC_Key Parms{};

	Parms.Mapping = std::move(Mapping);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.IsAxisPC_Key
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputAxisKeyMapping             Mapping                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UWB_Child_InputSettings_C::IsAxisPC_Key(const struct FInputAxisKeyMapping& Mapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "IsAxisPC_Key");

	Params::WB_Child_InputSettings_C_IsAxisPC_Key Parms{};

	Parms.Mapping = std::move(Mapping);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.IsOccupied
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FInputChord                      Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    IsMapped                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             MappedKey                                              (Parm, OutParm, HasGetValueTypeHash)
// class FName                             MappedMappingName                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             MappedMappingNameText                                  (Parm, OutParm)

void UWB_Child_InputSettings_C::IsOccupied(const struct FInputChord& Input, bool* IsMapped, struct FKey* MappedKey, class FName* MappedMappingName, class FText* MappedMappingNameText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "IsOccupied");

	Params::WB_Child_InputSettings_C_IsOccupied Parms{};

	Parms.Input = std::move(Input);

	UObject::ProcessEvent(Func, &Parms);

	if (IsMapped != nullptr)
		*IsMapped = Parms.IsMapped;

	if (MappedKey != nullptr)
		*MappedKey = std::move(Parms.MappedKey);

	if (MappedMappingName != nullptr)
		*MappedMappingName = Parms.MappedMappingName;

	if (MappedMappingNameText != nullptr)
		*MappedMappingNameText = std::move(Parms.MappedMappingNameText);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnAnyButtonHovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::OnAnyButtonHovered(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnAnyButtonHovered");

	Params::WB_Child_InputSettings_C_OnAnyButtonHovered Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnAnyButtonUnhovered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::OnAnyButtonUnhovered(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnAnyButtonUnhovered");

	Params::WB_Child_InputSettings_C_OnAnyButtonUnhovered Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnInputMethodChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bUsingGamepad                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::OnInputMethodChanged(bool Param_bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnInputMethodChanged");

	Params::WB_Child_InputSettings_C_OnInputMethodChanged Parms{};

	Parms.Param_bUsingGamepad = Param_bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnKeySelected
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FInputChord                      OldKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FInputChord                      NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class UWB_Button_Input_C*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             MappingName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             MappingNameText                                        (BlueprintVisible, BlueprintReadOnly, Parm)
// double                                  AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAxisMapping                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::OnKeySelected(const struct FInputChord& OldKey, const struct FInputChord& NewKey, class UWB_Button_Input_C* Button, class FName MappingName, const class FText& MappingNameText, double AxisValue, bool IsAxisMapping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnKeySelected");

	Params::WB_Child_InputSettings_C_OnKeySelected Parms{};

	Parms.OldKey = std::move(OldKey);
	Parms.NewKey = std::move(NewKey);
	Parms.Button = Button;
	Parms.MappingName = MappingName;
	Parms.MappingNameText = std::move(MappingNameText);
	Parms.AxisValue = AxisValue;
	Parms.IsAxisMapping = IsAxisMapping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnOverrideRequestReac
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Confirmed                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Child_InputSettings_C::OnOverrideRequestReac(bool Confirmed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnOverrideRequestReac");

	Params::WB_Child_InputSettings_C_OnOverrideRequestReac Parms{};

	Parms.Confirmed = Confirmed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.OnResetDefaults
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Child_InputSettings_C::OnResetDefaults()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "OnResetDefaults");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.SetInfoFieldInfo
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Head                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Body                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_Child_InputSettings_C::SetInfoFieldInfo(const class FText& Head, const class FText& Body)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "SetInfoFieldInfo");

	Params::WB_Child_InputSettings_C_SetInfoFieldInfo Parms{};

	Parms.Head = std::move(Head);
	Parms.Body = std::move(Body);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Child_InputSettings.WB_Child_InputSettings_C.SetupButtons
// (BlueprintCallable, BlueprintEvent)

void UWB_Child_InputSettings_C::SetupButtons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Child_InputSettings_C", "SetupButtons");

	UObject::ProcessEvent(Func, nullptr);
}

}

