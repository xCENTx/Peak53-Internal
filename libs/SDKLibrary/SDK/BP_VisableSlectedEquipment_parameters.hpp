#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VisableSlectedEquipment

#include "Basic.hpp"

#include "E_ArsenalCommands_structs.hpp"
#include "E_ArsenalType_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.UserConstructionScript
// 0x0028 (0x0028 - 0x0000)
struct BP_VisableSlectedEquipment_C_UserConstructionScript final
{
public:
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
};
static_assert(alignof(BP_VisableSlectedEquipment_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_UserConstructionScript");
static_assert(sizeof(BP_VisableSlectedEquipment_C_UserConstructionScript) == 0x000028, "Wrong size on BP_VisableSlectedEquipment_C_UserConstructionScript");
static_assert(offsetof(BP_VisableSlectedEquipment_C_UserConstructionScript, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_UserConstructionScript::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_UserConstructionScript, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'BP_VisableSlectedEquipment_C_UserConstructionScript::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_VisableSlectedEquipment_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_VisableSlectedEquipment_C_ReceiveTick");
static_assert(sizeof(BP_VisableSlectedEquipment_C_ReceiveTick) == 0x000004, "Wrong size on BP_VisableSlectedEquipment_C_ReceiveTick");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.ExecuteUbergraph_BP_VisableSlectedEquipment
// 0x0048 (0x0048 - 0x0000)
struct BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ArsenalCommands                             K2Node_Event_Command;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ArsenalType                                 K2Node_Event_Type;                                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4632[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Actor;                                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4633[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_2;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_ComponentBoundEvent_ButtonReleased;         // 0x0020(0x0018)(HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent_1;     // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_TouchedComponent;       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment");
static_assert(sizeof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment) == 0x000048, "Wrong size on BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, EntryPoint) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_Event_Command) == 0x000004, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_Event_Command' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_Event_Type) == 0x000005, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_Event_Actor) == 0x000008, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_ComponentBoundEvent_TouchedComponent_2) == 0x000018, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_ComponentBoundEvent_TouchedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_ComponentBoundEvent_ButtonReleased) == 0x000020, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_ComponentBoundEvent_ButtonReleased' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_ComponentBoundEvent_TouchedComponent_1) == 0x000038, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_ComponentBoundEvent_TouchedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment, K2Node_ComponentBoundEvent_TouchedComponent) == 0x000040, "Member 'BP_VisableSlectedEquipment_C_ExecuteUbergraph_BP_VisableSlectedEquipment::K2Node_ComponentBoundEvent_TouchedComponent' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   ButtonReleased;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature");
static_assert(sizeof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature) == 0x000020, "Wrong size on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature");
static_assert(offsetof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature::TouchedComponent' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature, ButtonReleased) == 0x000008, "Member 'BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_3_ComponentOnReleasedSignature__DelegateSignature::ButtonReleased' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(sizeof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature");
static_assert(offsetof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_1_ComponentEndCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    TouchedComponent;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(sizeof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature) == 0x000008, "Wrong size on BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature");
static_assert(offsetof(BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature, TouchedComponent) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_BndEvt__BP_VisableSlectedEquipment_GunMesh_K2Node_ComponentBoundEvent_0_ComponentBeginCursorOverSignature__DelegateSignature::TouchedComponent' has a wrong offset!");

// Function BP_VisableSlectedEquipment.BP_VisableSlectedEquipment_C.ArsenalEquipmentCommand
// 0x0010 (0x0010 - 0x0000)
struct BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand final
{
public:
	E_ArsenalCommands                             Command;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ArsenalType                                 Param_Type;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4634[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand) == 0x000008, "Wrong alignment on BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand");
static_assert(sizeof(BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand) == 0x000010, "Wrong size on BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand, Command) == 0x000000, "Member 'BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand::Command' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand, Param_Type) == 0x000001, "Member 'BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand::Param_Type' has a wrong offset!");
static_assert(offsetof(BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand, Actor) == 0x000008, "Member 'BP_VisableSlectedEquipment_C_ArsenalEquipmentCommand::Actor' has a wrong offset!");

}

