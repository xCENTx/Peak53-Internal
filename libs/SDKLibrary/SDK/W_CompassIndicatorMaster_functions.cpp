#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CompassIndicatorMaster

#include "Basic.hpp"

#include "W_CompassIndicatorMaster_classes.hpp"
#include "W_CompassIndicatorMaster_parameters.hpp"


namespace SDK
{

// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.ExecuteUbergraph_W_CompassIndicatorMaster
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CompassIndicatorMaster_C::ExecuteUbergraph_W_CompassIndicatorMaster(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CompassIndicatorMaster_C", "ExecuteUbergraph_W_CompassIndicatorMaster");

	Params::W_CompassIndicatorMaster_C_ExecuteUbergraph_W_CompassIndicatorMaster Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.GetPlayerNearestLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_C_CalculateDistanceFrom               GetDistanceMode                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector UW_CompassIndicatorMaster_C::GetPlayerNearestLocation(E_C_CalculateDistanceFrom GetDistanceMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CompassIndicatorMaster_C", "GetPlayerNearestLocation");

	Params::W_CompassIndicatorMaster_C_GetPlayerNearestLocation Parms{};

	Parms.GetDistanceMode = GetDistanceMode;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CompassIndicatorMaster_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CompassIndicatorMaster_C", "PreConstruct");

	Params::W_CompassIndicatorMaster_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.SetDistance
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Dist                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_CompassIndicatorMaster_C::SetDistance(int32 Dist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CompassIndicatorMaster_C", "SetDistance");

	Params::W_CompassIndicatorMaster_C_SetDistance Parms{};

	Parms.Dist = Dist;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_CompassIndicatorMaster.W_CompassIndicatorMaster_C.UpdateIndicator
// (BlueprintCallable, BlueprintEvent)

void UW_CompassIndicatorMaster_C::UpdateIndicator()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_CompassIndicatorMaster_C", "UpdateIndicator");

	UObject::ProcessEvent(Func, nullptr);
}

}

