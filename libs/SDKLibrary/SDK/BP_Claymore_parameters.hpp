#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Claymore

#include "Basic.hpp"

#include "E_WorldActions_structs.hpp"
#include "Engine_structs.hpp"
#include "S_WorldAction_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Claymore.BP_Claymore_C.BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'BP_Claymore_C_BndEvt__BP_MasterSpikes_StaticMesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.Claymore Explode Sound MC
// 0x0008 (0x0008 - 0x0000)
struct BP_Claymore_C_Claymore_Explode_Sound_MC final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_Claymore_Explode_Sound_MC) == 0x000008, "Wrong alignment on BP_Claymore_C_Claymore_Explode_Sound_MC");
static_assert(sizeof(BP_Claymore_C_Claymore_Explode_Sound_MC) == 0x000008, "Wrong size on BP_Claymore_C_Claymore_Explode_Sound_MC");
static_assert(offsetof(BP_Claymore_C_Claymore_Explode_Sound_MC, Sound) == 0x000000, "Member 'BP_Claymore_C_Claymore_Explode_Sound_MC::Sound' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.ExecuteUbergraph_BP_Claymore
// 0x03A0 (0x03A0 - 0x0000)
struct BP_Claymore_C_ExecuteUbergraph_BP_Claymore final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3816[0xC];                                     // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3817[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3818[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x00C0(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3819[0x3];                                     // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyDamage_ReturnValue;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381A[0x4];                                     // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381B[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381C[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKDamageInterface_C> CallFunc_SGK_Damage_self_CastInput;                // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381D[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_MasterCharRef_C>  K2Node_DynamicCast_AsBPI_Master_Char_Ref;          // 0x0200(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381E[0x7];                                     // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               CallFunc_CharRef_CharRef;                          // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_NewRotation_1;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381F[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3820[0x4];                                     // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType;                           // 0x0280(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3821[0x6];                                     // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3822[0x4];                                     // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3823[0x8];                                     // 0x02F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0300(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UParticleSystemComponent*               CallFunc_AddComponent_ReturnValue_1;               // 0x0360(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_MasterCharRef_C>  K2Node_DynamicCast_AsBPI_Master_Char_Ref_1;        // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3824[0x7];                                     // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               CallFunc_CharRef_CharRef_1;                        // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore) == 0x000010, "Wrong alignment on BP_Claymore_C_ExecuteUbergraph_BP_Claymore");
static_assert(sizeof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore) == 0x0003A0, "Wrong size on BP_Claymore_C_ExecuteUbergraph_BP_Claymore");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, EntryPoint) == 0x000000, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_struct_Variable) == 0x000010, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_bool_IsClosed_Variable) == 0x000070, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_bool_Has_Been_Initd_Variable) == 0x000080, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_bool_Has_Been_Initd_Variable_1) == 0x000081, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_Event_OtherActor) == 0x000088, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_ComponentBoundEvent_HitComponent) == 0x000090, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_ComponentBoundEvent_OtherActor) == 0x000098, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_ComponentBoundEvent_OtherComp) == 0x0000A0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_ComponentBoundEvent_NormalImpulse) == 0x0000A8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_ComponentBoundEvent_Hit) == 0x0000C0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x0001A8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_FTrunc_ReturnValue) == 0x0001B4, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_ApplyDamage_ReturnValue) == 0x0001B8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_ApplyDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_GetOwner_ReturnValue) == 0x0001C0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_AsController) == 0x0001C8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_bSuccess_1) == 0x0001D0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_K2_GetPawn_ReturnValue) == 0x0001D8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_IsServer_ReturnValue) == 0x0001E0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_SGK_Damage_self_CastInput) == 0x0001E8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_SGK_Damage_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_bool_IsClosed_Variable_1) == 0x0001F8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_AsBPI_Master_Char_Ref) == 0x000200, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_AsBPI_Master_Char_Ref' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_bSuccess_2) == 0x000210, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_CharRef_CharRef) == 0x000218, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_CharRef_CharRef' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_CustomEvent_NewRotation_1) == 0x000220, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_CustomEvent_NewRotation_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_CustomEvent_NewRotation) == 0x000238, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000250, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_CustomEvent_Sound) == 0x000258, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000260, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_Event_Damage) == 0x000278, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_Event_DamageType) == 0x000280, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_Event_InstigatedBy) == 0x000288, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_Event_DamageCauser) == 0x000290, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000298, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002A0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_IsValid_ReturnValue) == 0x0002A8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002A9, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0002B0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_BreakRotator_Roll) == 0x0002C8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_BreakRotator_Pitch) == 0x0002CC, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_BreakRotator_Yaw) == 0x0002D0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_MakeRotator_ReturnValue) == 0x0002E0, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, Temp_struct_Variable_1) == 0x000300, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_AddComponent_ReturnValue_1) == 0x000360, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_AsBPI_Master_Char_Ref_1) == 0x000368, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_AsBPI_Master_Char_Ref_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, K2Node_DynamicCast_bSuccess_3) == 0x000378, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_CharRef_CharRef_1) == 0x000380, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_CharRef_CharRef_1' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000388, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000390, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ExecuteUbergraph_BP_Claymore, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000398, "Member 'BP_Claymore_C_ExecuteUbergraph_BP_Claymore::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_Claymore_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on BP_Claymore_C_ReceiveActorBeginOverlap");
static_assert(sizeof(BP_Claymore_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on BP_Claymore_C_ReceiveActorBeginOverlap");
static_assert(offsetof(BP_Claymore_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'BP_Claymore_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_Claymore_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3825[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_Claymore_C_ReceiveAnyDamage");
static_assert(sizeof(BP_Claymore_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_Claymore_C_ReceiveAnyDamage");
static_assert(offsetof(BP_Claymore_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_Claymore_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_Claymore_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_Claymore_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_Claymore_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.RotationMC
// 0x0018 (0x0018 - 0x0000)
struct BP_Claymore_C_RotationMC final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Claymore_C_RotationMC) == 0x000008, "Wrong alignment on BP_Claymore_C_RotationMC");
static_assert(sizeof(BP_Claymore_C_RotationMC) == 0x000018, "Wrong size on BP_Claymore_C_RotationMC");
static_assert(offsetof(BP_Claymore_C_RotationMC, NewRotation) == 0x000000, "Member 'BP_Claymore_C_RotationMC::NewRotation' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SetRotationServer
// 0x0018 (0x0018 - 0x0000)
struct BP_Claymore_C_SetRotationServer final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Claymore_C_SetRotationServer) == 0x000008, "Wrong alignment on BP_Claymore_C_SetRotationServer");
static_assert(sizeof(BP_Claymore_C_SetRotationServer) == 0x000018, "Wrong size on BP_Claymore_C_SetRotationServer");
static_assert(offsetof(BP_Claymore_C_SetRotationServer, NewRotation) == 0x000000, "Member 'BP_Claymore_C_SetRotationServer::NewRotation' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SGK AllowInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_Claymore_C_SGK_AllowInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_SGK_AllowInteraction) == 0x000001, "Wrong alignment on BP_Claymore_C_SGK_AllowInteraction");
static_assert(sizeof(BP_Claymore_C_SGK_AllowInteraction) == 0x000001, "Wrong size on BP_Claymore_C_SGK_AllowInteraction");
static_assert(offsetof(BP_Claymore_C_SGK_AllowInteraction, AllowInteraction) == 0x000000, "Member 'BP_Claymore_C_SGK_AllowInteraction::AllowInteraction' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SGK EndInteraction
// 0x0010 (0x0010 - 0x0000)
struct BP_Claymore_C_SGK_EndInteraction final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_SGK_EndInteraction) == 0x000008, "Wrong alignment on BP_Claymore_C_SGK_EndInteraction");
static_assert(sizeof(BP_Claymore_C_SGK_EndInteraction) == 0x000010, "Wrong size on BP_Claymore_C_SGK_EndInteraction");
static_assert(offsetof(BP_Claymore_C_SGK_EndInteraction, PlayerInventory) == 0x000000, "Member 'BP_Claymore_C_SGK_EndInteraction::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_SGK_EndInteraction, ReturnValue) == 0x000008, "Member 'BP_Claymore_C_SGK_EndInteraction::ReturnValue' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SGK Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_Claymore_C_SGK_Interact final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                Action;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Claymore_C_SGK_Interact) == 0x000008, "Wrong alignment on BP_Claymore_C_SGK_Interact");
static_assert(sizeof(BP_Claymore_C_SGK_Interact) == 0x000010, "Wrong size on BP_Claymore_C_SGK_Interact");
static_assert(offsetof(BP_Claymore_C_SGK_Interact, PlayerInventory) == 0x000000, "Member 'BP_Claymore_C_SGK_Interact::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_SGK_Interact, Action) == 0x000008, "Member 'BP_Claymore_C_SGK_Interact::Action' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_SGK_Interact, ReturnValue) == 0x000009, "Member 'BP_Claymore_C_SGK_Interact::ReturnValue' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SGK InteractName
// 0x0018 (0x0018 - 0x0000)
struct BP_Claymore_C_SGK_InteractName final
{
public:
	class FText                                   InteractName;                                      // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_Claymore_C_SGK_InteractName) == 0x000008, "Wrong alignment on BP_Claymore_C_SGK_InteractName");
static_assert(sizeof(BP_Claymore_C_SGK_InteractName) == 0x000018, "Wrong size on BP_Claymore_C_SGK_InteractName");
static_assert(offsetof(BP_Claymore_C_SGK_InteractName, InteractName) == 0x000000, "Member 'BP_Claymore_C_SGK_InteractName::InteractName' has a wrong offset!");

// Function BP_Claymore.BP_Claymore_C.SGK PossibleActions
// 0x0020 (0x0020 - 0x0000)
struct BP_Claymore_C_SGK_PossibleActions final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionsFound;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3826[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WorldAction>                 PossibleActions;                                   // 0x0010(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_Claymore_C_SGK_PossibleActions) == 0x000008, "Wrong alignment on BP_Claymore_C_SGK_PossibleActions");
static_assert(sizeof(BP_Claymore_C_SGK_PossibleActions) == 0x000020, "Wrong size on BP_Claymore_C_SGK_PossibleActions");
static_assert(offsetof(BP_Claymore_C_SGK_PossibleActions, PlayerInventory) == 0x000000, "Member 'BP_Claymore_C_SGK_PossibleActions::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_SGK_PossibleActions, ActionsFound) == 0x000008, "Member 'BP_Claymore_C_SGK_PossibleActions::ActionsFound' has a wrong offset!");
static_assert(offsetof(BP_Claymore_C_SGK_PossibleActions, PossibleActions) == 0x000010, "Member 'BP_Claymore_C_SGK_PossibleActions::PossibleActions' has a wrong offset!");

}

