#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_TraceHitFunctions

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.Hit Faceindex
// 0x01C8 (0x01C8 - 0x0000)
struct BFL_TraceHitFunctions_C_Hit_Faceindex final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         FaceIndex;                                         // 0x00F0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3725[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3726[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_Hit_Faceindex) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_Hit_Faceindex");
static_assert(sizeof(BFL_TraceHitFunctions_C_Hit_Faceindex) == 0x0001C8, "Wrong size on BFL_TraceHitFunctions_C_Hit_Faceindex");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, FaceIndex) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F4, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F5, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_Time) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_Distance) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Faceindex, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_Hit_Faceindex::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.Hit Item
// 0x01C8 (0x01C8 - 0x0000)
struct BFL_TraceHitFunctions_C_Hit_Item final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         HitItem;                                           // 0x00F0(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3727[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3728[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_Hit_Item) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_Hit_Item");
static_assert(sizeof(BFL_TraceHitFunctions_C_Hit_Item) == 0x0001C8, "Wrong size on BFL_TraceHitFunctions_C_Hit_Item");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_Hit_Item::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_Hit_Item::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, HitItem) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_Hit_Item::HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F4, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F5, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_Time) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_Distance) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Item, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_Hit_Item::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.Hit Result Under Cursor byChannel
// 0x01F8 (0x01F8 - 0x0000)
struct BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel final
{
public:
	ETraceTypeQuery                               TraceChannel;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTraceComplex;                                     // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3729[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerIndex;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372A[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0018(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultUnderCursorByChannel_HitResult; // 0x0108(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_GetHitResultUnderCursorByChannel_ReturnValue; // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel");
static_assert(sizeof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel) == 0x0001F8, "Wrong size on BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, TraceChannel) == 0x000000, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::TraceChannel' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, bTraceComplex) == 0x000001, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, PlayerIndex) == 0x000004, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::PlayerIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, __WorldContext) == 0x000008, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, ReturnValue) == 0x000010, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, HitResult) == 0x000018, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::HitResult' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, CallFunc_GetPlayerController_ReturnValue) == 0x000100, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, CallFunc_GetHitResultUnderCursorByChannel_HitResult) == 0x000108, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::CallFunc_GetHitResultUnderCursorByChannel_HitResult' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, CallFunc_GetHitResultUnderCursorByChannel_ReturnValue) == 0x0001F0, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::CallFunc_GetHitResultUnderCursorByChannel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel, CallFunc_IsValid_ReturnValue) == 0x0001F1, "Member 'BFL_TraceHitFunctions_C_Hit_Result_Under_Cursor_byChannel::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.Hit TraceEnd
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_Hit_TraceEnd final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372B[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372C[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372D[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_Hit_TraceEnd) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_Hit_TraceEnd");
static_assert(sizeof(BFL_TraceHitFunctions_C_Hit_TraceEnd) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_Hit_TraceEnd");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, TraceEnd) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::TraceEnd' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceEnd, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceEnd::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.Hit TraceStart
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_Hit_TraceStart final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceStart;                                        // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372E[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372F[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3730[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_Hit_TraceStart) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_Hit_TraceStart");
static_assert(sizeof(BFL_TraceHitFunctions_C_Hit_TraceStart) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_Hit_TraceStart");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, TraceStart) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_Hit_TraceStart, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_Hit_TraceStart::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitActor
// 0x01D0 (0x01D0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitActor final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Param_HitActor;                                    // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3731[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3732[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3733[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitActor) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitActor");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitActor) == 0x0001D0, "Wrong size on BFL_TraceHitFunctions_C_HitActor");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitActor::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitActor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, Param_HitActor) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitActor::Param_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitActor, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitActor::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitBlockingHit
// 0x01C8 (0x01C8 - 0x0000)
struct BFL_TraceHitFunctions_C_HitBlockingHit final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bBlockingHit;                                      // 0x00F0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3734[0x1];                                     // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3735[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3736[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitBlockingHit) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitBlockingHit");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitBlockingHit) == 0x0001C8, "Wrong size on BFL_TraceHitFunctions_C_HitBlockingHit");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, bBlockingHit) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F1, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F2, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_Location) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_ImpactPoint) == 0x000118, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_Normal) == 0x000130, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_PhysMat) == 0x000160, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_HitActor) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_HitComponent) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_HitBoneName) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_BoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_HitItem) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_ElementIndex) == 0x00018C, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_FaceIndex) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_TraceStart) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBlockingHit, CallFunc_BreakHitResult_TraceEnd) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_HitBlockingHit::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitBoneName
// 0x01D0 (0x01D0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitBoneName final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_HitBoneName;                                 // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3737[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3738[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3739[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitBoneName) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitBoneName");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitBoneName) == 0x0001D0, "Wrong size on BFL_TraceHitFunctions_C_HitBoneName");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitBoneName::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitBoneName::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, Param_HitBoneName) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitBoneName::Param_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitBoneName, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitBoneName::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitComponent
// 0x01D0 (0x01D0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitComponent final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Param_HitComponent;                                // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373A[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373B[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373C[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitComponent) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitComponent");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitComponent) == 0x0001D0, "Wrong size on BFL_TraceHitFunctions_C_HitComponent");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitComponent::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitComponent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, Param_HitComponent) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitComponent::Param_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitComponent, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitComponent::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitDistance
// 0x01D8 (0x01D8 - 0x0000)
struct BFL_TraceHitFunctions_C_HitDistance final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373D[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373E[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373F[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Distance_ImplicitCast;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitDistance) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitDistance");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitDistance) == 0x0001D8, "Wrong size on BFL_TraceHitFunctions_C_HitDistance");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitDistance::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitDistance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, Distance) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitDistance::Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitDistance::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitDistance, K2Node_FunctionResult_Distance_ImplicitCast) == 0x0001D0, "Member 'BFL_TraceHitFunctions_C_HitDistance::K2Node_FunctionResult_Distance_ImplicitCast' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitImpactNormal
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitImpactNormal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactNormal;                                      // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3740[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3741[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3742[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitImpactNormal) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitImpactNormal");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitImpactNormal) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_HitImpactNormal");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, ImpactNormal) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactNormal, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_HitImpactNormal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitImpactPoint
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitImpactPoint final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3743[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3744[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3745[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitImpactPoint) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitImpactPoint");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitImpactPoint) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_HitImpactPoint");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, ImpactPoint) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitImpactPoint, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_HitImpactPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitLocation
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitLocation final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3746[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3747[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3748[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitLocation) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitLocation");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitLocation) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_HitLocation");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitLocation::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, Location) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitLocation::Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitLocation, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_HitLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitNormal
// 0x01E0 (0x01E0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitNormal final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x00F0(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3749[0x2];                                     // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374A[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374B[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitNormal) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitNormal");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitNormal) == 0x0001E0, "Wrong size on BFL_TraceHitFunctions_C_HitNormal");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitNormal::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitNormal::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, Normal) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitNormal::Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_bBlockingHit) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_bInitialOverlap) == 0x000109, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_Time) == 0x00010C, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_Distance) == 0x000110, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_Location) == 0x000118, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_Normal) == 0x000148, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_ImpactNormal) == 0x000160, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_PhysMat) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_HitActor) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_HitComponent) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_HitBoneName) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_BoneName) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_HitItem) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_ElementIndex) == 0x0001A4, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_FaceIndex) == 0x0001A8, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_TraceStart) == 0x0001B0, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitNormal, CallFunc_BreakHitResult_TraceEnd) == 0x0001C8, "Member 'BFL_TraceHitFunctions_C_HitNormal::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitPhysMat
// 0x01D0 (0x01D0 - 0x0000)
struct BFL_TraceHitFunctions_C_HitPhysMat final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374C[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374D[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374E[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitPhysMat) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitPhysMat");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitPhysMat) == 0x0001D0, "Wrong size on BFL_TraceHitFunctions_C_HitPhysMat");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, PhysMat) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitPhysMat, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitPhysMat::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.HitTime
// 0x01D8 (0x01D8 - 0x0000)
struct BFL_TraceHitFunctions_C_HitTime final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UObject*                                __WorldContext;                                    // 0x00E8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x00F0(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374F[0x2];                                     // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3750[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3751[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_Time_ImplicitCast;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_HitTime) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_HitTime");
static_assert(sizeof(BFL_TraceHitFunctions_C_HitTime) == 0x0001D8, "Wrong size on BFL_TraceHitFunctions_C_HitTime");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, Hit) == 0x000000, "Member 'BFL_TraceHitFunctions_C_HitTime::Hit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, __WorldContext) == 0x0000E8, "Member 'BFL_TraceHitFunctions_C_HitTime::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, Time) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_HitTime::Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F8, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F9, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_Time) == 0x0000FC, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_Distance) == 0x000100, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_Location) == 0x000108, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_ImpactPoint) == 0x000120, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_Normal) == 0x000138, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_ImpactNormal) == 0x000150, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_PhysMat) == 0x000168, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_HitActor) == 0x000170, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_HitComponent) == 0x000178, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_HitBoneName) == 0x000180, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_BoneName) == 0x000188, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_HitItem) == 0x000190, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_ElementIndex) == 0x000194, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_FaceIndex) == 0x000198, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_TraceStart) == 0x0001A0, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, CallFunc_BreakHitResult_TraceEnd) == 0x0001B8, "Member 'BFL_TraceHitFunctions_C_HitTime::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_HitTime, K2Node_FunctionResult_Time_ImplicitCast) == 0x0001D0, "Member 'BFL_TraceHitFunctions_C_HitTime::K2Node_FunctionResult_Time_ImplicitCast' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.ProjectileTraceForword
// 0x0150 (0x0150 - 0x0000)
struct BFL_TraceHitFunctions_C_ProjectileTraceForword final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileSpeed;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LunchVelocity;                                     // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceForword_Start;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceForword_End;                         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3752[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_ProjectileTraceForword) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_ProjectileTraceForword");
static_assert(sizeof(BFL_TraceHitFunctions_C_ProjectileTraceForword) == 0x000150, "Wrong size on BFL_TraceHitFunctions_C_ProjectileTraceForword");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, Spread) == 0x000008, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, ProjectileSpeed) == 0x000010, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, LunchVelocity) == 0x000038, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::LunchVelocity' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_TraceForword_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_TraceForword_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_TraceForword_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_TraceForword_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_MakeVector_X_ImplicitCast) == 0x000138, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceForword, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceForword::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.ProjectileTraceRight
// 0x0150 (0x0150 - 0x0000)
struct BFL_TraceHitFunctions_C_ProjectileTraceRight final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileSpeed;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LunchVelocity;                                     // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceRight_Start;                         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceRight_End;                           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3753[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_ProjectileTraceRight) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_ProjectileTraceRight");
static_assert(sizeof(BFL_TraceHitFunctions_C_ProjectileTraceRight) == 0x000150, "Wrong size on BFL_TraceHitFunctions_C_ProjectileTraceRight");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, Spread) == 0x000008, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, ProjectileSpeed) == 0x000010, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, LunchVelocity) == 0x000038, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::LunchVelocity' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_TraceRight_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_TraceRight_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_TraceRight_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_TraceRight_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_GetRightVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_MakeVector_X_ImplicitCast) == 0x000138, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceRight, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceRight::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.ProjectileTraceUp
// 0x0150 (0x0150 - 0x0000)
struct BFL_TraceHitFunctions_C_ProjectileTraceUp final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ProjectileSpeed;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LunchVelocity;                                     // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceUp_Start;                            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceUp_End;                              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3754[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_ProjectileTraceUp) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_ProjectileTraceUp");
static_assert(sizeof(BFL_TraceHitFunctions_C_ProjectileTraceUp) == 0x000150, "Wrong size on BFL_TraceHitFunctions_C_ProjectileTraceUp");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, Spread) == 0x000008, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, ProjectileSpeed) == 0x000010, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::ProjectileSpeed' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, LunchVelocity) == 0x000038, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::LunchVelocity' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_TraceUp_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_TraceUp_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_TraceUp_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_TraceUp_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_GetUpVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_MakeVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000108, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Add_VectorVector_ReturnValue) == 0x000120, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_MakeVector_X_ImplicitCast) == 0x000138, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000140, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_ProjectileTraceUp, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000148, "Member 'BFL_TraceHitFunctions_C_ProjectileTraceUp::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceForword
// 0x00A8 (0x00A8 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceForword final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceForword) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceForword");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceForword) == 0x0000A8, "Wrong size on BFL_TraceHitFunctions_C_TraceForword");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceForword::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceForword::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, __WorldContext) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceForword::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, Start) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceForword::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, End) == 0x000030, "Member 'BFL_TraceHitFunctions_C_TraceForword::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BFL_TraceHitFunctions_C_TraceForword::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, CallFunc_GetForwardVector_ReturnValue) == 0x000060, "Member 'BFL_TraceHitFunctions_C_TraceForword::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BFL_TraceHitFunctions_C_TraceForword::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceForword, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BFL_TraceHitFunctions_C_TraceForword::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceRight
// 0x00A8 (0x00A8 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceRight final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceRight) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceRight");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceRight) == 0x0000A8, "Wrong size on BFL_TraceHitFunctions_C_TraceRight");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceRight::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceRight::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, __WorldContext) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, Start) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceRight::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, End) == 0x000030, "Member 'BFL_TraceHitFunctions_C_TraceRight::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BFL_TraceHitFunctions_C_TraceRight::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, CallFunc_GetRightVector_ReturnValue) == 0x000060, "Member 'BFL_TraceHitFunctions_C_TraceRight::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BFL_TraceHitFunctions_C_TraceRight::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceRight, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BFL_TraceHitFunctions_C_TraceRight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceSpreadForword
// 0x0120 (0x0120 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceSpreadForword final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceForword_Start;                       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceForword_End;                         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3755[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceSpreadForword) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceSpreadForword");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceSpreadForword) == 0x000120, "Wrong size on BFL_TraceHitFunctions_C_TraceSpreadForword");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, Spread) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, End) == 0x000038, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_TraceForword_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_TraceForword_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_TraceForword_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_TraceForword_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_MakeVector_X_ImplicitCast) == 0x000108, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadForword, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000118, "Member 'BFL_TraceHitFunctions_C_TraceSpreadForword::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceSpreadRight
// 0x0120 (0x0120 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceSpreadRight final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceRight_Start;                         // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceRight_End;                           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3756[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceSpreadRight) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceSpreadRight");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceSpreadRight) == 0x000120, "Wrong size on BFL_TraceHitFunctions_C_TraceSpreadRight");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, Spread) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, End) == 0x000038, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_TraceRight_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_TraceRight_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_TraceRight_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_TraceRight_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_MakeVector_X_ImplicitCast) == 0x000108, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadRight, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000118, "Member 'BFL_TraceHitFunctions_C_TraceSpreadRight::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceSpreadUP
// 0x0120 (0x0120 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceSpreadUP final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spread;                                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0038(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TraceUp_Start;                            // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceUp_End;                              // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3757[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceSpreadUP) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceSpreadUP");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceSpreadUP) == 0x000120, "Wrong size on BFL_TraceHitFunctions_C_TraceSpreadUP");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, Spread) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::Spread' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, __WorldContext) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, Start) == 0x000020, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, End) == 0x000038, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_TraceUp_Start) == 0x000068, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_TraceUp_Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_TraceUp_End) == 0x000080, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_TraceUp_End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000B8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000C0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_MakeVector_X_ImplicitCast) == 0x000108, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceSpreadUP, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000118, "Member 'BFL_TraceHitFunctions_C_TraceSpreadUP::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_TraceHitFunctions.BFL_TraceHitFunctions_C.TraceUp
// 0x00A8 (0x00A8 - 0x0000)
struct BFL_TraceHitFunctions_C_TraceUp final
{
public:
	class USceneComponent*                        Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        RayLength;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Start;                                             // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_TraceHitFunctions_C_TraceUp) == 0x000008, "Wrong alignment on BFL_TraceHitFunctions_C_TraceUp");
static_assert(sizeof(BFL_TraceHitFunctions_C_TraceUp) == 0x0000A8, "Wrong size on BFL_TraceHitFunctions_C_TraceUp");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, Target) == 0x000000, "Member 'BFL_TraceHitFunctions_C_TraceUp::Target' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, RayLength) == 0x000008, "Member 'BFL_TraceHitFunctions_C_TraceUp::RayLength' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, __WorldContext) == 0x000010, "Member 'BFL_TraceHitFunctions_C_TraceUp::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, Start) == 0x000018, "Member 'BFL_TraceHitFunctions_C_TraceUp::Start' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, End) == 0x000030, "Member 'BFL_TraceHitFunctions_C_TraceUp::End' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'BFL_TraceHitFunctions_C_TraceUp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, CallFunc_GetUpVector_ReturnValue) == 0x000060, "Member 'BFL_TraceHitFunctions_C_TraceUp::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BFL_TraceHitFunctions_C_TraceUp::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_TraceHitFunctions_C_TraceUp, CallFunc_Add_VectorVector_ReturnValue) == 0x000090, "Member 'BFL_TraceHitFunctions_C_TraceUp::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

}

