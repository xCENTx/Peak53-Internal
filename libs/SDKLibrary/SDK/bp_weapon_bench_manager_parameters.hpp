#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: bp_weapon_bench_manager

#include "Basic.hpp"


namespace SDK::Params
{

// Function bp_weapon_bench_manager.bp_weapon_bench_manager_C.SetCurrentSecondary
// 0x0010 (0x0010 - 0x0000)
struct bp_weapon_bench_manager_C_SetCurrentSecondary final
{
public:
	class FString                                 Param_CurrentSecondary;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_weapon_bench_manager_C_SetCurrentSecondary) == 0x000008, "Wrong alignment on bp_weapon_bench_manager_C_SetCurrentSecondary");
static_assert(sizeof(bp_weapon_bench_manager_C_SetCurrentSecondary) == 0x000010, "Wrong size on bp_weapon_bench_manager_C_SetCurrentSecondary");
static_assert(offsetof(bp_weapon_bench_manager_C_SetCurrentSecondary, Param_CurrentSecondary) == 0x000000, "Member 'bp_weapon_bench_manager_C_SetCurrentSecondary::Param_CurrentSecondary' has a wrong offset!");

// Function bp_weapon_bench_manager.bp_weapon_bench_manager_C.SetCurrentPrimary
// 0x0010 (0x0010 - 0x0000)
struct bp_weapon_bench_manager_C_SetCurrentPrimary final
{
public:
	class FString                                 Param_CurrentPrimary;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_weapon_bench_manager_C_SetCurrentPrimary) == 0x000008, "Wrong alignment on bp_weapon_bench_manager_C_SetCurrentPrimary");
static_assert(sizeof(bp_weapon_bench_manager_C_SetCurrentPrimary) == 0x000010, "Wrong size on bp_weapon_bench_manager_C_SetCurrentPrimary");
static_assert(offsetof(bp_weapon_bench_manager_C_SetCurrentPrimary, Param_CurrentPrimary) == 0x000000, "Member 'bp_weapon_bench_manager_C_SetCurrentPrimary::Param_CurrentPrimary' has a wrong offset!");

// Function bp_weapon_bench_manager.bp_weapon_bench_manager_C.ExecuteUbergraph_bp_weapon_bench_manager
// 0x0038 (0x0038 - 0x0000)
struct bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36FE[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance_1;        // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager) == 0x000008, "Wrong alignment on bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager");
static_assert(sizeof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager) == 0x000038, "Wrong size on bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, EntryPoint) == 0x000000, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::EntryPoint' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, CallFunc_GetGameInstance_ReturnValue_1) == 0x000010, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000018, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, K2Node_DynamicCast_AsBP_SGKGame_Instance_1) == 0x000028, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::K2Node_DynamicCast_AsBP_SGKGame_Instance_1' has a wrong offset!");
static_assert(offsetof(bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'bp_weapon_bench_manager_C_ExecuteUbergraph_bp_weapon_bench_manager::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

}

