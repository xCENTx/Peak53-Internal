#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BombDefuseWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BombDefuseWidget.BombDefuseWidget_C
// 0x0018 (0x0290 - 0x0278)
class UBombDefuseWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProgressBar*                           DefuseProgress;                                    // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class ABP_SGKController_C*                    ControllerRef;                                     // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_BombDefuseWidget(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BombDefuseWidget_C">();
	}
	static class UBombDefuseWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBombDefuseWidget_C>();
	}
};
static_assert(alignof(UBombDefuseWidget_C) == 0x000008, "Wrong alignment on UBombDefuseWidget_C");
static_assert(sizeof(UBombDefuseWidget_C) == 0x000290, "Wrong size on UBombDefuseWidget_C");
static_assert(offsetof(UBombDefuseWidget_C, UberGraphFrame) == 0x000278, "Member 'UBombDefuseWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBombDefuseWidget_C, DefuseProgress) == 0x000280, "Member 'UBombDefuseWidget_C::DefuseProgress' has a wrong offset!");
static_assert(offsetof(UBombDefuseWidget_C, ControllerRef) == 0x000288, "Member 'UBombDefuseWidget_C::ControllerRef' has a wrong offset!");

}

