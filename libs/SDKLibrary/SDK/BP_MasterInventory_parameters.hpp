#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterInventory

#include "Basic.hpp"

#include "S_InvItem_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_InvSaveSlot_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "S_ConsumableDetails_structs.hpp"
#include "S_DecayDetails_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "E_AttachmentType_structs.hpp"
#include "S_OtherInvSaves_structs.hpp"
#include "Engine_structs.hpp"
#include "S_DurabilityDetails_structs.hpp"
#include "S_SpawnerList_structs.hpp"
#include "S_CraftingQueue_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "E_InventoryRestrictionType_structs.hpp"
#include "S_CustomGridLayoutData_structs.hpp"
#include "S_LevelSaveData_structs.hpp"
#include "S_ManualIndexs_structs.hpp"
#include "S_NotificationDetails_structs.hpp"
#include "S_StorageSave_structs.hpp"
#include "S_WeaponSlot_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "S_CraftingRecipe_structs.hpp"
#include "E_RecipeCategory_structs.hpp"
#include "E_Sounds_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterInventory.BP_MasterInventory_C.AddItem
// 0x1D40 (0x1D40 - 0x0000)
struct BP_MasterInventory_C_AddItem final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          StackSearch;                                       // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNotifications;                                 // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainingItem;                                     // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47AD[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             RemainingInvItem;                                  // 0x0038(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           NewItemSlot;                                       // 0x0068(0x0010)(Parm, OutParm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         StackAddedL;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AddAmountL;                                        // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingL;                                        // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47AE[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             RootSlotL;                                         // 0x0088(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RotatedL;                                          // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainingItemL;                                    // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47AF[0x6];                                     // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TotalItemWeightL;                                  // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             AddItemL;                                          // 0x00E8(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0118(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         StartAmountL;                                      // 0x0128(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0138(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B0[0xF];                                     // 0x0151(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0160(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateAllAttachments_self_CastInput;  // 0x09F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B1[0x3];                                     // 0x0A01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateAllAttachments_self_CastInput_1; // 0x0A08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B2[0x7];                                     // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x0A20(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0A30(0x0038)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0A68(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B3[0x7];                                     // 0x0A71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory_1;        // 0x0A78(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0A80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B4[0x1];                                     // 0x0A83(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0A88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0A89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0A8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemLimitCheck_AllowAdd;                  // 0x0A8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_AddCount;                  // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_Remaining;                 // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B5[0x4];                                     // 0x0A94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0A98(0x0038)(HasGetValueTypeHash)
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_2;         // 0x0AD0(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_ContainerRestrictionCheck_Can_Add;        // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B6[0x7];                                     // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_3;         // 0x0B10(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindFreeStackSpace_Reaminder;             // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B7[0x7];                                     // 0x0B49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_FindFreeStackSpace_ReaminderInvItem;      // 0x0B50(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B8[0xF];                                     // 0x0B81(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0B90(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x1420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47B9[0x4];                                     // 0x1424(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x1428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x1431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BA[0x6];                                     // 0x1432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x1438(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x1448(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x1498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BB[0x7];                                     // 0x1499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x14A0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BC[0x7];                                     // 0x1D31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x1D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddItem) == 0x000010, "Wrong alignment on BP_MasterInventory_C_AddItem");
static_assert(sizeof(BP_MasterInventory_C_AddItem) == 0x001D40, "Wrong size on BP_MasterInventory_C_AddItem");
static_assert(offsetof(BP_MasterInventory_C_AddItem, Item) == 0x000000, "Member 'BP_MasterInventory_C_AddItem::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, StackSearch) == 0x000030, "Member 'BP_MasterInventory_C_AddItem::StackSearch' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, ShowNotifications) == 0x000031, "Member 'BP_MasterInventory_C_AddItem::ShowNotifications' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RemainingItem) == 0x000032, "Member 'BP_MasterInventory_C_AddItem::RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RemainingInvItem) == 0x000038, "Member 'BP_MasterInventory_C_AddItem::RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, NewItemSlot) == 0x000068, "Member 'BP_MasterInventory_C_AddItem::NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, StackAddedL) == 0x000078, "Member 'BP_MasterInventory_C_AddItem::StackAddedL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, AddAmountL) == 0x00007C, "Member 'BP_MasterInventory_C_AddItem::AddAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RemainingL) == 0x000080, "Member 'BP_MasterInventory_C_AddItem::RemainingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RootSlotL) == 0x000088, "Member 'BP_MasterInventory_C_AddItem::RootSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RotatedL) == 0x0000D8, "Member 'BP_MasterInventory_C_AddItem::RotatedL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, RemainingItemL) == 0x0000D9, "Member 'BP_MasterInventory_C_AddItem::RemainingItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, TotalItemWeightL) == 0x0000E0, "Member 'BP_MasterInventory_C_AddItem::TotalItemWeightL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, AddItemL) == 0x0000E8, "Member 'BP_MasterInventory_C_AddItem::AddItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, FoundSlotsL) == 0x000118, "Member 'BP_MasterInventory_C_AddItem::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, StartAmountL) == 0x000128, "Member 'BP_MasterInventory_C_AddItem::StartAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x00012C, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000130, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000134, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_InvSlotID) == 0x000138, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000148, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x00014C, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000150, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000160, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_UpdateAllAttachments_self_CastInput) == 0x0009F0, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_UpdateAllAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_AddWeightCheck_CanAdd) == 0x000A00, "Member 'BP_MasterInventory_C_AddItem::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_AddWeightCheck_ItemCount) == 0x000A04, "Member 'BP_MasterInventory_C_AddItem::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_UpdateAllAttachments_self_CastInput_1) == 0x000A08, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_UpdateAllAttachments_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000A18, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_InvSlotID_1) == 0x000A20, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_NotificationDetails) == 0x000A30, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000A68, "Member 'BP_MasterInventory_C_AddItem::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_DynamicCast_bSuccess) == 0x000A70, "Member 'BP_MasterInventory_C_AddItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_DynamicCast_AsBP_Player_Inventory_1) == 0x000A78, "Member 'BP_MasterInventory_C_AddItem::K2Node_DynamicCast_AsBP_Player_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_DynamicCast_bSuccess_1) == 0x000A80, "Member 'BP_MasterInventory_C_AddItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_IsValid_ReturnValue) == 0x000A81, "Member 'BP_MasterInventory_C_AddItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_IsValid_ReturnValue_1) == 0x000A82, "Member 'BP_MasterInventory_C_AddItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000A84, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000A88, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000A89, "Member 'BP_MasterInventory_C_AddItem::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Not_PreBool_ReturnValue) == 0x000A8A, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_ItemLimitCheck_AllowAdd) == 0x000A8B, "Member 'BP_MasterInventory_C_AddItem::CallFunc_ItemLimitCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_ItemLimitCheck_AddCount) == 0x000A8C, "Member 'BP_MasterInventory_C_AddItem::CallFunc_ItemLimitCheck_AddCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_ItemLimitCheck_Remaining) == 0x000A90, "Member 'BP_MasterInventory_C_AddItem::CallFunc_ItemLimitCheck_Remaining' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000A98, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_NotificationDetails_2) == 0x000AD0, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_NotificationDetails_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_ContainerRestrictionCheck_Can_Add) == 0x000B08, "Member 'BP_MasterInventory_C_AddItem::CallFunc_ContainerRestrictionCheck_Can_Add' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, K2Node_MakeStruct_S_NotificationDetails_3) == 0x000B10, "Member 'BP_MasterInventory_C_AddItem::K2Node_MakeStruct_S_NotificationDetails_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_FindFreeStackSpace_Reaminder) == 0x000B48, "Member 'BP_MasterInventory_C_AddItem::CallFunc_FindFreeStackSpace_Reaminder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_FindFreeStackSpace_ReaminderInvItem) == 0x000B50, "Member 'BP_MasterInventory_C_AddItem::CallFunc_FindFreeStackSpace_ReaminderInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000B80, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000B90, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x001420, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x001428, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_FindEmptySlots_SpaceFound) == 0x001430, "Member 'BP_MasterInventory_C_AddItem::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_FindEmptySlots_Rotated) == 0x001431, "Member 'BP_MasterInventory_C_AddItem::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_FindEmptySlots_FoundSlots) == 0x001438, "Member 'BP_MasterInventory_C_AddItem::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Array_Get_Item) == 0x001448, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x001498, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x0014A0, "Member 'BP_MasterInventory_C_AddItem::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_BooleanAND_ReturnValue) == 0x001D30, "Member 'BP_MasterInventory_C_AddItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItem, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x001D38, "Member 'BP_MasterInventory_C_AddItem::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AddItemWeight
// 0x11A0 (0x11A0 - 0x0000)
struct BP_MasterInventory_C_AddItemWeight final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddAll;                                            // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddToParent;                                       // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BD[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  Stop_Inventory;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BE[0xF];                                     // 0x08D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x08E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47BF[0x7];                                     // 0x1171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x1180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C0[0x4];                                     // 0x1184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x1188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x1190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddItemWeight) == 0x000010, "Wrong alignment on BP_MasterInventory_C_AddItemWeight");
static_assert(sizeof(BP_MasterInventory_C_AddItemWeight) == 0x0011A0, "Wrong size on BP_MasterInventory_C_AddItemWeight");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, Item) == 0x000000, "Member 'BP_MasterInventory_C_AddItemWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, Amount) == 0x000030, "Member 'BP_MasterInventory_C_AddItemWeight::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, AddAll) == 0x000034, "Member 'BP_MasterInventory_C_AddItemWeight::AddAll' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, AddToParent) == 0x000035, "Member 'BP_MasterInventory_C_AddItemWeight::AddToParent' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, Stop_Inventory) == 0x000038, "Member 'BP_MasterInventory_C_AddItemWeight::Stop_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, ItemDetailsL) == 0x000040, "Member 'BP_MasterInventory_C_AddItemWeight::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_SGK_ItemDetails_ItemFound) == 0x0008D0, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0008E0, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_IsValid_ReturnValue) == 0x001170, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_Multiply_IntFloat_ReturnValue) == 0x001178, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_SelectInt_ReturnValue) == 0x001180, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x001188, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddItemWeight, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x001190, "Member 'BP_MasterInventory_C_AddItemWeight::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AddStartingItems
// 0x00F8 (0x00F8 - 0x0000)
struct BP_MasterInventory_C_AddStartingItems final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C1[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowStartingItems_AllowStartingItems; // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C3[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0030(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C4[0x1];                                     // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C5[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0078(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C6[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x00B0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddStartingItems) == 0x000008, "Wrong alignment on BP_MasterInventory_C_AddStartingItems");
static_assert(sizeof(BP_MasterInventory_C_AddStartingItems) == 0x0000F8, "Wrong size on BP_MasterInventory_C_AddStartingItems");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, Return) == 0x000000, "Member 'BP_MasterInventory_C_AddStartingItems::Return' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterInventory_C_AddStartingItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MasterInventory_C_AddStartingItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_MasterInventory_C_AddStartingItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_MasterInventory_C_AddStartingItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_SGK_AllowStartingItems_AllowStartingItems) == 0x000028, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_SGK_AllowStartingItems_AllowStartingItems' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Less_IntInt_ReturnValue) == 0x000029, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x00004C, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_NotEqual_NameName_ReturnValue) == 0x00004D, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x00004E, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_GetGameMode_ReturnValue) == 0x000050, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000058, "Member 'BP_MasterInventory_C_AddStartingItems::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_MasterInventory_C_AddStartingItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000070, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_CreateNewItem_NewItem) == 0x000078, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_AddItem_RemainingItem) == 0x0000A8, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_AddItem_RemainingInvItem) == 0x0000B0, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_AddItem_NewItemSlot) == 0x0000E0, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_IsValid_ReturnValue) == 0x0000F0, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddStartingItems, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'BP_MasterInventory_C_AddStartingItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AddUsingPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_AddUsingPlayer final
{
public:
	class UBP_PlayerInventory_C*                  Player_Inv;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddUsingPlayer) == 0x000008, "Wrong alignment on BP_MasterInventory_C_AddUsingPlayer");
static_assert(sizeof(BP_MasterInventory_C_AddUsingPlayer) == 0x000010, "Wrong size on BP_MasterInventory_C_AddUsingPlayer");
static_assert(offsetof(BP_MasterInventory_C_AddUsingPlayer, Player_Inv) == 0x000000, "Member 'BP_MasterInventory_C_AddUsingPlayer::Player_Inv' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddUsingPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_AddUsingPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AddWeight
// 0x0028 (0x0028 - 0x0000)
struct BP_MasterInventory_C_AddWeight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddToParent;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C7[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  Stop_Inventory;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddWeight) == 0x000008, "Wrong alignment on BP_MasterInventory_C_AddWeight");
static_assert(sizeof(BP_MasterInventory_C_AddWeight) == 0x000028, "Wrong size on BP_MasterInventory_C_AddWeight");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, Weight) == 0x000000, "Member 'BP_MasterInventory_C_AddWeight::Weight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, AddToParent) == 0x000008, "Member 'BP_MasterInventory_C_AddWeight::AddToParent' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, Stop_Inventory) == 0x000010, "Member 'BP_MasterInventory_C_AddWeight::Stop_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_AddWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000019, "Member 'BP_MasterInventory_C_AddWeight::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00001A, "Member 'BP_MasterInventory_C_AddWeight::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, CallFunc_IsValid_ReturnValue_1) == 0x00001B, "Member 'BP_MasterInventory_C_AddWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_AddWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AddWeightCheck
// 0x0058 (0x0058 - 0x0000)
struct BP_MasterInventory_C_AddWeightCheck final
{
public:
	double                                        ItemWeight;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckParent;                                       // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  ParentIgnore;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAdd;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CA[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Param_ItemCount;                                   // 0x001C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParentItemCountL;                                  // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemCountL;                                        // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParentWeightCheck_CanAdd;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CB[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ParentWeightCheck_CurrentCount;           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParentWeightCheck_CanAdd_1;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CC[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ParentWeightCheck_CurrentCount_1;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CD[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RemainingFreeWeight_RemainingFreeWeight;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AddWeightCheck) == 0x000008, "Wrong alignment on BP_MasterInventory_C_AddWeightCheck");
static_assert(sizeof(BP_MasterInventory_C_AddWeightCheck) == 0x000058, "Wrong size on BP_MasterInventory_C_AddWeightCheck");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, ItemWeight) == 0x000000, "Member 'BP_MasterInventory_C_AddWeightCheck::ItemWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CheckParent) == 0x000008, "Member 'BP_MasterInventory_C_AddWeightCheck::CheckParent' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, ParentIgnore) == 0x000010, "Member 'BP_MasterInventory_C_AddWeightCheck::ParentIgnore' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CanAdd) == 0x000018, "Member 'BP_MasterInventory_C_AddWeightCheck::CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, Param_ItemCount) == 0x00001C, "Member 'BP_MasterInventory_C_AddWeightCheck::Param_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, ParentItemCountL) == 0x000020, "Member 'BP_MasterInventory_C_AddWeightCheck::ParentItemCountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, ItemCountL) == 0x000024, "Member 'BP_MasterInventory_C_AddWeightCheck::ItemCountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_ParentWeightCheck_CanAdd) == 0x000029, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_ParentWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_ParentWeightCheck_CurrentCount) == 0x00002C, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_ParentWeightCheck_CurrentCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000031, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000032, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000033, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_ParentWeightCheck_CanAdd_1) == 0x000034, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_ParentWeightCheck_CanAdd_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_ParentWeightCheck_CurrentCount_1) == 0x000038, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_ParentWeightCheck_CurrentCount_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_RemainingFreeWeight_RemainingFreeWeight) == 0x000040, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_RemainingFreeWeight_RemainingFreeWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_FMod_Remainder) == 0x000048, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AddWeightCheck, CallFunc_FMod_ReturnValue) == 0x000050, "Member 'BP_MasterInventory_C_AddWeightCheck::CallFunc_FMod_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AllItems
// 0x0118 (0x0118 - 0x0000)
struct BP_MasterInventory_C_AllItems final
{
public:
	TArray<struct FS_InvSlot>                     RootSlots;                                         // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     RootSlotsL;                                        // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvSlot                             SlotL;                                             // 0x0020(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CE[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0088(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x00B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47CF[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AllItems) == 0x000008, "Wrong alignment on BP_MasterInventory_C_AllItems");
static_assert(sizeof(BP_MasterInventory_C_AllItems) == 0x000118, "Wrong size on BP_MasterInventory_C_AllItems");
static_assert(offsetof(BP_MasterInventory_C_AllItems, RootSlots) == 0x000000, "Member 'BP_MasterInventory_C_AllItems::RootSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, RootSlotsL) == 0x000010, "Member 'BP_MasterInventory_C_AllItems::RootSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, SlotL) == 0x000020, "Member 'BP_MasterInventory_C_AllItems::SlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_MasterInventory_C_AllItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000074, "Member 'BP_MasterInventory_C_AllItems::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000078, "Member 'BP_MasterInventory_C_AllItems::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_MasterInventory_C_AllItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Array_AddUnique_ReturnValue) == 0x000084, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_SGK_InvSlotItem_InvItem) == 0x000088, "Member 'BP_MasterInventory_C_AllItems::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Greater_IntInt_ReturnValue) == 0x000108, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Array_Length_ReturnValue) == 0x00010C, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AllItems, CallFunc_Less_IntInt_ReturnValue) == 0x000110, "Member 'BP_MasterInventory_C_AllItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AttemptToAddItemAmount
// 0x0A00 (0x0A00 - 0x0000)
struct BP_MasterInventory_C_AttemptToAddItemAmount final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         AddAmount;                                         // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Remainder;                                         // 0x0054(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D0[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RemainderAmount;                                   // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemainderL;                                        // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D1[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CanAddAmountL;                                     // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemAmountL;                                       // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxStackL;                                         // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D2[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x0070(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D3[0x6];                                     // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x00C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D4[0x4];                                     // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0128(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D5[0x2];                                     // 0x015E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0160(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x09F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AttemptToAddItemAmount) == 0x000010, "Wrong alignment on BP_MasterInventory_C_AttemptToAddItemAmount");
static_assert(sizeof(BP_MasterInventory_C_AttemptToAddItemAmount) == 0x000A00, "Wrong size on BP_MasterInventory_C_AttemptToAddItemAmount");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, AddAmount) == 0x000050, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::AddAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, Remainder) == 0x000054, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::Remainder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, RemainderAmount) == 0x000058, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::RemainderAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, RemainderL) == 0x00005C, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::RemainderL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CanAddAmountL) == 0x000060, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CanAddAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, ItemAmountL) == 0x000064, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::ItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, MaxStackL) == 0x000068, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::MaxStackL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, InvSlotL) == 0x000070, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, Temp_bool_Variable) == 0x0000C0, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0000C1, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0000C8, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000118, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00011C, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_SGK_InvSlotItem_InvItem) == 0x000128, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000158, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00015C, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_SGK_ItemDetails_ItemFound) == 0x00015D, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000160, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, K2Node_Select_Default) == 0x0009F0, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddItemAmount, CallFunc_Not_PreBool_ReturnValue) == 0x0009F4, "Member 'BP_MasterInventory_C_AttemptToAddItemAmount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.AttemptToAddWeight
// 0x1180 (0x1180 - 0x0000)
struct BP_MasterInventory_C_AttemptToAddWeight final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAllWeight;                                      // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckOnly;                                         // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0036(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D6[0x9];                                     // 0x0037(0x0009)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D7[0xF];                                     // 0x08D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x08E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D8[0x3];                                     // 0x1171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x1174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_AttemptToAddWeight) == 0x000010, "Wrong alignment on BP_MasterInventory_C_AttemptToAddWeight");
static_assert(sizeof(BP_MasterInventory_C_AttemptToAddWeight) == 0x001180, "Wrong size on BP_MasterInventory_C_AttemptToAddWeight");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, Item) == 0x000000, "Member 'BP_MasterInventory_C_AttemptToAddWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, Amount) == 0x000030, "Member 'BP_MasterInventory_C_AttemptToAddWeight::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, UseAllWeight) == 0x000034, "Member 'BP_MasterInventory_C_AttemptToAddWeight::UseAllWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CheckOnly) == 0x000035, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CheckOnly' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, ReturnValue) == 0x000036, "Member 'BP_MasterInventory_C_AttemptToAddWeight::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, ItemDetailsL) == 0x000040, "Member 'BP_MasterInventory_C_AttemptToAddWeight::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CallFunc_SGK_ItemDetails_ItemFound) == 0x0008D0, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0008E0, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x001170, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CallFunc_SelectInt_ReturnValue) == 0x001174, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_AttemptToAddWeight, CallFunc_Multiply_IntFloat_ReturnValue) == 0x001178, "Member 'BP_MasterInventory_C_AttemptToAddWeight::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CancelCraftingRecipe
// 0x0070 (0x0070 - 0x0000)
struct BP_MasterInventory_C_CancelCraftingRecipe final
{
public:
	struct FS_CraftingQueue                       CraftingListing;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CancelCraftingListingL;                            // 0x0014(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCraftingListing_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D9[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingQueue                       CallFunc_FindCraftingListing_CraftingListing;      // 0x002C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue;                 // 0x0040(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_1;               // 0x0054(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CancelCraftingRecipe) == 0x000004, "Wrong alignment on BP_MasterInventory_C_CancelCraftingRecipe");
static_assert(sizeof(BP_MasterInventory_C_CancelCraftingRecipe) == 0x000070, "Wrong size on BP_MasterInventory_C_CancelCraftingRecipe");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CraftingListing) == 0x000000, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CancelCraftingListingL) == 0x000014, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CancelCraftingListingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_FindCraftingListing_ReturnValue) == 0x000028, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_FindCraftingListing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_FindCraftingListing_CraftingListing) == 0x00002C, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_FindCraftingListing_CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, K2Node_MakeStruct_S_CraftingQueue) == 0x000040, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::K2Node_MakeStruct_S_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, K2Node_MakeStruct_S_CraftingQueue_1) == 0x000054, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::K2Node_MakeStruct_S_CraftingQueue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_Greater_IntInt_ReturnValue) == 0x00006C, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00006D, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CancelCraftingRecipe, CallFunc_Array_RemoveItem_ReturnValue) == 0x00006E, "Member 'BP_MasterInventory_C_CancelCraftingRecipe::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ChangeItemCount
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_ChangeItemCount final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Add;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DA[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ChangeItemCount) == 0x000004, "Wrong alignment on BP_MasterInventory_C_ChangeItemCount");
static_assert(sizeof(BP_MasterInventory_C_ChangeItemCount) == 0x000010, "Wrong size on BP_MasterInventory_C_ChangeItemCount");
static_assert(offsetof(BP_MasterInventory_C_ChangeItemCount, Amount) == 0x000000, "Member 'BP_MasterInventory_C_ChangeItemCount::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ChangeItemCount, Add) == 0x000004, "Member 'BP_MasterInventory_C_ChangeItemCount::Add' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ChangeItemCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000005, "Member 'BP_MasterInventory_C_ChangeItemCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ChangeItemCount, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_ChangeItemCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ChangeItemCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterInventory_C_ChangeItemCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CheckCraftingRequirements
// 0x000C (0x000C - 0x0000)
struct BP_MasterInventory_C_CheckCraftingRequirements final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CheckCraftingRequirements) == 0x000004, "Wrong alignment on BP_MasterInventory_C_CheckCraftingRequirements");
static_assert(sizeof(BP_MasterInventory_C_CheckCraftingRequirements) == 0x00000C, "Wrong size on BP_MasterInventory_C_CheckCraftingRequirements");
static_assert(offsetof(BP_MasterInventory_C_CheckCraftingRequirements, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_CheckCraftingRequirements::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckCraftingRequirements, Amount) == 0x000008, "Member 'BP_MasterInventory_C_CheckCraftingRequirements::Amount' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CheckFreeSlotCount
// 0x0078 (0x0078 - 0x0000)
struct BP_MasterInventory_C_CheckFreeSlotCount final
{
public:
	int32                                         FreeSlots;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FreeSlotsL;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DB[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0020(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CheckFreeSlotCount) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CheckFreeSlotCount");
static_assert(sizeof(BP_MasterInventory_C_CheckFreeSlotCount) == 0x000078, "Wrong size on BP_MasterInventory_C_CheckFreeSlotCount");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, FreeSlots) == 0x000000, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::FreeSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, FreeSlotsL) == 0x000004, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::FreeSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckFreeSlotCount, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000071, "Member 'BP_MasterInventory_C_CheckFreeSlotCount::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CheckRecipeCost
// 0x0460 (0x0460 - 0x0000)
struct BP_MasterInventory_C_CheckRecipeCost final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveItems;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanCraft;                                          // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DC[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      RecipeL;                                           // 0x0010(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FS_CraftingCost>                RemoveItemsL;                                      // 0x0120(0x0010)(Edit, BlueprintVisible)
	struct FS_CraftingRecipe                      RecipeDetailsL;                                    // 0x0130(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x0244(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DD[0x3];                                     // 0x0245(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x0248(0x0110)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DE[0x4];                                     // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x0368(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0384(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47DF[0x3];                                     // 0x0385(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0388(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SearchForItem_ItemFound;                  // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E0[0x3];                                     // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchForItem_InvSlot;                    // 0x03A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SearchForItem_ItemFound_1;                // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E1[0x7];                                     // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SearchForItem_InvSlot_1;                  // 0x0400(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E2[0x3];                                     // 0x0459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CheckRecipeCost) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CheckRecipeCost");
static_assert(sizeof(BP_MasterInventory_C_CheckRecipeCost) == 0x000460, "Wrong size on BP_MasterInventory_C_CheckRecipeCost");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_CheckRecipeCost::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Amount) == 0x000008, "Member 'BP_MasterInventory_C_CheckRecipeCost::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, RemoveItems) == 0x00000C, "Member 'BP_MasterInventory_C_CheckRecipeCost::RemoveItems' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CanCraft) == 0x00000D, "Member 'BP_MasterInventory_C_CheckRecipeCost::CanCraft' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, RecipeL) == 0x000010, "Member 'BP_MasterInventory_C_CheckRecipeCost::RecipeL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, RemoveItemsL) == 0x000120, "Member 'BP_MasterInventory_C_CheckRecipeCost::RemoveItemsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, RecipeDetailsL) == 0x000130, "Member 'BP_MasterInventory_C_CheckRecipeCost::RecipeDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Temp_int_Array_Index_Variable) == 0x000240, "Member 'BP_MasterInventory_C_CheckRecipeCost::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x000244, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x000248, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Temp_int_Loop_Counter_Variable) == 0x000358, "Member 'BP_MasterInventory_C_CheckRecipeCost::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Add_IntInt_ReturnValue) == 0x00035C, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Temp_int_Array_Index_Variable_1) == 0x000360, "Member 'BP_MasterInventory_C_CheckRecipeCost::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Array_Get_Item) == 0x000368, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Array_Length_ReturnValue) == 0x000380, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Less_IntInt_ReturnValue) == 0x000384, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Array_Get_Item_1) == 0x000388, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Multiply_IntInt_ReturnValue) == 0x0003A0, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SearchForItem_ItemFound) == 0x0003A4, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SearchForItem_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SearchForItem_InvSlot) == 0x0003A8, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SearchForItem_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SearchForItem_ItemFound_1) == 0x0003F8, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SearchForItem_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_SearchForItem_InvSlot_1) == 0x000400, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_SearchForItem_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Array_Length_ReturnValue_1) == 0x000450, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, Temp_int_Loop_Counter_Variable_1) == 0x000454, "Member 'BP_MasterInventory_C_CheckRecipeCost::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Less_IntInt_ReturnValue_1) == 0x000458, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CheckRecipeCost, CallFunc_Add_IntInt_ReturnValue_1) == 0x00045C, "Member 'BP_MasterInventory_C_CheckRecipeCost::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ClearInventory
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterInventory_C_ClearInventory final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E3[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ClearInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ClearInventory");
static_assert(sizeof(BP_MasterInventory_C_ClearInventory) == 0x000020, "Wrong size on BP_MasterInventory_C_ClearInventory");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterInventory_C_ClearInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterInventory_C_ClearInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_MasterInventory_C_ClearInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_ClearInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, CallFunc_IsValid_ReturnValue) == 0x000014, "Member 'BP_MasterInventory_C_ClearInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000015, "Member 'BP_MasterInventory_C_ClearInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_ClearInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ClearInventoryItems
// 0x0150 (0x0150 - 0x0000)
struct BP_MasterInventory_C_ClearInventoryItems final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InventoryGridDetails_FoundGrid;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E4[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomGridLayoutData                CallFunc_SGK_InventoryGridDetails_InventoryGridData; // 0x0020(0x0020)(HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0040(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_SetFieldsInStruct_StructOut;                // 0x0090(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ManualIndexs                        CallFunc_Array_Get_Item_1;                         // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x00F0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E5[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ClearInventoryItems) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ClearInventoryItems");
static_assert(sizeof(BP_MasterInventory_C_ClearInventoryItems) == 0x000150, "Wrong size on BP_MasterInventory_C_ClearInventoryItems");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterInventory_C_ClearInventoryItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterInventory_C_ClearInventoryItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_MasterInventory_C_ClearInventoryItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_MasterInventory_C_ClearInventoryItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_SGK_InventoryGridDetails_FoundGrid) == 0x000018, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_SGK_InventoryGridDetails_FoundGrid' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_SGK_InventoryGridDetails_InventoryGridData) == 0x000020, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_SGK_InventoryGridDetails_InventoryGridData' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, K2Node_SetFieldsInStruct_StructOut) == 0x000090, "Member 'BP_MasterInventory_C_ClearInventoryItems::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Array_Get_Item_1) == 0x0000E0, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Array_Length_ReturnValue) == 0x0000EC, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, K2Node_MakeStruct_S_InvSlot) == 0x0000F0, "Member 'BP_MasterInventory_C_ClearInventoryItems::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Array_Length_ReturnValue_1) == 0x000144, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ClearInventoryItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_MasterInventory_C_ClearInventoryItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ClientUpdateInventory
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_ClientUpdateInventory final
{
public:
	TArray<struct FS_InvSlot>                     Param_Inventory;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterInventory_C_ClientUpdateInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ClientUpdateInventory");
static_assert(sizeof(BP_MasterInventory_C_ClientUpdateInventory) == 0x000010, "Wrong size on BP_MasterInventory_C_ClientUpdateInventory");
static_assert(offsetof(BP_MasterInventory_C_ClientUpdateInventory, Param_Inventory) == 0x000000, "Member 'BP_MasterInventory_C_ClientUpdateInventory::Param_Inventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CloseOtherPlayerTabs
// 0x0028 (0x0028 - 0x0000)
struct BP_MasterInventory_C_CloseOtherPlayerTabs final
{
public:
	class UBP_PlayerInventory_C*                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CloseOtherPlayerTabs) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CloseOtherPlayerTabs");
static_assert(sizeof(BP_MasterInventory_C_CloseOtherPlayerTabs) == 0x000028, "Wrong size on BP_MasterInventory_C_CloseOtherPlayerTabs");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, Player) == 0x000000, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::Player' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CloseOtherPlayerTabs, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'BP_MasterInventory_C_CloseOtherPlayerTabs::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ConstructItemSpawnList
// 0x0190 (0x0190 - 0x0000)
struct BP_MasterInventory_C_ConstructItemSpawnList final
{
public:
	TArray<struct FS_SpawnerList>                 SpawnList;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FS_SpawnerList>                 ItemSpawnList;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	struct FS_SpawnerList                         SpawnerListEntryL;                                 // 0x0020(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E6[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SpawnerList                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x0070)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E7[0x6];                                     // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<E_RecipeCategory>                        CallFunc_Set_Intersection_Result;                  // 0x0138(0x0050)()
	int32                                         CallFunc_Set_Length_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ConstructItemSpawnList) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ConstructItemSpawnList");
static_assert(sizeof(BP_MasterInventory_C_ConstructItemSpawnList) == 0x000190, "Wrong size on BP_MasterInventory_C_ConstructItemSpawnList");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, SpawnList) == 0x000000, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::SpawnList' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, ItemSpawnList) == 0x000010, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::ItemSpawnList' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, SpawnerListEntryL) == 0x000020, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::SpawnerListEntryL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_GetDataTableRowNames_OutRowNames) == 0x0000A0, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Array_Add_ReturnValue) == 0x0000B0, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Array_Get_Item) == 0x0000B4, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000130, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Less_IntInt_ReturnValue) == 0x000131, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Set_Intersection_Result) == 0x000138, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Set_Intersection_Result' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Set_Length_ReturnValue) == 0x000188, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Set_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructItemSpawnList, CallFunc_Greater_IntInt_ReturnValue) == 0x00018C, "Member 'BP_MasterInventory_C_ConstructItemSpawnList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ConstructSlots
// 0x0AF0 (0x0AF0 - 0x0000)
struct BP_MasterInventory_C_ConstructSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0018(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0048(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetItemRangeClass_ReturnValue;        // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E8[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_SGK_GetItemRangeClass_RangeWeapon;        // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0088(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47E9[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00C0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0950(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_SetFieldsInStruct_StructOut;                // 0x09A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x09FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x09FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EA[0x2];                                     // 0x09FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InventoryGridDetails_FoundGrid;       // 0x0A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EB[0x3];                                     // 0x0A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CustomGridLayoutData                CallFunc_SGK_InventoryGridDetails_InventoryGridData; // 0x0A08(0x0020)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0A2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EC[0x3];                                     // 0x0A2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ManualIndexs                        CallFunc_Array_Get_Item_1;                         // 0x0A30(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x0A40(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47ED[0x7];                                     // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x0A98(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ConstructSlots) == 0x000010, "Wrong alignment on BP_MasterInventory_C_ConstructSlots");
static_assert(sizeof(BP_MasterInventory_C_ConstructSlots) == 0x000AF0, "Wrong size on BP_MasterInventory_C_ConstructSlots");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterInventory_C_ConstructSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterInventory_C_ConstructSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_MasterInventory_C_ConstructSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, Temp_int_Variable) == 0x000010, "Member 'BP_MasterInventory_C_ConstructSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, K2Node_MakeStruct_S_InvItem) == 0x000018, "Member 'BP_MasterInventory_C_ConstructSlots::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_SelfItem_SelfItem) == 0x000048, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_GetItemRangeClass_ReturnValue) == 0x000078, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_GetItemRangeClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_GetItemRangeClass_RangeWeapon) == 0x000080, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_GetItemRangeClass_RangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, K2Node_MakeStruct_S_InvItem_1) == 0x000088, "Member 'BP_MasterInventory_C_ConstructSlots::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000B8, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000C0, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Array_Get_Item) == 0x000950, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, K2Node_SetFieldsInStruct_StructOut) == 0x0009A0, "Member 'BP_MasterInventory_C_ConstructSlots::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Array_Length_ReturnValue) == 0x0009F0, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, Temp_int_Loop_Counter_Variable_1) == 0x0009F4, "Member 'BP_MasterInventory_C_ConstructSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Array_Length_ReturnValue_1) == 0x0009F8, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0009FC, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0009FD, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000A00, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_InventoryGridDetails_FoundGrid) == 0x000A04, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_InventoryGridDetails_FoundGrid' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_SGK_InventoryGridDetails_InventoryGridData) == 0x000A08, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_SGK_InventoryGridDetails_InventoryGridData' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000A28, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000A2C, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Array_Get_Item_1) == 0x000A30, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Array_Length_ReturnValue_2) == 0x000A3C, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, K2Node_MakeStruct_S_InvSlot) == 0x000A40, "Member 'BP_MasterInventory_C_ConstructSlots::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A90, "Member 'BP_MasterInventory_C_ConstructSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ConstructSlots, K2Node_MakeStruct_S_InvSlot_1) == 0x000A98, "Member 'BP_MasterInventory_C_ConstructSlots::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ContainerRestrictionCheck
// 0x0118 (0x0118 - 0x0000)
struct BP_MasterInventory_C_ContainerRestrictionCheck final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Can_Add;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EE[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47EF[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0020(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F0[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails; // 0x0058(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F1[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_InventoryRestrictionType                    K2Node_Select_Default;                             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F2[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F3[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x00E0(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F4[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F5[0x4];                                     // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item_1;                         // 0x0100(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ContainerRestrictionCheck) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ContainerRestrictionCheck");
static_assert(sizeof(BP_MasterInventory_C_ContainerRestrictionCheck) == 0x000118, "Wrong size on BP_MasterInventory_C_ContainerRestrictionCheck");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, ItemId) == 0x000000, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::ItemId' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Can_Add) == 0x000008, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Can_Add' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_SGK_SelfItem_SelfItem) == 0x000020, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_SGK_ItemContainerDetails_ItemFound) == 0x000050, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_SGK_ItemContainerDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails) == 0x000058, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Temp_bool_Variable) == 0x0000C8, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, Temp_int_Loop_Counter_Variable_1) == 0x0000CC, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, K2Node_Select_Default) == 0x0000D0, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, K2Node_SwitchEnum_CmpSuccess) == 0x0000D8, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000F5, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0000F8, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_Less_IntInt_ReturnValue_1) == 0x000110, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ContainerRestrictionCheck, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000111, "Member 'BP_MasterInventory_C_ContainerRestrictionCheck::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CraftingError
// 0x0080 (0x0080 - 0x0000)
struct BP_MasterInventory_C_CraftingError final
{
public:
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0000(0x0038)(HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue;                 // 0x0038(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCraftingListing_ReturnValue;          // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F6[0x2];                                     // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingQueue                       CallFunc_FindCraftingListing_CraftingListing;      // 0x0054(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_1;               // 0x0068(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CraftingError) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CraftingError");
static_assert(sizeof(BP_MasterInventory_C_CraftingError) == 0x000080, "Wrong size on BP_MasterInventory_C_CraftingError");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, K2Node_MakeStruct_S_NotificationDetails) == 0x000000, "Member 'BP_MasterInventory_C_CraftingError::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, K2Node_MakeStruct_S_CraftingQueue) == 0x000038, "Member 'BP_MasterInventory_C_CraftingError::K2Node_MakeStruct_S_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_MasterInventory_C_CraftingError::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'BP_MasterInventory_C_CraftingError::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, CallFunc_FindCraftingListing_ReturnValue) == 0x000051, "Member 'BP_MasterInventory_C_CraftingError::CallFunc_FindCraftingListing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, CallFunc_FindCraftingListing_CraftingListing) == 0x000054, "Member 'BP_MasterInventory_C_CraftingError::CallFunc_FindCraftingListing_CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftingError, K2Node_MakeStruct_S_CraftingQueue_1) == 0x000068, "Member 'BP_MasterInventory_C_CraftingError::K2Node_MakeStruct_S_CraftingQueue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CraftItem
// 0x0620 (0x0620 - 0x0000)
struct BP_MasterInventory_C_CraftItem final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F7[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             RemainingInvItemL;                                 // 0x0010(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingRecipe                      CraftingRecipeL;                                   // 0x0040(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F8[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x0158(0x0110)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47F9[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FA[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItem_RemainingItem;           // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FB[0x6];                                     // 0x0282(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AttemptToAddItem_RemainingInvItem;        // 0x0288(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AttemptToAddItem_NewItemSlot;             // 0x02B8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FC[0xF];                                     // 0x02F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0300(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x03A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCraftingListing_ReturnValue;          // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FD[0x3];                                     // 0x0451(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingQueue                       CallFunc_FindCraftingListing_CraftingListing;      // 0x0454(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x0468(0x0018)(NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0480(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FE[0x4];                                     // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x04A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47FF[0x7];                                     // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4800[0x7];                                     // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4801[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x04E0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4802[0x7];                                     // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0518(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0548(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue;                 // 0x0558(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item_2;                         // 0x056C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item_3;                         // 0x0580(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_1;               // 0x0594(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x05A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x05AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4803[0x3];                                     // 0x05AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x05B0(0x0038)(HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x05E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_2;               // 0x05EC(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_3;               // 0x0600(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRecipeCost_CanCraft;                 // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CraftItem) == 0x000010, "Wrong alignment on BP_MasterInventory_C_CraftItem");
static_assert(sizeof(BP_MasterInventory_C_CraftItem) == 0x000620, "Wrong size on BP_MasterInventory_C_CraftItem");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_CraftItem::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, Amount) == 0x000008, "Member 'BP_MasterInventory_C_CraftItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, RemainingInvItemL) == 0x000010, "Member 'BP_MasterInventory_C_CraftItem::RemainingInvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CraftingRecipeL) == 0x000040, "Member 'BP_MasterInventory_C_CraftItem::CraftingRecipeL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x000150, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x000158, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x000268, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, Temp_int_Array_Index_Variable) == 0x000270, "Member 'BP_MasterInventory_C_CraftItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000278, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AttemptToAddItem_RemainingItem) == 0x000281, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AttemptToAddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AttemptToAddItem_RemainingInvItem) == 0x000288, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AttemptToAddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AttemptToAddItem_NewItemSlot) == 0x0002B8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AttemptToAddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, Temp_int_Loop_Counter_Variable) == 0x0002C8, "Member 'BP_MasterInventory_C_CraftItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Add_IntInt_ReturnValue) == 0x0002CC, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_GetOwner_ReturnValue) == 0x0002D0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_GetOwner_ReturnValue_1) == 0x0002D8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x0002E0, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_bSuccess_1) == 0x0002F0, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_GetTransform_ReturnValue) == 0x000300, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_BreakTransform_Location) == 0x000360, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_BreakTransform_Rotation) == 0x000378, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_BreakTransform_Scale) == 0x000390, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0003A8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0003C0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Add_VectorVector_ReturnValue) == 0x0003D8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_MakeTransform_ReturnValue) == 0x0003F0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_FindCraftingListing_ReturnValue) == 0x000450, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_FindCraftingListing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_FindCraftingListing_CraftingListing) == 0x000454, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_FindCraftingListing_CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Get_Item) == 0x000468, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Get_Item_1) == 0x000480, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Length_ReturnValue) == 0x000498, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_GetGameMode_ReturnValue) == 0x0004A0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Less_IntInt_ReturnValue) == 0x0004A8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0004B0, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_DynamicCast_bSuccess_2) == 0x0004C0, "Member 'BP_MasterInventory_C_CraftItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0004C8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_GetOwner_ReturnValue_2) == 0x0004D0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_DoesImplementInterface_ReturnValue) == 0x0004D8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_CreateNewItem_NewItem) == 0x0004E0, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AddItem_RemainingItem) == 0x000510, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AddItem_RemainingInvItem) == 0x000518, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_AddItem_NewItemSlot) == 0x000548, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_MakeStruct_S_CraftingQueue) == 0x000558, "Member 'BP_MasterInventory_C_CraftItem::K2Node_MakeStruct_S_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Get_Item_2) == 0x00056C, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Get_Item_3) == 0x000580, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_MakeStruct_S_CraftingQueue_1) == 0x000594, "Member 'BP_MasterInventory_C_CraftItem::K2Node_MakeStruct_S_CraftingQueue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Array_Length_ReturnValue_1) == 0x0005A8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0005AC, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_MakeStruct_S_NotificationDetails) == 0x0005B0, "Member 'BP_MasterInventory_C_CraftItem::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0005E8, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_MakeStruct_S_CraftingQueue_2) == 0x0005EC, "Member 'BP_MasterInventory_C_CraftItem::K2Node_MakeStruct_S_CraftingQueue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, K2Node_MakeStruct_S_CraftingQueue_3) == 0x000600, "Member 'BP_MasterInventory_C_CraftItem::K2Node_MakeStruct_S_CraftingQueue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CraftItem, CallFunc_CheckRecipeCost_CanCraft) == 0x000614, "Member 'BP_MasterInventory_C_CraftItem::CallFunc_CheckRecipeCost_CanCraft' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CreateNewCraftingListing
// 0x02A0 (0x02A0 - 0x0000)
struct BP_MasterInventory_C_CreateNewCraftingListing final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       Output;                                            // 0x000C(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingRecipe                      RecipeL;                                           // 0x0020(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         NewIndexL;                                         // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4804[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x0138(0x0110)(HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item;                           // 0x0248(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item_1;                         // 0x025C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue;                 // 0x0270(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue_1;               // 0x0284(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CreateNewCraftingListing) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CreateNewCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_CreateNewCraftingListing) == 0x0002A0, "Wrong size on BP_MasterInventory_C_CreateNewCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, Amount) == 0x000008, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, Output) == 0x00000C, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::Output' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, RecipeL) == 0x000020, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::RecipeL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, NewIndexL) == 0x000130, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::NewIndexL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x000134, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x000138, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, CallFunc_Array_Get_Item) == 0x000248, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, CallFunc_Array_Get_Item_1) == 0x00025C, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, K2Node_MakeStruct_S_CraftingQueue) == 0x000270, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::K2Node_MakeStruct_S_CraftingQueue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, K2Node_MakeStruct_S_CraftingQueue_1) == 0x000284, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::K2Node_MakeStruct_S_CraftingQueue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_CreateNewCraftingListing, CallFunc_Array_Add_ReturnValue) == 0x000298, "Member 'BP_MasterInventory_C_CreateNewCraftingListing::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.CreateNotificationInChild
// 0x0038 (0x0038 - 0x0000)
struct BP_MasterInventory_C_CreateNotificationInChild final
{
public:
	struct FS_NotificationDetails                 NotificationDetails;                               // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_CreateNotificationInChild) == 0x000008, "Wrong alignment on BP_MasterInventory_C_CreateNotificationInChild");
static_assert(sizeof(BP_MasterInventory_C_CreateNotificationInChild) == 0x000038, "Wrong size on BP_MasterInventory_C_CreateNotificationInChild");
static_assert(offsetof(BP_MasterInventory_C_CreateNotificationInChild, NotificationDetails) == 0x000000, "Member 'BP_MasterInventory_C_CreateNotificationInChild::NotificationDetails' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.DecreaseItemDurability
// 0x0B10 (0x0B10 - 0x0000)
struct BP_MasterInventory_C_DecreaseItemDurability final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        DecreaseAmount;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             NewInvItemL;                                       // 0x0058(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4805[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0090(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0920(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0970(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0980(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0998(0x0038)(HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x09D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4806[0x7];                                     // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x0A08(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4807[0x3];                                     // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0A60(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_1;        // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4808[0x7];                                     // 0x0A91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_1; // 0x0A98(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4809[0x7];                                     // 0x0AE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast; // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_DecreaseItemDurability) == 0x000010, "Wrong alignment on BP_MasterInventory_C_DecreaseItemDurability");
static_assert(sizeof(BP_MasterInventory_C_DecreaseItemDurability) == 0x000B10, "Wrong size on BP_MasterInventory_C_DecreaseItemDurability");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_DecreaseItemDurability::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, DecreaseAmount) == 0x000050, "Member 'BP_MasterInventory_C_DecreaseItemDurability::DecreaseAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, NewInvItemL) == 0x000058, "Member 'BP_MasterInventory_C_DecreaseItemDurability::NewInvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000089, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_ItemDetails_ItemFound) == 0x00008A, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000090, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, K2Node_MakeStruct_FormatArgumentData) == 0x000920, "Member 'BP_MasterInventory_C_DecreaseItemDurability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, K2Node_MakeArray_Array) == 0x000970, "Member 'BP_MasterInventory_C_DecreaseItemDurability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_Format_ReturnValue) == 0x000980, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, K2Node_MakeStruct_S_NotificationDetails) == 0x000998, "Member 'BP_MasterInventory_C_DecreaseItemDurability::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_InvSlotItem_InvItem) == 0x0009D0, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x000A00, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x000A08, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000A58, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_InvSlotAmount_Amount) == 0x000A5C, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000A60, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_DurabilityDetails_ItemFound_1) == 0x000A90, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_DurabilityDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails_1) == 0x000A98, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_IsValid_ReturnValue) == 0x000AE8, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000AF0, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000AF8, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000B00, "Member 'BP_MasterInventory_C_DecreaseItemDurability::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseItemDurability, K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast) == 0x000B08, "Member 'BP_MasterInventory_C_DecreaseItemDurability::K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.DecreaseWeaponDurability
// 0x0B70 (0x0B70 - 0x0000)
struct BP_MasterInventory_C_DecreaseWeaponDurability final
{
public:
	struct FS_WeaponSlot                          WeaponSlot;                                        // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        DecreaseAmount;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             NewInvItemL;                                       // 0x0058(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480A[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0090(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x00A0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480B[0x6];                                     // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x00C0(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480C[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0118(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480D[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_1; // 0x0170(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480E[0xF];                                     // 0x01C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x01D0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_480F[0x7];                                     // 0x0A61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0A68(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0AB8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0AC8(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0AE0(0x0038)(HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0B18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0B20(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast; // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_DecreaseWeaponDurability) == 0x000010, "Wrong alignment on BP_MasterInventory_C_DecreaseWeaponDurability");
static_assert(sizeof(BP_MasterInventory_C_DecreaseWeaponDurability) == 0x000B70, "Wrong size on BP_MasterInventory_C_DecreaseWeaponDurability");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, WeaponSlot) == 0x000000, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, DecreaseAmount) == 0x000050, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::DecreaseAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, NewInvItemL) == 0x000058, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::NewInvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000089, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_MakeStruct_S_WeaponSlotID) == 0x000090, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x0000A0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x0000B0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x0000B9, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x0000C0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000118, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_DurabilityDetails_ItemFound_1) == 0x000168, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_DurabilityDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails_1) == 0x000170, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_ItemDetails_ItemFound) == 0x0001C0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0001D0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_Greater_IntInt_ReturnValue) == 0x000A60, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_MakeStruct_FormatArgumentData) == 0x000A68, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_MakeArray_Array) == 0x000AB8, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_Format_ReturnValue) == 0x000AC8, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_MakeStruct_S_NotificationDetails) == 0x000AE0, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000B18, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_SetFieldsInStruct_StructOut) == 0x000B20, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000B50, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000B58, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DecreaseWeaponDurability, K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast) == 0x000B60, "Member 'BP_MasterInventory_C_DecreaseWeaponDurability::K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.DestroyContainingInventories
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MasterInventory_C_DestroyContainingInventories final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4810[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4811[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4812[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0040(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4813[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_DestroyContainingInventories) == 0x000008, "Wrong alignment on BP_MasterInventory_C_DestroyContainingInventories");
static_assert(sizeof(BP_MasterInventory_C_DestroyContainingInventories) == 0x0000A0, "Wrong size on BP_MasterInventory_C_DestroyContainingInventories");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'BP_MasterInventory_C_DestroyContainingInventories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_MasterInventory_C_DestroyContainingInventories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000018, "Member 'BP_MasterInventory_C_DestroyContainingInventories::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_MasterInventory_C_DestroyContainingInventories::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000030, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000092, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000094, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_DestroyContainingInventories, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'BP_MasterInventory_C_DestroyContainingInventories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.EmptyInventory
// 0x0150 (0x0150 - 0x0000)
struct BP_MasterInventory_C_EmptyInventory final
{
public:
	bool                                          DestroyItems;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4814[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  NewItemInventory;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             RemainingItemL;                                    // 0x0010(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ItemElementL;                                      // 0x0040(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4815[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4816[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x00B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4817[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0108(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0138(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_EmptyInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_EmptyInventory");
static_assert(sizeof(BP_MasterInventory_C_EmptyInventory) == 0x000150, "Wrong size on BP_MasterInventory_C_EmptyInventory");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, DestroyItems) == 0x000000, "Member 'BP_MasterInventory_C_EmptyInventory::DestroyItems' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, NewItemInventory) == 0x000008, "Member 'BP_MasterInventory_C_EmptyInventory::NewItemInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, RemainingItemL) == 0x000010, "Member 'BP_MasterInventory_C_EmptyInventory::RemainingItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, ItemElementL) == 0x000040, "Member 'BP_MasterInventory_C_EmptyInventory::ItemElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_MasterInventory_C_EmptyInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'BP_MasterInventory_C_EmptyInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x00009C, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0000A0, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0000A4, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_IsValid_ReturnValue) == 0x0000A8, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A9, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_AddItem_RemainingItem) == 0x000100, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_AddItem_RemainingInvItem) == 0x000108, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_AddItem_NewItemSlot) == 0x000138, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_Array_Length_ReturnValue) == 0x000148, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_EmptyInventory, CallFunc_Less_IntInt_ReturnValue) == 0x00014C, "Member 'BP_MasterInventory_C_EmptyInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ExecuteUbergraph_BP_MasterInventory
// 0x2B80 (0x2B80 - 0x0000)
struct BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4818[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_CustomEvent_Item;                           // 0x0008(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4819[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0040(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0070(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481A[0x3];                                     // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481B[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481C[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentType                              K2Node_Event_Attachment;                           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481D[0x2];                                     // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_Event_InvItem;                              // 0x00F0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_Event_InvSlot_1;                            // 0x0120(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_Event_InvSlot;                              // 0x0170(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ItemID;                               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      K2Node_Event_SoundType;                            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481E[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Pawn;                                 // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481F[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4820[0x2];                                     // 0x01EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4821[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x0200(0x0038)(HasGetValueTypeHash)
	bool                                          CallFunc_FindCraftingListing_ReturnValue;          // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4822[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingQueue                       CallFunc_FindCraftingListing_CraftingListing;      // 0x023C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RequiredActorCraftingCheck_ReturnValue;   // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4823[0x7];                                     // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0258(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_CancelQueue;                    // 0x0260(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_NewQueueListing_1;              // 0x0274(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_2;            // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4824[0x3];                                     // 0x0295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_CraftingRecipe;                 // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory_1;            // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_CustomEvent_NewQueueListing;                // 0x02AC(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_CraftingInventory;              // 0x02C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Recipe_1;                       // 0x02CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_2;                       // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_CreateNewCraftingListing_Output;          // 0x02D8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_UpdateCraftingListing_Output;             // 0x02F0(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4825[0x4];                                     // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails_1;         // 0x0308(0x0038)(HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Recipe;                         // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount_1;                       // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckRecipeCost_CanCraft;                 // 0x0350(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4826[0x3];                                     // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_RecipeName;                     // 0x0354(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Amount;                         // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4827[0x3];                                     // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_SGKSaveGame_C* SaveGame)> K2Node_CreateDelegate_OutputDelegate;              // 0x0364(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4828[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0380(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4829[0x2];                                     // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x038C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0390(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482A[0x5];                                     // 0x03A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x03B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482B[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_2;                         // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482C[0x3];                                     // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x03E8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x0418(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482D[0x7];                                     // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0470(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482E[0xF];                                     // 0x0D01(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0D10(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x15A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x15A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x15A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x15A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_482F[0x4];                                     // 0x15A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x15A8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x15B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4830[0x3];                                     // 0x15B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x15BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x15C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x15C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x15C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4831[0x2];                                     // 0x15C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_4;                         // 0x15C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_5;                         // 0x15D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_6;                         // 0x15D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x15E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x15E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x15E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x15E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4832[0x2];                                     // 0x15EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x15EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x15F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4833[0x7];                                     // 0x15F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem_1;                  // 0x15F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_7;                         // 0x1628(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x1678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4834[0x7];                                     // 0x1679(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x1680(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_3;              // 0x1F10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4835[0xF];                                     // 0x1F11(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_3;            // 0x1F20(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x27B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x27B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x27B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x27B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4836[0x4];                                     // 0x27B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID_1;                   // 0x27B8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x27C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4837[0x3];                                     // 0x27C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x27CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x27D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4838[0x4];                                     // 0x27D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x27D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterBuildPart_C*                  K2Node_DynamicCast_AsBP_Master_Build_Part;         // 0x27E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x27E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4839[0x3];                                     // 0x27E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x27EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x27F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483A[0x7];                                     // 0x27F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_8;                         // 0x27F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x2800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483B[0x3];                                     // 0x2801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x2804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_1;             // 0x2808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x2810(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483C[0x3];                                     // 0x2811(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x2814(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x2824(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x2825(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483D[0x2];                                     // 0x2826(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x2828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x2830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x2838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddStartingItems_Return;                  // 0x2840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483E[0x7];                                     // 0x2841(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x2848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_2;                // 0x2850(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue_2;             // 0x2858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x2860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x2861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_483F[0x6];                                     // 0x2862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               K2Node_DynamicCast_AsBP_Equipment_Inventory;       // 0x2868(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x2870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4840[0x7];                                     // 0x2871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_9;                         // 0x2878(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x2880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x2884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x2888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4841[0x7];                                     // 0x2889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_NotificationDetails                 K2Node_CustomEvent_NotificationDetails;            // 0x2890(0x0038)(HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_10;                        // 0x28C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x28D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x28D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x28D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x28D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4842[0x1];                                     // 0x28D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x28D8(0x0110)(HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x29E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4843[0x7];                                     // 0x29E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_Event_Save;                                 // 0x29F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddStartingItems_Return_1;                // 0x29F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4844[0x3];                                     // 0x29F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x29FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x2A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x2A04(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4845[0x3];                                     // 0x2A05(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x2A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x2A0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4846[0x3];                                     // 0x2A0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x2A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadComponentData_LoadComplete;           // 0x2A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4847[0x3];                                     // 0x2A15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x2A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4848[0x4];                                     // 0x2A1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_CustomEvent_SaveGame;                       // 0x2A20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x2A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x2A30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x2A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4849[0x3];                                     // 0x2A41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x2A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x2A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_11;                        // 0x2A50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x2A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484A[0x3];                                     // 0x2A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x2A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x2A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484B[0x3];                                     // 0x2A61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x2A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x2A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484C[0x4];                                     // 0x2A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_12;                        // 0x2A70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x2A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484D[0x7];                                     // 0x2A79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    K2Node_CustomEvent_Details;                        // 0x2A80(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_AllItems_RootSlots;                       // 0x2AF0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x2B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484E[0x7];                                     // 0x2B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_13;                        // 0x2B08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x2B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484F[0x3];                                     // 0x2B11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x2B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_CustomEvent_PlayerInventory;                // 0x2B18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x2B20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x2B21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4850[0x2];                                     // 0x2B22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_ItemCount;                      // 0x2B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_CustomEvent_Inventory;                      // 0x2B28(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x2B38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x2B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x2B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4851[0x4];                                     // 0x2B4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_CustomEvent_StartInventory;                 // 0x2B50(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x2B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4852[0x3];                                     // 0x2B59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x2B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x2B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x2B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x2B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4853[0x4];                                     // 0x2B6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x2B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x2B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory) == 0x000010, "Wrong alignment on BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory");
static_assert(sizeof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory) == 0x002B80, "Wrong size on BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, EntryPoint) == 0x000000, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Item) == 0x000008, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AddItem_RemainingItem) == 0x000038, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AddItem_RemainingInvItem) == 0x000040, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AddItem_NewItemSlot) == 0x000070, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable) == 0x000080, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_1) == 0x00008C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Variable) == 0x000098, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_2) == 0x0000A4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000A8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_3) == 0x0000AC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_bool_IsClosed_Variable) == 0x0000B0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000B4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_bool_Has_Been_Initd_Variable) == 0x0000B8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_2) == 0x0000BC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_4) == 0x0000C0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000C4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_3) == 0x0000C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_5) == 0x0000CC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_4) == 0x0000D4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_6) == 0x0000D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000DC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_5) == 0x0000E0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_7) == 0x0000E4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_8) == 0x0000E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_Visible) == 0x0000EC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_Attachment) == 0x0000ED, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_Attachment' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_InvItem) == 0x0000F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_InvSlot_1) == 0x000120, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_InvSlot) == 0x000170, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_ItemID) == 0x0001C0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_ItemID' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_SoundType) == 0x0001C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_SoundType' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_Pawn) == 0x0001D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_Pawn' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_6) == 0x0001D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue) == 0x0001DC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue) == 0x0001E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_1) == 0x0001EC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001ED, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_8) == 0x0001F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_7) == 0x0001F4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_9) == 0x0001F8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_MakeStruct_S_NotificationDetails) == 0x000200, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_FindCraftingListing_ReturnValue) == 0x000238, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_FindCraftingListing_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_FindCraftingListing_CraftingListing) == 0x00023C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_FindCraftingListing_CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_RequiredActorCraftingCheck_ReturnValue) == 0x000250, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_RequiredActorCraftingCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_K2_SetTimer_ReturnValue) == 0x000258, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_CancelQueue) == 0x000260, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_CancelQueue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_NewQueueListing_1) == 0x000274, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_NewQueueListing_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_CraftingInventory_2) == 0x000288, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_CraftingInventory_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000290, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_2) == 0x000294, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_CraftingRecipe) == 0x000298, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_CraftingInventory_1) == 0x0002A0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_CraftingInventory_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_2) == 0x0002A8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_NewQueueListing) == 0x0002AC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_NewQueueListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_CraftingInventory) == 0x0002C0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_CraftingInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_3) == 0x0002C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Recipe_1) == 0x0002CC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Recipe_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Amount_2) == 0x0002D4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Amount_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_CreateNewCraftingListing_Output) == 0x0002D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_CreateNewCraftingListing_Output' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_8) == 0x0002EC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_UpdateCraftingListing_Output) == 0x0002F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_UpdateCraftingListing_Output' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_MakeStruct_S_NotificationDetails_1) == 0x000308, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_MakeStruct_S_NotificationDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Recipe) == 0x000340, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Amount_1) == 0x000348, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_10) == 0x00034C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_CheckRecipeCost_CanCraft) == 0x000350, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_CheckRecipeCost_CanCraft' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_RecipeName) == 0x000354, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_RecipeName' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Amount) == 0x00035C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_2) == 0x000360, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CreateDelegate_OutputDelegate) == 0x000364, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000378, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000380, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_3) == 0x000388, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000389, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_9) == 0x00038C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_1) == 0x000390, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetObjectClass_ReturnValue) == 0x000398, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_4) == 0x0003A0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x0003A1, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsDedicatedServer_ReturnValue) == 0x0003A2, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0003A8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_K2_SetTimer_ReturnValue_1) == 0x0003B0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003B8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_RandomFloatInRange_ReturnValue) == 0x0003C0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0003C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_9) == 0x0003D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_11) == 0x0003D4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_2) == 0x0003D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_4) == 0x0003E0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003E4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_SelfItem_SelfItem) == 0x0003E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_3) == 0x000418, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemFound) == 0x000468, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000470, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000D00, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000D10, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x0015A0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0015A1, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_BooleanAND_ReturnValue) == 0x0015A2, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_BooleanAND_ReturnValue_1) == 0x0015A3, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_MakeStruct_S_InvSlotID) == 0x0015A8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0015B8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0015BC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_5) == 0x0015C0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_4) == 0x0015C4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_5) == 0x0015C5, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_4) == 0x0015C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_5) == 0x0015D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_6) == 0x0015D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_6) == 0x0015E0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_7) == 0x0015E4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_5) == 0x0015E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_6) == 0x0015E9, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_8) == 0x0015EC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_7) == 0x0015F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_SelfItem_SelfItem_1) == 0x0015F8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_SelfItem_SelfItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_7) == 0x001628, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x001678, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x001680, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemFound_3) == 0x001F10, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemFound_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_ItemDetails_ItemDetails_3) == 0x001F20, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_ItemDetails_ItemDetails_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0027B0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0027B1, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_BooleanAND_ReturnValue_2) == 0x0027B2, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_BooleanAND_ReturnValue_3) == 0x0027B3, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_MakeStruct_S_InvSlotID_1) == 0x0027B8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_MakeStruct_S_InvSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x0027C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x0027CC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_9) == 0x0027D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetOwner_ReturnValue) == 0x0027D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_AsBP_Master_Build_Part) == 0x0027E0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_AsBP_Master_Build_Part' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_bSuccess) == 0x0027E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_10) == 0x0027EC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Not_PreBool_ReturnValue) == 0x0027F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_8) == 0x0027F8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_6) == 0x002800, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_11) == 0x002804, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetObjectClass_ReturnValue_1) == 0x002808, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetObjectClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x002810, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CreateDelegate_OutputDelegate_1) == 0x002814, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsServer_ReturnValue) == 0x002824, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsStandalone_ReturnValue) == 0x002825, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_DestroyedActor) == 0x002828, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetOwner_ReturnValue_1) == 0x002830, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x002838, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AddStartingItems_Return) == 0x002840, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AddStartingItems_Return' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_DoubleDouble_ReturnValue) == 0x002848, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_K2_SetTimer_ReturnValue_2) == 0x002850, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_K2_SetTimer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetObjectClass_ReturnValue_2) == 0x002858, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetObjectClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x002860, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_7) == 0x002861, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_AsBP_Equipment_Inventory) == 0x002868, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_AsBP_Equipment_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_bSuccess_1) == 0x002870, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_9) == 0x002878, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_10) == 0x002880, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_11) == 0x002884, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_8) == 0x002888, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_NotificationDetails) == 0x002890, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_10) == 0x0028C8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_12) == 0x0028D0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_8) == 0x0028D4, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_9) == 0x0028D5, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x0028D6, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x0028D8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsStandalone_ReturnValue_1) == 0x0029E8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_Event_Save) == 0x0029F0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_Event_Save' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AddStartingItems_Return_1) == 0x0029F8, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AddStartingItems_Return_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_10) == 0x0029FC, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_11) == 0x002A00, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_10) == 0x002A04, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_12) == 0x002A08, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_11) == 0x002A0C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_13) == 0x002A10, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_LoadComponentData_LoadComplete) == 0x002A14, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_LoadComponentData_LoadComplete' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_AddUnique_ReturnValue) == 0x002A18, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_SaveGame) == 0x002A20, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_GetGameMode_ReturnValue) == 0x002A28, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x002A30, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_DynamicCast_bSuccess_2) == 0x002A40, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_12) == 0x002A44, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_SGK_GetSaveGame_SaveGame) == 0x002A48, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_11) == 0x002A50, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_bool_Has_Been_Initd_Variable_1) == 0x002A58, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_12) == 0x002A5C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_12) == 0x002A60, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_14) == 0x002A64, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Array_Index_Variable_13) == 0x002A68, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_12) == 0x002A70, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_9) == 0x002A78, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Details) == 0x002A80, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Details' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_AllItems_RootSlots) == 0x002AF0, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_AllItems_RootSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_bool_IsClosed_Variable_1) == 0x002B00, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Get_Item_13) == 0x002B08, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_IsValid_ReturnValue_10) == 0x002B10, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Array_Length_ReturnValue_13) == 0x002B14, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_PlayerInventory) == 0x002B18, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_13) == 0x002B20, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x002B21, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_ItemCount) == 0x002B24, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_Inventory) == 0x002B28, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x002B38, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x002B40, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, Temp_int_Loop_Counter_Variable_13) == 0x002B48, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, K2Node_CustomEvent_StartInventory) == 0x002B50, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::K2Node_CustomEvent_StartInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Less_IntInt_ReturnValue_14) == 0x002B58, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_IntInt_ReturnValue_15) == 0x002B5C, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x002B60, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Delay_Duration_ImplicitCast) == 0x002B64, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Delay_Duration_ImplicitCast_1) == 0x002B68, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x002B70, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x002B78, "Member 'BP_MasterInventory_C_ExecuteUbergraph_BP_MasterInventory::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindCraftingListing
// 0x0070 (0x0070 - 0x0000)
struct BP_MasterInventory_C_FindCraftingListing final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4854[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingQueue                       CraftingListing;                                   // 0x000C(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4855[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ArrayIndexL;                                       // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       ListingElementL;                                   // 0x0028(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4856[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4857[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item;                           // 0x0050(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4858[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindCraftingListing) == 0x000004, "Wrong alignment on BP_MasterInventory_C_FindCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_FindCraftingListing) == 0x000070, "Wrong size on BP_MasterInventory_C_FindCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_FindCraftingListing::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_FindCraftingListing::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CraftingListing) == 0x00000C, "Member 'BP_MasterInventory_C_FindCraftingListing::CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, ReturnValueL) == 0x000020, "Member 'BP_MasterInventory_C_FindCraftingListing::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, ArrayIndexL) == 0x000024, "Member 'BP_MasterInventory_C_FindCraftingListing::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, ListingElementL) == 0x000028, "Member 'BP_MasterInventory_C_FindCraftingListing::ListingElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, Temp_bool_True_if_break_was_hit_Variable) == 0x00003C, "Member 'BP_MasterInventory_C_FindCraftingListing::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, Temp_int_Array_Index_Variable) == 0x000040, "Member 'BP_MasterInventory_C_FindCraftingListing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_Not_PreBool_ReturnValue) == 0x000044, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, Temp_int_Loop_Counter_Variable) == 0x000048, "Member 'BP_MasterInventory_C_FindCraftingListing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000064, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindCraftingListing, CallFunc_BooleanAND_ReturnValue) == 0x00006D, "Member 'BP_MasterInventory_C_FindCraftingListing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindEmptySlots
// 0x0338 (0x0338 - 0x0000)
struct BP_MasterInventory_C_FindEmptySlots final
{
public:
	bool                                          AllowRotation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4859[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemId;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_WeightCheck;                                 // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485A[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeightCheckAmount;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpaceFound;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485B[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlots;                                        // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         WidthL;                                            // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         HeightL;                                           // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CraftingComponent_C*                CraftingL;                                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_CookingComponent_C*                 CookingL;                                          // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFuelItemL;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckFuelL;                                        // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485C[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CellDivisionL;                                     // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         InvColumnsL;                                       // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          SpaceFoundL;                                       // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485E[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RootIndexL;                                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             RootSlotL;                                         // 0x0068(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_485F[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4860[0x1];                                     // 0x00CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4861[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CraftingComponent_C*                K2Node_DynamicCast_AsBP_Crafting_Component;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4862[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CookingComponent_C*                 K2Node_DynamicCast_AsBP_Cooking_Component;         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFuelItem_IsFuelItem;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFuelItem_IsFuelItem_1;                  // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndexFuelSlot_IsFuelSlot;               // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndexFuelSlot_IsFuelSlot_1;             // 0x00F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4863[0x2];                                     // 0x00F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x00F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0128(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight_1;           // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndexFuelSlot_IsFuelSlot_2;             // 0x015B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4864[0x6];                                     // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x0170(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4865[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x01B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4866[0x3];                                     // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4867[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4868[0x3];                                     // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_4;            // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4869[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x0208(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCookingSlot_IsCookingSlot;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotOccupied_Occupied;             // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486A[0x3];                                     // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_2;            // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCookingSlot_IsCookingSlot_1;            // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486B[0x2];                                     // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0238(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1;        // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486C[0x1];                                     // 0x028F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots_1;          // 0x0290(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_InvSlotOccupied_Occupied_1;           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486D[0x2];                                     // 0x02A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIndexFuelSlot_IsFuelSlot_3;             // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486E[0x1];                                     // 0x02AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_3;            // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder_1;                         // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue_1;                       // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x02C0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_486F[0x6];                                     // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Divisor_ImplicitCast_1;              // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast_1;             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindEmptySlots) == 0x000008, "Wrong alignment on BP_MasterInventory_C_FindEmptySlots");
static_assert(sizeof(BP_MasterInventory_C_FindEmptySlots) == 0x000338, "Wrong size on BP_MasterInventory_C_FindEmptySlots");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, AllowRotation) == 0x000000, "Member 'BP_MasterInventory_C_FindEmptySlots::AllowRotation' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, ItemId) == 0x000004, "Member 'BP_MasterInventory_C_FindEmptySlots::ItemId' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Param_WeightCheck) == 0x00000C, "Member 'BP_MasterInventory_C_FindEmptySlots::Param_WeightCheck' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, WeightCheckAmount) == 0x000010, "Member 'BP_MasterInventory_C_FindEmptySlots::WeightCheckAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, SpaceFound) == 0x000014, "Member 'BP_MasterInventory_C_FindEmptySlots::SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Rotated) == 0x000015, "Member 'BP_MasterInventory_C_FindEmptySlots::Rotated' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, FoundSlots) == 0x000018, "Member 'BP_MasterInventory_C_FindEmptySlots::FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, WidthL) == 0x000028, "Member 'BP_MasterInventory_C_FindEmptySlots::WidthL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, HeightL) == 0x00002C, "Member 'BP_MasterInventory_C_FindEmptySlots::HeightL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CraftingL) == 0x000030, "Member 'BP_MasterInventory_C_FindEmptySlots::CraftingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CookingL) == 0x000038, "Member 'BP_MasterInventory_C_FindEmptySlots::CookingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, IsFuelItemL) == 0x000040, "Member 'BP_MasterInventory_C_FindEmptySlots::IsFuelItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CheckFuelL) == 0x000041, "Member 'BP_MasterInventory_C_FindEmptySlots::CheckFuelL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CellDivisionL) == 0x000044, "Member 'BP_MasterInventory_C_FindEmptySlots::CellDivisionL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, InvColumnsL) == 0x000048, "Member 'BP_MasterInventory_C_FindEmptySlots::InvColumnsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, FoundSlotsL) == 0x000050, "Member 'BP_MasterInventory_C_FindEmptySlots::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, SpaceFoundL) == 0x000060, "Member 'BP_MasterInventory_C_FindEmptySlots::SpaceFoundL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, RootIndexL) == 0x000064, "Member 'BP_MasterInventory_C_FindEmptySlots::RootIndexL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, RootSlotL) == 0x000068, "Member 'BP_MasterInventory_C_FindEmptySlots::RootSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Variable) == 0x0000B8, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_bool_Variable) == 0x0000BC, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Variable_1) == 0x0000C0, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Array_Index_Variable) == 0x0000C4, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_bool_Variable_1) == 0x0000C8, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue) == 0x0000C9, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_bool_True_if_break_was_hit_Variable) == 0x0000CA, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Not_PreBool_ReturnValue) == 0x0000D4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_DynamicCast_AsBP_Crafting_Component) == 0x0000D8, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_DynamicCast_AsBP_Crafting_Component' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_DynamicCast_AsBP_Cooking_Component) == 0x0000E8, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_DynamicCast_AsBP_Cooking_Component' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_DynamicCast_bSuccess_1) == 0x0000F0, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsFuelItem_IsFuelItem) == 0x0000F1, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsFuelItem_IsFuelItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsFuelItem_IsFuelItem_1) == 0x0000F2, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsFuelItem_IsFuelItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue_1) == 0x0000F3, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsIndexFuelSlot_IsFuelSlot) == 0x0000F4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsIndexFuelSlot_IsFuelSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsIndexFuelSlot_IsFuelSlot_1) == 0x0000F5, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsIndexFuelSlot_IsFuelSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_MakeStruct_S_InvItem) == 0x0000F8, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_MakeStruct_S_InvItem_1) == 0x000128, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000158, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_WeightCheck_ExceedsMaxWeight_1) == 0x000159, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_WeightCheck_ExceedsMaxWeight_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue_2) == 0x00015A, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsIndexFuelSlot_IsFuelSlot_2) == 0x00015B, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsIndexFuelSlot_IsFuelSlot_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Loop_Counter_Variable_1) == 0x00015C, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_int_Array_Index_Variable_1) == 0x000160, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000164, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000168, "Member 'BP_MasterInventory_C_FindEmptySlots::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Not_PreBool_ReturnValue_1) == 0x000169, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_MakeStruct_S_InvItem_2) == 0x000170, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_ItemSize_Height) == 0x0001A0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_ItemSize_Width) == 0x0001A4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Multiply_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_MakeStruct_S_InvSlotID) == 0x0001B0, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x0001CC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001D0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_Select_Default) == 0x0001D4, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0001D8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001DC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, K2Node_Select_Default_1) == 0x0001E0, "Member 'BP_MasterInventory_C_FindEmptySlots::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0001E4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0001EC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x0001F0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001F4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001F8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Multiply_IntInt_ReturnValue_4) == 0x0001FC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Multiply_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x000200, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x000204, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x000208, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue_3) == 0x000218, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsCookingSlot_IsCookingSlot) == 0x000219, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsCookingSlot_IsCookingSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_InvSlotOccupied_Occupied) == 0x00021A, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_InvSlotOccupied_Occupied' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x00021B, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_IsRootSlot_RootIndex) == 0x00021C, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000220, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Conv_IntToFloat_ReturnValue_2) == 0x000224, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Conv_IntToFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Remainder) == 0x000228, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_ReturnValue) == 0x000230, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue_4) == 0x000234, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsCookingSlot_IsCookingSlot_1) == 0x000235, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsCookingSlot_IsCookingSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Array_Get_Item) == 0x000238, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Array_Length_ReturnValue) == 0x000288, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Less_IntInt_ReturnValue) == 0x00028C, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_BooleanAND_ReturnValue) == 0x00028D, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1) == 0x00028E, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_RootSpaceCheck_SlotsBlocked_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_RootSpaceCheck_FoundSlots_1) == 0x000290, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_RootSpaceCheck_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_InvSlotOccupied_Occupied_1) == 0x0002A0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_InvSlotOccupied_Occupied_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x0002A1, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x0002A4, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsValid_ReturnValue_5) == 0x0002A8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0002A9, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_IsIndexFuelSlot_IsFuelSlot_3) == 0x0002AA, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_IsIndexFuelSlot_IsFuelSlot_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Conv_IntToFloat_ReturnValue_3) == 0x0002AC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Conv_IntToFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Remainder_1) == 0x0002B0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Remainder_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_ReturnValue_1) == 0x0002B8, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Array_Length_ReturnValue_1) == 0x0002BC, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Array_Get_Item_1) == 0x0002C0, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000310, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_BooleanAND_ReturnValue_1) == 0x000311, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Divisor_ImplicitCast) == 0x000318, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Divisor_ImplicitCast_1) == 0x000320, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Divisor_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Dividend_ImplicitCast) == 0x000328, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindEmptySlots, CallFunc_FMod_Dividend_ImplicitCast_1) == 0x000330, "Member 'BP_MasterInventory_C_FindEmptySlots::CallFunc_FMod_Dividend_ImplicitCast_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindFreeStackSpace
// 0x0A20 (0x0A20 - 0x0000)
struct BP_MasterInventory_C_FindFreeStackSpace final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  StopInv;                                           // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Reaminder;                                         // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4870[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             ReaminderInvItem;                                  // 0x0040(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             InvItemL;                                          // 0x0070(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         AmountRemainingL;                                  // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4871[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             SlotElementL;                                      // 0x00A8(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4872[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0100(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0994(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0995(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4873[0x2];                                     // 0x0996(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x099C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4874[0x3];                                     // 0x099D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x09A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x09A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttemptToAddItemAmount_Remainder;         // 0x09A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4875[0x2];                                     // 0x09A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AttemptToAddItemAmount_RemainderAmount;   // 0x09A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x09AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4876[0x3];                                     // 0x09AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x09B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsMaxAmount_MaxCount;                 // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4877[0x2];                                     // 0x09BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x09C0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindFreeStackSpace) == 0x000010, "Wrong alignment on BP_MasterInventory_C_FindFreeStackSpace");
static_assert(sizeof(BP_MasterInventory_C_FindFreeStackSpace) == 0x000A20, "Wrong size on BP_MasterInventory_C_FindFreeStackSpace");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, InvItem) == 0x000000, "Member 'BP_MasterInventory_C_FindFreeStackSpace::InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, StopInv) == 0x000030, "Member 'BP_MasterInventory_C_FindFreeStackSpace::StopInv' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, Reaminder) == 0x000038, "Member 'BP_MasterInventory_C_FindFreeStackSpace::Reaminder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, ReaminderInvItem) == 0x000040, "Member 'BP_MasterInventory_C_FindFreeStackSpace::ReaminderInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, InvItemL) == 0x000070, "Member 'BP_MasterInventory_C_FindFreeStackSpace::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, AmountRemainingL) == 0x0000A0, "Member 'BP_MasterInventory_C_FindFreeStackSpace::AmountRemainingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, SlotElementL) == 0x0000A8, "Member 'BP_MasterInventory_C_FindFreeStackSpace::SlotElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, Temp_int_Array_Index_Variable) == 0x0000F8, "Member 'BP_MasterInventory_C_FindFreeStackSpace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000FC, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000100, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, Temp_int_Loop_Counter_Variable) == 0x000990, "Member 'BP_MasterInventory_C_FindFreeStackSpace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, Temp_bool_True_if_break_was_hit_Variable) == 0x000994, "Member 'BP_MasterInventory_C_FindFreeStackSpace::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Not_PreBool_ReturnValue) == 0x000995, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Add_IntInt_ReturnValue) == 0x000998, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x00099C, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0009A0, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Greater_IntInt_ReturnValue) == 0x0009A4, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_AttemptToAddItemAmount_Remainder) == 0x0009A5, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_AttemptToAddItemAmount_Remainder' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_AttemptToAddItemAmount_RemainderAmount) == 0x0009A8, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_AttemptToAddItemAmount_RemainderAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0009AC, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Subtract_IntInt_ReturnValue) == 0x0009B0, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0009B4, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_SGK_IsMaxAmount_MaxCount) == 0x0009B8, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_SGK_IsMaxAmount_MaxCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0009B9, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Array_Length_ReturnValue) == 0x0009BC, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Array_Get_Item) == 0x0009C0, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_Less_IntInt_ReturnValue) == 0x000A10, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindFreeStackSpace, CallFunc_BooleanAND_ReturnValue) == 0x000A11, "Member 'BP_MasterInventory_C_FindFreeStackSpace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindItemWithUseAmountLeft
// 0x0980 (0x0980 - 0x0000)
struct BP_MasterInventory_C_FindItemWithUseAmountLeft final
{
public:
	TArray<class FName>                           ItemIDs;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          FoundItem;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4878[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ItemSlot;                                          // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0078(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4879[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487A[0xF];                                     // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0973(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindItemWithUseAmountLeft) == 0x000010, "Wrong alignment on BP_MasterInventory_C_FindItemWithUseAmountLeft");
static_assert(sizeof(BP_MasterInventory_C_FindItemWithUseAmountLeft) == 0x000980, "Wrong size on BP_MasterInventory_C_FindItemWithUseAmountLeft");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, ItemIDs) == 0x000000, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::ItemIDs' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, FoundItem) == 0x000010, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::FoundItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, ItemSlot) == 0x000018, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0000C9, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0000CC, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000D0, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000E0, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Greater_IntInt_ReturnValue) == 0x000970, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_BooleanAND_ReturnValue) == 0x000971, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_Array_Contains_ReturnValue) == 0x000972, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_BooleanAND_ReturnValue_1) == 0x000973, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindItemWithUseAmountLeft, CallFunc_BooleanAND_ReturnValue_2) == 0x000974, "Member 'BP_MasterInventory_C_FindItemWithUseAmountLeft::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindKeyItem
// 0x00D0 (0x00D0 - 0x0000)
struct BP_MasterInventory_C_FindKeyItem final
{
public:
	class FName                                   KeyCode;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487B[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0020(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487D[0x6];                                     // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x0078(0x0040)(NoDestructor, HasGetValueTypeHash)
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory;     // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487E[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindKeyItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_FindKeyItem");
static_assert(sizeof(BP_MasterInventory_C_FindKeyItem) == 0x0000D0, "Wrong size on BP_MasterInventory_C_FindKeyItem");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, KeyCode) == 0x000000, "Member 'BP_MasterInventory_C_FindKeyItem::KeyCode' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, Found) == 0x000008, "Member 'BP_MasterInventory_C_FindKeyItem::Found' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_MasterInventory_C_FindKeyItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MasterInventory_C_FindKeyItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x000071, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x000078, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, K2Node_DynamicCast_AsBP_Master_Item_Inventory) == 0x0000B8, "Member 'BP_MasterInventory_C_FindKeyItem::K2Node_DynamicCast_AsBP_Master_Item_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_MasterInventory_C_FindKeyItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0000C1, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0000C4, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindKeyItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C8, "Member 'BP_MasterInventory_C_FindKeyItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FindNotFullUseAmountItems
// 0x0980 (0x0980 - 0x0000)
struct BP_MasterInventory_C_FindNotFullUseAmountItems final
{
public:
	TArray<class FName>                           ItemIDs;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          FoundItem;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_487F[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ItemSlot;                                          // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0078(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4880[0x2];                                     // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4881[0xF];                                     // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0973(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FindNotFullUseAmountItems) == 0x000010, "Wrong alignment on BP_MasterInventory_C_FindNotFullUseAmountItems");
static_assert(sizeof(BP_MasterInventory_C_FindNotFullUseAmountItems) == 0x000980, "Wrong size on BP_MasterInventory_C_FindNotFullUseAmountItems");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, ItemIDs) == 0x000000, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::ItemIDs' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, FoundItem) == 0x000010, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::FoundItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, ItemSlot) == 0x000018, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::ItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, Temp_int_Array_Index_Variable) == 0x000068, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_Array_Length_ReturnValue) == 0x000074, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0000C9, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0000CC, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000D0, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000E0, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_Array_Contains_ReturnValue) == 0x000970, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_BooleanAND_ReturnValue) == 0x000971, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_BooleanAND_ReturnValue_1) == 0x000972, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000973, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FindNotFullUseAmountItems, CallFunc_BooleanAND_ReturnValue_2) == 0x000974, "Member 'BP_MasterInventory_C_FindNotFullUseAmountItems::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.FinishedCraftingTimer
// 0x000C (0x000C - 0x0000)
struct BP_MasterInventory_C_FinishedCraftingTimer final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_FinishedCraftingTimer) == 0x000004, "Wrong alignment on BP_MasterInventory_C_FinishedCraftingTimer");
static_assert(sizeof(BP_MasterInventory_C_FinishedCraftingTimer) == 0x00000C, "Wrong size on BP_MasterInventory_C_FinishedCraftingTimer");
static_assert(offsetof(BP_MasterInventory_C_FinishedCraftingTimer, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_FinishedCraftingTimer::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_FinishedCraftingTimer, Amount) == 0x000008, "Member 'BP_MasterInventory_C_FinishedCraftingTimer::Amount' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.InGameLoadComponentData
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_InGameLoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LoadComponentData_LoadComplete;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_InGameLoadComponentData) == 0x000008, "Wrong alignment on BP_MasterInventory_C_InGameLoadComponentData");
static_assert(sizeof(BP_MasterInventory_C_InGameLoadComponentData) == 0x000010, "Wrong size on BP_MasterInventory_C_InGameLoadComponentData");
static_assert(offsetof(BP_MasterInventory_C_InGameLoadComponentData, Save) == 0x000000, "Member 'BP_MasterInventory_C_InGameLoadComponentData::Save' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_InGameLoadComponentData, CallFunc_LoadComponentData_LoadComplete) == 0x000008, "Member 'BP_MasterInventory_C_InGameLoadComponentData::CallFunc_LoadComponentData_LoadComplete' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.IsItemInParentInv
// 0x00C8 (0x00C8 - 0x0000)
struct BP_MasterInventory_C_IsItemInParentInv final
{
public:
	struct FS_InvSlot                             StartInvSlot;                                      // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             EndInvSlot;                                        // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          IsInInv;                                           // 0x00A0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4882[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  ParentInvL;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4883[0x1];                                     // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_IsItemInParentInv) == 0x000008, "Wrong alignment on BP_MasterInventory_C_IsItemInParentInv");
static_assert(sizeof(BP_MasterInventory_C_IsItemInParentInv) == 0x0000C8, "Wrong size on BP_MasterInventory_C_IsItemInParentInv");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, StartInvSlot) == 0x000000, "Member 'BP_MasterInventory_C_IsItemInParentInv::StartInvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, EndInvSlot) == 0x000050, "Member 'BP_MasterInventory_C_IsItemInParentInv::EndInvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, IsInInv) == 0x0000A0, "Member 'BP_MasterInventory_C_IsItemInParentInv::IsInInv' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, ParentInvL) == 0x0000A8, "Member 'BP_MasterInventory_C_IsItemInParentInv::ParentInvL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_IsValid_ReturnValue) == 0x0000B0, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, Temp_bool_Variable) == 0x0000B1, "Member 'BP_MasterInventory_C_IsItemInParentInv::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_Not_PreBool_ReturnValue) == 0x0000B2, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, Temp_int_Variable) == 0x0000B4, "Member 'BP_MasterInventory_C_IsItemInParentInv::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_BooleanAND_ReturnValue) == 0x0000BD, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_IsValid_ReturnValue_1) == 0x0000BE, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_IsValid_ReturnValue_2) == 0x0000BF, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000C0, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_IsItemInParentInv, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000C1, "Member 'BP_MasterInventory_C_IsItemInParentInv::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ItemDecay
// 0x1550 (0x1550 - 0x0000)
struct BP_MasterInventory_C_ItemDecay final
{
public:
	struct FS_InvItem                             ItemL;                                             // 0x0000(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DecayDetails                        DecayDetailsL;                                     // 0x0030(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             ElementL;                                          // 0x0050(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4884[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4885[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4886[0x5];                                     // 0x00DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4887[0x4];                                     // 0x0974(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4888[0x3];                                     // 0x0981(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0984(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4889[0x8];                                     // 0x0988(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0990(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0A38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0A40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488A[0x7];                                     // 0x0A59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0A60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0A78(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0A90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488B[0x8];                                     // 0x0A98(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0AA0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x0B00(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488C[0x7];                                     // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0B20(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488D[0x7];                                     // 0x0B31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0B40(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488E[0x7];                                     // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0B78(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0BA8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_488F[0x3];                                     // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0BC0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4890[0xF];                                     // 0x0BF1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0C00(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x1490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4891[0x7];                                     // 0x1491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x1498(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x14E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4892[0x7];                                     // 0x14E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x14F0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x1540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x1541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4893[0x2];                                     // 0x1542(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x1544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ItemDecay) == 0x000010, "Wrong alignment on BP_MasterInventory_C_ItemDecay");
static_assert(sizeof(BP_MasterInventory_C_ItemDecay) == 0x001550, "Wrong size on BP_MasterInventory_C_ItemDecay");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, ItemL) == 0x000000, "Member 'BP_MasterInventory_C_ItemDecay::ItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, DecayDetailsL) == 0x000030, "Member 'BP_MasterInventory_C_ItemDecay::DecayDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, ElementL) == 0x000050, "Member 'BP_MasterInventory_C_ItemDecay::ElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'BP_MasterInventory_C_ItemDecay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Add_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_MasterInventory_C_ItemDecay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetGameMode_ReturnValue) == 0x0000B0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0000B8, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0000D0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D9, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000DA, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000E0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Subtract_IntInt_ReturnValue) == 0x000970, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue) == 0x000978, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000980, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000984, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetTransform_ReturnValue) == 0x000990, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_BreakTransform_Location) == 0x0009F0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_BreakTransform_Rotation) == 0x000A08, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_BreakTransform_Scale) == 0x000A20, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue_1) == 0x000A38, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000A40, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_DoesImplementInterface_ReturnValue) == 0x000A58, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000A60, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Add_VectorVector_ReturnValue) == 0x000A78, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue_2) == 0x000A90, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_MakeTransform_ReturnValue) == 0x000AA0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x000B00, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_bSuccess_1) == 0x000B10, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_GetGameMode_ReturnValue_1) == 0x000B18, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000B20, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_DynamicCast_bSuccess_2) == 0x000B30, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000B38, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_CreateNewItem_NewItem) == 0x000B40, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_AddItem_RemainingItem) == 0x000B70, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_AddItem_RemainingInvItem) == 0x000B78, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_AddItem_NewItemSlot) == 0x000BA8, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000BB8, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000BBC, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, K2Node_MakeStruct_S_InvItem) == 0x000BC0, "Member 'BP_MasterInventory_C_ItemDecay::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000BF0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000C00, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x001490, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x001498, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0014E8, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Array_Get_Item) == 0x0014F0, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x001540, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_BooleanAND_ReturnValue) == 0x001541, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Array_Length_ReturnValue) == 0x001544, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemDecay, CallFunc_Less_IntInt_ReturnValue) == 0x001548, "Member 'BP_MasterInventory_C_ItemDecay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ItemLimitCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterInventory_C_ItemLimitCheck final
{
public:
	int32                                         Param_ItemCount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowAdd;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4894[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddCount;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Remaining;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RemainingCountL;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemainingItemCount_RemainingItemLimit;    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ItemLimitCheck) == 0x000004, "Wrong alignment on BP_MasterInventory_C_ItemLimitCheck");
static_assert(sizeof(BP_MasterInventory_C_ItemLimitCheck) == 0x000020, "Wrong size on BP_MasterInventory_C_ItemLimitCheck");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, Param_ItemCount) == 0x000000, "Member 'BP_MasterInventory_C_ItemLimitCheck::Param_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, AllowAdd) == 0x000004, "Member 'BP_MasterInventory_C_ItemLimitCheck::AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, AddCount) == 0x000008, "Member 'BP_MasterInventory_C_ItemLimitCheck::AddCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, Remaining) == 0x00000C, "Member 'BP_MasterInventory_C_ItemLimitCheck::Remaining' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, RemainingCountL) == 0x000010, "Member 'BP_MasterInventory_C_ItemLimitCheck::RemainingCountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, CallFunc_RemainingItemCount_RemainingItemLimit) == 0x000014, "Member 'BP_MasterInventory_C_ItemLimitCheck::CallFunc_RemainingItemCount_RemainingItemLimit' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_ItemLimitCheck::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_MasterInventory_C_ItemLimitCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ItemLimitCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001D, "Member 'BP_MasterInventory_C_ItemLimitCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.LoadComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_LoadComponent final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_LoadComponent) == 0x000008, "Wrong alignment on BP_MasterInventory_C_LoadComponent");
static_assert(sizeof(BP_MasterInventory_C_LoadComponent) == 0x000008, "Wrong size on BP_MasterInventory_C_LoadComponent");
static_assert(offsetof(BP_MasterInventory_C_LoadComponent, SaveGame) == 0x000000, "Member 'BP_MasterInventory_C_LoadComponent::SaveGame' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.LoadComponentData
// 0x0240 (0x0240 - 0x0000)
struct BP_MasterInventory_C_LoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadComplete;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4895[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvItem                             InvItemL;                                          // 0x0020(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x0050(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4896[0x8];                                     // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StorageSave                         StorageSaveDataL;                                  // 0x0080(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4897[0x8];                                     // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindStorageSaveData_SaveFound;            // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4898[0x7];                                     // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StorageSave                         CallFunc_FindStorageSaveData_Array_Element;        // 0x01A0(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_LoadComponentData) == 0x000010, "Wrong alignment on BP_MasterInventory_C_LoadComponentData");
static_assert(sizeof(BP_MasterInventory_C_LoadComponentData) == 0x000240, "Wrong size on BP_MasterInventory_C_LoadComponentData");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, SaveGame) == 0x000000, "Member 'BP_MasterInventory_C_LoadComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, LoadComplete) == 0x000008, "Member 'BP_MasterInventory_C_LoadComponentData::LoadComplete' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, FoundSlotsL) == 0x000010, "Member 'BP_MasterInventory_C_LoadComponentData::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, InvItemL) == 0x000020, "Member 'BP_MasterInventory_C_LoadComponentData::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, InvSaveSlotL) == 0x000050, "Member 'BP_MasterInventory_C_LoadComponentData::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, StorageSaveDataL) == 0x000080, "Member 'BP_MasterInventory_C_LoadComponentData::StorageSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000110, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_GetOwner_ReturnValue) == 0x000120, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_GetOwner_ReturnValue_1) == 0x000190, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_FindStorageSaveData_SaveFound) == 0x000198, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_FindStorageSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_FindStorageSaveData_Array_Element) == 0x0001A0, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_FindStorageSaveData_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_GetObjectClass_ReturnValue) == 0x000230, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadComponentData, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000238, "Member 'BP_MasterInventory_C_LoadComponentData::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.LoadInventoryData
// 0x03F0 (0x03F0 - 0x0000)
struct BP_MasterInventory_C_LoadInventoryData final
{
public:
	struct FS_StorageSave                         S_StorageSave;                                     // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0090(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvItem                             InvItemL;                                          // 0x00A0(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_StorageSave                         StorageSaveDataL;                                  // 0x00D0(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x0160(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4899[0x4];                                     // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item;                           // 0x0190(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489A[0x4];                                     // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489B[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489C[0x3];                                     // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSaveSlot                         CallFunc_Array_Get_Item_2;                         // 0x023C(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489D[0x4];                                     // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489E[0x2];                                     // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x0278(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x02C8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0300(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0310(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489F[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_4;                         // 0x0320(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0360(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0390(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A0[0x7];                                     // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x03C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A1[0x7];                                     // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_1;   // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_LoadInventoryData) == 0x000010, "Wrong alignment on BP_MasterInventory_C_LoadInventoryData");
static_assert(sizeof(BP_MasterInventory_C_LoadInventoryData) == 0x0003F0, "Wrong size on BP_MasterInventory_C_LoadInventoryData");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, S_StorageSave) == 0x000000, "Member 'BP_MasterInventory_C_LoadInventoryData::S_StorageSave' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, FoundSlotsL) == 0x000090, "Member 'BP_MasterInventory_C_LoadInventoryData::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, InvItemL) == 0x0000A0, "Member 'BP_MasterInventory_C_LoadInventoryData::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, StorageSaveDataL) == 0x0000D0, "Member 'BP_MasterInventory_C_LoadInventoryData::StorageSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, InvSaveSlotL) == 0x000160, "Member 'BP_MasterInventory_C_LoadInventoryData::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, Temp_int_Array_Index_Variable) == 0x000188, "Member 'BP_MasterInventory_C_LoadInventoryData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Get_Item) == 0x000190, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, Temp_int_Loop_Counter_Variable) == 0x0001D0, "Member 'BP_MasterInventory_C_LoadInventoryData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Add_IntInt_ReturnValue) == 0x000218, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_GetGameMode_ReturnValue) == 0x000220, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000228, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_DynamicCast_bSuccess) == 0x000238, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Get_Item_2) == 0x00023C, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000268, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Length_ReturnValue) == 0x000270, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Less_IntInt_ReturnValue) == 0x000274, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_IsValid_ReturnValue) == 0x000275, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Get_Item_3) == 0x000278, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_MakeStruct_S_InvItem) == 0x0002C8, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_SGK_ItemSize_Height) == 0x0002F8, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_SGK_ItemSize_Width) == 0x0002FC, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000300, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000310, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_DynamicCast_bSuccess_1) == 0x000318, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000319, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_Get_Item_4) == 0x000320, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_CreateNewItem_NewItem) == 0x000360, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_SetFieldsInStruct_StructOut) == 0x000390, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003C0, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x0003C8, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0003D8, "Member 'BP_MasterInventory_C_LoadInventoryData::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x0003E0, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadInventoryData, K2Node_VariableSet_CurrentWeight_ImplicitCast_1) == 0x0003E8, "Member 'BP_MasterInventory_C_LoadInventoryData::K2Node_VariableSet_CurrentWeight_ImplicitCast_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.LoadSavedInventory
// 0x0DC0 (0x0DC0 - 0x0000)
struct BP_MasterInventory_C_LoadSavedInventory final
{
public:
	TArray<struct FS_InvSaveSlot>                 LoadedInventory;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_OtherInvSaves>               OtherInv;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x0020(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0048(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvItem                             InvItemL;                                          // 0x0058(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A2[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0090(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A3[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x00D0(0x0040)(NoDestructor, HasGetValueTypeHash)
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory;     // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A4[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterItemInventory_C*              K2Node_DynamicCast_AsBP_Master_Item_Inventory_1;   // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A5[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A6[0x7];                                     // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0140(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         CallFunc_Array_Get_Item_1;                         // 0x01A4(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A7[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x01D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_1;                    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_1;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0208(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots_1;              // 0x0258(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A8[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A9[0x3];                                     // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory_1;        // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AA[0x7];                                     // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_3;                         // 0x0288(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_4;                         // 0x02C8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_5;                         // 0x0308(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_6;                         // 0x0348(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AB[0x7];                                     // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_7;                         // 0x03A0(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AC[0x3];                                     // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x03E8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_2;                    // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_2;                     // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots_2;              // 0x0420(0x0010)(ReferenceParm, ContainsInstancedReference)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_3;                     // 0x0438(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0468(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AD[0x6];                                     // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0480(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0D10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0D18(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0D48(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0D78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AE[0x7];                                     // 0x0D79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0D80(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots_1;            // 0x0D90(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48AF[0x7];                                     // 0x0DA1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots_2;            // 0x0DA8(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x0DB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_LoadSavedInventory) == 0x000010, "Wrong alignment on BP_MasterInventory_C_LoadSavedInventory");
static_assert(sizeof(BP_MasterInventory_C_LoadSavedInventory) == 0x000DC0, "Wrong size on BP_MasterInventory_C_LoadSavedInventory");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, LoadedInventory) == 0x000000, "Member 'BP_MasterInventory_C_LoadSavedInventory::LoadedInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, OtherInv) == 0x000010, "Member 'BP_MasterInventory_C_LoadSavedInventory::OtherInv' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, InvSaveSlotL) == 0x000020, "Member 'BP_MasterInventory_C_LoadSavedInventory::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, FoundSlotsL) == 0x000048, "Member 'BP_MasterInventory_C_LoadSavedInventory::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, InvItemL) == 0x000058, "Member 'BP_MasterInventory_C_LoadSavedInventory::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_MakeStruct_S_InvItem) == 0x000090, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Height) == 0x0000C0, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Width) == 0x0000C4, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x0000C8, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x0000D0, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory) == 0x000110, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_bSuccess) == 0x000118, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_AsBP_Master_Item_Inventory_1) == 0x000120, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_AsBP_Master_Item_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_bSuccess_1) == 0x000128, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000130, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_bSuccess_2) == 0x000138, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000190, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, Temp_int_Array_Index_Variable) == 0x0001A0, "Member 'BP_MasterInventory_C_LoadSavedInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_1) == 0x0001A4, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001CC, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_MakeStruct_S_InvItem_1) == 0x0001D0, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Height_1) == 0x000200, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Height_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Width_1) == 0x000204, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Width_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_2) == 0x000208, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_SlotFinder_FoundSlots_1) == 0x000258, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_SlotFinder_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, Temp_int_Loop_Counter_Variable) == 0x000268, "Member 'BP_MasterInventory_C_LoadSavedInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Less_IntInt_ReturnValue) == 0x00026C, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_IsValid_ReturnValue) == 0x000274, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory_1) == 0x000278, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_bSuccess_3) == 0x000280, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_3) == 0x000288, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_4) == 0x0002C8, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_5) == 0x000308, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_6) == 0x000348, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000398, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Get_Item_7) == 0x0003A0, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_Length_ReturnValue_1) == 0x0003E0, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x0003E4, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_MakeStruct_S_InvItem_2) == 0x0003E8, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Height_2) == 0x000418, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Height_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemSize_Width_2) == 0x00041C, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemSize_Width_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_SlotFinder_FoundSlots_2) == 0x000420, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_SlotFinder_FoundSlots_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_GetGameMode_ReturnValue) == 0x000430, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_MakeStruct_S_InvItem_3) == 0x000438, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_MakeStruct_S_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000468, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_DynamicCast_bSuccess_4) == 0x000478, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemDetails_ItemFound) == 0x000479, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000480, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000D10, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_CreateNewItem_NewItem) == 0x000D18, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_SetFieldsInStruct_StructOut) == 0x000D48, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000D78, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000D80, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_UpdateInvSlots_UpdatedSlots_1) == 0x000D90, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_UpdateInvSlots_UpdatedSlots_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000DA0, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, CallFunc_UpdateInvSlots_UpdatedSlots_2) == 0x000DA8, "Member 'BP_MasterInventory_C_LoadSavedInventory::CallFunc_UpdateInvSlots_UpdatedSlots_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_LoadSavedInventory, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x000DB8, "Member 'BP_MasterInventory_C_LoadSavedInventory::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.MulticastForceItemCount
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterInventory_C_MulticastForceItemCount final
{
public:
	int32                                         Param_ItemCount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_MulticastForceItemCount) == 0x000004, "Wrong alignment on BP_MasterInventory_C_MulticastForceItemCount");
static_assert(sizeof(BP_MasterInventory_C_MulticastForceItemCount) == 0x000004, "Wrong size on BP_MasterInventory_C_MulticastForceItemCount");
static_assert(offsetof(BP_MasterInventory_C_MulticastForceItemCount, Param_ItemCount) == 0x000000, "Member 'BP_MasterInventory_C_MulticastForceItemCount::Param_ItemCount' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.MulticastSetDetails
// 0x0070 (0x0070 - 0x0000)
struct BP_MasterInventory_C_MulticastSetDetails final
{
public:
	struct FS_ContainerDetails                    Details;                                           // 0x0000(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_MulticastSetDetails) == 0x000008, "Wrong alignment on BP_MasterInventory_C_MulticastSetDetails");
static_assert(sizeof(BP_MasterInventory_C_MulticastSetDetails) == 0x000070, "Wrong size on BP_MasterInventory_C_MulticastSetDetails");
static_assert(offsetof(BP_MasterInventory_C_MulticastSetDetails, Details) == 0x000000, "Member 'BP_MasterInventory_C_MulticastSetDetails::Details' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.OwnerDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_OwnerDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_OwnerDestroyed) == 0x000008, "Wrong alignment on BP_MasterInventory_C_OwnerDestroyed");
static_assert(sizeof(BP_MasterInventory_C_OwnerDestroyed) == 0x000008, "Wrong size on BP_MasterInventory_C_OwnerDestroyed");
static_assert(offsetof(BP_MasterInventory_C_OwnerDestroyed, DestroyedActor) == 0x000000, "Member 'BP_MasterInventory_C_OwnerDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ParentWeightCheck
// 0x0040 (0x0040 - 0x0000)
struct BP_MasterInventory_C_ParentWeightCheck final
{
public:
	double                                        AdditionalWeight;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  ParentIgnore;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanAdd;                                            // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B0[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentCount;                                      // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentCountL;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B1[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  ParentInvL;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B2[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddWeightCheck_CanAdd;                    // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B3[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_AddWeightCheck_ItemCount;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ParentWeightCheck) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ParentWeightCheck");
static_assert(sizeof(BP_MasterInventory_C_ParentWeightCheck) == 0x000040, "Wrong size on BP_MasterInventory_C_ParentWeightCheck");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, AdditionalWeight) == 0x000000, "Member 'BP_MasterInventory_C_ParentWeightCheck::AdditionalWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, ParentIgnore) == 0x000008, "Member 'BP_MasterInventory_C_ParentWeightCheck::ParentIgnore' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CanAdd) == 0x000010, "Member 'BP_MasterInventory_C_ParentWeightCheck::CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CurrentCount) == 0x000014, "Member 'BP_MasterInventory_C_ParentWeightCheck::CurrentCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CurrentCountL) == 0x000018, "Member 'BP_MasterInventory_C_ParentWeightCheck::CurrentCountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, ParentInvL) == 0x000020, "Member 'BP_MasterInventory_C_ParentWeightCheck::ParentInvL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, Temp_int_Variable) == 0x000028, "Member 'BP_MasterInventory_C_ParentWeightCheck::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_IsValid_ReturnValue_1) == 0x000034, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_AddWeightCheck_CanAdd) == 0x000036, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_AddWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_AddWeightCheck_ItemCount) == 0x000038, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_AddWeightCheck_ItemCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ParentWeightCheck, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MasterInventory_C_ParentWeightCheck::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemainingFreeWeight
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterInventory_C_RemainingFreeWeight final
{
public:
	double                                        Param_RemainingFreeWeight;                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemainingFreeWeight) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RemainingFreeWeight");
static_assert(sizeof(BP_MasterInventory_C_RemainingFreeWeight) == 0x000048, "Wrong size on BP_MasterInventory_C_RemainingFreeWeight");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, Param_RemainingFreeWeight) == 0x000000, "Member 'BP_MasterInventory_C_RemainingFreeWeight::Param_RemainingFreeWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_RemainingFreeWeight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_RemainingFreeWeight::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'BP_MasterInventory_C_RemainingFreeWeight::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, CallFunc_Conv_StringToDouble_ReturnValue) == 0x000038, "Member 'BP_MasterInventory_C_RemainingFreeWeight::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingFreeWeight, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'BP_MasterInventory_C_RemainingFreeWeight::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemainingItemCount
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_RemainingItemCount final
{
public:
	int32                                         RemainingItemLimit;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemainingItemCount) == 0x000004, "Wrong alignment on BP_MasterInventory_C_RemainingItemCount");
static_assert(sizeof(BP_MasterInventory_C_RemainingItemCount) == 0x000008, "Wrong size on BP_MasterInventory_C_RemainingItemCount");
static_assert(offsetof(BP_MasterInventory_C_RemainingItemCount, RemainingItemLimit) == 0x000000, "Member 'BP_MasterInventory_C_RemainingItemCount::RemainingItemLimit' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemainingItemCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_MasterInventory_C_RemainingItemCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemoveItem
// 0x0068 (0x0068 - 0x0000)
struct BP_MasterInventory_C_RemoveItem final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          RemoveWeight;                                      // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveInvAmount;                                   // 0x0051(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpecialSlot;                                       // 0x0052(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B4[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_RemoveAdditionalChecks_self_CastInput; // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemoveItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RemoveItem");
static_assert(sizeof(BP_MasterInventory_C_RemoveItem) == 0x000068, "Wrong size on BP_MasterInventory_C_RemoveItem");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_RemoveItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, RemoveWeight) == 0x000050, "Member 'BP_MasterInventory_C_RemoveItem::RemoveWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, RemoveInvAmount) == 0x000051, "Member 'BP_MasterInventory_C_RemoveItem::RemoveInvAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, SpecialSlot) == 0x000052, "Member 'BP_MasterInventory_C_RemoveItem::SpecialSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, CallFunc_IsValid_ReturnValue) == 0x000053, "Member 'BP_MasterInventory_C_RemoveItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, CallFunc_IsValid_ReturnValue_1) == 0x000054, "Member 'BP_MasterInventory_C_RemoveItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItem, CallFunc_SGK_RemoveAdditionalChecks_self_CastInput) == 0x000058, "Member 'BP_MasterInventory_C_RemoveItem::CallFunc_SGK_RemoveAdditionalChecks_self_CastInput' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemoveItemAmount
// 0x0110 (0x0110 - 0x0000)
struct BP_MasterInventory_C_RemoveItemAmount final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpecialSlot;                                       // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemRemoved;                                       // 0x0055(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B5[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ItemAmountL;                                       // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B6[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlotL;                                          // 0x0060(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B7[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x00B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemoveItemAmount) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RemoveItemAmount");
static_assert(sizeof(BP_MasterInventory_C_RemoveItemAmount) == 0x000110, "Wrong size on BP_MasterInventory_C_RemoveItemAmount");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_RemoveItemAmount::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, Amount) == 0x000050, "Member 'BP_MasterInventory_C_RemoveItemAmount::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, SpecialSlot) == 0x000054, "Member 'BP_MasterInventory_C_RemoveItemAmount::SpecialSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, ItemRemoved) == 0x000055, "Member 'BP_MasterInventory_C_RemoveItemAmount::ItemRemoved' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, ItemAmountL) == 0x000058, "Member 'BP_MasterInventory_C_RemoveItemAmount::ItemAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, InvSlotL) == 0x000060, "Member 'BP_MasterInventory_C_RemoveItemAmount::InvSlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0000B0, "Member 'BP_MasterInventory_C_RemoveItemAmount::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0000B8, "Member 'BP_MasterInventory_C_RemoveItemAmount::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000108, "Member 'BP_MasterInventory_C_RemoveItemAmount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemAmount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00010C, "Member 'BP_MasterInventory_C_RemoveItemAmount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemoveItemWeight
// 0x11A0 (0x11A0 - 0x0000)
struct BP_MasterInventory_C_RemoveItemWeight final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveAll;                                         // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveParentWeight;                                // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B8[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  MasterInventory;                                   // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48B9[0xE];                                     // 0x08D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x08E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x1170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BA[0x3];                                     // 0x1175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x1178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x1180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x1188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BB[0x4];                                     // 0x118C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x1190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemoveItemWeight) == 0x000010, "Wrong alignment on BP_MasterInventory_C_RemoveItemWeight");
static_assert(sizeof(BP_MasterInventory_C_RemoveItemWeight) == 0x0011A0, "Wrong size on BP_MasterInventory_C_RemoveItemWeight");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, Item) == 0x000000, "Member 'BP_MasterInventory_C_RemoveItemWeight::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, Amount) == 0x000030, "Member 'BP_MasterInventory_C_RemoveItemWeight::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, RemoveAll) == 0x000034, "Member 'BP_MasterInventory_C_RemoveItemWeight::RemoveAll' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, RemoveParentWeight) == 0x000035, "Member 'BP_MasterInventory_C_RemoveItemWeight::RemoveParentWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, MasterInventory) == 0x000038, "Member 'BP_MasterInventory_C_RemoveItemWeight::MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, ItemDetailsL) == 0x000040, "Member 'BP_MasterInventory_C_RemoveItemWeight::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, Temp_bool_Variable) == 0x0008D0, "Member 'BP_MasterInventory_C_RemoveItemWeight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_SGK_ItemDetails_ItemFound) == 0x0008D1, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0008E0, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, K2Node_Select_Default) == 0x001170, "Member 'BP_MasterInventory_C_RemoveItemWeight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_IsValid_ReturnValue) == 0x001174, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_Multiply_IntFloat_ReturnValue) == 0x001178, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x001180, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_SelectInt_ReturnValue) == 0x001188, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveItemWeight, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x001190, "Member 'BP_MasterInventory_C_RemoveItemWeight::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemoveUsingPlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_RemoveUsingPlayer final
{
public:
	class UBP_PlayerInventory_C*                  Player_Inv;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemoveUsingPlayer) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RemoveUsingPlayer");
static_assert(sizeof(BP_MasterInventory_C_RemoveUsingPlayer) == 0x000010, "Wrong size on BP_MasterInventory_C_RemoveUsingPlayer");
static_assert(offsetof(BP_MasterInventory_C_RemoveUsingPlayer, Player_Inv) == 0x000000, "Member 'BP_MasterInventory_C_RemoveUsingPlayer::Player_Inv' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveUsingPlayer, CallFunc_Array_RemoveItem_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_RemoveUsingPlayer::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RemoveWeight
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterInventory_C_RemoveWeight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveParentWeight;                                // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BC[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  StopInventory;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BD[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RemoveWeight) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RemoveWeight");
static_assert(sizeof(BP_MasterInventory_C_RemoveWeight) == 0x000030, "Wrong size on BP_MasterInventory_C_RemoveWeight");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, Weight) == 0x000000, "Member 'BP_MasterInventory_C_RemoveWeight::Weight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, RemoveParentWeight) == 0x000008, "Member 'BP_MasterInventory_C_RemoveWeight::RemoveParentWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, StopInventory) == 0x000010, "Member 'BP_MasterInventory_C_RemoveWeight::StopInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000022, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_IsValid_ReturnValue_1) == 0x000023, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RemoveWeight, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_MasterInventory_C_RemoveWeight::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ReplaceUsingPlayers
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_ReplaceUsingPlayers final
{
public:
	TArray<class UBP_PlayerInventory_C*>          Players;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterInventory_C_ReplaceUsingPlayers) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ReplaceUsingPlayers");
static_assert(sizeof(BP_MasterInventory_C_ReplaceUsingPlayers) == 0x000010, "Wrong size on BP_MasterInventory_C_ReplaceUsingPlayers");
static_assert(offsetof(BP_MasterInventory_C_ReplaceUsingPlayers, Players) == 0x000000, "Member 'BP_MasterInventory_C_ReplaceUsingPlayers::Players' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ReplicateContainingInventories
// 0x0088 (0x0088 - 0x0000)
struct BP_MasterInventory_C_ReplicateContainingInventories final
{
public:
	bool                                          Replicate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BE[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48BF[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_AllItems_RootSlots;                       // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C0[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0030(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ReplicateContainingInventories) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ReplicateContainingInventories");
static_assert(sizeof(BP_MasterInventory_C_ReplicateContainingInventories) == 0x000088, "Wrong size on BP_MasterInventory_C_ReplicateContainingInventories");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, Replicate) == 0x000000, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::Replicate' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_IsStandalone_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_AllItems_RootSlots) == 0x000018, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_AllItems_RootSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ReplicateContainingInventories, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000082, "Member 'BP_MasterInventory_C_ReplicateContainingInventories::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.RequiredActorCraftingCheck
// 0x0318 (0x0318 - 0x0000)
struct BP_MasterInventory_C_RequiredActorCraftingCheck final
{
public:
	class FName                                   Recipe;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C1[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      RecipeL;                                           // 0x0010(0x0110)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FVector                                SearchLocationL;                                   // 0x0120(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  PawnL;                                             // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_RecipeDetails_ReturnValue;            // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C2[0x3];                                     // 0x0145(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingRecipe                      CallFunc_SGK_RecipeDetails_CraftingRecipe;         // 0x0148(0x0110)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C3[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0278(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0290(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C4[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C5[0x2];                                     // 0x02D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C6[0x7];                                     // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast; // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_RequiredActorCraftingCheck) == 0x000008, "Wrong alignment on BP_MasterInventory_C_RequiredActorCraftingCheck");
static_assert(sizeof(BP_MasterInventory_C_RequiredActorCraftingCheck) == 0x000318, "Wrong size on BP_MasterInventory_C_RequiredActorCraftingCheck");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, Recipe) == 0x000000, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::Recipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, RecipeL) == 0x000010, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::RecipeL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, SearchLocationL) == 0x000120, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::SearchLocationL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, PawnL) == 0x000138, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::PawnL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, Temp_int_Array_Index_Variable) == 0x000140, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_SGK_RecipeDetails_ReturnValue) == 0x000144, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_SGK_RecipeDetails_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_SGK_RecipeDetails_CraftingRecipe) == 0x000148, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_SGK_RecipeDetails_CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Array_Length_ReturnValue) == 0x000258, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, Temp_int_Loop_Counter_Variable) == 0x00025C, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x000260, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000264, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, K2Node_MakeArray_Array) == 0x000268, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, K2Node_MakeArray_Array_1) == 0x000278, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_GetOwner_ReturnValue) == 0x000288, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_SphereOverlapActors_OutActors) == 0x000290, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_SphereOverlapActors_ReturnValue) == 0x0002A0, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0002A8, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Array_Get_Item) == 0x0002C0, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_GetObjectClass_ReturnValue) == 0x0002C8, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0002D0, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Array_Contains_ReturnValue) == 0x0002D4, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0002D5, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_GetOwner_ReturnValue_1) == 0x0002D8, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002E0, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, K2Node_DynamicCast_AsController) == 0x0002F8, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_K2_GetPawn_ReturnValue) == 0x000308, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x000310, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_RequiredActorCraftingCheck, CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast) == 0x000314, "Member 'BP_MasterInventory_C_RequiredActorCraftingCheck::CallFunc_SphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SaveComponentData
// 0x0298 (0x0298 - 0x0000)
struct BP_MasterInventory_C_SaveComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x0008(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PrepareStorageSaveData_ExtraDataIndex;    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C7[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_PrepareStorageSaveData_NewLevelSaveData;  // 0x00F0(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C8[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x01C8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SaveComponentData) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SaveComponentData");
static_assert(sizeof(BP_MasterInventory_C_SaveComponentData) == 0x000298, "Wrong size on BP_MasterInventory_C_SaveComponentData");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, SaveGame) == 0x000000, "Member 'BP_MasterInventory_C_SaveComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, LevelSaveDataL) == 0x000008, "Member 'BP_MasterInventory_C_SaveComponentData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000D8, "Member 'BP_MasterInventory_C_SaveComponentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, CallFunc_PrepareStorageSaveData_ExtraDataIndex) == 0x0000E8, "Member 'BP_MasterInventory_C_SaveComponentData::CallFunc_PrepareStorageSaveData_ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, CallFunc_PrepareStorageSaveData_NewLevelSaveData) == 0x0000F0, "Member 'BP_MasterInventory_C_SaveComponentData::CallFunc_PrepareStorageSaveData_NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, CallFunc_SelectLevelSaveData_SaveFound) == 0x0001C0, "Member 'BP_MasterInventory_C_SaveComponentData::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SaveComponentData, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x0001C8, "Member 'BP_MasterInventory_C_SaveComponentData::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SearchForItem
// 0x0220 (0x0220 - 0x0000)
struct BP_MasterInventory_C_SearchForItem final
{
public:
	struct FDataTableRowHandle                    Item;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	int32                                         Amount;                                            // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveItems;                                       // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemFound;                                         // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48C9[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlot;                                           // 0x0018(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     ReturnItemsL;                                      // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          ReturnValueL;                                      // 0x0078(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CA[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ReturnItemL;                                       // 0x0080(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             ArrayItemL;                                        // 0x00D0(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         SearchAmountRemainingL;                            // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CB[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CC[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0140(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CD[0x3];                                     // 0x0195(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CE[0x2];                                     // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48CF[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x01B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D0[0x6];                                     // 0x01BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01C0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D1[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SearchForItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SearchForItem");
static_assert(sizeof(BP_MasterInventory_C_SearchForItem) == 0x000220, "Wrong size on BP_MasterInventory_C_SearchForItem");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Item) == 0x000000, "Member 'BP_MasterInventory_C_SearchForItem::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Amount) == 0x000010, "Member 'BP_MasterInventory_C_SearchForItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, RemoveItems) == 0x000014, "Member 'BP_MasterInventory_C_SearchForItem::RemoveItems' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, ItemFound) == 0x000015, "Member 'BP_MasterInventory_C_SearchForItem::ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, InvSlot) == 0x000018, "Member 'BP_MasterInventory_C_SearchForItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, ReturnItemsL) == 0x000068, "Member 'BP_MasterInventory_C_SearchForItem::ReturnItemsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, ReturnValueL) == 0x000078, "Member 'BP_MasterInventory_C_SearchForItem::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, ReturnItemL) == 0x000080, "Member 'BP_MasterInventory_C_SearchForItem::ReturnItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, ArrayItemL) == 0x0000D0, "Member 'BP_MasterInventory_C_SearchForItem::ArrayItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, SearchAmountRemainingL) == 0x000120, "Member 'BP_MasterInventory_C_SearchForItem::SearchAmountRemainingL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Temp_int_Array_Index_Variable) == 0x000124, "Member 'BP_MasterInventory_C_SearchForItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Temp_bool_True_if_break_was_hit_Variable) == 0x000128, "Member 'BP_MasterInventory_C_SearchForItem::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Temp_int_Loop_Counter_Variable) == 0x00012C, "Member 'BP_MasterInventory_C_SearchForItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Add_IntInt_ReturnValue) == 0x000130, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Not_PreBool_ReturnValue) == 0x000134, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Temp_int_Array_Index_Variable_1) == 0x000138, "Member 'BP_MasterInventory_C_SearchForItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Subtract_IntInt_ReturnValue) == 0x00013C, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000190, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000194, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Array_Length_ReturnValue) == 0x000198, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00019C, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0001A0, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0001A1, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, Temp_int_Loop_Counter_Variable_1) == 0x0001A4, "Member 'BP_MasterInventory_C_SearchForItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Less_IntInt_ReturnValue) == 0x0001A8, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001AC, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Array_Add_ReturnValue) == 0x0001B0, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001B4, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0001B9, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Array_Get_Item_1) == 0x0001C0, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000210, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000211, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_SGK_IsRootSlot_RootIndex) == 0x000214, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021C, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SearchForItem, CallFunc_BooleanAND_ReturnValue) == 0x00021D, "Member 'BP_MasterInventory_C_SearchForItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerAddClientCraftingListing
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterInventory_C_ServerAddClientCraftingListing final
{
public:
	struct FS_CraftingQueue                       NewQueueListing;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D2[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerAddClientCraftingListing) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerAddClientCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_ServerAddClientCraftingListing) == 0x000020, "Wrong size on BP_MasterInventory_C_ServerAddClientCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_ServerAddClientCraftingListing, NewQueueListing) == 0x000000, "Member 'BP_MasterInventory_C_ServerAddClientCraftingListing::NewQueueListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ServerAddClientCraftingListing, CraftingInventory) == 0x000018, "Member 'BP_MasterInventory_C_ServerAddClientCraftingListing::CraftingInventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerAddItem
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterInventory_C_ServerAddItem final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerAddItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerAddItem");
static_assert(sizeof(BP_MasterInventory_C_ServerAddItem) == 0x000030, "Wrong size on BP_MasterInventory_C_ServerAddItem");
static_assert(offsetof(BP_MasterInventory_C_ServerAddItem, Item) == 0x000000, "Member 'BP_MasterInventory_C_ServerAddItem::Item' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerCancelCraftingListing
// 0x0014 (0x0014 - 0x0000)
struct BP_MasterInventory_C_ServerCancelCraftingListing final
{
public:
	struct FS_CraftingQueue                       CancelQueue;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerCancelCraftingListing) == 0x000004, "Wrong alignment on BP_MasterInventory_C_ServerCancelCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_ServerCancelCraftingListing) == 0x000014, "Wrong size on BP_MasterInventory_C_ServerCancelCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_ServerCancelCraftingListing, CancelQueue) == 0x000000, "Member 'BP_MasterInventory_C_ServerCancelCraftingListing::CancelQueue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerCreateNewListingCheck
// 0x000C (0x000C - 0x0000)
struct BP_MasterInventory_C_ServerCreateNewListingCheck final
{
public:
	class FName                                   RecipeName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerCreateNewListingCheck) == 0x000004, "Wrong alignment on BP_MasterInventory_C_ServerCreateNewListingCheck");
static_assert(sizeof(BP_MasterInventory_C_ServerCreateNewListingCheck) == 0x00000C, "Wrong size on BP_MasterInventory_C_ServerCreateNewListingCheck");
static_assert(offsetof(BP_MasterInventory_C_ServerCreateNewListingCheck, RecipeName) == 0x000000, "Member 'BP_MasterInventory_C_ServerCreateNewListingCheck::RecipeName' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ServerCreateNewListingCheck, Amount) == 0x000008, "Member 'BP_MasterInventory_C_ServerCreateNewListingCheck::Amount' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerEmptyInventory
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_ServerEmptyInventory final
{
public:
	class UBP_MasterInventory_C*                  StartInventory;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerEmptyInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerEmptyInventory");
static_assert(sizeof(BP_MasterInventory_C_ServerEmptyInventory) == 0x000008, "Wrong size on BP_MasterInventory_C_ServerEmptyInventory");
static_assert(offsetof(BP_MasterInventory_C_ServerEmptyInventory, StartInventory) == 0x000000, "Member 'BP_MasterInventory_C_ServerEmptyInventory::StartInventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerStartClientListingTimer
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventory_C_ServerStartClientListingTimer final
{
public:
	class FName                                   CraftingRecipe;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerStartClientListingTimer) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerStartClientListingTimer");
static_assert(sizeof(BP_MasterInventory_C_ServerStartClientListingTimer) == 0x000010, "Wrong size on BP_MasterInventory_C_ServerStartClientListingTimer");
static_assert(offsetof(BP_MasterInventory_C_ServerStartClientListingTimer, CraftingRecipe) == 0x000000, "Member 'BP_MasterInventory_C_ServerStartClientListingTimer::CraftingRecipe' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ServerStartClientListingTimer, CraftingInventory) == 0x000008, "Member 'BP_MasterInventory_C_ServerStartClientListingTimer::CraftingInventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerUpdateClientCraftingListing
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterInventory_C_ServerUpdateClientCraftingListing final
{
public:
	struct FS_CraftingQueue                       NewQueueListing;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CraftingInventory;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerUpdateClientCraftingListing) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerUpdateClientCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_ServerUpdateClientCraftingListing) == 0x000020, "Wrong size on BP_MasterInventory_C_ServerUpdateClientCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_ServerUpdateClientCraftingListing, NewQueueListing) == 0x000000, "Member 'BP_MasterInventory_C_ServerUpdateClientCraftingListing::NewQueueListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_ServerUpdateClientCraftingListing, CraftingInventory) == 0x000018, "Member 'BP_MasterInventory_C_ServerUpdateClientCraftingListing::CraftingInventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.ServerUpdateItemSlots
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_ServerUpdateItemSlots final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_ServerUpdateItemSlots) == 0x000008, "Wrong alignment on BP_MasterInventory_C_ServerUpdateItemSlots");
static_assert(sizeof(BP_MasterInventory_C_ServerUpdateItemSlots) == 0x000008, "Wrong size on BP_MasterInventory_C_ServerUpdateItemSlots");
static_assert(offsetof(BP_MasterInventory_C_ServerUpdateItemSlots, PlayerInventory) == 0x000000, "Member 'BP_MasterInventory_C_ServerUpdateItemSlots::PlayerInventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SetItemAmount
// 0x0170 (0x0170 - 0x0000)
struct BP_MasterInventory_C_SetItemAmount final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         SetAmount;                                         // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeCount;                                       // 0x0054(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Special;                                           // 0x0055(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D4[0x2];                                     // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             InvItemL;                                          // 0x0058(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0088(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D5[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x00C0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D6[0x4];                                     // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_2;                // 0x00F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D7[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_3;                // 0x0130(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateSpecialSlot_self_CastInput;     // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SetItemAmount) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SetItemAmount");
static_assert(sizeof(BP_MasterInventory_C_SetItemAmount) == 0x000170, "Wrong size on BP_MasterInventory_C_SetItemAmount");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_SetItemAmount::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, SetAmount) == 0x000050, "Member 'BP_MasterInventory_C_SetItemAmount::SetAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, ChangeCount) == 0x000054, "Member 'BP_MasterInventory_C_SetItemAmount::ChangeCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, Special) == 0x000055, "Member 'BP_MasterInventory_C_SetItemAmount::Special' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, InvItemL) == 0x000058, "Member 'BP_MasterInventory_C_SetItemAmount::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_SGK_InvSlotItem_InvItem) == 0x000088, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x0000C0, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_SGK_InvSlotItem_InvItem_2) == 0x0000F8, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_SGK_InvSlotItem_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000128, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_SGK_InvSlotItem_InvItem_3) == 0x000130, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_SGK_InvSlotItem_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetItemAmount, CallFunc_SGK_UpdateSpecialSlot_self_CastInput) == 0x000160, "Member 'BP_MasterInventory_C_SetItemAmount::CallFunc_SGK_UpdateSpecialSlot_self_CastInput' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SetNewSlotItem
// 0x0270 (0x0270 - 0x0000)
struct BP_MasterInventory_C_SetNewSlotItem final
{
public:
	struct FS_InvSlot                             RootSlot;                                          // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             NewItem;                                           // 0x0050(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SpecialSlot;                                       // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D8[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             RootL;                                             // 0x0088(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x00D8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48D9[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DA[0x3];                                     // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DB[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DC[0x3];                                     // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_ItemMovedInInventory_self_CastInput;  // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateSpecialSlot_self_CastInput;     // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_ItemMovedInInventory_self_CastInput_1; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_UpdateSpecialSlot_self_CastInput_1;   // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_1;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_1;                     // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_2;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_2;                     // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_3;                    // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_3;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_4;                    // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_4;                     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DD[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0180(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots_1;            // 0x01A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x01B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x0200(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_5;                    // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_5;                     // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x025C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DE[0x3];                                     // 0x025D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots_1;              // 0x0260(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterInventory_C_SetNewSlotItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SetNewSlotItem");
static_assert(sizeof(BP_MasterInventory_C_SetNewSlotItem) == 0x000270, "Wrong size on BP_MasterInventory_C_SetNewSlotItem");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, RootSlot) == 0x000000, "Member 'BP_MasterInventory_C_SetNewSlotItem::RootSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, NewItem) == 0x000050, "Member 'BP_MasterInventory_C_SetNewSlotItem::NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, SpecialSlot) == 0x000080, "Member 'BP_MasterInventory_C_SetNewSlotItem::SpecialSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, RootL) == 0x000088, "Member 'BP_MasterInventory_C_SetNewSlotItem::RootL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, FoundSlotsL) == 0x0000D8, "Member 'BP_MasterInventory_C_SetNewSlotItem::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_bool_Variable) == 0x0000E8, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_int_Variable) == 0x0000EC, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_bool_Variable_1) == 0x0000F0, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_int_Variable_1) == 0x0000F4, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_bool_Variable_2) == 0x0000F8, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_int_Variable_2) == 0x0000FC, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_bool_Variable_3) == 0x000100, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, Temp_int_Variable_3) == 0x000104, "Member 'BP_MasterInventory_C_SetNewSlotItem::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemMovedInInventory_self_CastInput) == 0x000108, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemMovedInInventory_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_UpdateSpecialSlot_self_CastInput) == 0x000118, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_UpdateSpecialSlot_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemMovedInInventory_self_CastInput_1) == 0x000128, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemMovedInInventory_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_UpdateSpecialSlot_self_CastInput_1) == 0x000138, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_UpdateSpecialSlot_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height) == 0x000148, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width) == 0x00014C, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height_1) == 0x000150, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width_1) == 0x000154, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, K2Node_Select_Default) == 0x000158, "Member 'BP_MasterInventory_C_SetNewSlotItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, K2Node_Select_Default_1) == 0x00015C, "Member 'BP_MasterInventory_C_SetNewSlotItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height_2) == 0x000160, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width_2) == 0x000164, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, K2Node_Select_Default_2) == 0x000168, "Member 'BP_MasterInventory_C_SetNewSlotItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height_3) == 0x00016C, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width_3) == 0x000170, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height_4) == 0x000174, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width_4) == 0x000178, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000180, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000190, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_UpdateInvSlots_UpdatedSlots_1) == 0x0001A0, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_UpdateInvSlots_UpdatedSlots_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Height_5) == 0x000250, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Height_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_ItemSize_Width_5) == 0x000254, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_ItemSize_Width_5' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, K2Node_Select_Default_3) == 0x000258, "Member 'BP_MasterInventory_C_SetNewSlotItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_Greater_IntInt_ReturnValue) == 0x00025C, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SetNewSlotItem, CallFunc_SGK_SlotFinder_FoundSlots_1) == 0x000260, "Member 'BP_MasterInventory_C_SetNewSlotItem::CallFunc_SGK_SlotFinder_FoundSlots_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK AllowStartingItems
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterInventory_C_SGK_AllowStartingItems final
{
public:
	bool                                          AllowStartingItems;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong alignment on BP_MasterInventory_C_SGK_AllowStartingItems");
static_assert(sizeof(BP_MasterInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong size on BP_MasterInventory_C_SGK_AllowStartingItems");
static_assert(offsetof(BP_MasterInventory_C_SGK_AllowStartingItems, AllowStartingItems) == 0x000000, "Member 'BP_MasterInventory_C_SGK_AllowStartingItems::AllowStartingItems' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK ItemSound
// 0x000C (0x000C - 0x0000)
struct BP_MasterInventory_C_SGK_ItemSound final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      SoundType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_ItemSound) == 0x000004, "Wrong alignment on BP_MasterInventory_C_SGK_ItemSound");
static_assert(sizeof(BP_MasterInventory_C_SGK_ItemSound) == 0x00000C, "Wrong size on BP_MasterInventory_C_SGK_ItemSound");
static_assert(offsetof(BP_MasterInventory_C_SGK_ItemSound, ItemId) == 0x000000, "Member 'BP_MasterInventory_C_SGK_ItemSound::ItemId' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SGK_ItemSound, SoundType) == 0x000008, "Member 'BP_MasterInventory_C_SGK_ItemSound::SoundType' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK LoadWeaponAttachments
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterInventory_C_SGK_LoadWeaponAttachments final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong alignment on BP_MasterInventory_C_SGK_LoadWeaponAttachments");
static_assert(sizeof(BP_MasterInventory_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong size on BP_MasterInventory_C_SGK_LoadWeaponAttachments");
static_assert(offsetof(BP_MasterInventory_C_SGK_LoadWeaponAttachments, Visible) == 0x000000, "Member 'BP_MasterInventory_C_SGK_LoadWeaponAttachments::Visible' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK RemoveAdditionalChecks
// 0x0050 (0x0050 - 0x0000)
struct BP_MasterInventory_C_SGK_RemoveAdditionalChecks final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_RemoveAdditionalChecks) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGK_RemoveAdditionalChecks");
static_assert(sizeof(BP_MasterInventory_C_SGK_RemoveAdditionalChecks) == 0x000050, "Wrong size on BP_MasterInventory_C_SGK_RemoveAdditionalChecks");
static_assert(offsetof(BP_MasterInventory_C_SGK_RemoveAdditionalChecks, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_SGK_RemoveAdditionalChecks::InvSlot' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK RemoveAttachment
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterInventory_C_SGK_RemoveAttachment final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_RemoveAttachment) == 0x000001, "Wrong alignment on BP_MasterInventory_C_SGK_RemoveAttachment");
static_assert(sizeof(BP_MasterInventory_C_SGK_RemoveAttachment) == 0x000001, "Wrong size on BP_MasterInventory_C_SGK_RemoveAttachment");
static_assert(offsetof(BP_MasterInventory_C_SGK_RemoveAttachment, Attachment) == 0x000000, "Member 'BP_MasterInventory_C_SGK_RemoveAttachment::Attachment' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK SelfItem
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterInventory_C_SGK_SelfItem final
{
public:
	struct FS_InvItem                             SelfItem;                                          // 0x0000(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_SelfItem) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGK_SelfItem");
static_assert(sizeof(BP_MasterInventory_C_SGK_SelfItem) == 0x000030, "Wrong size on BP_MasterInventory_C_SGK_SelfItem");
static_assert(offsetof(BP_MasterInventory_C_SGK_SelfItem, SelfItem) == 0x000000, "Member 'BP_MasterInventory_C_SGK_SelfItem::SelfItem' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK SpawnOverflowItems
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterInventory_C_SGK_SpawnOverflowItems final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_SpawnOverflowItems) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGK_SpawnOverflowItems");
static_assert(sizeof(BP_MasterInventory_C_SGK_SpawnOverflowItems) == 0x000030, "Wrong size on BP_MasterInventory_C_SGK_SpawnOverflowItems");
static_assert(offsetof(BP_MasterInventory_C_SGK_SpawnOverflowItems, InvItem) == 0x000000, "Member 'BP_MasterInventory_C_SGK_SpawnOverflowItems::InvItem' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK UpdateCharacterYaw
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_SGK_UpdateCharacterYaw final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGK_UpdateCharacterYaw");
static_assert(sizeof(BP_MasterInventory_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong size on BP_MasterInventory_C_SGK_UpdateCharacterYaw");
static_assert(offsetof(BP_MasterInventory_C_SGK_UpdateCharacterYaw, Pawn) == 0x000000, "Member 'BP_MasterInventory_C_SGK_UpdateCharacterYaw::Pawn' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGK UpdateSpecialSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_MasterInventory_C_SGK_UpdateSpecialSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGK_UpdateSpecialSlot) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGK_UpdateSpecialSlot");
static_assert(sizeof(BP_MasterInventory_C_SGK_UpdateSpecialSlot) == 0x000050, "Wrong size on BP_MasterInventory_C_SGK_UpdateSpecialSlot");
static_assert(offsetof(BP_MasterInventory_C_SGK_UpdateSpecialSlot, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_SGK_UpdateSpecialSlot::InvSlot' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SGKSave
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_SGKSave final
{
public:
	class UBP_SGKSaveGame_C*                      Save;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SGKSave) == 0x000008, "Wrong alignment on BP_MasterInventory_C_SGKSave");
static_assert(sizeof(BP_MasterInventory_C_SGKSave) == 0x000008, "Wrong size on BP_MasterInventory_C_SGKSave");
static_assert(offsetof(BP_MasterInventory_C_SGKSave, Save) == 0x000000, "Member 'BP_MasterInventory_C_SGKSave::Save' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SpawnDestructionBag
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MasterInventory_C_SpawnDestructionBag final
{
public:
	class UBP_MasterInventory_C*                  InventoryL;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48DF[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E0[0x8];                                     // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DestroyedStorageBag_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SpawnDestructionBag) == 0x000010, "Wrong alignment on BP_MasterInventory_C_SpawnDestructionBag");
static_assert(sizeof(BP_MasterInventory_C_SpawnDestructionBag) == 0x0000A0, "Wrong size on BP_MasterInventory_C_SpawnDestructionBag");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, InventoryL) == 0x000000, "Member 'BP_MasterInventory_C_SpawnDestructionBag::InventoryL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000080, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_FinishSpawningActor_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnDestructionBag, CallFunc_GetComponentByClass_ReturnValue) == 0x000090, "Member 'BP_MasterInventory_C_SpawnDestructionBag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SpawnItemAtLocation
// 0x09A0 (0x09A0 - 0x0000)
struct BP_MasterInventory_C_SpawnItemAtLocation final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItem;                                           // 0x0060(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x0090(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E1[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E2[0xF];                                     // 0x00D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0980(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DropItem_ReturnValue;                 // 0x0991(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_SpawnItemAtLocation) == 0x000010, "Wrong alignment on BP_MasterInventory_C_SpawnItemAtLocation");
static_assert(sizeof(BP_MasterInventory_C_SpawnItemAtLocation) == 0x0009A0, "Wrong size on BP_MasterInventory_C_SpawnItemAtLocation");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, Transform) == 0x000000, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::Transform' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, InvItem) == 0x000060, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, ItemL) == 0x000090, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::ItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_GetOwner_ReturnValue) == 0x0000C8, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000D0, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000E0, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000970, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_FinishSpawningActor_ReturnValue) == 0x000978, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000980, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, K2Node_DynamicCast_bSuccess) == 0x000990, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItemAtLocation, CallFunc_SGK_DropItem_ReturnValue) == 0x000991, "Member 'BP_MasterInventory_C_SpawnItemAtLocation::CallFunc_SGK_DropItem_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.SpawnItems
// 0x1370 (0x1370 - 0x0000)
struct BP_MasterInventory_C_SpawnItems final
{
public:
	struct FS_InvItem                             NewItemL;                                          // 0x0000(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         SpawnAmountL;                                      // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E3[0xC];                                     // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         SpawnItemDetailsL;                                 // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         AlwaysSpawnNumOfChecks;                            // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E4[0x4];                                     // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SpawnerList                         SpawnItemL;                                        // 0x08D8(0x0070)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<struct FS_SpawnerList>                 SpawnListL;                                        // 0x0948(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x095C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E5[0x3];                                     // 0x095D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x096C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E6[0x3];                                     // 0x096D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0974(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E7[0x3];                                     // 0x0975(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0978(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x09A8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x09B8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x09E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x09E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E8[0x6];                                     // 0x09EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x09F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48E9[0x6];                                     // 0x0A02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0A10(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EA[0x7];                                     // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EB[0x4];                                     // 0x0A34(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0A38(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EC[0x4];                                     // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0A70(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0AA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0AA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48ED[0xE];                                     // 0x0AA2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0AB0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EE[0x3];                                     // 0x1341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x1348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x134C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_2;       // 0x1350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x1354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48EF[0x3];                                     // 0x1355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_SpawnerList>                 CallFunc_ConstructItemSpawnList_SpawnList;         // 0x1358(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_MasterInventory_C_SpawnItems) == 0x000010, "Wrong alignment on BP_MasterInventory_C_SpawnItems");
static_assert(sizeof(BP_MasterInventory_C_SpawnItems) == 0x001370, "Wrong size on BP_MasterInventory_C_SpawnItems");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, NewItemL) == 0x000000, "Member 'BP_MasterInventory_C_SpawnItems::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, SpawnAmountL) == 0x000030, "Member 'BP_MasterInventory_C_SpawnItems::SpawnAmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, SpawnItemDetailsL) == 0x000040, "Member 'BP_MasterInventory_C_SpawnItems::SpawnItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, AlwaysSpawnNumOfChecks) == 0x0008D0, "Member 'BP_MasterInventory_C_SpawnItems::AlwaysSpawnNumOfChecks' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, SpawnItemL) == 0x0008D8, "Member 'BP_MasterInventory_C_SpawnItems::SpawnItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, SpawnListL) == 0x000948, "Member 'BP_MasterInventory_C_SpawnItems::SpawnListL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Array_Length_ReturnValue) == 0x000958, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Greater_IntInt_ReturnValue) == 0x00095C, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000960, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, Temp_int_Variable) == 0x000964, "Member 'BP_MasterInventory_C_SpawnItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, Temp_int_Variable_1) == 0x000968, "Member 'BP_MasterInventory_C_SpawnItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00096C, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Add_IntInt_ReturnValue) == 0x000970, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_AddItem_RemainingItem) == 0x000974, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_AddItem_RemainingInvItem) == 0x000978, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_AddItem_NewItemSlot) == 0x0009A8, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, K2Node_MakeStruct_S_InvItem) == 0x0009B8, "Member 'BP_MasterInventory_C_SpawnItems::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_FindEmptySlots_SpaceFound) == 0x0009E8, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_FindEmptySlots_Rotated) == 0x0009E9, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_FindEmptySlots_FoundSlots) == 0x0009F0, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000A00, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_IsValid_ReturnValue) == 0x000A01, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_GetGameMode_ReturnValue) == 0x000A08, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000A10, "Member 'BP_MasterInventory_C_SpawnItems::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, K2Node_DynamicCast_bSuccess) == 0x000A20, "Member 'BP_MasterInventory_C_SpawnItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000A28, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000A30, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_CreateNewItem_NewItem) == 0x000A38, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Array_Length_ReturnValue_1) == 0x000A68, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, K2Node_MakeStruct_S_InvItem_1) == 0x000A70, "Member 'BP_MasterInventory_C_SpawnItems::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000AA0, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_SGK_ItemDetails_ItemFound) == 0x000AA1, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000AB0, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Less_IntInt_ReturnValue) == 0x001340, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x001344, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Array_Length_ReturnValue_2) == 0x001348, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x00134C, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_RandomIntegerInRange_ReturnValue_2) == 0x001350, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_RandomIntegerInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x001354, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_SpawnItems, CallFunc_ConstructItemSpawnList_SpawnList) == 0x001358, "Member 'BP_MasterInventory_C_SpawnItems::CallFunc_ConstructItemSpawnList_SpawnList' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.TotalItemAmount
// 0x09D0 (0x09D0 - 0x0000)
struct BP_MasterInventory_C_TotalItemAmount final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         TotalAmount;                                       // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountL;                                           // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0038(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F0[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0090(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F1[0xF];                                     // 0x00C1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00D0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F2[0x4];                                     // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0970(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x09C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x09C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_TotalItemAmount) == 0x000010, "Wrong alignment on BP_MasterInventory_C_TotalItemAmount");
static_assert(sizeof(BP_MasterInventory_C_TotalItemAmount) == 0x0009D0, "Wrong size on BP_MasterInventory_C_TotalItemAmount");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, InvItem) == 0x000000, "Member 'BP_MasterInventory_C_TotalItemAmount::InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, TotalAmount) == 0x000030, "Member 'BP_MasterInventory_C_TotalItemAmount::TotalAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, AmountL) == 0x000034, "Member 'BP_MasterInventory_C_TotalItemAmount::AmountL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, ArrayElementL) == 0x000038, "Member 'BP_MasterInventory_C_TotalItemAmount::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BP_MasterInventory_C_TotalItemAmount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, K2Node_MakeStruct_S_InvItem) == 0x000090, "Member 'BP_MasterInventory_C_TotalItemAmount::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000C0, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000D0, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, Temp_int_Loop_Counter_Variable) == 0x000960, "Member 'BP_MasterInventory_C_TotalItemAmount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_Add_IntInt_ReturnValue) == 0x000964, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_Add_IntInt_ReturnValue_1) == 0x000968, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_Array_Get_Item) == 0x000970, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_Array_Length_ReturnValue) == 0x0009C0, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_Less_IntInt_ReturnValue) == 0x0009C4, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_TotalItemAmount, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0009C5, "Member 'BP_MasterInventory_C_TotalItemAmount::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateAllPlayersRootItems
// 0x01C0 (0x01C0 - 0x0000)
struct BP_MasterInventory_C_UpdateAllPlayersRootItems final
{
public:
	bool                                          FullUpdate;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  NewLocalVar_0;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_PlayerInventory_C*>          EffectedPlayers;                                   // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     RootSlotsL;                                        // 0x0020(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvSlot                             SlotL;                                             // 0x0030(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F4[0x3];                                     // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F5[0x1];                                     // 0x00B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F6[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x00C8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F7[0x2];                                     // 0x011E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x0120(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F8[0x2];                                     // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_AllItems_RootSlots;                       // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_AllItems_RootSlots_1;                     // 0x0188(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_2;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48F9[0x2];                                     // 0x01A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FA[0x3];                                     // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_3;                         // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x01BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateAllPlayersRootItems) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateAllPlayersRootItems");
static_assert(sizeof(BP_MasterInventory_C_UpdateAllPlayersRootItems) == 0x0001C0, "Wrong size on BP_MasterInventory_C_UpdateAllPlayersRootItems");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, FullUpdate) == 0x000000, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::FullUpdate' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, NewLocalVar_0) == 0x000008, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, EffectedPlayers) == 0x000010, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::EffectedPlayers' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, RootSlotsL) == 0x000020, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::RootSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, SlotL) == 0x000030, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::SlotL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Loop_Counter_Variable) == 0x000080, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Loop_Counter_Variable_1) == 0x000084, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Array_Index_Variable) == 0x000090, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue) == 0x000094, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Array_Index_Variable_1) == 0x000098, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Array_Index_Variable_2) == 0x00009C, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Loop_Counter_Variable_2) == 0x0000A0, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000A4, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Array_Index_Variable_3) == 0x0000A8, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Variable) == 0x0000AC, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000B0, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_bool_Variable) == 0x0000B5, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Not_PreBool_ReturnValue) == 0x0000B6, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, Temp_int_Loop_Counter_Variable_3) == 0x0000B8, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000BC, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Length_ReturnValue) == 0x000118, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Less_IntInt_ReturnValue) == 0x00011C, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue_1) == 0x00011D, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Get_Item_1) == 0x000120, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Length_ReturnValue_1) == 0x000170, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000174, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue_2) == 0x000175, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_AllItems_RootSlots) == 0x000178, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_AllItems_RootSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_AllItems_RootSlots_1) == 0x000188, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_AllItems_RootSlots_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Get_Item_2) == 0x000198, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Length_ReturnValue_2) == 0x0001A0, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue_3) == 0x0001A4, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A5, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Length_ReturnValue_3) == 0x0001A8, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Greater_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Get_Item_3) == 0x0001B0, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Array_Length_ReturnValue_4) == 0x0001B8, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue_4) == 0x0001BC, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_Less_IntInt_ReturnValue_3) == 0x0001BD, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateAllPlayersRootItems, CallFunc_IsValid_ReturnValue_5) == 0x0001BE, "Member 'BP_MasterInventory_C_UpdateAllPlayersRootItems::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateCraftingListing
// 0x0058 (0x0058 - 0x0000)
struct BP_MasterInventory_C_UpdateCraftingListing final
{
public:
	struct FS_CraftingQueue                       CraftingListing;                                   // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AdditionalAmount;                                  // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       Output;                                            // 0x0018(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       CallFunc_Array_Get_Item;                           // 0x002C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       K2Node_MakeStruct_S_CraftingQueue;                 // 0x0044(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateCraftingListing) == 0x000004, "Wrong alignment on BP_MasterInventory_C_UpdateCraftingListing");
static_assert(sizeof(BP_MasterInventory_C_UpdateCraftingListing) == 0x000058, "Wrong size on BP_MasterInventory_C_UpdateCraftingListing");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, CraftingListing) == 0x000000, "Member 'BP_MasterInventory_C_UpdateCraftingListing::CraftingListing' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, AdditionalAmount) == 0x000014, "Member 'BP_MasterInventory_C_UpdateCraftingListing::AdditionalAmount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, Output) == 0x000018, "Member 'BP_MasterInventory_C_UpdateCraftingListing::Output' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_MasterInventory_C_UpdateCraftingListing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_MasterInventory_C_UpdateCraftingListing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingListing, K2Node_MakeStruct_S_CraftingQueue) == 0x000044, "Member 'BP_MasterInventory_C_UpdateCraftingListing::K2Node_MakeStruct_S_CraftingQueue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateCraftingTimes
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterInventory_C_UpdateCraftingTimes final
{
public:
	int32                                         ArrayIndexL;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CraftingQueue                       ArrayElementL;                                     // 0x0004(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FB[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Time_11_9993BFEA402CAC099D6A0699AF2D4479_ImplicitCast; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateCraftingTimes) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateCraftingTimes");
static_assert(sizeof(BP_MasterInventory_C_UpdateCraftingTimes) == 0x000048, "Wrong size on BP_MasterInventory_C_UpdateCraftingTimes");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, ArrayIndexL) == 0x000000, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, ArrayElementL) == 0x000004, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000038, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateCraftingTimes, K2Node_SetFieldsInStruct_Time_11_9993BFEA402CAC099D6A0699AF2D4479_ImplicitCast) == 0x000040, "Member 'BP_MasterInventory_C_UpdateCraftingTimes::K2Node_SetFieldsInStruct_Time_11_9993BFEA402CAC099D6A0699AF2D4479_ImplicitCast' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateInvSlots
// 0x01E8 (0x01E8 - 0x0000)
struct BP_MasterInventory_C_UpdateInvSlots final
{
public:
	TArray<struct FS_InvSlot>                     InvSlots;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_InvItem                             InvItem;                                           // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     UpdatedSlots;                                      // 0x0040(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     UpdatedSlotsL;                                     // 0x0050(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          OccupiedL;                                         // 0x0060(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FC[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RootL;                                             // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ArrayElementL;                                     // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FD[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FE[0x3];                                     // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48FF[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0088(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x00D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4900[0x3];                                     // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0130(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x0180(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4901[0x3];                                     // 0x01D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4902[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateInvSlots) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateInvSlots");
static_assert(sizeof(BP_MasterInventory_C_UpdateInvSlots) == 0x0001E8, "Wrong size on BP_MasterInventory_C_UpdateInvSlots");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, InvSlots) == 0x000000, "Member 'BP_MasterInventory_C_UpdateInvSlots::InvSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, InvItem) == 0x000010, "Member 'BP_MasterInventory_C_UpdateInvSlots::InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, UpdatedSlots) == 0x000040, "Member 'BP_MasterInventory_C_UpdateInvSlots::UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, UpdatedSlotsL) == 0x000050, "Member 'BP_MasterInventory_C_UpdateInvSlots::UpdatedSlotsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, OccupiedL) == 0x000060, "Member 'BP_MasterInventory_C_UpdateInvSlots::OccupiedL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, RootL) == 0x000064, "Member 'BP_MasterInventory_C_UpdateInvSlots::RootL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, ArrayElementL) == 0x000068, "Member 'BP_MasterInventory_C_UpdateInvSlots::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, Temp_bool_Variable) == 0x00006C, "Member 'BP_MasterInventory_C_UpdateInvSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x00006D, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_MasterInventory_C_UpdateInvSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000074, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_MasterInventory_C_UpdateInvSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Get_Item_1) == 0x0000D8, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Length_ReturnValue) == 0x000128, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Less_IntInt_ReturnValue) == 0x00012C, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Get_Item_2) == 0x000130, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Get_Item_3) == 0x000180, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, K2Node_Select_Default) == 0x0001D0, "Member 'BP_MasterInventory_C_UpdateInvSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001D4, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Add_ReturnValue) == 0x0001D8, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0001DC, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateInvSlots, CallFunc_Array_Add_ReturnValue_1) == 0x0001E0, "Member 'BP_MasterInventory_C_UpdateInvSlots::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateItemInventory
// 0x0078 (0x0078 - 0x0000)
struct BP_MasterInventory_C_UpdateItemInventory final
{
public:
	struct FS_InvItem                             ItemL;                                             // 0x0000(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4903[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4904[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_InventoryItemIcon_C*>        CallFunc_FindGridIcon_IconWidget;                  // 0x0058(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateItemInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateItemInventory");
static_assert(sizeof(BP_MasterInventory_C_UpdateItemInventory) == 0x000078, "Wrong size on BP_MasterInventory_C_UpdateItemInventory");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, ItemL) == 0x000000, "Member 'BP_MasterInventory_C_UpdateItemInventory::ItemL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_MasterInventory_C_UpdateItemInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_MasterInventory_C_UpdateItemInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00003C, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_GetPlayerController_ReturnValue) == 0x000040, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x000048, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_FindGridIcon_IconWidget) == 0x000058, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_FindGridIcon_IconWidget' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateItemInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'BP_MasterInventory_C_UpdateItemInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateParentInventory
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventory_C_UpdateParentInventory final
{
public:
	class UBP_MasterInventory_C*                  Param_Inventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateParentInventory) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateParentInventory");
static_assert(sizeof(BP_MasterInventory_C_UpdateParentInventory) == 0x000008, "Wrong size on BP_MasterInventory_C_UpdateParentInventory");
static_assert(offsetof(BP_MasterInventory_C_UpdateParentInventory, Param_Inventory) == 0x000000, "Member 'BP_MasterInventory_C_UpdateParentInventory::Param_Inventory' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.UpdateSlotOnUsingPlayers
// 0x00E0 (0x00E0 - 0x0000)
struct BP_MasterInventory_C_UpdateSlotOnUsingPlayers final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Height;                                            // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Width;                                             // 0x0054(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Was_Rotated;                                       // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4905[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CheckingParentInvL;                                // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_PlayerInventory_C*>          NewLocalVar_1;                                     // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4906[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4907[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4908[0x6];                                     // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4909[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490A[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490B[0x2];                                     // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers) == 0x000008, "Wrong alignment on BP_MasterInventory_C_UpdateSlotOnUsingPlayers");
static_assert(sizeof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers) == 0x0000E0, "Wrong size on BP_MasterInventory_C_UpdateSlotOnUsingPlayers");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, InvSlot) == 0x000000, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Height) == 0x000050, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Height' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Width) == 0x000054, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Width' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Was_Rotated) == 0x000058, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Was_Rotated' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CheckingParentInvL) == 0x000060, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CheckingParentInvL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, NewLocalVar_1) == 0x000068, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_int_Variable) == 0x000078, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x00007C, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_bool_Variable) == 0x000081, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_int_Array_Index_Variable) == 0x000084, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Not_PreBool_ReturnValue) == 0x000088, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_BooleanAND_ReturnValue) == 0x000089, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_int_Array_Index_Variable_1) == 0x000094, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x0000A0, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_BooleanOR_ReturnValue) == 0x0000A9, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_IsValid_ReturnValue) == 0x0000B8, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D0, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Array_Length_ReturnValue_1) == 0x0000D4, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_IsValid_ReturnValue_2) == 0x0000D9, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_IsValid_ReturnValue_3) == 0x0000DA, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_UpdateSlotOnUsingPlayers, CallFunc_BooleanOR_ReturnValue_2) == 0x0000DB, "Member 'BP_MasterInventory_C_UpdateSlotOnUsingPlayers::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function BP_MasterInventory.BP_MasterInventory_C.WeightCheck
// 0x1240 (0x1240 - 0x0000)
struct BP_MasterInventory_C_WeightCheck final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseAllWeight;                                      // 0x0034(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CheckParent;                                       // 0x0035(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490C[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  IgnoreParent;                                      // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ExceedsMaxWeight;                                  // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AdditionalWeightL;                                 // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WeightL;                                           // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsContainerL;                                      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490E[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0060(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_490F[0xF];                                     // 0x08F1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0900(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ParentWeightCheck_CanAdd;                 // 0x1191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4910[0x2];                                     // 0x1192(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_ParentWeightCheck_CurrentCount;           // 0x1194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x1199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x119A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x119B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x119C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x119D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4911[0x2];                                     // 0x119E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x11A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x11A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4912[0x3];                                     // 0x11A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x11A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x11B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x11B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x11C0(0x0018)()
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x11D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x11E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x11F0(0x0018)()
	double                                        CallFunc_Conv_StringToDouble_ReturnValue;          // 0x1208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_StringToDouble_ReturnValue_1;        // 0x1220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x1228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x1229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4913[0x6];                                     // 0x122A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_B_ImplicitCast;    // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventory_C_WeightCheck) == 0x000010, "Wrong alignment on BP_MasterInventory_C_WeightCheck");
static_assert(sizeof(BP_MasterInventory_C_WeightCheck) == 0x001240, "Wrong size on BP_MasterInventory_C_WeightCheck");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, Item) == 0x000000, "Member 'BP_MasterInventory_C_WeightCheck::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, Amount) == 0x000030, "Member 'BP_MasterInventory_C_WeightCheck::Amount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, UseAllWeight) == 0x000034, "Member 'BP_MasterInventory_C_WeightCheck::UseAllWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CheckParent) == 0x000035, "Member 'BP_MasterInventory_C_WeightCheck::CheckParent' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, IgnoreParent) == 0x000038, "Member 'BP_MasterInventory_C_WeightCheck::IgnoreParent' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, ExceedsMaxWeight) == 0x000040, "Member 'BP_MasterInventory_C_WeightCheck::ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, AdditionalWeightL) == 0x000048, "Member 'BP_MasterInventory_C_WeightCheck::AdditionalWeightL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, WeightL) == 0x000050, "Member 'BP_MasterInventory_C_WeightCheck::WeightL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, IsContainerL) == 0x000058, "Member 'BP_MasterInventory_C_WeightCheck::IsContainerL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, ItemDetailsL) == 0x000060, "Member 'BP_MasterInventory_C_WeightCheck::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_SGK_ItemDetails_ItemFound) == 0x0008F0, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000900, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_IsValid_ReturnValue) == 0x001190, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_ParentWeightCheck_CanAdd) == 0x001191, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_ParentWeightCheck_CanAdd' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_ParentWeightCheck_CurrentCount) == 0x001194, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_ParentWeightCheck_CurrentCount' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001198, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Not_PreBool_ReturnValue) == 0x001199, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, Temp_bool_Variable) == 0x00119A, "Member 'BP_MasterInventory_C_WeightCheck::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, Temp_bool_Variable_1) == 0x00119B, "Member 'BP_MasterInventory_C_WeightCheck::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_IsValid_ReturnValue_1) == 0x00119C, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, Temp_bool_Variable_2) == 0x00119D, "Member 'BP_MasterInventory_C_WeightCheck::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_SelectInt_ReturnValue) == 0x0011A0, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0011A4, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0011A8, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, K2Node_Select_Default) == 0x0011B0, "Member 'BP_MasterInventory_C_WeightCheck::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0011B8, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_DoubleToText_ReturnValue) == 0x0011C0, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0011D8, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_TextToString_ReturnValue) == 0x0011E0, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x0011F0, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_StringToDouble_ReturnValue) == 0x001208, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_StringToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001210, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_Conv_StringToDouble_ReturnValue_1) == 0x001220, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_Conv_StringToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x001228, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, K2Node_Select_Default_1) == 0x001229, "Member 'BP_MasterInventory_C_WeightCheck::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventory_C_WeightCheck, CallFunc_LessEqual_DoubleDouble_B_ImplicitCast) == 0x001230, "Member 'BP_MasterInventory_C_WeightCheck::CallFunc_LessEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

