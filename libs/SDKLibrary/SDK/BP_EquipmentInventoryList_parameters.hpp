#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInventoryList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentInventoryList.BP_EquipmentInventoryList_C.CreateNewInventoryPanel
// 0x0120 (0x0120 - 0x0000)
struct BP_EquipmentInventoryList_C_CreateNewInventoryPanel final
{
public:
	class UBP_MasterInventory_C*                  Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstPanel;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B29[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryPanel_C*                   NewInvPanelL;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2A[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2B[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryPanel_C*                   CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2C[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryGrid_C*                    K2Node_DynamicCast_AsBP_Inventory_Grid;            // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2D[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryPanel_C*                   CallFunc_Array_Get_Item_1;                         // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2E[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryGrid_C*                    K2Node_DynamicCast_AsBP_Inventory_Grid_1;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2F[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin_2;                        // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B30[0x4];                                     // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryPanel_C*                   CallFunc_Array_Get_Item_2;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B31[0x2];                                     // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B32[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   CallFunc_Array_Get_Item_3;                         // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B33[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B34[0x3];                                     // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B35[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   CallFunc_Create_ReturnValue;                       // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel) == 0x000008, "Wrong alignment on BP_EquipmentInventoryList_C_CreateNewInventoryPanel");
static_assert(sizeof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel) == 0x000120, "Wrong size on BP_EquipmentInventoryList_C_CreateNewInventoryPanel");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Inventory) == 0x000000, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, FirstPanel) == 0x000008, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::FirstPanel' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, NewInvPanelL) == 0x000010, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::NewInvPanelL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Array_Index_Variable_1) == 0x000028, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_MakeStruct_Margin) == 0x00002C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Array_Index_Variable_2) == 0x00004C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Loop_Counter_Variable_3) == 0x000050, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Add_IntInt_ReturnValue_3) == 0x000054, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_MakeStruct_Margin_1) == 0x000058, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, Temp_int_Array_Index_Variable_3) == 0x000068, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_DynamicCast_AsBP_Inventory_Grid) == 0x000080, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_DynamicCast_AsBP_Inventory_Grid' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Length_ReturnValue_1) == 0x000098, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Less_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_DynamicCast_AsBP_Inventory_Grid_1) == 0x0000A0, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_DynamicCast_AsBP_Inventory_Grid_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_DynamicCast_bSuccess_1) == 0x0000A8, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, K2Node_MakeStruct_Margin_2) == 0x0000AC, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::K2Node_MakeStruct_Margin_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Get_Item_2) == 0x0000C0, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Length_ReturnValue_2) == 0x0000C8, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000CC, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000CD, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Length_ReturnValue_3) == 0x0000D0, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D4, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0000D8, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Get_Item_3) == 0x0000E0, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0000E8, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x0000F0, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_Length_ReturnValue_4) == 0x0000F8, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Array_AddUnique_ReturnValue) == 0x000100, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_AddChildToVerticalBox_ReturnValue_2) == 0x000108, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_AddChildToVerticalBox_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_GetOwningPlayer_ReturnValue) == 0x000110, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_CreateNewInventoryPanel, CallFunc_Create_ReturnValue) == 0x000118, "Member 'BP_EquipmentInventoryList_C_CreateNewInventoryPanel::CallFunc_Create_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventoryList.BP_EquipmentInventoryList_C.ExecuteUbergraph_BP_EquipmentInventoryList
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B36[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList) == 0x000008, "Wrong alignment on BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList");
static_assert(sizeof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList) == 0x000018, "Wrong size on BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList");
static_assert(offsetof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList, EntryPoint) == 0x000000, "Member 'BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventoryList_C_ExecuteUbergraph_BP_EquipmentInventoryList::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventoryList.BP_EquipmentInventoryList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentInventoryList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventoryList_C_PreConstruct) == 0x000001, "Wrong alignment on BP_EquipmentInventoryList_C_PreConstruct");
static_assert(sizeof(BP_EquipmentInventoryList_C_PreConstruct) == 0x000001, "Wrong size on BP_EquipmentInventoryList_C_PreConstruct");
static_assert(offsetof(BP_EquipmentInventoryList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_EquipmentInventoryList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_EquipmentInventoryList.BP_EquipmentInventoryList_C.RemoveInventoryPanel
// 0x0040 (0x0040 - 0x0000)
struct BP_EquipmentInventoryList_C_RemoveInventoryPanel final
{
public:
	class UBP_MasterInventory_C*                  Inventory;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   PanelL;                                            // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B37[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B38[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B39[0x3];                                     // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryPanel_C*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B3A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventoryList_C_RemoveInventoryPanel) == 0x000008, "Wrong alignment on BP_EquipmentInventoryList_C_RemoveInventoryPanel");
static_assert(sizeof(BP_EquipmentInventoryList_C_RemoveInventoryPanel) == 0x000040, "Wrong size on BP_EquipmentInventoryList_C_RemoveInventoryPanel");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, Inventory) == 0x000000, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, PanelL) == 0x000008, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::PanelL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Array_RemoveItem_ReturnValue) == 0x000024, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventoryList_C_RemoveInventoryPanel, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_EquipmentInventoryList_C_RemoveInventoryPanel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

