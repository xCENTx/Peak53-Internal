#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Icon

#include "Basic.hpp"

#include "MinimapInternal_Icon_classes.hpp"
#include "MinimapInternal_Icon_parameters.hpp"


namespace SDK
{

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.AlwaysTick
// (BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::AlwaysTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "AlwaysTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.CleanupListeners
// (BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::CleanupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "CleanupListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.CleanupViewListener
// (BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::CleanupViewListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "CleanupViewListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMinimapInternal_Icon_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMinimapInternal_Icon_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.ExecuteUbergraph_MinimapInternal_Icon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::ExecuteUbergraph_MinimapInternal_Icon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "ExecuteUbergraph_MinimapInternal_Icon");

	Params::MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.InitSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::InitSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "InitSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnAppearanceChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMapIconComponent*                MapIcon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnAppearanceChanged(class UMapIconComponent* MapIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnAppearanceChanged");

	Params::MinimapInternal_Icon_C_OnAppearanceChanged Parms{};

	Parms.MapIcon = MapIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnBoxSelect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        StartUV                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        EndUV                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsLeftMouseButton                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsShiftSelect                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsCtrlSelect                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnBoxSelect__DelegateSignature(const struct FVector2D& StartUV, const struct FVector2D& EndUV, bool IsLeftMouseButton, bool IsShiftSelect, bool IsCtrlSelect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnBoxSelect__DelegateSignature");

	Params::MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature Parms{};

	Parms.StartUV = std::move(StartUV);
	Parms.EndUV = std::move(EndUV);
	Parms.IsLeftMouseButton = IsLeftMouseButton;
	Parms.IsShiftSelect = IsShiftSelect;
	Parms.IsCtrlSelect = IsCtrlSelect;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconClicked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UMinimapInternal_Icon_C::OnIconClicked(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnIconClicked");

	Params::MinimapInternal_Icon_C_OnIconClicked Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconDestroyed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMapIconComponent*                MapIcon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnIconDestroyed(class UMapIconComponent* MapIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnIconDestroyed");

	Params::MinimapInternal_Icon_C_OnIconDestroyed Parms{};

	Parms.MapIcon = MapIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconMaterialChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMapIconComponent*                MapIcon                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnIconMaterialChanged(class UMapIconComponent* MapIcon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnIconMaterialChanged");

	Params::MinimapInternal_Icon_C_OnIconMaterialChanged Parms{};

	Parms.MapIcon = MapIcon;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseClick_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLeftMouseButton                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnMouseClick_Event_0(bool IsLeftMouseButton)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnMouseClick_Event_0");

	Params::MinimapInternal_Icon_C_OnMouseClick_Event_0 Parms{};

	Parms.IsLeftMouseButton = IsLeftMouseButton;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseEnter
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMinimapInternal_Icon_C::OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnMouseEnter");

	Params::MinimapInternal_Icon_C_OnMouseEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseLeave
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UMinimapInternal_Icon_C::OnMouseLeave(const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnMouseLeave");

	Params::MinimapInternal_Icon_C_OnMouseLeave Parms{};

	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnViewSizeChanged_Event_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UMapViewComponent*                MapView                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::OnViewSizeChanged_Event_0(class UMapViewComponent* MapView)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "OnViewSizeChanged_Event_0");

	Params::MinimapInternal_Icon_C_OnViewSizeChanged_Event_0 Parms{};

	Parms.MapView = MapView;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.Precompute
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::Precompute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "Precompute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetTooltipShown
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewShown                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::SetTooltipShown(bool bNewShown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "SetTooltipShown");

	Params::MinimapInternal_Icon_C_SetTooltipShown Parms{};

	Parms.bNewShown = bNewShown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetupBoxSelect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnableBoxSelect                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     BoxSelectColor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UMinimapInternal_Icon_C::SetupBoxSelect(bool bEnableBoxSelect, const struct FLinearColor& BoxSelectColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "SetupBoxSelect");

	Params::MinimapInternal_Icon_C_SetupBoxSelect Parms{};

	Parms.bEnableBoxSelect = bEnableBoxSelect;
	Parms.BoxSelectColor = std::move(BoxSelectColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetupListeners
// (BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::SetupListeners()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "SetupListeners");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetupViewListener
// (BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::SetupViewListener()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "SetupViewListener");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.TickIcon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::TickIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "TickIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateAppearance
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateArrow
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateArrow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateArrow");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateDrawColor
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateDrawColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateDrawColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateInteractability
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateInteractability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateInteractability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateOuterCanvas
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateOuterCanvas()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateOuterCanvas");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateSize
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateSize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateSize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateTooltip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateTooltip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateTooltip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateZOrder
// (Public, BlueprintCallable, BlueprintEvent)

void UMinimapInternal_Icon_C::UpdateZOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MinimapInternal_Icon_C", "UpdateZOrder");

	UObject::ProcessEvent(Func, nullptr);
}

}

