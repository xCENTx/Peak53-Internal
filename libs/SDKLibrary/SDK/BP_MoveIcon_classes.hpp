#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MoveIcon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_AttachmentSlotID_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "E_SpecialSlotType_structs.hpp"
#include "E_ItemMoveType_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "S_EquipmentSlotID_structs.hpp"
#include "UMG_classes.hpp"
#include "S_InvSlotID_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_MoveIcon.BP_MoveIcon_C
// 0x0948 (0x0BC0 - 0x0278)
class UBP_MoveIcon_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 MoveIcon;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               MoveIconSize;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_EquipmentSlot_C*                    EquipmentSlot;                                     // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_QuickSlot_C*                        QuickSlot;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponSlot_C*                       WeaponSlot;                                        // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        WeaponSlotID;                                      // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                InventoryItem;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           ItemSlotID;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_SpecialSlotType                             SpecialType;                                       // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AttachmentWeaponSlotID;                            // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D0[0x6];                                     // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlotID                    AttachmentSlotID;                                  // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotate;                                            // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D1[0x7];                                     // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryCell_C*                    HoverOverCell;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D2[0x8];                                     // 0x0308(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CurrentItemDetails;                                // 0x0310(0x0890)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          PendingKill;                                       // 0x0BA0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ItemMoveType                                ItemMoveType;                                      // 0x0BA1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D3[0x6];                                     // 0x0BA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ImageScale;                                        // 0x0BA8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void Destruct();
	void ExecuteUbergraph_BP_MoveIcon(int32 EntryPoint);
	void InitializeMoveAttachmentItem(const struct FS_AttachmentSlotID& AttachmentID);
	void InitializeMoveItem(const struct FS_InvSlotID& Param_ItemSlotID);
	void InitilalizeMoveEquipmentItem(const struct FS_EquipmentSlotID& Param_EquipmentSlotID);
	void InitilalizeMoveQuickSlot(const struct FS_InvSlotID& Param_ItemSlotID);
	void InitilalizeMoveWeaponItem(const struct FS_WeaponSlotID& Param_WeaponSlotID);
	void RotateWidget();
	void SetMoveIcon(const struct FS_ItemDetails& ItemDetails, bool Rotated);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MoveIcon_C">();
	}
	static class UBP_MoveIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MoveIcon_C>();
	}
};
static_assert(alignof(UBP_MoveIcon_C) == 0x000010, "Wrong alignment on UBP_MoveIcon_C");
static_assert(sizeof(UBP_MoveIcon_C) == 0x000BC0, "Wrong size on UBP_MoveIcon_C");
static_assert(offsetof(UBP_MoveIcon_C, UberGraphFrame) == 0x000278, "Member 'UBP_MoveIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, MoveIcon) == 0x000280, "Member 'UBP_MoveIcon_C::MoveIcon' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, MoveIconSize) == 0x000288, "Member 'UBP_MoveIcon_C::MoveIconSize' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, EquipmentSlot) == 0x000290, "Member 'UBP_MoveIcon_C::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, QuickSlot) == 0x000298, "Member 'UBP_MoveIcon_C::QuickSlot' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, WeaponSlot) == 0x0002A0, "Member 'UBP_MoveIcon_C::WeaponSlot' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, WeaponSlotID) == 0x0002A8, "Member 'UBP_MoveIcon_C::WeaponSlotID' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, EquipmentSlotID) == 0x0002B8, "Member 'UBP_MoveIcon_C::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, InventoryItem) == 0x0002C8, "Member 'UBP_MoveIcon_C::InventoryItem' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, ItemSlotID) == 0x0002D0, "Member 'UBP_MoveIcon_C::ItemSlotID' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, SpecialType) == 0x0002E0, "Member 'UBP_MoveIcon_C::SpecialType' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, AttachmentWeaponSlotID) == 0x0002E1, "Member 'UBP_MoveIcon_C::AttachmentWeaponSlotID' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, AttachmentSlotID) == 0x0002E8, "Member 'UBP_MoveIcon_C::AttachmentSlotID' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, Rotate) == 0x0002F8, "Member 'UBP_MoveIcon_C::Rotate' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, HoverOverCell) == 0x000300, "Member 'UBP_MoveIcon_C::HoverOverCell' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, CurrentItemDetails) == 0x000310, "Member 'UBP_MoveIcon_C::CurrentItemDetails' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, PendingKill) == 0x000BA0, "Member 'UBP_MoveIcon_C::PendingKill' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, ItemMoveType) == 0x000BA1, "Member 'UBP_MoveIcon_C::ItemMoveType' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, ImageScale) == 0x000BA8, "Member 'UBP_MoveIcon_C::ImageScale' has a wrong offset!");
static_assert(offsetof(UBP_MoveIcon_C, PlayerInventory) == 0x000BB0, "Member 'UBP_MoveIcon_C::PlayerInventory' has a wrong offset!");

}

