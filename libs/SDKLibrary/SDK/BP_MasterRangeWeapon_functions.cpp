#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterRangeWeapon

#include "Basic.hpp"

#include "BP_MasterRangeWeapon_classes.hpp"
#include "BP_MasterRangeWeapon_parameters.hpp"


namespace SDK
{

// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADS_Aimed
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bPickA                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ADS_Aimed(bool bPickA)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADS_Aimed");

	Params::BP_MasterRangeWeapon_C_ADS_Aimed Parms{};

	Parms.bPickA = bPickA;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADS_Interpolation__FinishedFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::ADS_Interpolation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADS_Interpolation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADS_Interpolation__UpdateFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::ADS_Interpolation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADS_Interpolation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADSCameraTimeLine__FinishedFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::ADSCameraTimeLine__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADSCameraTimeLine__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADSCameraTimeLine__UpdateFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::ADSCameraTimeLine__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADSCameraTimeLine__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ADSCameraTimelineReverse
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ADSCameraTimelineReverse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ADSCameraTimelineReverse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ApplyRangeWeaponAttachmentStats
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterAttachment_C*           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ApplyRangeWeaponAttachmentStats(class ABP_MasterAttachment_C* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ApplyRangeWeaponAttachmentStats");

	Params::BP_MasterRangeWeapon_C_ApplyRangeWeaponAttachmentStats Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ApplyWeaponAttachmentStats
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterAttachment_C*           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ApplyWeaponAttachmentStats(class ABP_MasterAttachment_C* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ApplyWeaponAttachmentStats");

	Params::BP_MasterRangeWeapon_C_ApplyWeaponAttachmentStats Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_MasterRangeWeapon_C::BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_MasterRangeWeapon_C_BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_MasterRangeWeapon_C_BndEvt__BP_MasterRangeWeapon_PickupVolume_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CalculateHoldableSway
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::CalculateHoldableSway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CalculateHoldableSway");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CalculateWeaponSway
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::CalculateWeaponSway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CalculateWeaponSway");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CanShoot?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    TURR                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::CanShoot_(bool* TURR)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CanShoot?");

	Params::BP_MasterRangeWeapon_C_CanShoot_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TURR != nullptr)
		*TURR = Parms.TURR;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ChamberAmmoCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AmmoFound                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ChamberAmmoCheck(bool* AmmoFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ChamberAmmoCheck");

	Params::BP_MasterRangeWeapon_C_ChamberAmmoCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AmmoFound != nullptr)
		*AmmoFound = Parms.AmmoFound;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CharacterFalling
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::CharacterFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CharacterFalling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CharacterSprinting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sprinting                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::CharacterSprinting(bool Sprinting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CharacterSprinting");

	Params::BP_MasterRangeWeapon_C_CharacterSprinting Parms{};

	Parms.Sprinting = Sprinting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.CheckPlanting
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    PlantingBomb                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::CheckPlanting(bool* PlantingBomb)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "CheckPlanting");

	Params::BP_MasterRangeWeapon_C_CheckPlanting Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlantingBomb != nullptr)
		*PlantingBomb = Parms.PlantingBomb;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ClientExitAim
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ClientExitAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ClientExitAim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ClientFireWeapon
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ClientFireWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ClientFireWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ClientOwnerFireEffects
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ClientOwnerFireEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ClientOwnerFireEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ClientOwnerNoAmmoSound
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ClientOwnerNoAmmoSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ClientOwnerNoAmmoSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ClientSetReload
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Reload                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ClientSetReload(bool Param_Reload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ClientSetReload");

	Params::BP_MasterRangeWeapon_C_ClientSetReload Parms{};

	Parms.Param_Reload = Param_Reload;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.DecreaseSpread
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::DecreaseSpread(double Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "DecreaseSpread");

	Params::BP_MasterRangeWeapon_C_DecreaseSpread Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.DelayDestroyMC
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::DelayDestroyMC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "DelayDestroyMC");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.DelayDestroyServer
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::DelayDestroyServer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "DelayDestroyServer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ExecuteUbergraph_BP_MasterRangeWeapon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ExecuteUbergraph_BP_MasterRangeWeapon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ExecuteUbergraph_BP_MasterRangeWeapon");

	Params::BP_MasterRangeWeapon_C_ExecuteUbergraph_BP_MasterRangeWeapon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.Get Sighted FOV
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Param_SightTPFOV                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::Get_Sighted_FOV(double* Param_SightTPFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "Get Sighted FOV");

	Params::BP_MasterRangeWeapon_C_Get_Sighted_FOV Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_SightTPFOV != nullptr)
		*Param_SightTPFOV = Parms.Param_SightTPFOV;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.HitscanTraces
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::HitscanTraces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "HitscanTraces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.IncreaseSpread
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  IncreaseAmount                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::IncreaseSpread(double IncreaseAmount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "IncreaseSpread");

	Params::BP_MasterRangeWeapon_C_IncreaseSpread Parms{};

	Parms.IncreaseAmount = IncreaseAmount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.MulticastDebugLine
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          LineStart                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LineEnd                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::MulticastDebugLine(const struct FVector& LineStart, const struct FVector& LineEnd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "MulticastDebugLine");

	Params::BP_MasterRangeWeapon_C_MulticastDebugLine Parms{};

	Parms.LineStart = std::move(LineStart);
	Parms.LineEnd = std::move(LineEnd);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.MulticastDebugSphere
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Center                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::MulticastDebugSphere(const struct FVector& Center)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "MulticastDebugSphere");

	Params::BP_MasterRangeWeapon_C_MulticastDebugSphere Parms{};

	Parms.Center = std::move(Center);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.MulticastFireEffects
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::MulticastFireEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "MulticastFireEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.MulticastNoAmmoSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::MulticastNoAmmoSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "MulticastNoAmmoSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.MulticastProjectileSpawn
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             AmmoID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::MulticastProjectileSpawn(const struct FVector& Location, const struct FRotator& Rotation, class FName AmmoID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "MulticastProjectileSpawn");

	Params::BP_MasterRangeWeapon_C_MulticastProjectileSpawn Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.AmmoID = AmmoID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnBlendOut_50B07BB945ECC720DEA04E837F2E618D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnBlendOut_50B07BB945ECC720DEA04E837F2E618D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnBlendOut_50B07BB945ECC720DEA04E837F2E618D");

	Params::BP_MasterRangeWeapon_C_OnBlendOut_50B07BB945ECC720DEA04E837F2E618D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnBlendOut_917101B3417C952AA8CFB6B82351D5EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnBlendOut_917101B3417C952AA8CFB6B82351D5EB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnBlendOut_917101B3417C952AA8CFB6B82351D5EB");

	Params::BP_MasterRangeWeapon_C_OnBlendOut_917101B3417C952AA8CFB6B82351D5EB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnCompleted_50B07BB945ECC720DEA04E837F2E618D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnCompleted_50B07BB945ECC720DEA04E837F2E618D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnCompleted_50B07BB945ECC720DEA04E837F2E618D");

	Params::BP_MasterRangeWeapon_C_OnCompleted_50B07BB945ECC720DEA04E837F2E618D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnCompleted_917101B3417C952AA8CFB6B82351D5EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnCompleted_917101B3417C952AA8CFB6B82351D5EB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnCompleted_917101B3417C952AA8CFB6B82351D5EB");

	Params::BP_MasterRangeWeapon_C_OnCompleted_917101B3417C952AA8CFB6B82351D5EB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnInterrupted_50B07BB945ECC720DEA04E837F2E618D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnInterrupted_50B07BB945ECC720DEA04E837F2E618D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnInterrupted_50B07BB945ECC720DEA04E837F2E618D");

	Params::BP_MasterRangeWeapon_C_OnInterrupted_50B07BB945ECC720DEA04E837F2E618D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnInterrupted_917101B3417C952AA8CFB6B82351D5EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnInterrupted_917101B3417C952AA8CFB6B82351D5EB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnInterrupted_917101B3417C952AA8CFB6B82351D5EB");

	Params::BP_MasterRangeWeapon_C_OnInterrupted_917101B3417C952AA8CFB6B82351D5EB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnNotifyBegin_50B07BB945ECC720DEA04E837F2E618D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnNotifyBegin_50B07BB945ECC720DEA04E837F2E618D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnNotifyBegin_50B07BB945ECC720DEA04E837F2E618D");

	Params::BP_MasterRangeWeapon_C_OnNotifyBegin_50B07BB945ECC720DEA04E837F2E618D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnNotifyBegin_917101B3417C952AA8CFB6B82351D5EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnNotifyBegin_917101B3417C952AA8CFB6B82351D5EB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnNotifyBegin_917101B3417C952AA8CFB6B82351D5EB");

	Params::BP_MasterRangeWeapon_C_OnNotifyBegin_917101B3417C952AA8CFB6B82351D5EB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnNotifyEnd_50B07BB945ECC720DEA04E837F2E618D
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnNotifyEnd_50B07BB945ECC720DEA04E837F2E618D(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnNotifyEnd_50B07BB945ECC720DEA04E837F2E618D");

	Params::BP_MasterRangeWeapon_C_OnNotifyEnd_50B07BB945ECC720DEA04E837F2E618D Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnNotifyEnd_917101B3417C952AA8CFB6B82351D5EB
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::OnNotifyEnd_917101B3417C952AA8CFB6B82351D5EB(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnNotifyEnd_917101B3417C952AA8CFB6B82351D5EB");

	Params::BP_MasterRangeWeapon_C_OnNotifyEnd_917101B3417C952AA8CFB6B82351D5EB Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnRep_bFlashlight?
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::OnRep_bFlashlight_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnRep_bFlashlight?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnRep_OneTimePick
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::OnRep_OneTimePick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnRep_OneTimePick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnRep_Reload
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::OnRep_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnRep_Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OnRep_SgkActor
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::OnRep_SgkActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OnRep_SgkActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.OverrideMaterials
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UMaterialInstance*>        NewMaterials                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_MasterRangeWeapon_C::OverrideMaterials(TArray<class UMaterialInstance*>& NewMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "OverrideMaterials");

	Params::BP_MasterRangeWeapon_C_OverrideMaterials Parms{};

	Parms.NewMaterials = std::move(NewMaterials);

	UObject::ProcessEvent(Func, &Parms);

	NewMaterials = std::move(Parms.NewMaterials);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ProjectileCalculation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ProjectileCalculation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ProjectileCalculation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ReceiveTick");

	Params::BP_MasterRangeWeapon_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.RemoveMagazineChecks
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_InvSlot                       NewMagSlot                                             (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::RemoveMagazineChecks(const struct FS_InvSlot& NewMagSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "RemoveMagazineChecks");

	Params::BP_MasterRangeWeapon_C_RemoveMagazineChecks Parms{};

	Parms.NewMagSlot = std::move(NewMagSlot);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.RemoveRangeWeaponAttachmentStats
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterAttachment_C*           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::RemoveRangeWeaponAttachmentStats(class ABP_MasterAttachment_C* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "RemoveRangeWeaponAttachmentStats");

	Params::BP_MasterRangeWeapon_C_RemoveRangeWeaponAttachmentStats Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.RemoveWeaponAttchmentStats
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterAttachment_C*           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::RemoveWeaponAttchmentStats(class ABP_MasterAttachment_C* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "RemoveWeaponAttchmentStats");

	Params::BP_MasterRangeWeapon_C_RemoveWeaponAttchmentStats Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ResetReloadJamClient
// (Net, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ResetReloadJamClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ResetReloadJamClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ResetReloadJamSv
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ResetReloadJamSv()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ResetReloadJamSv");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.RestoreChamberAmount
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::RestoreChamberAmount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "RestoreChamberAmount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ScopeTextureFnRm
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ScopeTextureFnRm(class USceneComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ScopeTextureFnRm");

	Params::BP_MasterRangeWeapon_C_ScopeTextureFnRm Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ScopetextureFunction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  Mesh                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ScopetextureFunction(class USceneComponent* Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ScopetextureFunction");

	Params::BP_MasterRangeWeapon_C_ScopetextureFunction Parms{};

	Parms.Mesh = Mesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerChamberCheckes
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ServerChamberCheckes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerChamberCheckes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerExitAim
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ClientExit                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ServerExitAim(bool ClientExit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerExitAim");

	Params::BP_MasterRangeWeapon_C_ServerExitAim Parms{};

	Parms.ClientExit = ClientExit;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerFireWeapon
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ServerFireWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerFireWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerPartReloadChecks
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ServerPartReloadChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerPartReloadChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerReloadChecks
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::ServerReloadChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerReloadChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerUpdateBulletLocation
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ServerUpdateBulletLocation(const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerUpdateBulletLocation");

	Params::BP_MasterRangeWeapon_C_ServerUpdateBulletLocation Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.ServerUpdateTraceStart
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Relative                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::ServerUpdateTraceStart(const struct FVector& Location, bool Relative)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "ServerUpdateTraceStart");

	Params::BP_MasterRangeWeapon_C_ServerUpdateTraceStart Parms{};

	Parms.Location = std::move(Location);
	Parms.Relative = Relative;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SetChamberMemory
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::SetChamberMemory()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SetChamberMemory");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SetFlashlightMulticast
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bFlashlight_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SetFlashlightMulticast(bool Param_bFlashlight_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SetFlashlightMulticast");

	Params::BP_MasterRangeWeapon_C_SetFlashlightMulticast Parms{};

	Parms.Param_bFlashlight_ = Param_bFlashlight_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SetFlashlightServer
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bFlashlight_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SetFlashlightServer(bool Param_bFlashlight_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SetFlashlightServer");

	Params::BP_MasterRangeWeapon_C_SetFlashlightServer Parms{};

	Parms.Param_bFlashlight_ = Param_bFlashlight_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK Aimed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_Aimed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_Aimed(bool* Param_Aimed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK Aimed");

	Params::BP_MasterRangeWeapon_C_SGK_Aimed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Aimed != nullptr)
		*Param_Aimed = Parms.Param_Aimed;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ChamberWeaponAmmo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::SGK_ChamberWeaponAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ChamberWeaponAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ClientPrimaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_ClientPrimaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ClientPrimaryAction");

	Params::BP_MasterRangeWeapon_C_SGK_ClientPrimaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ClientReloadChecks
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::SGK_ClientReloadChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ClientReloadChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ClientSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_ClientSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ClientSecondaryAction");

	Params::BP_MasterRangeWeapon_C_SGK_ClientSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK HoldableMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_HoldableMesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK HoldableMesh");

	Params::BP_MasterRangeWeapon_C_SGK_HoldableMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK NewHeld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Held                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_NewHeld(bool Held)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK NewHeld");

	Params::BP_MasterRangeWeapon_C_SGK_NewHeld Parms{};

	Parms.Held = Held;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ResetHoldable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::SGK_ResetHoldable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ResetHoldable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ServerPrimaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_ServerPrimaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ServerPrimaryAction");

	Params::BP_MasterRangeWeapon_C_SGK_ServerPrimaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ServerSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::SGK_ServerSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ServerSecondaryAction");

	Params::BP_MasterRangeWeapon_C_SGK_ServerSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.SGK ToggleFireMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::SGK_ToggleFireMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "SGK ToggleFireMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.StartingFOV
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::StartingFOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "StartingFOV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_MasterRangeWeapon_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.UpdateBulletSpawnLocation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterRangeWeapon_C::UpdateBulletSpawnLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "UpdateBulletSpawnLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterRangeWeapon.BP_MasterRangeWeapon_C.UpdateMinSpread
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_CharacterState                        CharacterState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterRangeWeapon_C::UpdateMinSpread(E_CharacterState CharacterState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterRangeWeapon_C", "UpdateMinSpread");

	Params::BP_MasterRangeWeapon_C_UpdateMinSpread Parms{};

	Parms.CharacterState = CharacterState;

	UObject::ProcessEvent(Func, &Parms);
}

}

