#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterGrid

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterGrid.BP_MasterGrid_C.AddBuildPartReference
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterGrid_C_AddBuildPartReference final
{
public:
	class UActorComponent*                        GridComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexL;                                            // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterGrid_C_AddBuildPartReference) == 0x000008, "Wrong alignment on BP_MasterGrid_C_AddBuildPartReference");
static_assert(sizeof(BP_MasterGrid_C_AddBuildPartReference) == 0x000030, "Wrong size on BP_MasterGrid_C_AddBuildPartReference");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, GridComponent) == 0x000000, "Member 'BP_MasterGrid_C_AddBuildPartReference::GridComponent' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, ReturnValue) == 0x000008, "Member 'BP_MasterGrid_C_AddBuildPartReference::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, IndexL) == 0x00000C, "Member 'BP_MasterGrid_C_AddBuildPartReference::IndexL' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_MasterGrid_C_AddBuildPartReference::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, CallFunc_GetOwner_ReturnValue_1) == 0x000018, "Member 'BP_MasterGrid_C_AddBuildPartReference::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, CallFunc_Array_AddUnique_ReturnValue) == 0x000020, "Member 'BP_MasterGrid_C_AddBuildPartReference::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, CallFunc_Array_Find_ReturnValue) == 0x000024, "Member 'BP_MasterGrid_C_AddBuildPartReference::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_AddBuildPartReference, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000028, "Member 'BP_MasterGrid_C_AddBuildPartReference::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterGrid.BP_MasterGrid_C.CreateGrid
// 0x0110 (0x0110 - 0x0000)
struct BP_MasterGrid_C_CreateGrid final
{
public:
	class UBP_GridComponent_C*                    GridComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Grid;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          GridL;                                             // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B08[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddBuildPartReference_ReturnValue;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B09[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ReferenceParm)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B0A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectGridSize_Value;                     // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x00A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          CallFunc_AddComponent_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterGrid_C_CreateGrid) == 0x000010, "Wrong alignment on BP_MasterGrid_C_CreateGrid");
static_assert(sizeof(BP_MasterGrid_C_CreateGrid) == 0x000110, "Wrong size on BP_MasterGrid_C_CreateGrid");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, GridComponent) == 0x000000, "Member 'BP_MasterGrid_C_CreateGrid::GridComponent' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, Grid) == 0x000008, "Member 'BP_MasterGrid_C_CreateGrid::Grid' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, GridL) == 0x000010, "Member 'BP_MasterGrid_C_CreateGrid::GridL' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_Conv_StringToName_ReturnValue) == 0x000030, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_AddBuildPartReference_ReturnValue) == 0x000038, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_AddBuildPartReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000050, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, K2Node_MakeArray_Array) == 0x000058, "Member 'BP_MasterGrid_C_CreateGrid::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000068, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_SelectGridSize_Value) == 0x000070, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_SelectGridSize_Value' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_Divide_VectorInt_ReturnValue) == 0x000088, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0000A0, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterGrid_C_CreateGrid, CallFunc_AddComponent_ReturnValue) == 0x000100, "Member 'BP_MasterGrid_C_CreateGrid::CallFunc_AddComponent_ReturnValue' has a wrong offset!");

// Function BP_MasterGrid.BP_MasterGrid_C.DeleteGrid
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterGrid_C_DeleteGrid final
{
public:
	class UBoxComponent*                          Grid;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterGrid_C_DeleteGrid) == 0x000008, "Wrong alignment on BP_MasterGrid_C_DeleteGrid");
static_assert(sizeof(BP_MasterGrid_C_DeleteGrid) == 0x000008, "Wrong size on BP_MasterGrid_C_DeleteGrid");
static_assert(offsetof(BP_MasterGrid_C_DeleteGrid, Grid) == 0x000000, "Member 'BP_MasterGrid_C_DeleteGrid::Grid' has a wrong offset!");

}

