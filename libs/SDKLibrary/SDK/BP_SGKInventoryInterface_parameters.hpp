#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKInventoryInterface

#include "Basic.hpp"

#include "S_InvItem_structs.hpp"
#include "E_Sounds_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "E_AttachmentType_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK AllowStartingItems
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_AllowStartingItems final
{
public:
	bool                                          AllowStartingItems;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_AllowStartingItems) == 0x000001, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_AllowStartingItems");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_AllowStartingItems) == 0x000001, "Wrong size on BP_SGKInventoryInterface_C_SGK_AllowStartingItems");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_AllowStartingItems, AllowStartingItems) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_AllowStartingItems::AllowStartingItems' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK ItemSound
// 0x000C (0x000C - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_ItemSound final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Sounds                                      SoundType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_ItemSound) == 0x000004, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_ItemSound");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_ItemSound) == 0x00000C, "Wrong size on BP_SGKInventoryInterface_C_SGK_ItemSound");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_ItemSound, ItemId) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_ItemSound::ItemId' has a wrong offset!");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_ItemSound, SoundType) == 0x000008, "Member 'BP_SGKInventoryInterface_C_SGK_ItemSound::SoundType' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK LoadWeaponAttachments
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong size on BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments, Visible) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_LoadWeaponAttachments::Visible' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK RemoveAdditionalChecks
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks) == 0x000008, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks) == 0x000050, "Wrong size on BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks, InvSlot) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_RemoveAdditionalChecks::InvSlot' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK RemoveAttachment
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_RemoveAttachment final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_RemoveAttachment) == 0x000001, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_RemoveAttachment");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_RemoveAttachment) == 0x000001, "Wrong size on BP_SGKInventoryInterface_C_SGK_RemoveAttachment");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_RemoveAttachment, Attachment) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_RemoveAttachment::Attachment' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK SelfItem
// 0x0030 (0x0030 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_SelfItem final
{
public:
	struct FS_InvItem                             SelfItem;                                          // 0x0000(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_SelfItem) == 0x000008, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_SelfItem");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_SelfItem) == 0x000030, "Wrong size on BP_SGKInventoryInterface_C_SGK_SelfItem");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_SelfItem, SelfItem) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_SelfItem::SelfItem' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK SpawnOverflowItems
// 0x0030 (0x0030 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems) == 0x000008, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems) == 0x000030, "Wrong size on BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems, InvItem) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_SpawnOverflowItems::InvItem' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK UpdateCharacterYaw
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw final
{
public:
	class APawn*                                  Pawn;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw) == 0x000008, "Wrong size on BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw, Pawn) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_UpdateCharacterYaw::Pawn' has a wrong offset!");

// Function BP_SGKInventoryInterface.BP_SGKInventoryInterface_C.SGK UpdateSpecialSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot) == 0x000008, "Wrong alignment on BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot");
static_assert(sizeof(BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot) == 0x000050, "Wrong size on BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot");
static_assert(offsetof(BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot, InvSlot) == 0x000000, "Member 'BP_SGKInventoryInterface_C_SGK_UpdateSpecialSlot::InvSlot' has a wrong offset!");

}

