#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VendorListing

#include "Basic.hpp"

#include "S_VendorBuy_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_VendorSell_structs.hpp"


namespace SDK::Params
{

// Function BP_VendorListing.BP_VendorListing_C.BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'BP_VendorListing_C_BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_VendorListing_C_BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.ExecuteUbergraph_BP_VendorListing
// 0x0228 (0x0228 - 0x0000)
struct BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3838[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0020(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3839[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNumeric_ReturnValue;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383A[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0068(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383B[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue_1;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383C[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Len_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383D[0x3];                                     // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00A8(0x0098)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0140(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0180(0x0098)(ConstParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing) == 0x000008, "Wrong alignment on BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing");
static_assert(sizeof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing) == 0x000228, "Wrong size on BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, EntryPoint) == 0x000000, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_ComponentBoundEvent_Text_1) == 0x000020, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Conv_TextToString_ReturnValue) == 0x000038, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Conv_StringToInt_ReturnValue) == 0x000048, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000050, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_IsNumeric_ReturnValue) == 0x000060, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_IsNumeric_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_ComponentBoundEvent_Text) == 0x000068, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_ComponentBoundEvent_CommitMethod) == 0x000080, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000088, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Conv_StringToInt_ReturnValue_1) == 0x000098, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Conv_StringToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Greater_IntInt_ReturnValue) == 0x00009C, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Len_ReturnValue) == 0x0000A0, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000A4, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_Event_MouseEvent_1) == 0x0000A8, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_Event_MyGeometry) == 0x000140, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, K2Node_Event_MouseEvent) == 0x000180, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_GetOwningPlayer_ReturnValue) == 0x000218, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing, CallFunc_GetComponentByClass_ReturnValue) == 0x000220, "Member 'BP_VendorListing_C_ExecuteUbergraph_BP_VendorListing::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.InitializeVenderBuyListing
// 0x11B0 (0x11B0 - 0x0000)
struct BP_VendorListing_C_InitializeVenderBuyListing final
{
public:
	struct FS_VendorBuy                           VenderListing;                                     // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383E[0x7];                                     // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x08D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_383F[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0910(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3840[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x11A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorListing_C_InitializeVenderBuyListing) == 0x000010, "Wrong alignment on BP_VendorListing_C_InitializeVenderBuyListing");
static_assert(sizeof(BP_VendorListing_C_InitializeVenderBuyListing) == 0x0011B0, "Wrong size on BP_VendorListing_C_InitializeVenderBuyListing");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, VenderListing) == 0x000000, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::VenderListing' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, ItemDetailsL) == 0x000040, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, Temp_bool_Variable) == 0x0008D0, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, K2Node_MakeStruct_S_InvItem) == 0x0008D8, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, CallFunc_SGK_ItemDetails_ItemFound) == 0x000908, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000910, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0011A0, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderBuyListing, K2Node_Select_Default) == 0x0011A8, "Member 'BP_VendorListing_C_InitializeVenderBuyListing::K2Node_Select_Default' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.InitializeVenderSellListing
// 0x11D0 (0x11D0 - 0x0000)
struct BP_VendorListing_C_InitializeVenderSellListing final
{
public:
	struct FS_VendorSell                          Param_VenderSellListing;                           // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	uint8                                         Pad_3841[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0040(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3842[0x6];                                     // 0x08D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x08D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3843[0x7];                                     // 0x0909(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0910(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3844[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x11A8(0x0018)()
	class UTexture2D*                             K2Node_Select_Default_1;                           // 0x11C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorListing_C_InitializeVenderSellListing) == 0x000010, "Wrong alignment on BP_VendorListing_C_InitializeVenderSellListing");
static_assert(sizeof(BP_VendorListing_C_InitializeVenderSellListing) == 0x0011D0, "Wrong size on BP_VendorListing_C_InitializeVenderSellListing");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, Param_VenderSellListing) == 0x000000, "Member 'BP_VendorListing_C_InitializeVenderSellListing::Param_VenderSellListing' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, ItemDetailsL) == 0x000040, "Member 'BP_VendorListing_C_InitializeVenderSellListing::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, Temp_bool_Variable) == 0x0008D0, "Member 'BP_VendorListing_C_InitializeVenderSellListing::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, Temp_bool_Variable_1) == 0x0008D1, "Member 'BP_VendorListing_C_InitializeVenderSellListing::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, K2Node_MakeStruct_S_InvItem) == 0x0008D8, "Member 'BP_VendorListing_C_InitializeVenderSellListing::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, CallFunc_SGK_ItemDetails_ItemFound) == 0x000908, "Member 'BP_VendorListing_C_InitializeVenderSellListing::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000910, "Member 'BP_VendorListing_C_InitializeVenderSellListing::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0011A0, "Member 'BP_VendorListing_C_InitializeVenderSellListing::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, K2Node_Select_Default) == 0x0011A8, "Member 'BP_VendorListing_C_InitializeVenderSellListing::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_InitializeVenderSellListing, K2Node_Select_Default_1) == 0x0011C0, "Member 'BP_VendorListing_C_InitializeVenderSellListing::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct BP_VendorListing_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_VendorListing_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_VendorListing_C_OnMouseEnter");
static_assert(sizeof(BP_VendorListing_C_OnMouseEnter) == 0x0000D8, "Wrong size on BP_VendorListing_C_OnMouseEnter");
static_assert(offsetof(BP_VendorListing_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_VendorListing_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'BP_VendorListing_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct BP_VendorListing_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_VendorListing_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_VendorListing_C_OnMouseLeave");
static_assert(sizeof(BP_VendorListing_C_OnMouseLeave) == 0x000098, "Wrong size on BP_VendorListing_C_OnMouseLeave");
static_assert(offsetof(BP_VendorListing_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_VendorListing_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_VendorListing.BP_VendorListing_C.ToggleTooltip
// 0x0028 (0x0028 - 0x0000)
struct BP_VendorListing_C_ToggleTooltip final
{
public:
	bool                                          OpenTooltip;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3845[0x5];                                     // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_VendorListingTooltips_C*            K2Node_DynamicCast_AsBP_Vendor_Listing_Tooltips;   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_VendorListing_C_ToggleTooltip) == 0x000008, "Wrong alignment on BP_VendorListing_C_ToggleTooltip");
static_assert(sizeof(BP_VendorListing_C_ToggleTooltip) == 0x000028, "Wrong size on BP_VendorListing_C_ToggleTooltip");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, OpenTooltip) == 0x000000, "Member 'BP_VendorListing_C_ToggleTooltip::OpenTooltip' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_VendorListing_C_ToggleTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'BP_VendorListing_C_ToggleTooltip::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'BP_VendorListing_C_ToggleTooltip::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BP_VendorListing_C_ToggleTooltip::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, K2Node_DynamicCast_AsBP_Vendor_Listing_Tooltips) == 0x000018, "Member 'BP_VendorListing_C_ToggleTooltip::K2Node_DynamicCast_AsBP_Vendor_Listing_Tooltips' has a wrong offset!");
static_assert(offsetof(BP_VendorListing_C_ToggleTooltip, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_VendorListing_C_ToggleTooltip::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

