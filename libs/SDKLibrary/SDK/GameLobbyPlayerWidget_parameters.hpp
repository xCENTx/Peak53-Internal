#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GameLobbyPlayerWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "S_GlobalRank_structs.hpp"


namespace SDK::Params
{

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.ExecuteUbergraph_GameLobbyPlayerWidget
// 0x0028 (0x0028 - 0x0000)
struct GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E0[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget) == 0x000008, "Wrong alignment on GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget");
static_assert(sizeof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget) == 0x000028, "Wrong size on GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, EntryPoint) == 0x000000, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, Temp_bool_Variable) == 0x000004, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, Temp_object_Variable) == 0x000008, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, Temp_object_Variable_1) == 0x000010, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, K2Node_Event_IsDesignTime) == 0x000018, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget, K2Node_Select_Default) == 0x000020, "Member 'GameLobbyPlayerWidget_C_ExecuteUbergraph_GameLobbyPlayerWidget::K2Node_Select_Default' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.Get_Insignia_1_Brush
// 0x02B0 (0x02B0 - 0x0000)
struct GameLobbyPlayerWidget_C_Get_Insignia_1_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00D0(0x00D0)()
	bool                                          CallFunc_GetGlobalRankInformation_sucess;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E2[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GlobalRank                          CallFunc_GetGlobalRankInformation_ResultRankInformation; // 0x01A8(0x0030)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x01E0(0x00D0)()
};
static_assert(alignof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush) == 0x000010, "Wrong alignment on GameLobbyPlayerWidget_C_Get_Insignia_1_Brush");
static_assert(sizeof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush) == 0x0002B0, "Wrong size on GameLobbyPlayerWidget_C_Get_Insignia_1_Brush");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, ReturnValue) == 0x000000, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000D0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_GetGlobalRankInformation_sucess) == 0x0001A0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_GetGlobalRankInformation_sucess' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_GetGlobalRankInformation_ResultRankInformation) == 0x0001A8, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_GetGlobalRankInformation_ResultRankInformation' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x0001D8, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x0001DC, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_1_Brush, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x0001E0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_1_Brush::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.Get_Insignia_2_Brush
// 0x02B0 (0x02B0 - 0x0000)
struct GameLobbyPlayerWidget_C_Get_Insignia_2_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00D0(0x00D0)()
	bool                                          CallFunc_GetGlobalRankInformation_sucess;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E3[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GlobalRank                          CallFunc_GetGlobalRankInformation_ResultRankInformation; // 0x01A8(0x0030)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x01E0(0x00D0)()
};
static_assert(alignof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush) == 0x000010, "Wrong alignment on GameLobbyPlayerWidget_C_Get_Insignia_2_Brush");
static_assert(sizeof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush) == 0x0002B0, "Wrong size on GameLobbyPlayerWidget_C_Get_Insignia_2_Brush");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, ReturnValue) == 0x000000, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000D0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_GetGlobalRankInformation_sucess) == 0x0001A0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_GetGlobalRankInformation_sucess' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_GetGlobalRankInformation_ResultRankInformation) == 0x0001A8, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_GetGlobalRankInformation_ResultRankInformation' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x0001D8, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x0001DC, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_2_Brush, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x0001E0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_2_Brush::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.Get_Insignia_Brush
// 0x02B0 (0x02B0 - 0x0000)
struct GameLobbyPlayerWidget_C_Get_Insignia_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue;         // 0x00D0(0x00D0)()
	bool                                          CallFunc_GetGlobalRankInformation_sucess;          // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E4[0x7];                                     // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GlobalRank                          CallFunc_GetGlobalRankInformation_ResultRankInformation; // 0x01A8(0x0030)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E5[0x8];                                     // 0x01D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromTexture_ReturnValue_1;       // 0x01E0(0x00D0)()
};
static_assert(alignof(GameLobbyPlayerWidget_C_Get_Insignia_Brush) == 0x000010, "Wrong alignment on GameLobbyPlayerWidget_C_Get_Insignia_Brush");
static_assert(sizeof(GameLobbyPlayerWidget_C_Get_Insignia_Brush) == 0x0002B0, "Wrong size on GameLobbyPlayerWidget_C_Get_Insignia_Brush");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_Brush, ReturnValue) == 0x000000, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_Brush::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_Brush, CallFunc_MakeBrushFromTexture_ReturnValue) == 0x0000D0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_Brush::CallFunc_MakeBrushFromTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_Brush, CallFunc_GetGlobalRankInformation_sucess) == 0x0001A0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_Brush::CallFunc_GetGlobalRankInformation_sucess' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_Brush, CallFunc_GetGlobalRankInformation_ResultRankInformation) == 0x0001A8, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_Brush::CallFunc_GetGlobalRankInformation_ResultRankInformation' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_Insignia_Brush, CallFunc_MakeBrushFromTexture_ReturnValue_1) == 0x0001E0, "Member 'GameLobbyPlayerWidget_C_Get_Insignia_Brush::CallFunc_MakeBrushFromTexture_ReturnValue_1' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.Get_PlayerRank_Text
// 0x0068 (0x0068 - 0x0000)
struct GameLobbyPlayerWidget_C_Get_PlayerRank_Text final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_GetGlobalRankInformation_sucess;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E6[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_GlobalRank                          CallFunc_GetGlobalRankInformation_ResultRankInformation; // 0x0020(0x0030)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0050(0x0018)()
};
static_assert(alignof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text) == 0x000008, "Wrong alignment on GameLobbyPlayerWidget_C_Get_PlayerRank_Text");
static_assert(sizeof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text) == 0x000068, "Wrong size on GameLobbyPlayerWidget_C_Get_PlayerRank_Text");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text, ReturnValue) == 0x000000, "Member 'GameLobbyPlayerWidget_C_Get_PlayerRank_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text, CallFunc_GetGlobalRankInformation_sucess) == 0x000018, "Member 'GameLobbyPlayerWidget_C_Get_PlayerRank_Text::CallFunc_GetGlobalRankInformation_sucess' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text, CallFunc_GetGlobalRankInformation_ResultRankInformation) == 0x000020, "Member 'GameLobbyPlayerWidget_C_Get_PlayerRank_Text::CallFunc_GetGlobalRankInformation_ResultRankInformation' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerRank_Text, CallFunc_Conv_NameToText_ReturnValue) == 0x000050, "Member 'GameLobbyPlayerWidget_C_Get_PlayerRank_Text::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.Get_PlayerTag_Visibility
// 0x0028 (0x0028 - 0x0000)
struct GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36E7[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0008(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility) == 0x000008, "Wrong alignment on GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility");
static_assert(sizeof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility) == 0x000028, "Wrong size on GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, ReturnValue) == 0x000000, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, Temp_bool_Variable) == 0x000001, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, Temp_byte_Variable) == 0x000002, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, CallFunc_MakeLiteralText_ReturnValue) == 0x000008, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, CallFunc_TextIsEmpty_ReturnValue) == 0x000020, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, CallFunc_EqualEqual_TextText_ReturnValue) == 0x000021, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility, K2Node_Select_Default) == 0x000023, "Member 'GameLobbyPlayerWidget_C_Get_PlayerTag_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function GameLobbyPlayerWidget.GameLobbyPlayerWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct GameLobbyPlayerWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GameLobbyPlayerWidget_C_PreConstruct) == 0x000001, "Wrong alignment on GameLobbyPlayerWidget_C_PreConstruct");
static_assert(sizeof(GameLobbyPlayerWidget_C_PreConstruct) == 0x000001, "Wrong size on GameLobbyPlayerWidget_C_PreConstruct");
static_assert(offsetof(GameLobbyPlayerWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'GameLobbyPlayerWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

