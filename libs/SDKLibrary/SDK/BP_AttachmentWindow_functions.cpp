#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AttachmentWindow

#include "Basic.hpp"

#include "BP_AttachmentWindow_classes.hpp"
#include "BP_AttachmentWindow_parameters.hpp"


namespace SDK
{

// Function BP_AttachmentWindow.BP_AttachmentWindow_C.BndEvt__Button_81_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UBP_AttachmentWindow_C::BndEvt__Button_81_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "BndEvt__Button_81_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_AttachmentWindow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.ExecuteUbergraph_BP_AttachmentWindow
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentWindow_C::ExecuteUbergraph_BP_AttachmentWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "ExecuteUbergraph_BP_AttachmentWindow");

	Params::BP_AttachmentWindow_C_ExecuteUbergraph_BP_AttachmentWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.HideUnneedSlots
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_AttachmentWindow_C::HideUnneedSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "HideUnneedSlots");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.InitializeWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_WeaponInventory_C*            Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_InventoryHUD_C*               HUD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentWindow_C::InitializeWindow(class UBP_WeaponInventory_C* Inventory, class UBP_InventoryHUD_C* HUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "InitializeWindow");

	Params::BP_AttachmentWindow_C_InitializeWindow Parms{};

	Parms.Inventory = Inventory;
	Parms.HUD = HUD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.OnHeaderMouseButtonDown
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_AttachmentWindow_C::OnHeaderMouseButtonDown(const struct FGeometry& MyGeometry, struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "OnHeaderMouseButtonDown");

	Params::BP_AttachmentWindow_C_OnHeaderMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	MouseEvent = std::move(Parms.MouseEvent);

	return Parms.ReturnValue;
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_AttachmentWindow_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "OnMouseButtonUp");

	Params::BP_AttachmentWindow_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UBP_AttachmentWindow_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "OnMouseMove");

	Params::BP_AttachmentWindow_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.SelectAttachmentSlot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_AttachmentType                        AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_AttachmentSlot_C*             AttachmentSlot                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentWindow_C::SelectAttachmentSlot(E_AttachmentType AttachmentType, class UBP_AttachmentSlot_C** AttachmentSlot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "SelectAttachmentSlot");

	Params::BP_AttachmentWindow_C_SelectAttachmentSlot Parms{};

	Parms.AttachmentType = AttachmentType;

	UObject::ProcessEvent(Func, &Parms);

	if (AttachmentSlot != nullptr)
		*AttachmentSlot = Parms.AttachmentSlot;
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.SetUpWindow
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_WeaponInventory_C*            Inventory                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UBP_InventoryHUD_C*               HUD                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_AttachmentWindow_C::SetUpWindow(class UBP_WeaponInventory_C* Inventory, class UBP_InventoryHUD_C* HUD)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "SetUpWindow");

	Params::BP_AttachmentWindow_C_SetUpWindow Parms{};

	Parms.Inventory = Inventory;
	Parms.HUD = HUD;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_AttachmentWindow.BP_AttachmentWindow_C.UpdateAllSlots
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_AttachmentWindow_C::UpdateAllSlots()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_AttachmentWindow_C", "UpdateAllSlots");

	UObject::ProcessEvent(Func, nullptr);
}

}

