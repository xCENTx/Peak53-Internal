#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_FX_Highlight

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_FX_Highlight.WB_FX_Highlight_C.ExecuteUbergraph_WB_FX_Highlight
// 0x0060 (0x0060 - 0x0000)
struct WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A63[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A64[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A65[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetGlobalColorByType_ReturnValue;         // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_2;                           // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight) == 0x000008, "Wrong alignment on WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight");
static_assert(sizeof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight) == 0x000060, "Wrong size on WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, EntryPoint) == 0x000000, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_bool_Variable) == 0x000004, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_int_Variable) == 0x000008, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_int_Variable_1) == 0x00000C, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_bool_Variable_1) == 0x000010, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, K2Node_Select_Default) == 0x000014, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_byte_Variable) == 0x000018, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_byte_Variable_1) == 0x000019, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, Temp_bool_Variable_2) == 0x00001A, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, K2Node_Select_Default_1) == 0x00001B, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, K2Node_Event_IsDesignTime) == 0x00002C, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, CallFunc_PlayAnimation_ReturnValue) == 0x000030, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, CallFunc_GetGlobalColorByType_ReturnValue) == 0x000038, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::CallFunc_GetGlobalColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, K2Node_Select_Default_2) == 0x000048, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000058, "Member 'WB_FX_Highlight_C_ExecuteUbergraph_WB_FX_Highlight::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WB_FX_Highlight.WB_FX_Highlight_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_FX_Highlight_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_FX_Highlight_C_PreConstruct) == 0x000001, "Wrong alignment on WB_FX_Highlight_C_PreConstruct");
static_assert(sizeof(WB_FX_Highlight_C_PreConstruct) == 0x000001, "Wrong size on WB_FX_Highlight_C_PreConstruct");
static_assert(offsetof(WB_FX_Highlight_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_FX_Highlight_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

