#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MoveIcon

#include "Basic.hpp"

#include "S_WeaponSlot_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_AttachmentSlotID_structs.hpp"
#include "S_AttachmentSlot_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_EquipmentSlot_structs.hpp"
#include "S_EquipmentSlotID_structs.hpp"


namespace SDK::Params
{

// Function BP_MoveIcon.BP_MoveIcon_C.ExecuteUbergraph_BP_MoveIcon
// 0x0090 (0x0090 - 0x0000)
struct BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D4[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D5[0x6];                                     // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBP_InventoryCell_C*>            CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D6[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_InventoryItemIcon_C*>        CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemValid_IsItemValid;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D7[0x2];                                     // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D8[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon) == 0x000008, "Wrong alignment on BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon");
static_assert(sizeof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon) == 0x000090, "Wrong size on BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, EntryPoint) == 0x000000, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_bool_Variable) == 0x000014, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_GetComponentByClass_ReturnValue) == 0x000030, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_bool_Variable_1) == 0x000038, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000040, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000060, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Array_Length_ReturnValue_1) == 0x000078, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Less_IntInt_ReturnValue) == 0x00007C, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_IsItemValid_IsItemValid) == 0x00007D, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_IsItemValid_IsItemValid' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, Temp_bool_Variable_2) == 0x00008C, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon, K2Node_Select_Default) == 0x00008D, "Member 'BP_MoveIcon_C_ExecuteUbergraph_BP_MoveIcon::K2Node_Select_Default' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.InitializeMoveAttachmentItem
// 0x0900 (0x0900 - 0x0000)
struct BP_MoveIcon_C_InitializeMoveAttachmentItem final
{
public:
	struct FS_AttachmentSlotID                    AttachmentID;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42D9[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0018(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DA[0xF];                                     // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0070(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_InitializeMoveAttachmentItem) == 0x000010, "Wrong alignment on BP_MoveIcon_C_InitializeMoveAttachmentItem");
static_assert(sizeof(BP_MoveIcon_C_InitializeMoveAttachmentItem) == 0x000900, "Wrong size on BP_MoveIcon_C_InitializeMoveAttachmentItem");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveAttachmentItem, AttachmentID) == 0x000000, "Member 'BP_MoveIcon_C_InitializeMoveAttachmentItem::AttachmentID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveAttachmentItem, CallFunc_SelectAttachmentItem_IsValid) == 0x000010, "Member 'BP_MoveIcon_C_InitializeMoveAttachmentItem::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveAttachmentItem, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000018, "Member 'BP_MoveIcon_C_InitializeMoveAttachmentItem::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveAttachmentItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000060, "Member 'BP_MoveIcon_C_InitializeMoveAttachmentItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveAttachmentItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000070, "Member 'BP_MoveIcon_C_InitializeMoveAttachmentItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.InitializeMoveItem
// 0x0930 (0x0930 - 0x0000)
struct BP_MoveIcon_C_InitializeMoveItem final
{
public:
	struct FS_InvSlotID                           Param_ItemSlotID;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x0018(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0068(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00A0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_InitializeMoveItem) == 0x000010, "Wrong alignment on BP_MoveIcon_C_InitializeMoveItem");
static_assert(sizeof(BP_MoveIcon_C_InitializeMoveItem) == 0x000930, "Wrong size on BP_MoveIcon_C_InitializeMoveItem");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, Param_ItemSlotID) == 0x000000, "Member 'BP_MoveIcon_C_InitializeMoveItem::Param_ItemSlotID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, CallFunc_SGK_GetInvSlot_SlotFound) == 0x000010, "Member 'BP_MoveIcon_C_InitializeMoveItem::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, CallFunc_SGK_GetInvSlot_InvSlot) == 0x000018, "Member 'BP_MoveIcon_C_InitializeMoveItem::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x000068, "Member 'BP_MoveIcon_C_InitializeMoveItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000098, "Member 'BP_MoveIcon_C_InitializeMoveItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitializeMoveItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000A0, "Member 'BP_MoveIcon_C_InitializeMoveItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveEquipmentItem
// 0x08F0 (0x08F0 - 0x0000)
struct BP_MoveIcon_C_InitilalizeMoveEquipmentItem final
{
public:
	struct FS_EquipmentSlotID                     Param_EquipmentSlotID;                             // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0010(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DD[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem) == 0x000010, "Wrong alignment on BP_MoveIcon_C_InitilalizeMoveEquipmentItem");
static_assert(sizeof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem) == 0x0008F0, "Wrong size on BP_MoveIcon_C_InitilalizeMoveEquipmentItem");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem, Param_EquipmentSlotID) == 0x000000, "Member 'BP_MoveIcon_C_InitilalizeMoveEquipmentItem::Param_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000010, "Member 'BP_MoveIcon_C_InitilalizeMoveEquipmentItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000058, "Member 'BP_MoveIcon_C_InitilalizeMoveEquipmentItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveEquipmentItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000060, "Member 'BP_MoveIcon_C_InitilalizeMoveEquipmentItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveQuickSlot
// 0x08C0 (0x08C0 - 0x0000)
struct BP_MoveIcon_C_InitilalizeMoveQuickSlot final
{
public:
	struct FS_InvSlotID                           Param_ItemSlotID;                                  // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0010(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_SlotItemDetails_ItemFound;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DE[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_SlotItemDetails_ItemDetails;          // 0x0030(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_InitilalizeMoveQuickSlot) == 0x000010, "Wrong alignment on BP_MoveIcon_C_InitilalizeMoveQuickSlot");
static_assert(sizeof(BP_MoveIcon_C_InitilalizeMoveQuickSlot) == 0x0008C0, "Wrong size on BP_MoveIcon_C_InitilalizeMoveQuickSlot");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveQuickSlot, Param_ItemSlotID) == 0x000000, "Member 'BP_MoveIcon_C_InitilalizeMoveQuickSlot::Param_ItemSlotID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveQuickSlot, K2Node_MakeStruct_S_InvSlotID) == 0x000010, "Member 'BP_MoveIcon_C_InitilalizeMoveQuickSlot::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveQuickSlot, CallFunc_SGK_SlotItemDetails_ItemFound) == 0x000020, "Member 'BP_MoveIcon_C_InitilalizeMoveQuickSlot::CallFunc_SGK_SlotItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveQuickSlot, CallFunc_SGK_SlotItemDetails_ItemDetails) == 0x000030, "Member 'BP_MoveIcon_C_InitilalizeMoveQuickSlot::CallFunc_SGK_SlotItemDetails_ItemDetails' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.InitilalizeMoveWeaponItem
// 0x0900 (0x0900 - 0x0000)
struct BP_MoveIcon_C_InitilalizeMoveWeaponItem final
{
public:
	struct FS_WeaponSlotID                        Param_WeaponSlotID;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0010(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42DF[0xF];                                     // 0x0061(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0070(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_InitilalizeMoveWeaponItem) == 0x000010, "Wrong alignment on BP_MoveIcon_C_InitilalizeMoveWeaponItem");
static_assert(sizeof(BP_MoveIcon_C_InitilalizeMoveWeaponItem) == 0x000900, "Wrong size on BP_MoveIcon_C_InitilalizeMoveWeaponItem");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveWeaponItem, Param_WeaponSlotID) == 0x000000, "Member 'BP_MoveIcon_C_InitilalizeMoveWeaponItem::Param_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveWeaponItem, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000010, "Member 'BP_MoveIcon_C_InitilalizeMoveWeaponItem::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveWeaponItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000060, "Member 'BP_MoveIcon_C_InitilalizeMoveWeaponItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_InitilalizeMoveWeaponItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000070, "Member 'BP_MoveIcon_C_InitilalizeMoveWeaponItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_MoveIcon.BP_MoveIcon_C.SetMoveIcon
// 0x0920 (0x0920 - 0x0000)
struct BP_MoveIcon_C_SetMoveIcon final
{
public:
	struct FS_ItemDetails                         ItemDetails;                                       // 0x0000(0x0890)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0890(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E0[0x7];                                     // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               DynamicMaterialL;                                  // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E1[0x2];                                     // 0x08A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Blueprint_GetSizeY_ReturnValue;           // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Blueprint_GetSizeX_ReturnValue;           // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E2[0x4];                                     // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x08D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E3[0x7];                                     // 0x08D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MoveIcon_C_SetMoveIcon) == 0x000010, "Wrong alignment on BP_MoveIcon_C_SetMoveIcon");
static_assert(sizeof(BP_MoveIcon_C_SetMoveIcon) == 0x000920, "Wrong size on BP_MoveIcon_C_SetMoveIcon");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, ItemDetails) == 0x000000, "Member 'BP_MoveIcon_C_SetMoveIcon::ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, Rotated) == 0x000890, "Member 'BP_MoveIcon_C_SetMoveIcon::Rotated' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, DynamicMaterialL) == 0x000898, "Member 'BP_MoveIcon_C_SetMoveIcon::DynamicMaterialL' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, Temp_bool_Variable) == 0x0008A0, "Member 'BP_MoveIcon_C_SetMoveIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, Temp_bool_Variable_1) == 0x0008A1, "Member 'BP_MoveIcon_C_SetMoveIcon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Blueprint_GetSizeY_ReturnValue) == 0x0008A4, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Blueprint_GetSizeY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Blueprint_GetSizeX_ReturnValue) == 0x0008A8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Blueprint_GetSizeX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, K2Node_Select_Default) == 0x0008AC, "Member 'BP_MoveIcon_C_SetMoveIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, K2Node_Select_Default_1) == 0x0008B0, "Member 'BP_MoveIcon_C_SetMoveIcon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0008B4, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x0008B8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SelectFloat_ReturnValue) == 0x0008C0, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0008C8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0008D0, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_IsValid_ReturnValue) == 0x0008D8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SelectFloat_ReturnValue_1) == 0x0008E0, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SelectFloat_ReturnValue_2) == 0x0008E8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0008F0, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0008F8, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000900, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000908, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x00090C, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MoveIcon_C_SetMoveIcon, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000910, "Member 'BP_MoveIcon_C_SetMoveIcon::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

}

