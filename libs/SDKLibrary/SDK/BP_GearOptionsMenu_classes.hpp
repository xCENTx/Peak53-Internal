#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GearOptionsMenu

#include "Basic.hpp"

#include "S_EquipmentSlot_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_GearOptionsMenu.BP_GearOptionsMenu_C
// 0x0078 (0x02F0 - 0x0278)
class UBP_GearOptionsMenu_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                DropButton;                                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SearchButton;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                UnEquip;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_OptionsMenuSlot_C*                  MenuSlot;                                          // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       SelectedEquipmentSlot;                             // 0x02A8(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void BndEvt__Button_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__SplitButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__UnloadButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_BP_GearOptionsMenu(int32 EntryPoint);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_GearOptionsMenu_C">();
	}
	static class UBP_GearOptionsMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_GearOptionsMenu_C>();
	}
};
static_assert(alignof(UBP_GearOptionsMenu_C) == 0x000008, "Wrong alignment on UBP_GearOptionsMenu_C");
static_assert(sizeof(UBP_GearOptionsMenu_C) == 0x0002F0, "Wrong size on UBP_GearOptionsMenu_C");
static_assert(offsetof(UBP_GearOptionsMenu_C, UberGraphFrame) == 0x000278, "Member 'UBP_GearOptionsMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, DropButton) == 0x000280, "Member 'UBP_GearOptionsMenu_C::DropButton' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, SearchButton) == 0x000288, "Member 'UBP_GearOptionsMenu_C::SearchButton' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, UnEquip) == 0x000290, "Member 'UBP_GearOptionsMenu_C::UnEquip' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, PlayerInventory) == 0x000298, "Member 'UBP_GearOptionsMenu_C::PlayerInventory' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, MenuSlot) == 0x0002A0, "Member 'UBP_GearOptionsMenu_C::MenuSlot' has a wrong offset!");
static_assert(offsetof(UBP_GearOptionsMenu_C, SelectedEquipmentSlot) == 0x0002A8, "Member 'UBP_GearOptionsMenu_C::SelectedEquipmentSlot' has a wrong offset!");

}

