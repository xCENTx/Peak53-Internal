#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: S_AmmoDetails

#include "Basic.hpp"

#include "S_Damage_structs.hpp"
#include "E_DamageType_structs.hpp"


namespace SDK
{

// UserDefinedStruct S_AmmoDetails.S_AmmoDetails
// 0x0020 (0x0020 - 0x0000)
struct FS_AmmoDetails final
{
public:
	class UClass*                                 Projectile_9_2D41DE964ED6ACF270EE109CE1959A07;     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_Damage>                      Damage_7_135A920D4A4E281633D127BBE3B22A57;         // 0x0008(0x0010)(Edit, BlueprintVisible)
	float                                         ProjectileSpeed_16_ABC0477D473A55F85A01F6B32E98B97E; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType_15_88DDD99C45C551E3C7E600B2EE8928AF;    // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FS_AmmoDetails) == 0x000008, "Wrong alignment on FS_AmmoDetails");
static_assert(sizeof(FS_AmmoDetails) == 0x000020, "Wrong size on FS_AmmoDetails");
static_assert(offsetof(FS_AmmoDetails, Projectile_9_2D41DE964ED6ACF270EE109CE1959A07) == 0x000000, "Member 'FS_AmmoDetails::Projectile_9_2D41DE964ED6ACF270EE109CE1959A07' has a wrong offset!");
static_assert(offsetof(FS_AmmoDetails, Damage_7_135A920D4A4E281633D127BBE3B22A57) == 0x000008, "Member 'FS_AmmoDetails::Damage_7_135A920D4A4E281633D127BBE3B22A57' has a wrong offset!");
static_assert(offsetof(FS_AmmoDetails, ProjectileSpeed_16_ABC0477D473A55F85A01F6B32E98B97E) == 0x000018, "Member 'FS_AmmoDetails::ProjectileSpeed_16_ABC0477D473A55F85A01F6B32E98B97E' has a wrong offset!");
static_assert(offsetof(FS_AmmoDetails, DamageType_15_88DDD99C45C551E3C7E600B2EE8928AF) == 0x00001C, "Member 'FS_AmmoDetails::DamageType_15_88DDD99C45C551E3C7E600B2EE8928AF' has a wrong offset!");

}

