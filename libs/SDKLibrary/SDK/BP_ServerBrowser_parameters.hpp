#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ServerBrowser

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "SlateCore_structs.hpp"
#include "SteamCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ServerBrowser.BP_ServerBrowser_C.BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'BP_ServerBrowser_C_BndEvt__CheckBox_473_K2Node_ComponentBoundEvent_0_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.ExecuteUbergraph_BP_ServerBrowser
// 0x0538 (0x0538 - 0x0000)
struct BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A39[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamSessionResult>            K2Node_CustomEvent_Results_1;                      // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(TArray<struct FSteamSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSteamSessionResult>            Temp_struct_Variable;                              // 0x0028(0x0010)(ReferenceParm)
	class USteamCoreFindSession*                  CallFunc_FindSteamCoreSessions_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3A[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3B[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<struct FSteamSessionResult>& Results)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSteamSessionResult>            K2Node_CustomEvent_Results;                        // 0x0070(0x0010)(ConstParm, ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSteamSessionResult>            Temp_struct_Variable_1;                            // 0x0090(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USteamCoreFindSession*                  CallFunc_FindSteamCoreSessions_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3C[0x6];                                     // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ServerDedicated_C*                  CallFunc_Create_ReturnValue;                       // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGameServerItem                        K2Node_CustomEvent_data;                           // 0x00E8(0x00B0)(ConstParm)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FGameServerItem& Data)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    CallFunc_Create_ReturnValue_1;                     // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USteamCoreMatchmakingServersAsyncActionRequestServerList* CallFunc_RequestInternetServerListAsync_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3D[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameServerItem                        Temp_struct_Variable_2;                            // 0x01E0(0x00B0)()
	class UBP_ServerListing_C*                    CallFunc_Create_ReturnValue_2;                     // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_2;                   // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3E[0x4];                                     // 0x02A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamSessionResult                    CallFunc_Array_Get_Item;                           // 0x02A8(0x0130)()
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A3F[0x3];                                     // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A40[0x3];                                     // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x03EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A41[0x3];                                     // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamSessionResult                    CallFunc_Array_Get_Item_1;                         // 0x0408(0x0130)()
};
static_assert(alignof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser");
static_assert(sizeof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser) == 0x000538, "Wrong size on BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, EntryPoint) == 0x000000, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CustomEvent_Results_1) == 0x000008, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CustomEvent_Results_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_struct_Variable) == 0x000028, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_FindSteamCoreSessions_ReturnValue) == 0x000038, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_FindSteamCoreSessions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CreateDelegate_OutputDelegate_1) == 0x000050, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Conv_IntToString_ReturnValue) == 0x000060, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CustomEvent_Results) == 0x000070, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CustomEvent_Results' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_struct_Variable_1) == 0x000090, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Length_ReturnValue_2) == 0x0000A0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Length_ReturnValue_3) == 0x0000A4, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_FindSteamCoreSessions_ReturnValue_1) == 0x0000A8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_FindSteamCoreSessions_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000B0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_IsValid_ReturnValue_1) == 0x0000B1, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000B8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000D8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Create_ReturnValue) == 0x0000E0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CustomEvent_data) == 0x0000E8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CustomEvent_data' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_AddChild_ReturnValue) == 0x000198, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001A0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0001B0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Create_ReturnValue_1) == 0x0001B8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_AddChild_ReturnValue_1) == 0x0001C0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_RequestInternetServerListAsync_ReturnValue) == 0x0001C8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_RequestInternetServerListAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_IsValid_ReturnValue_2) == 0x0001D0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0001D8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_struct_Variable_2) == 0x0001E0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Create_ReturnValue_2) == 0x000290, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_AddChild_ReturnValue_2) == 0x000298, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_AddChild_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_int_Array_Index_Variable) == 0x0002A0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_ComponentBoundEvent_bIsChecked) == 0x0003D8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_int_Loop_Counter_Variable) == 0x0003DC, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Less_IntInt_ReturnValue) == 0x0003E0, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Add_IntInt_ReturnValue) == 0x0003E4, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_int_Loop_Counter_Variable_1) == 0x0003E8, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, K2Node_CreateDelegate_OutputDelegate_3) == 0x0003EC, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003FC, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Add_IntInt_ReturnValue_1) == 0x000400, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, Temp_int_Array_Index_Variable_1) == 0x000404, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser, CallFunc_Array_Get_Item_1) == 0x000408, "Member 'BP_ServerBrowser_C_ExecuteUbergraph_BP_ServerBrowser::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.Get_RefreshButton_bIsEnabled
// 0x0001 (0x0001 - 0x0000)
struct BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled) == 0x000001, "Wrong alignment on BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled");
static_assert(sizeof(BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled) == 0x000001, "Wrong size on BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled");
static_assert(offsetof(BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled, ReturnValue) == 0x000000, "Member 'BP_ServerBrowser_C_Get_RefreshButton_bIsEnabled::ReturnValue' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.GetVisibility_0
// 0x0001 (0x0001 - 0x0000)
struct BP_ServerBrowser_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_GetVisibility_0) == 0x000001, "Wrong alignment on BP_ServerBrowser_C_GetVisibility_0");
static_assert(sizeof(BP_ServerBrowser_C_GetVisibility_0) == 0x000001, "Wrong size on BP_ServerBrowser_C_GetVisibility_0");
static_assert(offsetof(BP_ServerBrowser_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'BP_ServerBrowser_C_GetVisibility_0::ReturnValue' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.OnCallback_082A6CC94F6CFA08329835AF8EABC9B0
// 0x00B0 (0x00B0 - 0x0000)
struct BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0 final
{
public:
	struct FGameServerItem                        Data;                                              // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0");
static_assert(sizeof(BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0) == 0x0000B0, "Wrong size on BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0");
static_assert(offsetof(BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0, Data) == 0x000000, "Member 'BP_ServerBrowser_C_OnCallback_082A6CC94F6CFA08329835AF8EABC9B0::Data' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.OnCallback_801058C74FE79927C70DD9B77744220F
// 0x0010 (0x0010 - 0x0000)
struct BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F final
{
public:
	TArray<struct FSteamSessionResult>            Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F");
static_assert(sizeof(BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F) == 0x000010, "Wrong size on BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F");
static_assert(offsetof(BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F, Results) == 0x000000, "Member 'BP_ServerBrowser_C_OnCallback_801058C74FE79927C70DD9B77744220F::Results' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.OnCallback_A704576F446B951529D786A335C0F788
// 0x0010 (0x0010 - 0x0000)
struct BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788 final
{
public:
	TArray<struct FSteamSessionResult>            Results;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788");
static_assert(sizeof(BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788) == 0x000010, "Wrong size on BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788");
static_assert(offsetof(BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788, Results) == 0x000000, "Member 'BP_ServerBrowser_C_OnCallback_A704576F446B951529D786A335C0F788::Results' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.PingClicked
// 0x0290 (0x0290 - 0x0000)
struct BP_ServerBrowser_C_PingClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A42[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A43[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01B8(0x00B8)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A44[0x6];                                     // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        CallFunc_SortByPing_SortedServer;                  // 0x0278(0x0010)(ReferenceParm)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_PingClicked) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_PingClicked");
static_assert(sizeof(BP_ServerBrowser_C_PingClicked) == 0x000290, "Wrong size on BP_ServerBrowser_C_PingClicked");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, MyGeometry) == 0x000000, "Member 'BP_ServerBrowser_C_PingClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, MouseEvent) == 0x000040, "Member 'BP_ServerBrowser_C_PingClicked::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, ReturnValue) == 0x0000D8, "Member 'BP_ServerBrowser_C_PingClicked::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, Temp_bool_Variable) == 0x000190, "Member 'BP_ServerBrowser_C_PingClicked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, Temp_real_Variable) == 0x000198, "Member 'BP_ServerBrowser_C_PingClicked::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, Temp_real_Variable_1) == 0x0001A0, "Member 'BP_ServerBrowser_C_PingClicked::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, K2Node_Select_Default) == 0x0001A8, "Member 'BP_ServerBrowser_C_PingClicked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_Handled_ReturnValue) == 0x0001B8, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_IsVisible_ReturnValue) == 0x000270, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000271, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_SortByPing_SortedServer) == 0x000278, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_SortByPing_SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PingClicked, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000288, "Member 'BP_ServerBrowser_C_PingClicked::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.PlayerCountClicked
// 0x0290 (0x0290 - 0x0000)
struct BP_ServerBrowser_C_PlayerCountClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A45[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A46[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01B8(0x00B8)()
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A47[0x6];                                     // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        CallFunc_SortByPlayerCount_SortedServer;           // 0x0278(0x0010)(ReferenceParm)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_PlayerCountClicked) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_PlayerCountClicked");
static_assert(sizeof(BP_ServerBrowser_C_PlayerCountClicked) == 0x000290, "Wrong size on BP_ServerBrowser_C_PlayerCountClicked");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, MyGeometry) == 0x000000, "Member 'BP_ServerBrowser_C_PlayerCountClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, MouseEvent) == 0x000040, "Member 'BP_ServerBrowser_C_PlayerCountClicked::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, ReturnValue) == 0x0000D8, "Member 'BP_ServerBrowser_C_PlayerCountClicked::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, Temp_bool_Variable) == 0x000190, "Member 'BP_ServerBrowser_C_PlayerCountClicked::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, Temp_real_Variable) == 0x000198, "Member 'BP_ServerBrowser_C_PlayerCountClicked::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, Temp_real_Variable_1) == 0x0001A0, "Member 'BP_ServerBrowser_C_PlayerCountClicked::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, K2Node_Select_Default) == 0x0001A8, "Member 'BP_ServerBrowser_C_PlayerCountClicked::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_Handled_ReturnValue) == 0x0001B8, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_IsVisible_ReturnValue) == 0x000270, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_Not_PreBool_ReturnValue) == 0x000271, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_SortByPlayerCount_SortedServer) == 0x000278, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_SortByPlayerCount_SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PlayerCountClicked, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000288, "Member 'BP_ServerBrowser_C_PlayerCountClicked::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.PopulateServerList
// 0x02C0 (0x02C0 - 0x0000)
struct BP_ServerBrowser_C_PopulateServerList final
{
public:
	TArray<struct FBlueprintSessionResult>        Servers;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UBP_ServerListing_C*                    NewListingL;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FBlueprintSessionResult                ServerDataL;                                       // 0x0018(0x0120)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A48[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0140(0x0120)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A49[0x2];                                     // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0274(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FSlateChildSize                        K2Node_MakeStruct_SlateChildSize;                  // 0x0284(0x0008)(NoDestructor)
	uint8                                         Pad_4A4A[0x4];                                     // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_NoServers_C*                        CallFunc_Create_ReturnValue;                       // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue_1;      // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_ServerListing_C*                    CallFunc_Create_ReturnValue_1;                     // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_PopulateServerList) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_PopulateServerList");
static_assert(sizeof(BP_ServerBrowser_C_PopulateServerList) == 0x0002C0, "Wrong size on BP_ServerBrowser_C_PopulateServerList");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, Servers) == 0x000000, "Member 'BP_ServerBrowser_C_PopulateServerList::Servers' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, NewListingL) == 0x000010, "Member 'BP_ServerBrowser_C_PopulateServerList::NewListingL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, ServerDataL) == 0x000018, "Member 'BP_ServerBrowser_C_PopulateServerList::ServerDataL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, Temp_int_Array_Index_Variable) == 0x000138, "Member 'BP_ServerBrowser_C_PopulateServerList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Array_Length_ReturnValue) == 0x000260, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Array_Length_ReturnValue_1) == 0x000264, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, Temp_int_Loop_Counter_Variable) == 0x000268, "Member 'BP_ServerBrowser_C_PopulateServerList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Less_IntInt_ReturnValue) == 0x00026D, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Add_IntInt_ReturnValue) == 0x000270, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, K2Node_MakeStruct_Margin) == 0x000274, "Member 'BP_ServerBrowser_C_PopulateServerList::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, K2Node_MakeStruct_SlateChildSize) == 0x000284, "Member 'BP_ServerBrowser_C_PopulateServerList::K2Node_MakeStruct_SlateChildSize' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_GetOwningPlayer_ReturnValue) == 0x000290, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Create_ReturnValue) == 0x000298, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0002A0, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x0002A8, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_AddChildToVerticalBox_ReturnValue_1) == 0x0002B0, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_AddChildToVerticalBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_PopulateServerList, CallFunc_Create_ReturnValue_1) == 0x0002B8, "Member 'BP_ServerBrowser_C_PopulateServerList::CallFunc_Create_ReturnValue_1' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ServerBrowser_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ServerBrowser_C_PreConstruct");
static_assert(sizeof(BP_ServerBrowser_C_PreConstruct) == 0x000001, "Wrong size on BP_ServerBrowser_C_PreConstruct");
static_assert(offsetof(BP_ServerBrowser_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ServerBrowser_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.SortByPing
// 0x0668 (0x0668 - 0x0000)
struct BP_ServerBrowser_C_SortByPing final
{
public:
	bool                                          HeighestFirst;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        Servers;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBlueprintSessionResult>        SortedServer;                                      // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FBlueprintSessionResult>        HeighestFirstSortedL;                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          IndexValidL;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4C[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                ServerListingL;                                    // 0x0040(0x0120)(Edit, BlueprintVisible)
	int32                                         TargetIndexL;                                      // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PingCountL;                                        // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBlueprintSessionResult>        LowestFirstSortedL;                                // 0x0168(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4D[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4E[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0198(0x0120)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPingInMs_ReturnValue;                  // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4F[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A50[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_1;                         // 0x02D0(0x0120)()
	int32                                         CallFunc_GetPingInMs_ReturnValue_1;                // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A51[0x3];                                     // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_2;                         // 0x03F8(0x0120)()
	int32                                         CallFunc_GetPingInMs_ReturnValue_2;                // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A52[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_3;                         // 0x0520(0x0120)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A53[0x3];                                     // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A54[0x2];                                     // 0x065E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_SortByPing) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_SortByPing");
static_assert(sizeof(BP_ServerBrowser_C_SortByPing) == 0x000668, "Wrong size on BP_ServerBrowser_C_SortByPing");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, HeighestFirst) == 0x000000, "Member 'BP_ServerBrowser_C_SortByPing::HeighestFirst' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, Servers) == 0x000008, "Member 'BP_ServerBrowser_C_SortByPing::Servers' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, SortedServer) == 0x000018, "Member 'BP_ServerBrowser_C_SortByPing::SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, HeighestFirstSortedL) == 0x000028, "Member 'BP_ServerBrowser_C_SortByPing::HeighestFirstSortedL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, IndexValidL) == 0x000038, "Member 'BP_ServerBrowser_C_SortByPing::IndexValidL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, ServerListingL) == 0x000040, "Member 'BP_ServerBrowser_C_SortByPing::ServerListingL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, TargetIndexL) == 0x000160, "Member 'BP_ServerBrowser_C_SortByPing::TargetIndexL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, PingCountL) == 0x000164, "Member 'BP_ServerBrowser_C_SortByPing::PingCountL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, LowestFirstSortedL) == 0x000168, "Member 'BP_ServerBrowser_C_SortByPing::LowestFirstSortedL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'BP_ServerBrowser_C_SortByPing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'BP_ServerBrowser_C_SortByPing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, Temp_int_Array_Index_Variable_1) == 0x00018C, "Member 'BP_ServerBrowser_C_SortByPing::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, Temp_int_Loop_Counter_Variable_1) == 0x000190, "Member 'BP_ServerBrowser_C_SortByPing::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_GetPingInMs_ReturnValue) == 0x0002BC, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_GetPingInMs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002C0, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002C4, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0002C8, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Get_Item_1) == 0x0002D0, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_GetPingInMs_ReturnValue_1) == 0x0003F0, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_GetPingInMs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Greater_IntInt_ReturnValue) == 0x0003F4, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Get_Item_2) == 0x0003F8, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_GetPingInMs_ReturnValue_2) == 0x000518, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_GetPingInMs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00051C, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Get_Item_3) == 0x000520, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Length_ReturnValue_1) == 0x000640, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_Add_ReturnValue) == 0x000644, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000648, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Max_ReturnValue) == 0x00064C, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000650, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000654, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000658, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_BooleanAND_ReturnValue) == 0x00065C, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00065D, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000660, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPing, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000664, "Member 'BP_ServerBrowser_C_SortByPing::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.SortByPlayerCount
// 0x0668 (0x0668 - 0x0000)
struct BP_ServerBrowser_C_SortByPlayerCount final
{
public:
	bool                                          HeighestFirst;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A55[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBlueprintSessionResult>        Servers;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBlueprintSessionResult>        SortedServer;                                      // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FBlueprintSessionResult>        HeighestFirstSortedL;                              // 0x0028(0x0010)(Edit, BlueprintVisible)
	bool                                          IndexValidL;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A56[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                ServerListingL;                                    // 0x0040(0x0120)(Edit, BlueprintVisible)
	int32                                         TargetIndexL;                                      // 0x0160(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerCountL;                                      // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBlueprintSessionResult>        LowestFirstSortedL;                                // 0x0168(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A57[0x3];                                     // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A58[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item;                           // 0x0198(0x0120)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentPlayers_ReturnValue;            // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A59[0x3];                                     // 0x02C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5A[0x4];                                     // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_1;                         // 0x02D0(0x0120)()
	int32                                         CallFunc_GetCurrentPlayers_ReturnValue_1;          // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5B[0x3];                                     // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_2;                         // 0x03F8(0x0120)()
	int32                                         CallFunc_GetCurrentPlayers_ReturnValue_2;          // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5C[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlueprintSessionResult                CallFunc_Array_Get_Item_3;                         // 0x0520(0x0120)()
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x064C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5D[0x3];                                     // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x065C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x065D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5E[0x2];                                     // 0x065E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_SortByPlayerCount) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_SortByPlayerCount");
static_assert(sizeof(BP_ServerBrowser_C_SortByPlayerCount) == 0x000668, "Wrong size on BP_ServerBrowser_C_SortByPlayerCount");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, HeighestFirst) == 0x000000, "Member 'BP_ServerBrowser_C_SortByPlayerCount::HeighestFirst' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, Servers) == 0x000008, "Member 'BP_ServerBrowser_C_SortByPlayerCount::Servers' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, SortedServer) == 0x000018, "Member 'BP_ServerBrowser_C_SortByPlayerCount::SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, HeighestFirstSortedL) == 0x000028, "Member 'BP_ServerBrowser_C_SortByPlayerCount::HeighestFirstSortedL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, IndexValidL) == 0x000038, "Member 'BP_ServerBrowser_C_SortByPlayerCount::IndexValidL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, ServerListingL) == 0x000040, "Member 'BP_ServerBrowser_C_SortByPlayerCount::ServerListingL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, TargetIndexL) == 0x000160, "Member 'BP_ServerBrowser_C_SortByPlayerCount::TargetIndexL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, PlayerCountL) == 0x000164, "Member 'BP_ServerBrowser_C_SortByPlayerCount::PlayerCountL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, LowestFirstSortedL) == 0x000168, "Member 'BP_ServerBrowser_C_SortByPlayerCount::LowestFirstSortedL' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, Temp_int_Array_Index_Variable) == 0x00017C, "Member 'BP_ServerBrowser_C_SortByPlayerCount::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'BP_ServerBrowser_C_SortByPlayerCount::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Less_IntInt_ReturnValue) == 0x000184, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Add_IntInt_ReturnValue) == 0x000188, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, Temp_int_Array_Index_Variable_1) == 0x00018C, "Member 'BP_ServerBrowser_C_SortByPlayerCount::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, Temp_int_Loop_Counter_Variable_1) == 0x000190, "Member 'BP_ServerBrowser_C_SortByPlayerCount::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002B8, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_GetCurrentPlayers_ReturnValue) == 0x0002BC, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_GetCurrentPlayers_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002C0, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0002C4, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0002C8, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Get_Item_1) == 0x0002D0, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_GetCurrentPlayers_ReturnValue_1) == 0x0003F0, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_GetCurrentPlayers_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Greater_IntInt_ReturnValue) == 0x0003F4, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Get_Item_2) == 0x0003F8, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_GetCurrentPlayers_ReturnValue_2) == 0x000518, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_GetCurrentPlayers_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00051C, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Get_Item_3) == 0x000520, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Length_ReturnValue_1) == 0x000640, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_Add_ReturnValue) == 0x000644, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000648, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Max_ReturnValue) == 0x00064C, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000650, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000654, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000658, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_BooleanAND_ReturnValue) == 0x00065C, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00065D, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000660, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortByPlayerCount, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000664, "Member 'BP_ServerBrowser_C_SortByPlayerCount::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");

// Function BP_ServerBrowser.BP_ServerBrowser_C.SortList
// 0x0090 (0x0090 - 0x0000)
struct BP_ServerBrowser_C_SortList final
{
public:
	TArray<struct FBlueprintSessionResult>        Servers;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FBlueprintSessionResult>        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A5F[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A60[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3;                              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBlueprintSessionResult>        CallFunc_SortByPing_SortedServer;                  // 0x0058(0x0010)(ReferenceParm)
	double                                        K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FBlueprintSessionResult>        CallFunc_SortByPlayerCount_SortedServer;           // 0x0070(0x0010)(ReferenceParm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A61[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ServerBrowser_C_SortList) == 0x000008, "Wrong alignment on BP_ServerBrowser_C_SortList");
static_assert(sizeof(BP_ServerBrowser_C_SortList) == 0x000090, "Wrong size on BP_ServerBrowser_C_SortList");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Servers) == 0x000000, "Member 'BP_ServerBrowser_C_SortList::Servers' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, ReturnValue) == 0x000010, "Member 'BP_ServerBrowser_C_SortList::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_bool_Variable) == 0x000020, "Member 'BP_ServerBrowser_C_SortList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_real_Variable) == 0x000028, "Member 'BP_ServerBrowser_C_SortList::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_real_Variable_1) == 0x000030, "Member 'BP_ServerBrowser_C_SortList::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_bool_Variable_1) == 0x000038, "Member 'BP_ServerBrowser_C_SortList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_real_Variable_2) == 0x000040, "Member 'BP_ServerBrowser_C_SortList::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, Temp_real_Variable_3) == 0x000048, "Member 'BP_ServerBrowser_C_SortList::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, K2Node_Select_Default) == 0x000050, "Member 'BP_ServerBrowser_C_SortList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, CallFunc_SortByPing_SortedServer) == 0x000058, "Member 'BP_ServerBrowser_C_SortList::CallFunc_SortByPing_SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, K2Node_Select_Default_1) == 0x000068, "Member 'BP_ServerBrowser_C_SortList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, CallFunc_SortByPlayerCount_SortedServer) == 0x000070, "Member 'BP_ServerBrowser_C_SortList::CallFunc_SortByPlayerCount_SortedServer' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, K2Node_SwitchEnum_CmpSuccess) == 0x000080, "Member 'BP_ServerBrowser_C_SortList::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000084, "Member 'BP_ServerBrowser_C_SortList::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_ServerBrowser_C_SortList, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1) == 0x000088, "Member 'BP_ServerBrowser_C_SortList::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1' has a wrong offset!");

}

