#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LobbyPlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LobbyPlayer.W_LobbyPlayer_C
// 0x0070 (0x02E8 - 0x0278)
class UW_LobbyPlayer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Insignia;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName_1;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerTag;                                         // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ReadyCheck;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsReady_;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_510D[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   PlayerTagVar;                                      // 0x02B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   PlayerNameVar;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         PlayerGlobalRank;                                  // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void PreConstruct(bool IsDesignTime);
	ESlateVisibility Get_PlayerTag_Visibility();
	class FText Get_PlayerRank_Text();
	struct FSlateBrush Get_Insignia_Brush();
	struct FSlateBrush Get_Insignia_2_Brush();
	struct FSlateBrush Get_Insignia_1_Brush();
	void ExecuteUbergraph_W_LobbyPlayer(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LobbyPlayer_C">();
	}
	static class UW_LobbyPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LobbyPlayer_C>();
	}
};
static_assert(alignof(UW_LobbyPlayer_C) == 0x000008, "Wrong alignment on UW_LobbyPlayer_C");
static_assert(sizeof(UW_LobbyPlayer_C) == 0x0002E8, "Wrong size on UW_LobbyPlayer_C");
static_assert(offsetof(UW_LobbyPlayer_C, UberGraphFrame) == 0x000278, "Member 'UW_LobbyPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, Insignia) == 0x000280, "Member 'UW_LobbyPlayer_C::Insignia' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerName) == 0x000288, "Member 'UW_LobbyPlayer_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerName_1) == 0x000290, "Member 'UW_LobbyPlayer_C::PlayerName_1' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerTag) == 0x000298, "Member 'UW_LobbyPlayer_C::PlayerTag' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, ReadyCheck) == 0x0002A0, "Member 'UW_LobbyPlayer_C::ReadyCheck' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, bIsReady_) == 0x0002A8, "Member 'UW_LobbyPlayer_C::bIsReady_' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerTagVar) == 0x0002B0, "Member 'UW_LobbyPlayer_C::PlayerTagVar' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerNameVar) == 0x0002C8, "Member 'UW_LobbyPlayer_C::PlayerNameVar' has a wrong offset!");
static_assert(offsetof(UW_LobbyPlayer_C, PlayerGlobalRank) == 0x0002E0, "Member 'UW_LobbyPlayer_C::PlayerGlobalRank' has a wrong offset!");

}

