#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Child_VideoSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_Child_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Child_VideoSettings.WB_Child_VideoSettings_C
// 0x0110 (0x03F0 - 0x02E0)
class UWB_Child_VideoSettings_C final : public UWB_Child_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_Child_VideoSettings_C;           // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_State_C*                     Button_AntiAliasing;                               // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_DynamicResolution;                          // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_Foliage;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_FrameRateLimit;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_GlobalIlluminationQuality;                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_OverallScalability;                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_PostProcessQuality;                         // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_ReflectionsQuality;                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_ResolutionScale;                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_ScreenResolution;                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_ShadingQuality;                             // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_ShadowQuality;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_TextureQuality;                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_VerticalSync;                               // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_ViewDistanceQuality;                        // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_VisualEffectsQuality;                       // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_WindowMode;                                 // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Infofield_C*                        Info_Field;                                        // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    InputSwitchListener;                               // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             Scroll_Buttons;                                    // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUsingGamepad;                                     // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358C[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Current_ResolutionScale;                           // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Current_Vsync;                                     // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_Vsync;                                         // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_358D[0x2];                                     // 0x0392(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Current_FpsLimit;                                  // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_FpsLimit;                                      // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_AA;                                        // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_AA;                                            // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Foliage;                                   // 0x03A4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Foliage;                                       // 0x03A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Texture;                                   // 0x03AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Texture;                                       // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Shading;                                   // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Shading;                                       // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Shadow;                                    // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Shadow;                                        // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Reflections;                               // 0x03C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_Reflections;                                   // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_PP;                                        // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_PP;                                            // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_VisualEffects;                             // 0x03D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_VisualEffects;                                 // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_ViewDist;                                  // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_ViewDist;                                      // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_GI;                                        // 0x03E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         New_GI;                                            // 0x03E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BindPanelWidgetChildren_ButtonOnHovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BindPanelWidgetChildren_ButtonOnUnhovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BndEvt__WB_Child_VideoSettings_Button_AntiAliasing_K2Node_ComponentBoundEvent_7_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_DynamicResolution_K2Node_ComponentBoundEvent_2_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_Foliage_K2Node_ComponentBoundEvent_8_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_FrameRateLimit_K2Node_ComponentBoundEvent_5_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_GamepadSensitivity_RStick_K2Node_ComponentBoundEvent_1_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_Child_VideoSettings_Button_GlobalIlluminationQuality_K2Node_ComponentBoundEvent_16_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_OverallScalability_K2Node_ComponentBoundEvent_6_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_PostProcessQuality_K2Node_ComponentBoundEvent_13_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_ReflectionsQuality_K2Node_ComponentBoundEvent_12_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_ShadingQuality_K2Node_ComponentBoundEvent_10_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_ShadowQuality_K2Node_ComponentBoundEvent_11_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_TextureQuality_K2Node_ComponentBoundEvent_9_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_VerticalSync_K2Node_ComponentBoundEvent_4_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_ViewDistanceQuality_K2Node_ComponentBoundEvent_15_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_VisualEffectsQuality_K2Node_ComponentBoundEvent_14_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_VideoSettings_Button_WindowMode_K2Node_ComponentBoundEvent_3_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_GeneralSettings_Button_Language_K2Node_ComponentBoundEvent_2_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void ConfirmVideoMode(bool Param_SetupButtons);
	void Construct();
	class FText ConvertScreenResToText(const struct FIntPoint& IntPoint);
	struct FIntPoint ConvertTextToScreenRes(const class FText& Text);
	void ExecuteUbergraph_WB_Child_VideoSettings(int32 EntryPoint);
	class UWidget* FindFirstButtonContainedInPanel(class UPanelWidget* Panel);
	void GetStateButtonInfo(class UCommonButtonBase* Button, class FText* Head, class FText* Body);
	void GetVideoChangesRequestText(class FText* Result);
	bool IsAnySettingDirty();
	bool IsVideoModeDirty();
	void OnAnyButtonHovered(class UCommonButtonBase* Button);
	void OnAnyButtonUnhovered(class UCommonButtonBase* Button);
	void OnApplyChanges();
	void OnInputMethodChanged(bool Param_bUsingGamepad);
	void OnRequestApply(bool Confirmed);
	void OnResetDefaults();
	void OnResetDefaultsFinished();
	void RevertVideoMode(bool Param_SetupButtons);
	void SetInfoFieldInfo(const class FText& Head, const class FText& Body);
	void SetSliderButtonInfo(class UWB_Button_Slider_C* InButton, float CurrentValue, float MinValue, float MaxValue, float StepSize);
	void SetupButtons();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Child_VideoSettings_C">();
	}
	static class UWB_Child_VideoSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Child_VideoSettings_C>();
	}
};
static_assert(alignof(UWB_Child_VideoSettings_C) == 0x000008, "Wrong alignment on UWB_Child_VideoSettings_C");
static_assert(sizeof(UWB_Child_VideoSettings_C) == 0x0003F0, "Wrong size on UWB_Child_VideoSettings_C");
static_assert(offsetof(UWB_Child_VideoSettings_C, UberGraphFrame_WB_Child_VideoSettings_C) == 0x0002E0, "Member 'UWB_Child_VideoSettings_C::UberGraphFrame_WB_Child_VideoSettings_C' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_AntiAliasing) == 0x0002E8, "Member 'UWB_Child_VideoSettings_C::Button_AntiAliasing' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_DynamicResolution) == 0x0002F0, "Member 'UWB_Child_VideoSettings_C::Button_DynamicResolution' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_Foliage) == 0x0002F8, "Member 'UWB_Child_VideoSettings_C::Button_Foliage' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_FrameRateLimit) == 0x000300, "Member 'UWB_Child_VideoSettings_C::Button_FrameRateLimit' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_GlobalIlluminationQuality) == 0x000308, "Member 'UWB_Child_VideoSettings_C::Button_GlobalIlluminationQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_OverallScalability) == 0x000310, "Member 'UWB_Child_VideoSettings_C::Button_OverallScalability' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_PostProcessQuality) == 0x000318, "Member 'UWB_Child_VideoSettings_C::Button_PostProcessQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ReflectionsQuality) == 0x000320, "Member 'UWB_Child_VideoSettings_C::Button_ReflectionsQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ResolutionScale) == 0x000328, "Member 'UWB_Child_VideoSettings_C::Button_ResolutionScale' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ScreenResolution) == 0x000330, "Member 'UWB_Child_VideoSettings_C::Button_ScreenResolution' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ShadingQuality) == 0x000338, "Member 'UWB_Child_VideoSettings_C::Button_ShadingQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ShadowQuality) == 0x000340, "Member 'UWB_Child_VideoSettings_C::Button_ShadowQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_TextureQuality) == 0x000348, "Member 'UWB_Child_VideoSettings_C::Button_TextureQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_VerticalSync) == 0x000350, "Member 'UWB_Child_VideoSettings_C::Button_VerticalSync' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_ViewDistanceQuality) == 0x000358, "Member 'UWB_Child_VideoSettings_C::Button_ViewDistanceQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_VisualEffectsQuality) == 0x000360, "Member 'UWB_Child_VideoSettings_C::Button_VisualEffectsQuality' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Button_WindowMode) == 0x000368, "Member 'UWB_Child_VideoSettings_C::Button_WindowMode' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Info_Field) == 0x000370, "Member 'UWB_Child_VideoSettings_C::Info_Field' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, InputSwitchListener) == 0x000378, "Member 'UWB_Child_VideoSettings_C::InputSwitchListener' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Scroll_Buttons) == 0x000380, "Member 'UWB_Child_VideoSettings_C::Scroll_Buttons' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, bUsingGamepad) == 0x000388, "Member 'UWB_Child_VideoSettings_C::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_ResolutionScale) == 0x00038C, "Member 'UWB_Child_VideoSettings_C::Current_ResolutionScale' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Vsync) == 0x000390, "Member 'UWB_Child_VideoSettings_C::Current_Vsync' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Vsync) == 0x000391, "Member 'UWB_Child_VideoSettings_C::New_Vsync' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_FpsLimit) == 0x000394, "Member 'UWB_Child_VideoSettings_C::Current_FpsLimit' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_FpsLimit) == 0x000398, "Member 'UWB_Child_VideoSettings_C::New_FpsLimit' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_AA) == 0x00039C, "Member 'UWB_Child_VideoSettings_C::Current_AA' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_AA) == 0x0003A0, "Member 'UWB_Child_VideoSettings_C::New_AA' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Foliage) == 0x0003A4, "Member 'UWB_Child_VideoSettings_C::Current_Foliage' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Foliage) == 0x0003A8, "Member 'UWB_Child_VideoSettings_C::New_Foliage' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Texture) == 0x0003AC, "Member 'UWB_Child_VideoSettings_C::Current_Texture' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Texture) == 0x0003B0, "Member 'UWB_Child_VideoSettings_C::New_Texture' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Shading) == 0x0003B4, "Member 'UWB_Child_VideoSettings_C::Current_Shading' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Shading) == 0x0003B8, "Member 'UWB_Child_VideoSettings_C::New_Shading' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Shadow) == 0x0003BC, "Member 'UWB_Child_VideoSettings_C::Current_Shadow' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Shadow) == 0x0003C0, "Member 'UWB_Child_VideoSettings_C::New_Shadow' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_Reflections) == 0x0003C4, "Member 'UWB_Child_VideoSettings_C::Current_Reflections' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_Reflections) == 0x0003C8, "Member 'UWB_Child_VideoSettings_C::New_Reflections' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_PP) == 0x0003CC, "Member 'UWB_Child_VideoSettings_C::Current_PP' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_PP) == 0x0003D0, "Member 'UWB_Child_VideoSettings_C::New_PP' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_VisualEffects) == 0x0003D4, "Member 'UWB_Child_VideoSettings_C::Current_VisualEffects' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_VisualEffects) == 0x0003D8, "Member 'UWB_Child_VideoSettings_C::New_VisualEffects' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_ViewDist) == 0x0003DC, "Member 'UWB_Child_VideoSettings_C::Current_ViewDist' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_ViewDist) == 0x0003E0, "Member 'UWB_Child_VideoSettings_C::New_ViewDist' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, Current_GI) == 0x0003E4, "Member 'UWB_Child_VideoSettings_C::Current_GI' has a wrong offset!");
static_assert(offsetof(UWB_Child_VideoSettings_C, New_GI) == 0x0003E8, "Member 'UWB_Child_VideoSettings_C::New_GI' has a wrong offset!");

}

