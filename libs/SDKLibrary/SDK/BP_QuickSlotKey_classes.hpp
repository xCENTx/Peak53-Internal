#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_QuickSlotKey

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_QuickSlotKey.BP_QuickSlotKey_C
// 0x0028 (0x02A0 - 0x0278)
class UBP_QuickSlotKey_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USizeBox*                               QSKeySize;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             QSText;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              WidgetSize;                                        // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_QuickSlotKey(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetNumber(const struct FKey& SlotNumber);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_QuickSlotKey_C">();
	}
	static class UBP_QuickSlotKey_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_QuickSlotKey_C>();
	}
};
static_assert(alignof(UBP_QuickSlotKey_C) == 0x000008, "Wrong alignment on UBP_QuickSlotKey_C");
static_assert(sizeof(UBP_QuickSlotKey_C) == 0x0002A0, "Wrong size on UBP_QuickSlotKey_C");
static_assert(offsetof(UBP_QuickSlotKey_C, UberGraphFrame) == 0x000278, "Member 'UBP_QuickSlotKey_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_QuickSlotKey_C, QSKeySize) == 0x000280, "Member 'UBP_QuickSlotKey_C::QSKeySize' has a wrong offset!");
static_assert(offsetof(UBP_QuickSlotKey_C, QSText) == 0x000288, "Member 'UBP_QuickSlotKey_C::QSText' has a wrong offset!");
static_assert(offsetof(UBP_QuickSlotKey_C, WidgetSize) == 0x000290, "Member 'UBP_QuickSlotKey_C::WidgetSize' has a wrong offset!");

}

