#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryCell

#include "Basic.hpp"

#include "BP_InventoryCell_classes.hpp"
#include "BP_InventoryCell_parameters.hpp"


namespace SDK
{

// Function BP_InventoryCell.BP_InventoryCell_C.CellDebugText
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::CellDebugText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "CellDebugText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UBP_InventoryCell_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.CreateDone__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::CreateDone__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "CreateDone__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.Deactivate
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::Deactivate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "Deactivate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.DragOverLayCheck
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MoveIcon_C*                   Move_Widget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::DragOverLayCheck(class UBP_MoveIcon_C* Move_Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "DragOverLayCheck");

	Params::BP_InventoryCell_C_DragOverLayCheck Parms{};

	Parms.Move_Widget = Move_Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.ExecuteUbergraph_BP_InventoryCell
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::ExecuteUbergraph_BP_InventoryCell(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ExecuteUbergraph_BP_InventoryCell");

	Params::BP_InventoryCell_C_ExecuteUbergraph_BP_InventoryCell Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.FuelItemChecks
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Allow                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::FuelItemChecks(class FName ID, bool* Allow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "FuelItemChecks");

	Params::BP_InventoryCell_C_FuelItemChecks Parms{};

	Parms.ID = ID;

	UObject::ProcessEvent(Func, &Parms);

	if (Allow != nullptr)
		*Allow = Parms.Allow;
}


// Function BP_InventoryCell.BP_InventoryCell_C.HideCheckCellsOverlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::HideCheckCellsOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "HideCheckCellsOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.HideOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::HideOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "HideOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.ItemDragOver
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UDragDropOperation*               DragOperation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::ItemDragOver(class UDragDropOperation* DragOperation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ItemDragOver");

	Params::BP_InventoryCell_C_ItemDragOver Parms{};

	Parms.DragOperation = DragOperation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.OnDragCancelled
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::OnDragCancelled(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "OnDragCancelled");

	Params::BP_InventoryCell_C_OnDragCancelled Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.OnDragEnter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "OnDragEnter");

	Params::BP_InventoryCell_C_OnDragEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "OnDragLeave");

	Params::BP_InventoryCell_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_InventoryCell.BP_InventoryCell_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm)
// class UDragDropOperation*               Operation                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UBP_InventoryCell_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "OnDrop");

	Params::BP_InventoryCell_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_InventoryCell.BP_InventoryCell_C.ParentGridCreated
// (BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::ParentGridCreated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ParentGridCreated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.ShowCheckCellsOverlay
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FS_InvSlot>               Array                                                  (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void UBP_InventoryCell_C::ShowCheckCellsOverlay(TArray<struct FS_InvSlot>& Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ShowCheckCellsOverlay");

	Params::BP_InventoryCell_C_ShowCheckCellsOverlay Parms{};

	Parms.Array = std::move(Array);

	UObject::ProcessEvent(Func, &Parms);

	Array = std::move(Parms.Array);
}


// Function BP_InventoryCell.BP_InventoryCell_C.ShowGreenOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::ShowGreenOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ShowGreenOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.ShowRedOverlay
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_InventoryCell_C::ShowRedOverlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "ShowRedOverlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_InventoryCell.BP_InventoryCell_C.UpdateOverLay
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MoveIcon_C*                   Move_Widget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_InventoryCell_C::UpdateOverLay(class UBP_MoveIcon_C* Move_Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_InventoryCell_C", "UpdateOverLay");

	Params::BP_InventoryCell_C_UpdateOverLay Parms{};

	Parms.Move_Widget = Move_Widget;

	UObject::ProcessEvent(Func, &Parms);
}

}

