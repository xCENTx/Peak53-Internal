#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HealthBarWidget

#include "Basic.hpp"

#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HealthBarWidget.HealthBarWidget_C
// 0x0068 (0x02E0 - 0x0278)
class UHealthBarWidget_C final : public UUserWidget
{
public:
	class UHorizontalBox*                         Box;                                               // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           HealthBar;                                         // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Player;                                            // 0x0288(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       Tag;                                               // 0x0290(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_0;                                     // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          NewVar_0;                                          // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41B6[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TagVar;                                            // 0x02A8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   PlayerNameVar;                                     // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class APeak53PlayerState_C*                   PlayerState;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	float Get_HealthBar_Percent_0();
	void Get_JumpBar_Percent();
	struct FSlateBrush Get_JumpIcon_Brush();
	class FText Get_Player_Text_0();
	class FText Get_Tag_Text_0();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HealthBarWidget_C">();
	}
	static class UHealthBarWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHealthBarWidget_C>();
	}
};
static_assert(alignof(UHealthBarWidget_C) == 0x000008, "Wrong alignment on UHealthBarWidget_C");
static_assert(sizeof(UHealthBarWidget_C) == 0x0002E0, "Wrong size on UHealthBarWidget_C");
static_assert(offsetof(UHealthBarWidget_C, Box) == 0x000278, "Member 'UHealthBarWidget_C::Box' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, HealthBar) == 0x000280, "Member 'UHealthBarWidget_C::HealthBar' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, Player) == 0x000288, "Member 'UHealthBarWidget_C::Player' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, Tag) == 0x000290, "Member 'UHealthBarWidget_C::Tag' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, VerticalBox_0) == 0x000298, "Member 'UHealthBarWidget_C::VerticalBox_0' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, NewVar_0) == 0x0002A0, "Member 'UHealthBarWidget_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, TagVar) == 0x0002A8, "Member 'UHealthBarWidget_C::TagVar' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, PlayerNameVar) == 0x0002C0, "Member 'UHealthBarWidget_C::PlayerNameVar' has a wrong offset!");
static_assert(offsetof(UHealthBarWidget_C, PlayerState) == 0x0002D8, "Member 'UHealthBarWidget_C::PlayerState' has a wrong offset!");

}

