#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ToolTip

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "E_EquipmentRarity_structs.hpp"
#include "E_ToolTipType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ToolTip.W_ToolTip_C
// 0x0078 (0x02F0 - 0x0278)
class UW_ToolTip_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_125;                                        // 0x0280(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonNumericTextBlock*                GearRateing;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   Heading;                                           // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonRichTextBlock*                   TextInfo;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           HeaderColor;                                       // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ToolTipType                                 ToolTipType;                                       // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_46A7[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rateing;                                           // 0x02B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_EquipmentRarity                             RarityIndex;                                       // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_46A8[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   In_Text;                                           // 0x02C0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Title;                                             // 0x02D8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	struct FLinearColor SetHEaderColor();
	struct FLinearColor GetBrushColor();
	void ExecuteUbergraph_W_ToolTip(int32 EntryPoint);
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ToolTip_C">();
	}
	static class UW_ToolTip_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ToolTip_C>();
	}
};
static_assert(alignof(UW_ToolTip_C) == 0x000008, "Wrong alignment on UW_ToolTip_C");
static_assert(sizeof(UW_ToolTip_C) == 0x0002F0, "Wrong size on UW_ToolTip_C");
static_assert(offsetof(UW_ToolTip_C, UberGraphFrame) == 0x000278, "Member 'UW_ToolTip_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, Border_125) == 0x000280, "Member 'UW_ToolTip_C::Border_125' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, GearRateing) == 0x000288, "Member 'UW_ToolTip_C::GearRateing' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, Heading) == 0x000290, "Member 'UW_ToolTip_C::Heading' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, TextInfo) == 0x000298, "Member 'UW_ToolTip_C::TextInfo' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, HeaderColor) == 0x0002A0, "Member 'UW_ToolTip_C::HeaderColor' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, ToolTipType) == 0x0002B0, "Member 'UW_ToolTip_C::ToolTipType' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, Rateing) == 0x0002B4, "Member 'UW_ToolTip_C::Rateing' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, RarityIndex) == 0x0002B8, "Member 'UW_ToolTip_C::RarityIndex' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, In_Text) == 0x0002C0, "Member 'UW_ToolTip_C::In_Text' has a wrong offset!");
static_assert(offsetof(UW_ToolTip_C, Title) == 0x0002D8, "Member 'UW_ToolTip_C::Title' has a wrong offset!");

}

