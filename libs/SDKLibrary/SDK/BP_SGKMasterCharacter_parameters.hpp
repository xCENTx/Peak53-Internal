#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKMasterCharacter

#include "Basic.hpp"

#include "E_WorldActions_structs.hpp"
#include "E_Hitbox_structs.hpp"
#include "S_WorldAction_structs.hpp"
#include "E_BodyMesh_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "Peak53Teams_structs.hpp"
#include "E_CameraType_structs.hpp"
#include "E_Sockets_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "E_DamageType_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_InvSlot_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.AutoLadderDown
// 0x0078 (0x0078 - 0x0000)
struct BP_SGKMasterCharacter_C_AutoLadderDown final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F6[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_AutoLadderDown) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_AutoLadderDown");
static_assert(sizeof(BP_SGKMasterCharacter_C_AutoLadderDown) == 0x000078, "Wrong size on BP_SGKMasterCharacter_C_AutoLadderDown");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_GetControlRotation_ReturnValue) == 0x000010, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x000028, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_GetUpVector_ReturnValue) == 0x000058, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderDown, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x000070, "Member 'BP_SGKMasterCharacter_C_AutoLadderDown::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.AutoLadderUp
// 0x0078 (0x0078 - 0x0000)
struct BP_SGKMasterCharacter_C_AutoLadderUp final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F7[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_AutoLadderUp) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_AutoLadderUp");
static_assert(sizeof(BP_SGKMasterCharacter_C_AutoLadderUp) == 0x000078, "Wrong size on BP_SGKMasterCharacter_C_AutoLadderUp");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_GetControlRotation_ReturnValue) == 0x000010, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x000028, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_BreakRotator_Roll) == 0x000034, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_BreakRotator_Pitch) == 0x000038, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_BreakRotator_Yaw) == 0x00003C, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_GetUpVector_ReturnValue) == 0x000058, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_AutoLadderUp, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x000070, "Member 'BP_SGKMasterCharacter_C_AutoLadderUp::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F8[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_Box_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38F9[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyCollision_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FA[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_SGKMasterCharacter_C_BndEvt__BP_SGKMasterCharacter_EnemyNearbyTrigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.CanStandUp?
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_CanStandUp_ final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_CanStandUp_) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_CanStandUp_");
static_assert(sizeof(BP_SGKMasterCharacter_C_CanStandUp_) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_CanStandUp_");
static_assert(offsetof(BP_SGKMasterCharacter_C_CanStandUp_, Yes) == 0x000000, "Member 'BP_SGKMasterCharacter_C_CanStandUp_::Yes' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.CharRef
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_CharRef final
{
public:
	class ABP_SGKMasterCharacter_C*               Param_CharRef;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_CharRef) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_CharRef");
static_assert(sizeof(BP_SGKMasterCharacter_C_CharRef) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_CharRef");
static_assert(offsetof(BP_SGKMasterCharacter_C_CharRef, Param_CharRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_CharRef::Param_CharRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.CheckFFA
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_CheckFFA final
{
public:
	bool                                          FFA_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_CheckFFA) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_CheckFFA");
static_assert(sizeof(BP_SGKMasterCharacter_C_CheckFFA) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_CheckFFA");
static_assert(offsetof(BP_SGKMasterCharacter_C_CheckFFA, FFA_) == 0x000000, "Member 'BP_SGKMasterCharacter_C_CheckFFA::FFA_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_CheckFFA, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'BP_SGKMasterCharacter_C_CheckFFA::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_CheckFFA, CallFunc_Contains_ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_CheckFFA::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Dancing
// 0x0040 (0x0040 - 0x0000)
struct BP_SGKMasterCharacter_C_Dancing final
{
public:
	bool                                          CurrentlyPlanting;                                 // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDancePlaying;                                     // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FC[0x2];                                     // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FD[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FE[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_1;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38FF[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue_2;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Dancing) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Dancing");
static_assert(sizeof(BP_SGKMasterCharacter_C_Dancing) == 0x000040, "Wrong size on BP_SGKMasterCharacter_C_Dancing");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CurrentlyPlanting) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Dancing::CurrentlyPlanting' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, bDancePlaying) == 0x000001, "Member 'BP_SGKMasterCharacter_C_Dancing::bDancePlaying' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_SGKMasterCharacter_C_Dancing::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, Temp_bool_True_if_break_was_hit_Variable) == 0x00000C, "Member 'BP_SGKMasterCharacter_C_Dancing::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_SGKMasterCharacter_C_Dancing::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Montage_IsPlaying_ReturnValue_1) == 0x000021, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Montage_IsPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_BooleanOR_ReturnValue_1) == 0x000030, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Montage_IsPlaying_ReturnValue_2) == 0x000031, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Montage_IsPlaying_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_BooleanOR_ReturnValue_2) == 0x000032, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_BooleanOR_ReturnValue_3) == 0x000033, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Dancing, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'BP_SGKMasterCharacter_C_Dancing::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ClientVisibilityIcon
// 0x0002 (0x0002 - 0x0000)
struct BP_SGKMasterCharacter_C_ClientVisibilityIcon final
{
public:
	bool                                          bNewVisible;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Team;                                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ClientVisibilityIcon) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_ClientVisibilityIcon");
static_assert(sizeof(BP_SGKMasterCharacter_C_ClientVisibilityIcon) == 0x000002, "Wrong size on BP_SGKMasterCharacter_C_ClientVisibilityIcon");
static_assert(offsetof(BP_SGKMasterCharacter_C_ClientVisibilityIcon, bNewVisible) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ClientVisibilityIcon::bNewVisible' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ClientVisibilityIcon, Team) == 0x000001, "Member 'BP_SGKMasterCharacter_C_ClientVisibilityIcon::Team' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.DoLean
// 0x0108 (0x0108 - 0x0000)
struct BP_SGKMasterCharacter_C_DoLean final
{
public:
	double                                        Param_LeanAlpha;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3900[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3901[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3902[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_DoLean) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_DoLean");
static_assert(sizeof(BP_SGKMasterCharacter_C_DoLean) == 0x000108, "Wrong size on BP_SGKMasterCharacter_C_DoLean");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, Param_LeanAlpha) == 0x000000, "Member 'BP_SGKMasterCharacter_C_DoLean::Param_LeanAlpha' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, Temp_bool_Variable) == 0x000008, "Member 'BP_SGKMasterCharacter_C_DoLean::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, Temp_real_Variable) == 0x000010, "Member 'BP_SGKMasterCharacter_C_DoLean::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, Temp_bool_Variable_1) == 0x000018, "Member 'BP_SGKMasterCharacter_C_DoLean::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, K2Node_Select_Default) == 0x000048, "Member 'BP_SGKMasterCharacter_C_DoLean::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, K2Node_Select_Default_1) == 0x000058, "Member 'BP_SGKMasterCharacter_C_DoLean::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakVector_Y) == 0x000068, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakVector_Z) == 0x000070, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_VLerp_ReturnValue) == 0x000098, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_GetController_ReturnValue) == 0x0000B0, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_GetControlRotation_ReturnValue) == 0x0000B8, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_GetController_ReturnValue_1) == 0x0000D0, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_MakeRotator_ReturnValue) == 0x0000E8, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000100, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_DoLean, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000104, "Member 'BP_SGKMasterCharacter_C_DoLean::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.EmoteMulticast
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_EmoteMulticast final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_EmoteMulticast) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_EmoteMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_EmoteMulticast) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_EmoteMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_EmoteMulticast, Montage) == 0x000000, "Member 'BP_SGKMasterCharacter_C_EmoteMulticast::Montage' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.EmoteServer
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_EmoteServer final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_EmoteServer) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_EmoteServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_EmoteServer) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_EmoteServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_EmoteServer, Montage) == 0x000000, "Member 'BP_SGKMasterCharacter_C_EmoteServer::Montage' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.EquipNewPickupMulticast
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_EquipNewPickupMulticast final
{
public:
	struct FS_InvItem                             Inv_Item;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   AmmoID;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_EquipNewPickupMulticast) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_EquipNewPickupMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_EquipNewPickupMulticast) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_EquipNewPickupMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_EquipNewPickupMulticast, Inv_Item) == 0x000000, "Member 'BP_SGKMasterCharacter_C_EquipNewPickupMulticast::Inv_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_EquipNewPickupMulticast, AmmoID) == 0x000030, "Member 'BP_SGKMasterCharacter_C_EquipNewPickupMulticast::AmmoID' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.EquipNewPickupServer
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_EquipNewPickupServer final
{
public:
	struct FS_InvItem                             Inv_Item;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   AmmoID;                                            // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_EquipNewPickupServer) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_EquipNewPickupServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_EquipNewPickupServer) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_EquipNewPickupServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_EquipNewPickupServer, Inv_Item) == 0x000000, "Member 'BP_SGKMasterCharacter_C_EquipNewPickupServer::Inv_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_EquipNewPickupServer, AmmoID) == 0x000030, "Member 'BP_SGKMasterCharacter_C_EquipNewPickupServer::AmmoID' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ExecuteUbergraph_BP_SGKMasterCharacter
// 0x36B0 (0x36B0 - 0x0000)
struct BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3903[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_26;                    // 0x0008(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3904[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_25;                    // 0x0028(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_24;                    // 0x0040(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3905[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3906[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3907[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3908[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3909[0x4];                                     // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390A[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390B[0x5];                                     // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390C[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5;                              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390D[0x2];                                     // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00FC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x010C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x011C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x013C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0154(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0164(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x016D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x016E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x016F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390E[0x3];                                     // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UBP_SGKSaveGame_C* SaveGame)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x017C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_20;                   // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_390F[0x3];                                     // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_21;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3910[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3911[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_23;                    // 0x01D0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_22;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3912[0x7];                                     // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_22;                    // 0x01F0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_21;                    // 0x0208(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_20;                    // 0x0220(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_19;                    // 0x0238(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_18;                    // 0x0250(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0268(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_17;                    // 0x0280(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_16;                    // 0x0298(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x02B0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_15;                    // 0x02C8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_14;                    // 0x02E0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_2;                            // 0x02F8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_13;                    // 0x0310(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_12;                    // 0x0328(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_3;                            // 0x0340(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_11;                    // 0x0358(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_10;                    // 0x0370(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_9;                     // 0x0388(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_8;                     // 0x03A0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_7;                     // 0x03B8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_6;                     // 0x03D0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_5;                     // 0x03E8(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_4;                     // 0x0400(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_3;                     // 0x0418(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_4;                            // 0x0430(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0448(0x0018)(HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0460(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x04D8(0x0018)(HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x04F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x05D8(0x0018)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_23;                   // 0x05F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_24;                   // 0x05F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3913[0x6];                                     // 0x05FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_25;                   // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_26;                   // 0x0611(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3914[0x6];                                     // 0x0612(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0618(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0630(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_27;                   // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_28;                   // 0x0649(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_29;                   // 0x064A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_30;                   // 0x064B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_31;                   // 0x064C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_32;                   // 0x064D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_33;                   // 0x064E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_34;                   // 0x064F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_35;                   // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_36;                   // 0x0651(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3915[0x2];                                     // 0x0652(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_16;                  // 0x0654(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3916[0x4];                                     // 0x065C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_37;                   // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility_3;               // 0x0669(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsClimbingLadder;               // 0x066A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3917[0x5];                                     // 0x066B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ClimbableLadder_C*                  K2Node_CustomEvent_Ladder_1;                       // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_JumpOff;                        // 0x0678(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3918[0x3];                                     // 0x0679(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x067C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility_2;               // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_38;                   // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3919[0x2];                                     // 0x068E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0690(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_ClimbableLadder_C*                  K2Node_CustomEvent_Ladder;                         // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_OverlappedBase;                 // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_39;                   // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391A[0x6];                                     // 0x06CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x06D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0778(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_40;                   // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnyMontagePlaying_ReturnValue;          // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391B[0x6];                                     // 0x078A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0790(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2; // 0x07A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_41;                   // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391C[0x7];                                     // 0x07A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound_9;                        // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_17;                  // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_8;                        // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x07E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391D[0x3];                                     // 0x07F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x07FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391E[0x4];                                     // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_18;                  // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0828(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391F[0x7];                                     // 0x0829(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound_7;                        // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0850(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_6;                        // 0x0860(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_19;                  // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0888(0x0010)(ReferenceParm)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0898(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3920[0x4];                                     // 0x08AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_PlayerCharRef_1;                // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_PlayerCharRef;                  // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x08C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_1;           // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WithEditor_ReturnValue;                   // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam;               // 0x08D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3921[0x5];                                     // 0x08D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_2;              // 0x08D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_2;           // 0x08E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3922[0x7];                                     // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x08F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x08F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0900(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x090C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3923[0x3];                                     // 0x090D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0910(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x09F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3924[0x6];                                     // 0x0A02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> CallFunc_Peak_GetTeam_self_CastInput;              // 0x0A08(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam_1;             // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0A19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3925[0x2];                                     // 0x0A1A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_1;                              // 0x0A1C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3926[0x4];                                     // 0x0A24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0A28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0A38(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CanMelee_1;                     // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3927[0x3];                                     // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Mesh_1;                         // 0x0A48(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_CustomEvent_Current_Victim_1;               // 0x0A50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsKnife_1;                      // 0x0A58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3928[0x3];                                     // 0x0A59(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RandomAnim_1;                   // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_42;                   // 0x0A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0A61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3929[0x6];                                     // 0x0A62(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3; // 0x0A68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4; // 0x0A70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_43;                   // 0x0A78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_44;                   // 0x0A79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392A[0x6];                                     // 0x0A7A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0A80(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Knife_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CanMelee;                       // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392B[0x7];                                     // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Mesh;                           // 0x0AF8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_CustomEvent_Current_Victim;                 // 0x0B00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsKnife;                        // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392C[0x3];                                     // 0x0B09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_RandomAnim;                     // 0x0B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0B10(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0B2C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392D[0x3];                                     // 0x0B2D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0B30(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode_2;              // 0x0C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode_1;              // 0x0C19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_NewMovementMode;                // 0x0C1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392E[0x5];                                     // 0x0C1B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0C20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0C38(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0C58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0C70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0C80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0C98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterLadder_C*                     K2Node_CustomEvent_LadderRef;                      // 0x0CB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0CB8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0DA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_TurnedOn;                             // 0x0DA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392F[0x6];                                     // 0x0DA2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Event_VerifiedPlayers;                      // 0x0DA8(0x0010)(ReferenceParm)
	class ABP_DynamicLadder_C*                    K2Node_Event_LadderRef_1;                          // 0x0DB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterLadder_C*                     K2Node_Event_LadderRef;                            // 0x0DC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_3;              // 0x0DC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_4;              // 0x0DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_3;           // 0x0DD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0DE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3930[0x7];                                     // 0x0DE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_4;           // 0x0DE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0DF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0DF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_45;                   // 0x0DF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0DF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3931[0x4];                                     // 0x0DF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_5;              // 0x0DF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_5;           // 0x0E00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3932[0x3];                                     // 0x0E09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_2;                              // 0x0E0C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0E14(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3933[0x4];                                     // 0x0E1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0E20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item_2;                         // 0x0E28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5; // 0x0E30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6; // 0x0E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_46;                   // 0x0E40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_47;                   // 0x0E41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3934[0x2];                                     // 0x0E42(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0E44(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0E54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3935[0x3];                                     // 0x0E55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0E58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0E5C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility_1;               // 0x0E64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisibility;                 // 0x0E65(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3936[0x2];                                     // 0x0E66(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABreachActor_C*                         K2Node_CustomEvent_BreachRef_1;                    // 0x0E68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABreachActor_C*                         K2Node_CustomEvent_BreachRef;                      // 0x0E70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0E78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0E79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3937[0x2];                                     // 0x0E7A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x0E7C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0E8C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_On_;                            // 0x0E8D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3938[0x2];                                     // 0x0E8E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_1;                      // 0x0E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0E98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_6;              // 0x0EA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_20;                  // 0x0EA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_6;           // 0x0EB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0EB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_48;                   // 0x0EB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3939[0x6];                                     // 0x0EBA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0EC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_7;              // 0x0EC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_7;           // 0x0ED0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0ED8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393A[0x3];                                     // 0x0ED9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x0EDC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0EEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HoldingWeaponCheck_ReturnValue;           // 0x0EED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HoldingWeaponCheck_ReturnValue_1;         // 0x0EEE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393B[0x1];                                     // 0x0EEF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0EF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393C[0x4];                                     // 0x0EF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x0EF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0F00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393D[0x7];                                     // 0x0F01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default;                             // 0x0F08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393E[0x4];                                     // 0x0F14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0F18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_21;                  // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0F28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Lean_1;                               // 0x0F30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_393F[0x7];                                     // 0x0F31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_CameraLean_1;                         // 0x0F38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_ThirdPersonCameraOffset_1;            // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x0F48(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Lean;                                 // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3940[0x7];                                     // 0x0F59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_CameraLean;                           // 0x0F60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_ThirdPersonCameraOffset;              // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0F79(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0F7A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0F7B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0F7C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0F7D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x0F7E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0F7F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue_1;               // 0x0F80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0F81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3941[0x2];                                     // 0x0F82(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_22;                  // 0x0F84(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x0F8C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3942[0x4];                                     // 0x0F9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_8;              // 0x0FA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_8;           // 0x0FA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3943[0x7];                                     // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_Loc_1;                          // 0x0FB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0FD0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x10B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_3;                           // 0x10C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x10C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x10D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x10D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x10E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x10E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_4;                           // 0x1100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Loc;                            // 0x1108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x1120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x1128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x1130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x1138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x1140(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x1228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x1240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_23;                  // 0x1248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x1250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x1258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x1260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_24;                  // 0x1268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x1270(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_9;              // 0x1280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_9;           // 0x1288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x1290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3944[0x7];                                     // 0x1291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_5;                           // 0x1298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x12A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3945[0x4];                                     // 0x12A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_6;                           // 0x12A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x12B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_7;                           // 0x12B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x12C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x12C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_8;                           // 0x12D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x12D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x12F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x1308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x1320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x1328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x1330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x1338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x1350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x1368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x1380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x1388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x1390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x1398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x13A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x13B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x13C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x13D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector_X_7;                          // 0x14C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_7;                          // 0x14C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_7;                          // 0x14D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x14D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x14F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_3;  // 0x1508(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x15F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_10;             // 0x15F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x1600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x1608(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        K2Node_Select_Default_9;                           // 0x1620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x1628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x162C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x1630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3946[0x4];                                     // 0x1634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x1638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue_11;             // 0x1650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_4;                       // 0x1658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_5;                       // 0x1660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_12;             // 0x1668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_10;                          // 0x1670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x1678(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x1690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3947[0x4];                                     // 0x169C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_13;             // 0x16A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x16A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Lean_1;                         // 0x16C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3948[0x7];                                     // 0x16C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CameraLean_1;                   // 0x16C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ThirdPersonCameraOffset_1;      // 0x16D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Lean;                           // 0x16D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3949[0x7];                                     // 0x16D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CameraLean;                     // 0x16E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_ThirdPersonCameraOffset;        // 0x16E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_8;                          // 0x16F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_8;                          // 0x16F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_8;                          // 0x1700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_9;                          // 0x1708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_9;                          // 0x1710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_9;                          // 0x1718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x1720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x1728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_6;                 // 0x1730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_7;                 // 0x1748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_2;                      // 0x1760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_3;                      // 0x1778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_4;  // 0x1790(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_5;  // 0x1878(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Lerp_ReturnValue_6;                       // 0x1960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_7;                       // 0x1968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_14;             // 0x1970(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_11;                          // 0x1978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_2;         // 0x1980(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x1998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x199C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x19A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394A[0x4];                                     // 0x19A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_15;             // 0x19A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x19B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Lerp_ReturnValue_8;                       // 0x19C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_9;                       // 0x19D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_16;             // 0x19D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_12;                          // 0x19E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_3;         // 0x19E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x1A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x1A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x1A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394B[0x4];                                     // 0x1A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_17;             // 0x1A10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x1A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x1A30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x1A38(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_10;          // 0x1A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394C[0x3];                                     // 0x1A51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x1A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7; // 0x1A58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_49;                   // 0x1A60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394D[0x3];                                     // 0x1A61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x1A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x1A68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_5;                        // 0x1A80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_4;                        // 0x1A88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x1A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_50;                   // 0x1AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394E[0x7];                                     // 0x1AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USoundBase*                             K2Node_CustomEvent_Sound_3;                        // 0x1AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_18;           // 0x1AB8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x1AC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x1AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394F[0x7];                                     // 0x1AD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x1AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x1AE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x1AE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3950[0x3];                                     // 0x1AE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x1AEC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_19;           // 0x1AF4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3951[0x4];                                     // 0x1B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_18;             // 0x1B08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_11;          // 0x1B10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x1B18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_51;                   // 0x1B19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3952[0x6];                                     // 0x1B1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x1B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State_1;          // 0x1B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x1B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3953[0x3];                                     // 0x1B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x1B34(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1B3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3954[0x3];                                     // 0x1B3D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_20;           // 0x1B40(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_19;             // 0x1B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_52;                   // 0x1B58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3955[0x7];                                     // 0x1B59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_12;          // 0x1B60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3956[0x3];                                     // 0x1B69(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_TickDamage;                           // 0x1B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TickTime;                             // 0x1B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_BleedLength;                          // 0x1B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Damage;                               // 0x1B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3957[0x4];                                     // 0x1B84(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      K2Node_Event_DamageType_1;                         // 0x1B88(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_InstigatedBy;                         // 0x1B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser_1;                       // 0x1B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x1BA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x1BB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue_1;             // 0x1BB8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x1BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_BaseDamage;                           // 0x1BCC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_EventInstigator;                      // 0x1BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_DamageCauser;                         // 0x1BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  K2Node_Event_DamageType;                           // 0x1BE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      K2Node_Event_Hitbox;                               // 0x1BE1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x1BE2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x1BE3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3958[0x4];                                     // 0x1BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetInstigatorController_ReturnValue_1;    // 0x1BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x1BF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x1BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3959[0x7];                                     // 0x1BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_13;          // 0x1C00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x1C08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395A[0x7];                                     // 0x1C09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_1;        // 0x1C10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x1C18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x1C19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395B[0x6];                                     // 0x1C1A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x1C20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_5;                            // 0x1C30(0x0018)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x1C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x1C50(0x0018)()
	class AController*                            CallFunc_GetController_ReturnValue_20;             // 0x1C68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_14;          // 0x1C70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1C78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395C[0x7];                                     // 0x1C79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UScopeWidget_C*>                 CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x1C80(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x1C90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395D[0x4];                                     // 0x1C94(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UScopeWidget_C*>                 CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x1C98(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x1CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395E[0x4];                                     // 0x1CAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_27;                    // 0x1CB0(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_28;                    // 0x1CC8(0x0018)(HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x1CE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_25;                  // 0x1CE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_26;                  // 0x1CF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_21;           // 0x1CF8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_22;           // 0x1D08(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_27;                  // 0x1D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x1D20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_23;           // 0x1D30(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x1D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x1D41(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x1D42(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x1D43(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_395F[0x4];                                     // 0x1D44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_4;         // 0x1D48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_4;                      // 0x1D60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_4;                     // 0x1D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_4;                       // 0x1D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x1D6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x1D70(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_28;                  // 0x1D80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x1D88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x1D90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x1D91(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3960[0x6];                                     // 0x1D92(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x1D98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_7;        // 0x1DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x1DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_2;                   // 0x1DD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3961[0x7];                                     // 0x1DD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x1DD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x1DF0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_24;           // 0x1ED8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x1EE8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewVisible;                    // 0x1EF8(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Team;                           // 0x1EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3962[0x2];                                     // 0x1EFA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_4;                              // 0x1EFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3963[0x4];                                     // 0x1F04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_8;        // 0x1F08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA_;                            // 0x1F20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x1F21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3964[0x2];                                     // 0x1F22(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x1F24(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3965[0x4];                                     // 0x1F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_SGKMasterCharacter_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x1F30(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x1F40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3966[0x4];                                     // 0x1F44(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_21;             // 0x1F48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_Object;                         // 0x1F50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_15;          // 0x1F58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x1F60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3967[0x7];                                     // 0x1F61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_2;     // 0x1F68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x1F70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3968[0x7];                                     // 0x1F71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x1F78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_22;             // 0x1F88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_16;          // 0x1F90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x1F98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3969[0x3];                                     // 0x1F99(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_25;           // 0x1F9C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x1FAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396A[0x3];                                     // 0x1FAD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_2;        // 0x1FB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x1FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396B[0x7];                                     // 0x1FB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_23;             // 0x1FC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_24;             // 0x1FC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_53;                   // 0x1FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396C[0x7];                                     // 0x1FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_17;          // 0x1FD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x1FE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396D[0x7];                                     // 0x1FE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_18;          // 0x1FE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x1FF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MinimapStartUpdate_Success;               // 0x1FF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396E[0x2];                                     // 0x1FF2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x1FF4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_29;                  // 0x1FFC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x2004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396F[0x3];                                     // 0x2005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x2008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_54;                   // 0x200C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3970[0x3];                                     // 0x200D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               CallFunc_Array_Get_Item_3;                         // 0x2010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x2018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3971[0x7];                                     // 0x2019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_9;        // 0x2020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x2038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x2040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x2041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_55;                   // 0x2042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_56;                   // 0x2043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3972[0x4];                                     // 0x2044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x2048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x2050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3973[0x7];                                     // 0x2051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x2058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_29;                    // 0x2060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_57;                   // 0x2061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddStartingItems_Return;                  // 0x2062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3974[0x1];                                     // 0x2063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_26;           // 0x2064(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3975[0x4];                                     // 0x2074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_CustomEvent_SaveGame;                       // 0x2078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x2080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_27;           // 0x2088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x2098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_30;                    // 0x20A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3976[0x7];                                     // 0x20A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x20B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_58;                   // 0x20B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3977[0x7];                                     // 0x20B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x20C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x20C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_31;                    // 0x20D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_59;                   // 0x20D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3978[0x6];                                     // 0x20DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x20E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x20E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x20E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3979[0x6];                                     // 0x20EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerState*                           CallFunc_Array_Get_Item_4;                         // 0x20F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_60;                   // 0x20F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_61;                   // 0x20F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397A[0x6];                                     // 0x20FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x2100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x2108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x210C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397B[0x3];                                     // 0x210D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x2110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_CustomEvent_LookAtRotation;                 // 0x2118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_Vector2DVector2D_ReturnValue;  // 0x2128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397C[0x7];                                     // 0x2129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_25;             // 0x2130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerBuildingComponent_C*          CallFunc_GetComponentByClass_ReturnValue_1;        // 0x2138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x2140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_28;           // 0x2144(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x2154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397D[0x3];                                     // 0x2155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x2158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397E[0x4];                                     // 0x215C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_26;             // 0x2160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue_2;        // 0x2168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x2170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_397F[0x8];                                     // 0x2178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x2180(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x21E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x21E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x21F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x21F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x2200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3980[0x4];                                     // 0x2204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x2208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x2210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x2218(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x2220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x2224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3981[0x3];                                     // 0x2225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x2228(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x2310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_10;       // 0x2328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_30;                  // 0x2340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_62;                   // 0x2348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3982[0x7];                                     // 0x2349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x2350(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x2438(0x0010)(ReferenceParm)
	TArray<class UPrimitiveComponent*>            K2Node_CustomEvent_Components;                     // 0x2448(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	TArray<class UPrimitiveComponent*>            K2Node_Event_Components;                           // 0x2458(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_5;                         // 0x2468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x2470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x2474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3983[0x3];                                     // 0x2475(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_29;           // 0x2478(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_CustomEvent_Target;                         // 0x2488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_CustomEvent_Target2;                        // 0x2490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_CustomEvent_Pickup;                         // 0x2498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_CustomEvent_SGK;                            // 0x24A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_31;                  // 0x24A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x24B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3984[0x3];                                     // 0x24B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_30;           // 0x24B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x24C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x24C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3985[0x2];                                     // 0x24C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_32;                  // 0x24C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_31;           // 0x24D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_33;                  // 0x24E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_13;                  // 0x24E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_32;           // 0x24F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_5;                 // 0x2500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_4;                 // 0x2504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x2508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x2510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_3;                 // 0x2514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScopeWidget_C*                         CallFunc_Array_Get_Item_6;                         // 0x2518(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_2;                 // 0x2520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue_1;                 // 0x2524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x2528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_5;         // 0x2530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_5;                      // 0x2548(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_5;                     // 0x254C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_5;                       // 0x2550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3986[0x4];                                     // 0x2554(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_6;         // 0x2558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x2570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_6;                      // 0x2588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_6;                     // 0x258C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_6;                       // 0x2590(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3987[0x4];                                     // 0x2594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x2598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x25B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x25C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_InputAxisEvent_AxisValue;                   // 0x25E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_34;                  // 0x25E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_33;           // 0x25EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_34;           // 0x25FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x260C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3988[0x3];                                     // 0x260D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_27;             // 0x2610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_28;             // 0x2618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_19;          // 0x2620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_32;                    // 0x2628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3989[0x7];                                     // 0x2629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_20;          // 0x2630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_33;                    // 0x2638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398A[0x7];                                     // 0x2639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_29;             // 0x2640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x2648(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398B[0x4];                                     // 0x264C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_21;          // 0x2650(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_34;                    // 0x2658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x2659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398C[0x2];                                     // 0x265A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x265C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_63;                   // 0x2660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x2661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_64;                   // 0x2662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398D[0x5];                                     // 0x2663(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_2;     // 0x2668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_35;                    // 0x2670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398E[0x7];                                     // 0x2671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_3;     // 0x2678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_36;                    // 0x2680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_398F[0x7];                                     // 0x2681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_30;             // 0x2688(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_22;          // 0x2690(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_37;                    // 0x2698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting; // 0x2699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1; // 0x269A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_65;                   // 0x269B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3990[0x4];                                     // 0x269C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractableDoor_C*                    K2Node_CustomEvent_CanOpenDoor_1;                  // 0x26A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AInteractableDoor_C*                    K2Node_CustomEvent_CanOpenDoor;                    // 0x26A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable;                                // 0x26B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_66;                   // 0x26B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x26B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3991[0x5];                                     // 0x26B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x26B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character_1;     // 0x26C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_38;                    // 0x26C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3992[0x7];                                     // 0x26C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x26D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_1;                              // 0x26D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3993[0x7];                                     // 0x26D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character_2;     // 0x26E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_39;                    // 0x26E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 Temp_byte_Variable_2;                              // 0x26E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3994[0x2];                                     // 0x26EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_14;                  // 0x26EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3995[0x4];                                     // 0x26F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_31;             // 0x26F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_23;          // 0x2700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_40;                    // 0x2708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3996[0x7];                                     // 0x2709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_32;             // 0x2710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_24;          // 0x2718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_41;                    // 0x2720(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x2721(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3997[0x2];                                     // 0x2722(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x2724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_35;           // 0x2728(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_67;                   // 0x2738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3998[0x3];                                     // 0x2739(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_ID;                             // 0x273C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AmmoID_2;                       // 0x2744(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x274C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x2750(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UScopeWidget_C*                         CallFunc_Array_Get_Item_7;                         // 0x2780(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x2788(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3999[0x4];                                     // 0x278C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_8;                         // 0x2790(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetInvSlot_SlotFound;                 // 0x27A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399A[0x7];                                     // 0x27A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_SGK_GetInvSlot_InvSlot;                   // 0x27B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x2800(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x3090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x3091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399B[0x6];                                     // 0x3092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x3098(0x0010)(NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x30A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399C[0x3];                                     // 0x30A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x30AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x30B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x30B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399D[0x3];                                     // 0x30B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x30B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x30BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399E[0x3];                                     // 0x30BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x30C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399F[0x4];                                     // 0x30C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x30C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x30D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_42;                    // 0x30E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A0[0x7];                                     // 0x30E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x30E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Select_Default_13;                          // 0x30F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_68;                   // 0x30F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x30F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A1[0x5];                                     // 0x30F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_CustomEvent_Inv_Item_1;                     // 0x30F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AmmoID_1;                       // 0x3128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_CustomEvent_Inv_Item;                       // 0x3130(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_AmmoID;                         // 0x3160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x3168(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPickupWeapon_1;                // 0x3198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A2[0x7];                                     // 0x3199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_CustomEvent_PickupActor_1;                  // 0x31A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bPickupWeapon;                  // 0x31A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A3[0x7];                                     // 0x31A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_CustomEvent_PickupActor;                    // 0x31B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_2; // 0x31B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_3; // 0x31B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A4[0x6];                                     // 0x31BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key_29;                    // 0x31C0(0x0018)(HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_9;                         // 0x31D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x31E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x31E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MagnifiedScope_C*                   CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x31F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_69;                   // 0x31F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_70;                   // 0x31F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A5[0x6];                                     // 0x31FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USKG_SceneCaptureComponent2D*           CallFunc_GetSceneCapture_SceneCapture;             // 0x3200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USKG_SceneCaptureComponent2D*           CallFunc_GetSceneCapture_SceneCapture_1;           // 0x3208(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_35;                  // 0x3210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_71;                   // 0x3218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A6[0x7];                                     // 0x3219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USKG_SceneCaptureComponent2D*           CallFunc_GetSceneCapture_SceneCapture_2;           // 0x3220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x3228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_4;     // 0x3230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_43;                    // 0x3238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A7[0x7];                                     // 0x3239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_5;     // 0x3240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_44;                    // 0x3248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A8[0x3];                                     // 0x3249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_36;           // 0x324C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_72;                   // 0x325C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_4; // 0x325D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_5; // 0x325E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_6; // 0x325F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_7; // 0x3260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39A9[0x3];                                     // 0x3261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x3264(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x326C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AA[0x3];                                     // 0x326D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_36;                  // 0x3270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_33;             // 0x3278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_25;          // 0x3280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_45;                    // 0x3288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AB[0x3];                                     // 0x3289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_15;                  // 0x328C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam_2;             // 0x3294(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AC[0x3];                                     // 0x3295(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_34;             // 0x3298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_37;           // 0x32A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_26;          // 0x32B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_46;                    // 0x32B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStandUp__Yes;                          // 0x32B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AD[0x6];                                     // 0x32BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue_4;                      // 0x32C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_6;  // 0x32D8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_bProne__1;                      // 0x33C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bProne_;                        // 0x33C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AE[0x2];                                     // 0x33C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_37;                  // 0x33C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39AF[0x4];                                     // 0x33CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x33D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_27;          // 0x33D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_47;                    // 0x33E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x33E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x33E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B0[0x5];                                     // 0x33E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_11;       // 0x33E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_2;                        // 0x3400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_1;                        // 0x3408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_38;           // 0x3410(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_73;                   // 0x3420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B1[0x7];                                     // 0x3421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_12;       // 0x3428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x3440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_35;             // 0x3448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_28;          // 0x3450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_48;                    // 0x3458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B2[0x3];                                     // 0x3459(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_38;                  // 0x345C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B3[0x4];                                     // 0x3464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterSniperWeapon_C*               K2Node_DynamicCast_AsBP_Master_Sniper_Weapon;      // 0x3468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_49;                    // 0x3470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B4[0x7];                                     // 0x3471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterSniperWeapon_C*               K2Node_DynamicCast_AsBP_Master_Sniper_Weapon_1;    // 0x3478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_50;                    // 0x3480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B5[0x3];                                     // 0x3481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x3484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_39;           // 0x3488(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_10;                        // 0x3498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x34A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B6[0x7];                                     // 0x34A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_3;     // 0x34A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_51;                    // 0x34B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B7[0x7];                                     // 0x34B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> CallFunc_Peak_GetTeam_self_CastInput_1;            // 0x34B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam_3;             // 0x34C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x34C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x34CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x34CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_39;                  // 0x34CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_14;                          // 0x34D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x34D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B8[0x2];                                     // 0x34D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_40;           // 0x34D8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x34E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x34E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39B9[0x6];                                     // 0x34EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_36;             // 0x34F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_29;          // 0x34F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_52;                    // 0x3500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BA[0x3];                                     // 0x3501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_41;           // 0x3504(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x3514(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x3518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BB[0x3];                                     // 0x3519(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x351C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x3520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_74;                   // 0x3521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_75;                   // 0x3522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BC[0x5];                                     // 0x3523(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_37;             // 0x3528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_76;                   // 0x3530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BD[0x7];                                     // 0x3531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_30;          // 0x3538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_53;                    // 0x3540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_77;                   // 0x3541(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BE[0x6];                                     // 0x3542(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_38;             // 0x3548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_31;          // 0x3550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_54;                    // 0x3558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39BF[0x7];                                     // 0x3559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_6;     // 0x3560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_55;                    // 0x3568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C0[0x3];                                     // 0x3569(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TotalMaxAmmo_MaxAmmo;                     // 0x356C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TotalAmmo_ReturnValue;                    // 0x3570(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x3574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x3575(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C1[0x2];                                     // 0x3576(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue_39;             // 0x3578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x3580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C2[0x7];                                     // 0x3581(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_32;          // 0x3588(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_56;                    // 0x3590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C3[0x7];                                     // 0x3591(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x3598(0x0010)(ConstParm, ReferenceParm)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x35A8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_13;       // 0x35B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x35D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x35E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_78;                   // 0x35E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x35E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_79;                   // 0x35E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x35E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LeanAlpha_ImplicitCast;         // 0x35E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x35F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C4[0x4];                                     // 0x35F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LeanAlpha_ImplicitCast_1;       // 0x35F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x3600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C5[0x4];                                     // 0x3604(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LeanAlpha_ImplicitCast_2;       // 0x3608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LeanAlpha_ImplicitCast_3;       // 0x3610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x3618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_CameraLagSpeed_ImplicitCast;    // 0x3620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C6[0x4];                                     // 0x3624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x3628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x3630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCapsuleSize_InHalfHeight_ImplicitCast; // 0x3638(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetCapsuleSize_InRadius_ImplicitCast;     // 0x363C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast; // 0x3640(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C7[0x4];                                     // 0x3644(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x3648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x3650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_1;               // 0x3654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_2;               // 0x3658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_3;          // 0x365C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast_3;               // 0x3660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C8[0x4];                                     // 0x3664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x3668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x3670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x3678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x3680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LookInput_InputValue_ImplicitCast;        // 0x3688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C9[0x4];                                     // 0x368C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x3690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LookInput_InputValue_ImplicitCast_1;      // 0x3698(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CA[0x4];                                     // 0x369C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x36A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Timeline_NewTime_ImplicitCast;              // 0x36A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter) == 0x000010, "Wrong alignment on BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter");
static_assert(sizeof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter) == 0x0036B0, "Wrong size on BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, EntryPoint) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_26) == 0x000008, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_25) == 0x000028, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_24) == 0x000040, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Variable) == 0x000058, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_object_Variable) == 0x000060, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_object_Variable_1) == 0x000068, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Variable_1) == 0x000070, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_object_Variable_2) == 0x000078, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_object_Variable_3) == 0x000080, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_2) == 0x000089, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable) == 0x00008A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_3) == 0x00008B, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable) == 0x000090, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_1) == 0x000098, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable_1) == 0x0000A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_4) == 0x0000A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_5) == 0x0000A9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_6) == 0x0000AA, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_2) == 0x0000AB, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable_2) == 0x0000B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_3) == 0x0000B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable_3) == 0x0000C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_4) == 0x0000C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_5) == 0x0000C9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_6) == 0x0000CA, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable_4) == 0x0000D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_7) == 0x0000D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_real_Variable_5) == 0x0000E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_8) == 0x0000E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_9) == 0x0000E9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x0000EC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_4) == 0x0000FC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_3) == 0x000104, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x00010C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_2) == 0x00011C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000124, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_1) == 0x000134, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x00013C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName) == 0x00014C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x000154, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable) == 0x000164, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_7) == 0x00016C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_8) == 0x00016D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_9) == 0x00016E, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_10) == 0x00016F, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_11) == 0x000170, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_12) == 0x000171, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_13) == 0x000172, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_14) == 0x000173, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_15) == 0x000174, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_16) == 0x000175, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_17) == 0x000176, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_18) == 0x000177, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_19) == 0x000178, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_5) == 0x00017C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_20) == 0x00018C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_6) == 0x000190, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0001A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_21) == 0x0001A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue) == 0x0001AC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Variable_2) == 0x0001B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Variable_3) == 0x0001B4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001BC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item) == 0x0001C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x0001C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_23) == 0x0001D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_22) == 0x0001E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_22) == 0x0001F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_21) == 0x000208, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_20) == 0x000220, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_19) == 0x000238, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_18) == 0x000250, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable) == 0x000268, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_17) == 0x000280, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_16) == 0x000298, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable_1) == 0x0002B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_15) == 0x0002C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_14) == 0x0002E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable_2) == 0x0002F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_13) == 0x000310, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_12) == 0x000328, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable_3) == 0x000340, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_11) == 0x000358, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_10) == 0x000370, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_9) == 0x000388, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_8) == 0x0003A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_7) == 0x0003B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_6) == 0x0003D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_5) == 0x0003E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_4) == 0x000400, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_3) == 0x000418, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable_4) == 0x000430, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_2) == 0x000448, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeTransform_ReturnValue) == 0x000460, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue) == 0x0004C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputKeyEvent_Key_1) == 0x0004D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x0004F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputKeyEvent_Key) == 0x0005D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0005F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_23) == 0x0005F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_24) == 0x0005F9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue) == 0x000600, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_1) == 0x000608, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_25) == 0x000610, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_26) == 0x000611, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_1) == 0x000618, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key) == 0x000630, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_27) == 0x000648, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_28) == 0x000649, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_29) == 0x00064A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_30) == 0x00064B, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_31) == 0x00064C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_32) == 0x00064D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_33) == 0x00064E, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_34) == 0x00064F, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_35) == 0x000650, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_36) == 0x000651, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_16) == 0x000654, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000660, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_37) == 0x000668, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bNewVisibility_3) == 0x000669, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bNewVisibility_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_IsClimbingLadder) == 0x00066A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_IsClimbingLadder' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Ladder_1) == 0x000670, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Ladder_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_JumpOff) == 0x000678, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_JumpOff' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_7) == 0x00067C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bNewVisibility_2) == 0x00068C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bNewVisibility_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_38) == 0x00068D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000690, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0006A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Ladder) == 0x0006C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Ladder' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_OverlappedBase) == 0x0006C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_OverlappedBase' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_39) == 0x0006C9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0006D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Location) == 0x000730, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Rotation) == 0x000748, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Scale) == 0x000760, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000778, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000780, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_40) == 0x000788, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsAnyMontagePlaying_ReturnValue) == 0x000789, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsAnyMontagePlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Conv_BoolToString_ReturnValue) == 0x000790, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2) == 0x0007A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_41) == 0x0007A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_9) == 0x0007B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0007B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_17) == 0x0007D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_8) == 0x0007D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0007E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_10) == 0x0007F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_8) == 0x0007FC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue) == 0x000810, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_18) == 0x000818, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController) == 0x000820, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess) == 0x000828, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_7) == 0x000830, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000838, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_9) == 0x000850, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_6) == 0x000860, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000868, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_19) == 0x000880, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000888, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_10) == 0x000898, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0008A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_PlayerCharRef_1) == 0x0008B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_PlayerCharRef_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_PlayerCharRef) == 0x0008B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_PlayerCharRef' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_1) == 0x0008C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_1) == 0x0008C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_1) == 0x0008D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_WithEditor_ReturnValue) == 0x0008D1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_WithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_CharacterTeam) == 0x0008D2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_CharacterTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_2) == 0x0008D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_2) == 0x0008E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0008E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x0008F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherActor_4) == 0x0008F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000900, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000908, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00090C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000910, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x0009F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_3) == 0x000A00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000A01, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_self_CastInput) == 0x000A08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_CharacterTeam_1) == 0x000A18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_CharacterTeam_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000A19, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_1) == 0x000A1C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000A28, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000A30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000A38, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000A40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CanMelee_1) == 0x000A44, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CanMelee_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Mesh_1) == 0x000A48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Current_Victim_1) == 0x000A50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Current_Victim_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_IsKnife_1) == 0x000A58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_IsKnife_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_RandomAnim_1) == 0x000A5C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_RandomAnim_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_42) == 0x000A60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000A61, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3) == 0x000A68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4) == 0x000A70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_43) == 0x000A78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_44) == 0x000A79, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetSocketTransform_ReturnValue) == 0x000A80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000AE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_FinishSpawningActor_ReturnValue) == 0x000AE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CanMelee) == 0x000AF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CanMelee' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Mesh) == 0x000AF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Current_Victim) == 0x000B00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Current_Victim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_IsKnife) == 0x000B08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_IsKnife' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_RandomAnim) == 0x000B0C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_RandomAnim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000B10, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000B18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000B20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000B28, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000B2C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000B30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NewMovementMode_2) == 0x000C18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NewMovementMode_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NewMovementMode_1) == 0x000C19, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NewMovementMode_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NewMovementMode) == 0x000C1A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NewMovementMode' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000C20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000C38, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X) == 0x000C50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y) == 0x000C58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z) == 0x000C60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_1) == 0x000C68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_1) == 0x000C70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_1) == 0x000C78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000C80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_1) == 0x000C98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_LadderRef) == 0x000CB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_LadderRef' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000CB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000DA0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_TurnedOn) == 0x000DA1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_TurnedOn' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_VerifiedPlayers) == 0x000DA8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_VerifiedPlayers' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_LadderRef_1) == 0x000DB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_LadderRef_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_LadderRef) == 0x000DC0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_LadderRef' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_3) == 0x000DC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_4) == 0x000DD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_3) == 0x000DD8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000DE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_4) == 0x000DE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_5) == 0x000DF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsLocallyControlled_ReturnValue) == 0x000DF1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_45) == 0x000DF2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_HasAuthority_ReturnValue) == 0x000DF3, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_5) == 0x000DF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_5) == 0x000E00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_6) == 0x000E08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_2) == 0x000E0C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_5) == 0x000E14, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_1) == 0x000E20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_2) == 0x000E28, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5) == 0x000E30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6) == 0x000E38, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_46) == 0x000E40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_47) == 0x000E41, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_11) == 0x000E44, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_RandomBool_ReturnValue) == 0x000E54, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000E58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_6) == 0x000E5C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bNewVisibility_1) == 0x000E64, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bNewVisibility_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bNewVisibility) == 0x000E65, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bNewVisibility' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_BreachRef_1) == 0x000E68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_BreachRef_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_BreachRef) == 0x000E70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_BreachRef' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsOverlappingActor_ReturnValue) == 0x000E78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x000E79, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_12) == 0x000E7C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000E8C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_On_) == 0x000E8D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_On_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Montage_1) == 0x000E90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Montage) == 0x000E98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_6) == 0x000EA0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_20) == 0x000EA8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_6) == 0x000EB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_7) == 0x000EB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_48) == 0x000EB9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SelectFloat_ReturnValue) == 0x000EC0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_7) == 0x000EC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_7) == 0x000ED0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_8) == 0x000ED8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_13) == 0x000EDC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000EEC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_HoldingWeaponCheck_ReturnValue) == 0x000EED, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_HoldingWeaponCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_HoldingWeaponCheck_ReturnValue_1) == 0x000EEE, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_HoldingWeaponCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_RandomInteger_ReturnValue) == 0x000EF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x000EF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_9) == 0x000F00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default) == 0x000F08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_RandomInteger_ReturnValue_1) == 0x000F10, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_1) == 0x000F18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_21) == 0x000F20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_2) == 0x000F28, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Lean_1) == 0x000F30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Lean_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_CameraLean_1) == 0x000F38, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_CameraLean_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_ThirdPersonCameraOffset_1) == 0x000F40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_ThirdPersonCameraOffset_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_14) == 0x000F48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Lean) == 0x000F58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_CameraLean) == 0x000F60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_ThirdPersonCameraOffset) == 0x000F68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_ThirdPersonCameraOffset' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_7) == 0x000F70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000F78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsServer_ReturnValue) == 0x000F79, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x000F7A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsStandalone_ReturnValue) == 0x000F7B, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_1) == 0x000F7C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000F7D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsServer_ReturnValue_1) == 0x000F7E, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000F7F, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsStandalone_ReturnValue_1) == 0x000F80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsStandalone_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_2) == 0x000F81, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_22) == 0x000F84, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_15) == 0x000F8C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_8) == 0x000FA0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_8) == 0x000FA8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_10) == 0x000FB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Loc_1) == 0x000FB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Loc_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000FD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0010B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_3) == 0x0010C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_2) == 0x0010C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_2) == 0x0010D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_2) == 0x0010D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0010E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_2) == 0x0010E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_4) == 0x001100, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Loc) == 0x001108, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Loc' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_3) == 0x001120, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_3) == 0x001128, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_3) == 0x001130, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x001138, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x001140, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_3) == 0x001228, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x001240, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_23) == 0x001248, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_4) == 0x001250, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_4) == 0x001258, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_4) == 0x001260, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_24) == 0x001268, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_16) == 0x001270, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_9) == 0x001280, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_9) == 0x001288, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_11) == 0x001290, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_5) == 0x001298, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable) == 0x0012A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_6) == 0x0012A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0012B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_7) == 0x0012B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0012C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0012C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_8) == 0x0012D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Location_1) == 0x0012D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Rotation_1) == 0x0012F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Scale_1) == 0x001308, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_5) == 0x001320, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_5) == 0x001328, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_5) == 0x001330, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Location_2) == 0x001338, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Rotation_2) == 0x001350, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakTransform_Scale_2) == 0x001368, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x001380, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_6) == 0x001388, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_6) == 0x001390, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_6) == 0x001398, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_4) == 0x0013A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0013B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_ReturnValue) == 0x0013C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x0013D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_7) == 0x0014C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_7) == 0x0014C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_7) == 0x0014D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_5) == 0x0014D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_ReturnValue_1) == 0x0014F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_3) == 0x001508, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_2) == 0x0015F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_10) == 0x0015F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_3) == 0x001600, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x001608, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_9) == 0x001620, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll) == 0x001628, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch) == 0x00162C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw) == 0x001630, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue) == 0x001638, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_11) == 0x001650, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_4) == 0x001658, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_5) == 0x001660, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_12) == 0x001668, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_10) == 0x001670, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_1) == 0x001678, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_1) == 0x001690, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_1) == 0x001694, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_1) == 0x001698, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_13) == 0x0016A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue_1) == 0x0016A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Lean_1) == 0x0016C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Lean_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CameraLean_1) == 0x0016C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CameraLean_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_ThirdPersonCameraOffset_1) == 0x0016D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_ThirdPersonCameraOffset_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Lean) == 0x0016D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CameraLean) == 0x0016E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_ThirdPersonCameraOffset) == 0x0016E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_ThirdPersonCameraOffset' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_8) == 0x0016F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_8) == 0x0016F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_8) == 0x001700, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_X_9) == 0x001708, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_X_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Y_9) == 0x001710, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Y_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakVector_Z_9) == 0x001718, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakVector_Z_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x001720, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x001728, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_6) == 0x001730, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector_ReturnValue_7) == 0x001748, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_ReturnValue_2) == 0x001760, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_ReturnValue_3) == 0x001778, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_4) == 0x001790, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_5) == 0x001878, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_6) == 0x001960, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_7) == 0x001968, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_14) == 0x001970, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_11) == 0x001978, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_2) == 0x001980, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_2) == 0x001998, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_2) == 0x00199C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_2) == 0x0019A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_15) == 0x0019A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue_2) == 0x0019B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_8) == 0x0019C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_ReturnValue_9) == 0x0019D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_16) == 0x0019D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_12) == 0x0019E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_3) == 0x0019E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_3) == 0x001A00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_3) == 0x001A04, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_3) == 0x001A08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_17) == 0x001A10, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue_3) == 0x001A18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetInstigatorController_ReturnValue) == 0x001A30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_17) == 0x001A38, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_10) == 0x001A48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_12) == 0x001A50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable) == 0x001A54, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7) == 0x001A58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_49) == 0x001A60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_2) == 0x001A64, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x001A68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_5) == 0x001A80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_4) == 0x001A88, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x001A90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_50) == 0x001AA8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_3) == 0x001AB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_18) == 0x001AB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsPeak_53Player_State) == 0x001AC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_13) == 0x001AD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetGameState_ReturnValue) == 0x001AD8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsPeak_53Game_State) == 0x001AE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_14) == 0x001AE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_8) == 0x001AEC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_19) == 0x001AF4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_18) == 0x001B08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_11) == 0x001B10, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_15) == 0x001B18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_51) == 0x001B19, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetGameState_ReturnValue_1) == 0x001B20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsPeak_53Game_State_1) == 0x001B28, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsPeak_53Game_State_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_16) == 0x001B30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_9) == 0x001B34, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001B3C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_20) == 0x001B40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_19) == 0x001B50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_52) == 0x001B58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_12) == 0x001B60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_17) == 0x001B68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_TickDamage) == 0x001B6C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_TickDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_TickTime) == 0x001B70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_TickTime' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_BleedLength) == 0x001B78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_BleedLength' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Damage) == 0x001B80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_DamageType_1) == 0x001B88, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_DamageType_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_InstigatedBy) == 0x001B90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_DamageCauser_1) == 0x001B98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_DamageCauser_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x001BA0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetOwner_ReturnValue) == 0x001BB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetDisplayName_ReturnValue_1) == 0x001BB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_FTrunc_ReturnValue) == 0x001BC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_BaseDamage) == 0x001BCC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_EventInstigator) == 0x001BD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_DamageCauser) == 0x001BD8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_DamageType) == 0x001BE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_DamageType' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Hitbox) == 0x001BE1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Hitbox' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_11) == 0x001BE2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x001BE3, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetInstigatorController_ReturnValue_1) == 0x001BE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetInstigatorController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x001BF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_18) == 0x001BF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_13) == 0x001C00, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_19) == 0x001C08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsPeak_53Player_State_1) == 0x001C10, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsPeak_53Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_20) == 0x001C18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x001C19, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Conv_TextToString_ReturnValue) == 0x001C20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_struct_Variable_5) == 0x001C30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Conv_StringToInt_ReturnValue) == 0x001C48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_3) == 0x001C4C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Conv_IntToText_ReturnValue) == 0x001C50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_20) == 0x001C68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_14) == 0x001C70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_21) == 0x001C78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x001C80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_2) == 0x001C90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x001C98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_3) == 0x001CA8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_27) == 0x001CB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_28) == 0x001CC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_3) == 0x001CE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_25) == 0x001CE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_26) == 0x001CF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_21) == 0x001CF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_22) == 0x001D08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_27) == 0x001D18, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetCurrentLevelName_ReturnValue) == 0x001D20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_23) == 0x001D30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Contains_ReturnValue) == 0x001D40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x001D41, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x001D42, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanOR_ReturnValue) == 0x001D43, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_4) == 0x001D48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_4) == 0x001D60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_4) == 0x001D64, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_4) == 0x001D68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_DeltaSeconds) == 0x001D6C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector2D_ReturnValue) == 0x001D70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_28) == 0x001D80, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerCharacter_ReturnValue) == 0x001D88, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_12) == 0x001D90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x001D91, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x001D98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_7) == 0x001DA0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x001DB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsServer_ReturnValue_2) == 0x001DD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_FindLookAtRotation_ReturnValue) == 0x001DD8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x001DF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_24) == 0x001ED8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeStruct_LinearColor) == 0x001EE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bNewVisible) == 0x001EF8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bNewVisible' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Team) == 0x001EF9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_4) == 0x001EFC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_8) == 0x001F08, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckFFA_FFA_) == 0x001F20, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckFFA_FFA_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x001F21, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_10) == 0x001F24, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x001F30, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_4) == 0x001F40, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_21) == 0x001F48, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Object) == 0x001F50, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Object' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_15) == 0x001F58, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_22) == 0x001F60, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character_2) == 0x001F68, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_23) == 0x001F70, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Conv_TextToString_ReturnValue_1) == 0x001F78, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_22) == 0x001F88, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_16) == 0x001F90, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_16' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_24) == 0x001F98, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_25) == 0x001F9C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x001FAC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsPeak_53Player_State_2) == 0x001FB0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsPeak_53Player_State_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_25) == 0x001FB8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_23) == 0x001FC0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_24) == 0x001FC8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_53) == 0x001FD0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_17) == 0x001FD8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_17' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_26) == 0x001FE0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_18) == 0x001FE8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_18' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_27) == 0x001FF0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MinimapStartUpdate_Success) == 0x001FF1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MinimapStartUpdate_Success' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_11) == 0x001FF4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_29) == 0x001FFC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x002004, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable_1) == 0x002008, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_54) == 0x00200C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_3) == 0x002010, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x002018, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_9) == 0x002020, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Vector_Distance_ReturnValue) == 0x002038, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x002040, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_DoubleDouble_ReturnValue) == 0x002041, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_55) == 0x002042, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_56) == 0x002043, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x002048, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_28) == 0x002050, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x002058, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_29) == 0x002060, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_57) == 0x002061, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_AddStartingItems_Return) == 0x002062, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_AddStartingItems_Return' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_26) == 0x002064, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_SaveGame) == 0x002078, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetGameMode_ReturnValue) == 0x002080, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_27) == 0x002088, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x002098, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_30) == 0x0020A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SGK_GetSaveGame_SaveGame) == 0x0020B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_58) == 0x0020B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x0020C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x0020C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_31) == 0x0020D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_59) == 0x0020D9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetGameState_ReturnValue_2) == 0x0020E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_4) == 0x0020E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_3) == 0x0020E9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_4) == 0x0020F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_60) == 0x0020F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_61) == 0x0020F9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x002100, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_5) == 0x002108, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x00210C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_12) == 0x002110, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_LookAtRotation) == 0x002118, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_LookAtRotation' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_Vector2DVector2D_ReturnValue) == 0x002128, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_25) == 0x002130, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetComponentByClass_ReturnValue_1) == 0x002138, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable_1) == 0x002140, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_28) == 0x002144, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_2) == 0x002154, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_4) == 0x002158, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_26) == 0x002160, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetComponentByClass_ReturnValue_2) == 0x002168, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_NewController) == 0x002170, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetRelativeTransform_ReturnValue) == 0x002180, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_5) == 0x0021E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0021E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0021F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0021F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x002200, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x002208, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherActor) == 0x002210, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherComp) == 0x002218, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x002220, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_bFromSweep) == 0x002224, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_ComponentBoundEvent_SweepResult) == 0x002228, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x002310, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_10) == 0x002328, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_30) == 0x002340, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_62) == 0x002348, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Hit) == 0x002350, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetAttachedActors_OutActors) == 0x002438, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Components) == 0x002448, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Components' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Event_Components) == 0x002458, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Event_Components' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_5) == 0x002468, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_6) == 0x002470, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_3) == 0x002474, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_29) == 0x002478, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Target) == 0x002488, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Target2) == 0x002490, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Target2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Pickup) == 0x002498, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Pickup' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_SGK) == 0x0024A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_SGK' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_31) == 0x0024A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x0024B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_30) == 0x0024B4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_4) == 0x0024C4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_5) == 0x0024C5, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_32) == 0x0024C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_31) == 0x0024D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_33) == 0x0024E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_33' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_13) == 0x0024E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_32) == 0x0024F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue_5) == 0x002500, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue_4) == 0x002504, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x002508, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable_2) == 0x002510, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue_3) == 0x002514, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_6) == 0x002518, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue_2) == 0x002520, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue_1) == 0x002524, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x002528, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_5) == 0x002530, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_5) == 0x002548, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_5) == 0x00254C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_5) == 0x002550, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetControlRotation_ReturnValue_6) == 0x002558, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetControlRotation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue_4) == 0x002570, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Roll_6) == 0x002588, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Roll_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Pitch_6) == 0x00258C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Pitch_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BreakRotator_Yaw_6) == 0x002590, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BreakRotator_Yaw_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetRightVector_ReturnValue) == 0x002598, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_ReturnValue_5) == 0x0025B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x0025C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputAxisEvent_AxisValue) == 0x0025E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_34) == 0x0025E4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_34' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_33) == 0x0025EC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_33' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_34) == 0x0025FC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_34' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x00260C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_27) == 0x002610, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_28) == 0x002618, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_19) == 0x002620, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_19' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_32) == 0x002628, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_20) == 0x002630, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_20' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_33) == 0x002638, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_33' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_29) == 0x002640, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable_2) == 0x002648, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_21) == 0x002650, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_21' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_34) == 0x002658, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_34' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_4) == 0x002659, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_5) == 0x00265C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_63) == 0x002660, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x002661, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_64) == 0x002662, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_2) == 0x002668, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_35) == 0x002670, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_35' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_3) == 0x002678, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_36) == 0x002680, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_36' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_30) == 0x002688, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_22) == 0x002690, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_22' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_37) == 0x002698, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_37' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting) == 0x002699, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1) == 0x00269A, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_65) == 0x00269B, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_65' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CanOpenDoor_1) == 0x0026A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CanOpenDoor_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_CanOpenDoor) == 0x0026A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_CanOpenDoor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_byte_Variable) == 0x0026B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_66) == 0x0026B1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_66' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_HasAuthority_ReturnValue_1) == 0x0026B2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0026B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Equipment_Character_1) == 0x0026C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Equipment_Character_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_38) == 0x0026C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_38' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0026D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_byte_Variable_1) == 0x0026D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Equipment_Character_2) == 0x0026E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Equipment_Character_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_39) == 0x0026E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_39' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_byte_Variable_2) == 0x0026E9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_14) == 0x0026EC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_31) == 0x0026F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_23) == 0x002700, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_23' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_40) == 0x002708, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_40' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_32) == 0x002710, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_24) == 0x002718, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_24' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_41) == 0x002720, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_41' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_13) == 0x002721, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Length_ReturnValue_7) == 0x002724, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_35) == 0x002728, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_35' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_67) == 0x002738, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_67' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_ID) == 0x00273C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_ID' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_AmmoID_2) == 0x002744, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_AmmoID_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable_3) == 0x00274C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeStruct_S_InvItem) == 0x002750, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_7) == 0x002780, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable_4) == 0x002788, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_8) == 0x002790, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SGK_GetInvSlot_SlotFound) == 0x0027A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SGK_GetInvSlot_SlotFound' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SGK_GetInvSlot_InvSlot) == 0x0027B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SGK_GetInvSlot_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x002800, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x003090, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_NotEqual_NameName_ReturnValue) == 0x003091, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeStruct_DataTableRowHandle) == 0x003098, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_SwitchName_CmpSuccess) == 0x0030A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable_3) == 0x0030AC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable_4) == 0x0030B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_5) == 0x0030B4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_6) == 0x0030B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_6) == 0x0030BC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_7) == 0x0030C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetGameMode_ReturnValue_1) == 0x0030C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x0030D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_42) == 0x0030E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_42' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0030E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_13) == 0x0030F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_68) == 0x0030F1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_68' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_5) == 0x0030F2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Inv_Item_1) == 0x0030F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Inv_Item_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_AmmoID_1) == 0x003128, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_AmmoID_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Inv_Item) == 0x003130, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Inv_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_AmmoID) == 0x003160, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_AmmoID' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeStruct_S_InvItem_1) == 0x003168, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bPickupWeapon_1) == 0x003198, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bPickupWeapon_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_PickupActor_1) == 0x0031A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_PickupActor_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bPickupWeapon) == 0x0031A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bPickupWeapon' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_PickupActor) == 0x0031B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_PickupActor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_2) == 0x0031B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_3) == 0x0031B9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_InputActionEvent_Key_29) == 0x0031C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_InputActionEvent_Key_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_9) == 0x0031D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_6) == 0x0031E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0031E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x0031F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_69) == 0x0031F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_69' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_70) == 0x0031F9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_70' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetSceneCapture_SceneCapture) == 0x003200, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetSceneCapture_SceneCapture' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetSceneCapture_SceneCapture_1) == 0x003208, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetSceneCapture_SceneCapture_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_35) == 0x003210, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_35' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_71) == 0x003218, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_71' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetSceneCapture_SceneCapture_2) == 0x003220, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetSceneCapture_SceneCapture_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x003228, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_4) == 0x003230, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_43) == 0x003238, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_43' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_5) == 0x003240, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_44) == 0x003248, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_44' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_36) == 0x00324C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_36' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_72) == 0x00325C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_72' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_4) == 0x00325D, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_5) == 0x00325E, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_6) == 0x00325F, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_7) == 0x003260, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_name_Variable_7) == 0x003264, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsFalling_ReturnValue) == 0x00326C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_36) == 0x003270, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_36' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_33) == 0x003278, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_25) == 0x003280, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_25' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_45) == 0x003288, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_45' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_15) == 0x00328C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_15' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_CharacterTeam_2) == 0x003294, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_CharacterTeam_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_34) == 0x003298, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_37) == 0x0032A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_37' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_26) == 0x0032B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_26' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_46) == 0x0032B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_46' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_CanStandUp__Yes) == 0x0032B9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_CanStandUp__Yes' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_ReturnValue_4) == 0x0032C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_SetRelativeLocation_SweepHitResult_6) == 0x0032D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_SetRelativeLocation_SweepHitResult_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bProne__1) == 0x0033C0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bProne__1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_bProne_) == 0x0033C1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_bProne_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_37) == 0x0033C4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_37' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetPlayerController_ReturnValue_1) == 0x0033D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_27) == 0x0033D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_27' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_47) == 0x0033E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_47' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Variable_14) == 0x0033E1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_6) == 0x0033E2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_11) == 0x0033E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_2) == 0x003400, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound_1) == 0x003408, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_38) == 0x003410, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_38' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_73) == 0x003420, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_73' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_12) == 0x003428, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_Sound) == 0x003440, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_35) == 0x003448, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_28) == 0x003450, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_28' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_48) == 0x003458, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_48' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_38) == 0x00345C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_38' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Sniper_Weapon) == 0x003468, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Sniper_Weapon' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_49) == 0x003470, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_49' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Sniper_Weapon_1) == 0x003478, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Sniper_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_50) == 0x003480, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_50' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Array_Index_Variable_5) == 0x003484, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_39) == 0x003488, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_39' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Array_Get_Item_10) == 0x003498, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0034A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character_3) == 0x0034A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_51) == 0x0034B0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_51' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_self_CastInput_1) == 0x0034B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Peak_GetTeam_CharacterTeam_3) == 0x0034C8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Peak_GetTeam_CharacterTeam_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0034C9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0034CA, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0034CB, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CustomEvent_NotifyName_39) == 0x0034CC, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CustomEvent_NotifyName_39' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Select_Default_14) == 0x0034D4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_6) == 0x0034D5, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_40) == 0x0034D8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_40' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_True_if_break_was_hit_Variable) == 0x0034E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Not_PreBool_ReturnValue_7) == 0x0034E9, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_36) == 0x0034F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_29) == 0x0034F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_29' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_52) == 0x003500, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_52' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_CreateDelegate_OutputDelegate_41) == 0x003504, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_CreateDelegate_OutputDelegate_41' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_int_Loop_Counter_Variable_5) == 0x003514, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_7) == 0x003518, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Add_IntInt_ReturnValue_8) == 0x00351C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_BooleanAND_ReturnValue_7) == 0x003520, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_74) == 0x003521, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_74' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_75) == 0x003522, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_75' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_37) == 0x003528, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_76) == 0x003530, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_76' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_30) == 0x003538, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_30' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_53) == 0x003540, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_53' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_77) == 0x003541, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_77' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_38) == 0x003548, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_31) == 0x003550, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_31' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_54) == 0x003558, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_54' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_Master_Range_Weapon_6) == 0x003560, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_Master_Range_Weapon_6' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_55) == 0x003568, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_55' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_TotalMaxAmmo_MaxAmmo) == 0x00356C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_TotalMaxAmmo_MaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_TotalAmmo_ReturnValue) == 0x003570, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_TotalAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Less_IntInt_ReturnValue_8) == 0x003574, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x003575, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_GetController_ReturnValue_39) == 0x003578, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_GetController_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_Has_Been_Initd_Variable) == 0x003580, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_AsBP_SGKController_32) == 0x003588, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_AsBP_SGKController_32' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_DynamicCast_bSuccess_56) == 0x003590, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_DynamicCast_bSuccess_56' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeArray_Array) == 0x003598, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_MakeArray_Array_1) == 0x0035A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_K2_GetActorLocation_ReturnValue_13) == 0x0035B8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_K2_GetActorLocation_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SphereOverlapActors_OutActors) == 0x0035D0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SphereOverlapActors_ReturnValue) == 0x0035E0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_78) == 0x0035E1, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_78' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, Temp_bool_IsClosed_Variable) == 0x0035E2, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_IsValid_ReturnValue_79) == 0x0035E3, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_IsValid_ReturnValue_79' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0035E4, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_VariableSet_LeanAlpha_ImplicitCast) == 0x0035E8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_VariableSet_LeanAlpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0035F0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_VariableSet_LeanAlpha_ImplicitCast_1) == 0x0035F8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_VariableSet_LeanAlpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x003600, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_VariableSet_LeanAlpha_ImplicitCast_2) == 0x003608, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_VariableSet_LeanAlpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_VariableSet_LeanAlpha_ImplicitCast_3) == 0x003610, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_VariableSet_LeanAlpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x003618, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_VariableSet_CameraLagSpeed_ImplicitCast) == 0x003620, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_VariableSet_CameraLagSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_Alpha_ImplicitCast) == 0x003628, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x003630, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SetCapsuleSize_InHalfHeight_ImplicitCast) == 0x003638, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SetCapsuleSize_InHalfHeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SetCapsuleSize_InRadius_ImplicitCast) == 0x00363C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SetCapsuleSize_InRadius_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast) == 0x003640, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_SetFieldOfView_InFieldOfView_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x003648, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_Alpha_ImplicitCast) == 0x003650, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_Alpha_ImplicitCast_1) == 0x003654, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_Alpha_ImplicitCast_2) == 0x003658, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeRotator_Roll_ImplicitCast_3) == 0x00365C, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeRotator_Roll_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_VLerp_Alpha_ImplicitCast_3) == 0x003660, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_VLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_FTrunc_A_ImplicitCast) == 0x003668, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x003670, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_MakeVector2D_X_ImplicitCast) == 0x003678, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x003680, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_LookInput_InputValue_ImplicitCast) == 0x003688, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_LookInput_InputValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x003690, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_LookInput_InputValue_ImplicitCast_1) == 0x003698, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_LookInput_InputValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x0036A0, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter, K2Node_Timeline_NewTime_ImplicitCast) == 0x0036A8, "Member 'BP_SGKMasterCharacter_C_ExecuteUbergraph_BP_SGKMasterCharacter::K2Node_Timeline_NewTime_ImplicitCast' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.FP Left
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_FP_Left final
{
public:
	bool                                          Lean;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraLean;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirdPersonCameraOffset;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_FP_Left) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_FP_Left");
static_assert(sizeof(BP_SGKMasterCharacter_C_FP_Left) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_FP_Left");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Left, Lean) == 0x000000, "Member 'BP_SGKMasterCharacter_C_FP_Left::Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Left, CameraLean) == 0x000008, "Member 'BP_SGKMasterCharacter_C_FP_Left::CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Left, ThirdPersonCameraOffset) == 0x000010, "Member 'BP_SGKMasterCharacter_C_FP_Left::ThirdPersonCameraOffset' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.FP Right
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_FP_Right final
{
public:
	bool                                          Lean;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraLean;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirdPersonCameraOffset;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_FP_Right) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_FP_Right");
static_assert(sizeof(BP_SGKMasterCharacter_C_FP_Right) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_FP_Right");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Right, Lean) == 0x000000, "Member 'BP_SGKMasterCharacter_C_FP_Right::Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Right, CameraLean) == 0x000008, "Member 'BP_SGKMasterCharacter_C_FP_Right::CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_FP_Right, ThirdPersonCameraOffset) == 0x000010, "Member 'BP_SGKMasterCharacter_C_FP_Right::ThirdPersonCameraOffset' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_27::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_ActivateVoIP_K2Node_InputActionEvent_28::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Aim_K2Node_InputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_3::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Aim_K2Node_InputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Aim_K2Node_InputActionEvent_4::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_14
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_14::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_15
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_15::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Crouch_K2Node_InputActionEvent_9
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Crouch_K2Node_InputActionEvent_9::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Emote_K2Node_InputActionEvent_10
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Emote_K2Node_InputActionEvent_10::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_12
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_12::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Fire_K2Node_InputActionEvent_13
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Fire_K2Node_InputActionEvent_13::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Inspect_K2Node_InputActionEvent_24
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Inspect_K2Node_InputActionEvent_24::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Interact_K2Node_InputActionEvent_11
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Interact_K2Node_InputActionEvent_11::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Lean Left_K2Node_InputActionEvent_16
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_16::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Lean Left_K2Node_InputActionEvent_17
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Lean_Left_K2Node_InputActionEvent_17::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Lean Right_K2Node_InputActionEvent_18
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_18::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Lean Right_K2Node_InputActionEvent_19
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Lean_Right_K2Node_InputActionEvent_19::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Melee_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Melee_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_MouseScrollUp_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_PickUpWeapon_K2Node_InputActionEvent_22::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_PlayerList_K2Node_InputActionEvent_29
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_PlayerList_K2Node_InputActionEvent_29::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Quick Slot 1_K2Node_InputActionEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_1_K2Node_InputActionEvent_5::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Quick Slot 2_K2Node_InputActionEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_2_K2Node_InputActionEvent_6::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Quick Slot 3_K2Node_InputActionEvent_7
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_3_K2Node_InputActionEvent_7::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Quick Slot 4_K2Node_InputActionEvent_8
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Quick_Slot_4_K2Node_InputActionEvent_8::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Reload_K2Node_InputActionEvent_23
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Reload_K2Node_InputActionEvent_23::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Toggle Fire Mode_K2Node_InputActionEvent_20
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Toggle_Fire_Mode_K2Node_InputActionEvent_20::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Toggle Night Vision_K2Node_InputActionEvent_26
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Toggle_Night_Vision_K2Node_InputActionEvent_26::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_Toggle Thermal Vision_K2Node_InputActionEvent_25
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_Toggle_Thermal_Vision_K2Node_InputActionEvent_25::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_ToggleFlashlight_K2Node_InputActionEvent_21::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_ZoomIn_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_ZoomIn_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpActEvt_ZoomOut_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpActEvt_ZoomOut_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_LookUp_K2Node_InputAxisEvent_6
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_LookUp_K2Node_InputAxisEvent_6::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_LookUpRate_K2Node_InputAxisEvent_9::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_0::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_5::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_Turn_K2Node_InputAxisEvent_7
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_Turn_K2Node_InputAxisEvent_7::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8 final
{
public:
	float                                         AxisValue;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8");
static_assert(sizeof(BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8");
static_assert(offsetof(BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8, AxisValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_InpAxisEvt_TurnRate_K2Node_InputAxisEvent_8::AxisValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.KnifeRandomAnim
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_KnifeRandomAnim final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Attack;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Victim;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CE[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_KnifeRandomAnim) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_KnifeRandomAnim");
static_assert(sizeof(BP_SGKMasterCharacter_C_KnifeRandomAnim) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_KnifeRandomAnim");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, Attack) == 0x000008, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::Attack' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, Victim) == 0x000010, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::Victim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_KnifeRandomAnim, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SGKMasterCharacter_C_KnifeRandomAnim::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.LookInput
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_LookInput final
{
public:
	float                                         InputValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsUpDown;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39CF[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutInput;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D0[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetLookSensitivity_Multiplier;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerPitchInput_Val_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddControllerYawInput_Val_ImplicitCast;   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_LookInput) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_LookInput");
static_assert(sizeof(BP_SGKMasterCharacter_C_LookInput) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_LookInput");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, InputValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_LookInput::InputValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, bIsUpDown) == 0x000004, "Member 'BP_SGKMasterCharacter_C_LookInput::bIsUpDown' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, OutInput) == 0x000008, "Member 'BP_SGKMasterCharacter_C_LookInput::OutInput' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_GetLookSensitivity_Multiplier) == 0x000018, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_GetLookSensitivity_Multiplier' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_AddControllerPitchInput_Val_ImplicitCast) == 0x000028, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_AddControllerPitchInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_AddControllerYawInput_Val_ImplicitCast) == 0x00002C, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_AddControllerYawInput_Val_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_LookInput, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'BP_SGKMasterCharacter_C_LookInput::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MCMeleeAttack
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_MCMeleeAttack final
{
public:
	bool                                          Param_CanMelee;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Param_Mesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               Param_Current_Victim;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsKnife;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D2[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomAnim;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MCMeleeAttack) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MCMeleeAttack");
static_assert(sizeof(BP_SGKMasterCharacter_C_MCMeleeAttack) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_MCMeleeAttack");
static_assert(offsetof(BP_SGKMasterCharacter_C_MCMeleeAttack, Param_CanMelee) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MCMeleeAttack::Param_CanMelee' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MCMeleeAttack, Param_Mesh) == 0x000008, "Member 'BP_SGKMasterCharacter_C_MCMeleeAttack::Param_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MCMeleeAttack, Param_Current_Victim) == 0x000010, "Member 'BP_SGKMasterCharacter_C_MCMeleeAttack::Param_Current_Victim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MCMeleeAttack, Param_IsKnife) == 0x000018, "Member 'BP_SGKMasterCharacter_C_MCMeleeAttack::Param_IsKnife' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MCMeleeAttack, RandomAnim) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_MCMeleeAttack::RandomAnim' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MeleeRandomAnim
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_MeleeRandomAnim final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D3[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Attack;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Victim;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D4[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MeleeRandomAnim) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MeleeRandomAnim");
static_assert(sizeof(BP_SGKMasterCharacter_C_MeleeRandomAnim) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_MeleeRandomAnim");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, Attack) == 0x000008, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::Attack' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, Victim) == 0x000010, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::Victim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MeleeRandomAnim, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_SGKMasterCharacter_C_MeleeRandomAnim::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MLC_SetPlayerMovementState
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState final
{
public:
	EMovementMode                                 NewMovementMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState");
static_assert(sizeof(BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState");
static_assert(offsetof(BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState, NewMovementMode) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MLC_SetPlayerMovementState::NewMovementMode' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MLT_PlayDance
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_MLT_PlayDance final
{
public:
	class ACharacter*                             PlayerCharRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MLT_PlayDance) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MLT_PlayDance");
static_assert(sizeof(BP_SGKMasterCharacter_C_MLT_PlayDance) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_MLT_PlayDance");
static_assert(offsetof(BP_SGKMasterCharacter_C_MLT_PlayDance, PlayerCharRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MLT_PlayDance::PlayerCharRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MSG_AVP_GetPlayerUsername
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D6[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername");
static_assert(sizeof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername) == 0x000050, "Wrong size on BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername, Success_) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername::Success_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername, Username) == 0x000008, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername::Username' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername, CallFunc_GetPlayerName_ReturnValue) == 0x000028, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetPlayerUsername::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MSG_AVP_GetVOIPComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent final
{
public:
	class UBP_AntizeVOIPComponent_C*              VOIPComponentRef;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent");
static_assert(sizeof(BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent, VOIPComponentRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetVOIPComponent::VOIPComponentRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MSG_AVP_GetWidgetVoice
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice final
{
public:
	class UWidgetComponent*                       WidgetVoiceRef;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice");
static_assert(sizeof(BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice");
static_assert(offsetof(BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice, WidgetVoiceRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MSG_AVP_GetWidgetVoice::WidgetVoiceRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Multicast Headshot
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_Multicast_Headshot final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Multicast_Headshot) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Multicast_Headshot");
static_assert(sizeof(BP_SGKMasterCharacter_C_Multicast_Headshot) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_Multicast_Headshot");
static_assert(offsetof(BP_SGKMasterCharacter_C_Multicast_Headshot, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Multicast_Headshot::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Multicast Sound Event
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_Multicast_Sound_Event final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Multicast_Sound_Event) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Multicast_Sound_Event");
static_assert(sizeof(BP_SGKMasterCharacter_C_Multicast_Sound_Event) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_Multicast_Sound_Event");
static_assert(offsetof(BP_SGKMasterCharacter_C_Multicast_Sound_Event, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Multicast_Sound_Event::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MulticastSound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_MulticastSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MulticastSound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MulticastSound");
static_assert(sizeof(BP_SGKMasterCharacter_C_MulticastSound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_MulticastSound");
static_assert(offsetof(BP_SGKMasterCharacter_C_MulticastSound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MulticastSound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.MulticastUnhideComponents
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_MulticastUnhideComponents final
{
public:
	TArray<class UPrimitiveComponent*>            Components;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_MulticastUnhideComponents) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_MulticastUnhideComponents");
static_assert(sizeof(BP_SGKMasterCharacter_C_MulticastUnhideComponents) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_MulticastUnhideComponents");
static_assert(offsetof(BP_SGKMasterCharacter_C_MulticastUnhideComponents, Components) == 0x000000, "Member 'BP_SGKMasterCharacter_C_MulticastUnhideComponents::Components' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.NightVisionSound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_NightVisionSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_NightVisionSound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_NightVisionSound");
static_assert(sizeof(BP_SGKMasterCharacter_C_NightVisionSound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_NightVisionSound");
static_assert(offsetof(BP_SGKMasterCharacter_C_NightVisionSound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_NightVisionSound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_1CC0354B467C77E899C3BDBA6AE56D12::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_23E727C546534505579F799796EEB159
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_23E727C546534505579F799796EEB159::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_318B430B40867C29F650DCB4D7661C6E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_318B430B40867C29F650DCB4D7661C6E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_38C0D98845FA34BD485C89B116104332
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_38C0D98845FA34BD485C89B116104332::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_733473994626AE51368C23969DF73B5B
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_733473994626AE51368C23969DF73B5B::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_D9FBC91E4D4DC11C91BDDFBA9AFC228E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_DF29C02242B169F4D09139ABF3C43E04
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_DF29C02242B169F4D09139ABF3C43E04::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnBlendOut_F8CF650B422FEAEBF95341B8DB00D129::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_1CC0354B467C77E899C3BDBA6AE56D12::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_23E727C546534505579F799796EEB159
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_23E727C546534505579F799796EEB159::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_318B430B40867C29F650DCB4D7661C6E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_318B430B40867C29F650DCB4D7661C6E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_38C0D98845FA34BD485C89B116104332
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_38C0D98845FA34BD485C89B116104332::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_733473994626AE51368C23969DF73B5B
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_733473994626AE51368C23969DF73B5B::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_D9FBC91E4D4DC11C91BDDFBA9AFC228E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_DF29C02242B169F4D09139ABF3C43E04
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_DF29C02242B169F4D09139ABF3C43E04::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnCompleted_F8CF650B422FEAEBF95341B8DB00D129
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnCompleted_F8CF650B422FEAEBF95341B8DB00D129::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_1CC0354B467C77E899C3BDBA6AE56D12::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_23E727C546534505579F799796EEB159
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_23E727C546534505579F799796EEB159::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_318B430B40867C29F650DCB4D7661C6E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_318B430B40867C29F650DCB4D7661C6E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_38C0D98845FA34BD485C89B116104332
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_38C0D98845FA34BD485C89B116104332::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_733473994626AE51368C23969DF73B5B
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_733473994626AE51368C23969DF73B5B::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_D9FBC91E4D4DC11C91BDDFBA9AFC228E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_DF29C02242B169F4D09139ABF3C43E04
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_DF29C02242B169F4D09139ABF3C43E04::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnInterrupted_F8CF650B422FEAEBF95341B8DB00D129::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct BP_SGKMasterCharacter_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnLanded) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_OnLanded");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnLanded) == 0x0000E8, "Wrong size on BP_SGKMasterCharacter_C_OnLanded");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnLanded, Hit) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnLanded::Hit' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_1CC0354B467C77E899C3BDBA6AE56D12::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_23E727C546534505579F799796EEB159
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_23E727C546534505579F799796EEB159::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_318B430B40867C29F650DCB4D7661C6E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_38C0D98845FA34BD485C89B116104332
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_38C0D98845FA34BD485C89B116104332::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_733473994626AE51368C23969DF73B5B
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_733473994626AE51368C23969DF73B5B::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_D9FBC91E4D4DC11C91BDDFBA9AFC228E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_DF29C02242B169F4D09139ABF3C43E04::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyBegin_F8CF650B422FEAEBF95341B8DB00D129::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_1CC0354B467C77E899C3BDBA6AE56D12::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_23E727C546534505579F799796EEB159
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_23E727C546534505579F799796EEB159::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_318B430B40867C29F650DCB4D7661C6E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_38C0D98845FA34BD485C89B116104332
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_38C0D98845FA34BD485C89B116104332::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_733473994626AE51368C23969DF73B5B
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_733473994626AE51368C23969DF73B5B::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_D9FBC91E4D4DC11C91BDDFBA9AFC228E::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_DF29C02242B169F4D09139ABF3C43E04::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129, NotifyName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnNotifyEnd_F8CF650B422FEAEBF95341B8DB00D129::NotifyName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnRep_CanMelee
// 0x0030 (0x0030 - 0x0000)
struct BP_SGKMasterCharacter_C_OnRep_CanMelee final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D7[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController_1;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnRep_CanMelee) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_OnRep_CanMelee");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnRep_CanMelee) == 0x000030, "Wrong size on BP_SGKMasterCharacter_C_OnRep_CanMelee");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, CallFunc_GetPlayerController_ReturnValue_1) == 0x000008, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, K2Node_DynamicCast_AsBP_SGKController) == 0x000010, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, K2Node_DynamicCast_AsBP_SGKController_1) == 0x000020, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::K2Node_DynamicCast_AsBP_SGKController_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_CanMelee, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_SGKMasterCharacter_C_OnRep_CanMelee::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.OnRep_MagnifiedScope
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_OnRep_MagnifiedScope final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D8[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USKG_SceneCaptureComponent2D*           CallFunc_GetSceneCapture_SceneCapture;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_OnRep_MagnifiedScope) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_OnRep_MagnifiedScope");
static_assert(sizeof(BP_SGKMasterCharacter_C_OnRep_MagnifiedScope) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_OnRep_MagnifiedScope");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_MagnifiedScope, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_OnRep_MagnifiedScope::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_MagnifiedScope, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SGKMasterCharacter_C_OnRep_MagnifiedScope::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_OnRep_MagnifiedScope, CallFunc_GetSceneCapture_SceneCapture) == 0x000008, "Member 'BP_SGKMasterCharacter_C_OnRep_MagnifiedScope::CallFunc_GetSceneCapture_SceneCapture' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Peak_GetTeam
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_Peak_GetTeam final
{
public:
	EPeak53Teams                                  Param_CharacterTeam;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D9[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Peak_GetTeam) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Peak_GetTeam");
static_assert(sizeof(BP_SGKMasterCharacter_C_Peak_GetTeam) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_Peak_GetTeam");
static_assert(offsetof(BP_SGKMasterCharacter_C_Peak_GetTeam, Param_CharacterTeam) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Peak_GetTeam::Param_CharacterTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Peak_GetTeam, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000008, "Member 'BP_SGKMasterCharacter_C_Peak_GetTeam::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Peak_GetTeam, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_SGKMasterCharacter_C_Peak_GetTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.PickUpWeapon
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_PickUpWeapon final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AmmoID;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_PickUpWeapon) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_PickUpWeapon");
static_assert(sizeof(BP_SGKMasterCharacter_C_PickUpWeapon) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_PickUpWeapon");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickUpWeapon, ID) == 0x000000, "Member 'BP_SGKMasterCharacter_C_PickUpWeapon::ID' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickUpWeapon, AmmoID) == 0x000008, "Member 'BP_SGKMasterCharacter_C_PickUpWeapon::AmmoID' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.PickupWeaponMulticast
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_PickupWeaponMulticast final
{
public:
	bool                                          Param_bPickupWeapon;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                Param_PickupActor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_PickupWeaponMulticast) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_PickupWeaponMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_PickupWeaponMulticast) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_PickupWeaponMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickupWeaponMulticast, Param_bPickupWeapon) == 0x000000, "Member 'BP_SGKMasterCharacter_C_PickupWeaponMulticast::Param_bPickupWeapon' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickupWeaponMulticast, Param_PickupActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_PickupWeaponMulticast::Param_PickupActor' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.PickupWeaponServer
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_PickupWeaponServer final
{
public:
	bool                                          Param_bPickupWeapon;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                Param_PickupActor;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_PickupWeaponServer) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_PickupWeaponServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_PickupWeaponServer) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_PickupWeaponServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickupWeaponServer, Param_bPickupWeapon) == 0x000000, "Member 'BP_SGKMasterCharacter_C_PickupWeaponServer::Param_bPickupWeapon' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_PickupWeaponServer, Param_PickupActor) == 0x000008, "Member 'BP_SGKMasterCharacter_C_PickupWeaponServer::Param_PickupActor' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.PlaySound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_PlaySound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_PlaySound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_PlaySound");
static_assert(sizeof(BP_SGKMasterCharacter_C_PlaySound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_PlaySound");
static_assert(offsetof(BP_SGKMasterCharacter_C_PlaySound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_PlaySound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ProningMulticast
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_ProningMulticast final
{
public:
	bool                                          Param_bProne_;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ProningMulticast) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_ProningMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_ProningMulticast) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_ProningMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_ProningMulticast, Param_bProne_) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ProningMulticast::Param_bProne_' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ProningServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_ProningServer final
{
public:
	bool                                          Param_bProne_;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ProningServer) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_ProningServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_ProningServer) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_ProningServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_ProningServer, Param_bProne_) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ProningServer::Param_bProne_' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ReceiveAnyDamage
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_ReceiveAnyDamage final
{
public:
	float                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DC[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UDamageType*                      DamageType;                                        // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            InstigatedBy;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ReceiveAnyDamage) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ReceiveAnyDamage");
static_assert(sizeof(BP_SGKMasterCharacter_C_ReceiveAnyDamage) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_ReceiveAnyDamage");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceiveAnyDamage, Damage) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ReceiveAnyDamage::Damage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceiveAnyDamage, DamageType) == 0x000008, "Member 'BP_SGKMasterCharacter_C_ReceiveAnyDamage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceiveAnyDamage, InstigatedBy) == 0x000010, "Member 'BP_SGKMasterCharacter_C_ReceiveAnyDamage::InstigatedBy' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceiveAnyDamage, DamageCauser) == 0x000018, "Member 'BP_SGKMasterCharacter_C_ReceiveAnyDamage::DamageCauser' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ReceivePossessed");
static_assert(sizeof(BP_SGKMasterCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_ReceivePossessed");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_ReceiveTick");
static_assert(sizeof(BP_SGKMasterCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_ReceiveTick");
static_assert(offsetof(BP_SGKMasterCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SaveLoaded
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SaveLoaded final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SaveLoaded) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SaveLoaded");
static_assert(sizeof(BP_SGKMasterCharacter_C_SaveLoaded) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SaveLoaded");
static_assert(offsetof(BP_SGKMasterCharacter_C_SaveLoaded, SaveGame) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SaveLoaded::SaveGame' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ServerSetArmLocation
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_ServerSetArmLocation final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ServerSetArmLocation) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ServerSetArmLocation");
static_assert(sizeof(BP_SGKMasterCharacter_C_ServerSetArmLocation) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_ServerSetArmLocation");
static_assert(offsetof(BP_SGKMasterCharacter_C_ServerSetArmLocation, Loc) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ServerSetArmLocation::Loc' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ServerSetFPCam
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_ServerSetFPCam final
{
public:
	struct FVector                                Loc;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ServerSetFPCam) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ServerSetFPCam");
static_assert(sizeof(BP_SGKMasterCharacter_C_ServerSetFPCam) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_ServerSetFPCam");
static_assert(offsetof(BP_SGKMasterCharacter_C_ServerSetFPCam, Loc) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ServerSetFPCam::Loc' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ServerSetLookAtRotation
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_ServerSetLookAtRotation final
{
public:
	struct FVector2D                              Param_LookAtRotation;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ServerSetLookAtRotation) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ServerSetLookAtRotation");
static_assert(sizeof(BP_SGKMasterCharacter_C_ServerSetLookAtRotation) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_ServerSetLookAtRotation");
static_assert(offsetof(BP_SGKMasterCharacter_C_ServerSetLookAtRotation, Param_LookAtRotation) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ServerSetLookAtRotation::Param_LookAtRotation' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetBombVisibilityMC
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetBombVisibilityMC final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetBombVisibilityMC) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetBombVisibilityMC");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetBombVisibilityMC) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetBombVisibilityMC");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetBombVisibilityMC, bNewVisibility) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetBombVisibilityMC::bNewVisibility' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetBombVisibilitySV
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetBombVisibilitySV final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetBombVisibilitySV) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetBombVisibilitySV");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetBombVisibilitySV) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetBombVisibilitySV");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetBombVisibilitySV, bNewVisibility) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetBombVisibilitySV::bNewVisibility' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetBreachRefMulticast
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetBreachRefMulticast final
{
public:
	class ABreachActor_C*                         Param_BreachRef;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetBreachRefMulticast) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetBreachRefMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetBreachRefMulticast) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetBreachRefMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetBreachRefMulticast, Param_BreachRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetBreachRefMulticast::Param_BreachRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetBreachRefSv
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetBreachRefSv final
{
public:
	class ABreachActor_C*                         Param_BreachRef;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetBreachRefSv) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetBreachRefSv");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetBreachRefSv) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetBreachRefSv");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetBreachRefSv, Param_BreachRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetBreachRefSv::Param_BreachRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetDoorMC
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetDoorMC final
{
public:
	class AInteractableDoor_C*                    Param_CanOpenDoor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetDoorMC) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetDoorMC");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetDoorMC) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetDoorMC");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetDoorMC, Param_CanOpenDoor) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetDoorMC::Param_CanOpenDoor' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetDoorSv
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetDoorSv final
{
public:
	class AInteractableDoor_C*                    Param_CanOpenDoor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetDoorSv) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetDoorSv");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetDoorSv) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetDoorSv");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetDoorSv, Param_CanOpenDoor) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetDoorSv::Param_CanOpenDoor' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetFlagVisMC
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetFlagVisMC final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetFlagVisMC) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetFlagVisMC");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetFlagVisMC) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetFlagVisMC");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetFlagVisMC, bNewVisibility) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetFlagVisMC::bNewVisibility' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetFlagVisServer
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetFlagVisServer final
{
public:
	bool                                          bNewVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetFlagVisServer) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetFlagVisServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetFlagVisServer) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetFlagVisServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetFlagVisServer, bNewVisibility) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetFlagVisServer::bNewVisibility' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetInfoVisibility
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetInfoVisibility final
{
public:
	class ACharacter*                             Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetInfoVisibility) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetInfoVisibility");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetInfoVisibility) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetInfoVisibility");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetInfoVisibility, Object) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetInfoVisibility::Object' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetLadder
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetLadder final
{
public:
	class ABP_DynamicLadder_C*                    LadderRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetLadder) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetLadder");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetLadder) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetLadder");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetLadder, LadderRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetLadder::LadderRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetLadderRef
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SetLadderRef final
{
public:
	class ABP_MasterLadder_C*                     LadderRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetLadderRef) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetLadderRef");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetLadderRef) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SetLadderRef");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetLadderRef, LadderRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetLadderRef::LadderRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetPawnIsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetPawnIsDead final
{
public:
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetPawnIsDead) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetPawnIsDead");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetPawnIsDead) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetPawnIsDead");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetPawnIsDead, CallFunc_IsServer_ReturnValue) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetPawnIsDead::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetPlayerMovementState
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SetPlayerMovementState final
{
public:
	EMovementMode                                 NewMovementMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetPlayerMovementState) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SetPlayerMovementState");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetPlayerMovementState) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SetPlayerMovementState");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetPlayerMovementState, NewMovementMode) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetPlayerMovementState::NewMovementMode' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetSGKActorMulticast
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SetSGKActorMulticast final
{
public:
	class ABP_MasterRangeWeapon_C*                Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               Target2;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetSGKActorMulticast) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetSGKActorMulticast");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetSGKActorMulticast) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SetSGKActorMulticast");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetSGKActorMulticast, Target) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetSGKActorMulticast::Target' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetSGKActorMulticast, Target2) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SetSGKActorMulticast::Target2' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SetSgkActorServer
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SetSgkActorServer final
{
public:
	class ABP_MasterRangeWeapon_C*                Pickup;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               SGK;                                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SetSgkActorServer) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SetSgkActorServer");
static_assert(sizeof(BP_SGKMasterCharacter_C_SetSgkActorServer) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SetSgkActorServer");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetSgkActorServer, Pickup) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SetSgkActorServer::Pickup' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SetSgkActorServer, SGK) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SetSgkActorServer::SGK' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK AllowInteraction
// 0x0003 (0x0003 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_AllowInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_AllowInteraction) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_AllowInteraction");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_AllowInteraction) == 0x000003, "Wrong size on BP_SGKMasterCharacter_C_SGK_AllowInteraction");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_AllowInteraction, AllowInteraction) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_AllowInteraction::AllowInteraction' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_AllowInteraction, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_SGKMasterCharacter_C_SGK_AllowInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_AllowInteraction, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_SGKMasterCharacter_C_SGK_AllowInteraction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK BleedDamage
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_BleedDamage final
{
public:
	int32                                         TickDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DD[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickTime;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BleedLength;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_BleedDamage) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_BleedDamage");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_BleedDamage) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_SGK_BleedDamage");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_BleedDamage, TickDamage) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_BleedDamage::TickDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_BleedDamage, TickTime) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_BleedDamage::TickTime' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_BleedDamage, BleedLength) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_BleedDamage::BleedLength' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK CharacterCamera
// 0x0028 (0x0028 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_CharacterCamera final
{
public:
	E_CameraType                                  CameraType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CurrentCamera;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    CurrentSpringArm;                                  // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_CameraType                                  Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39DF[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_CharacterCamera) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_CharacterCamera");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_CharacterCamera) == 0x000028, "Wrong size on BP_SGKMasterCharacter_C_SGK_CharacterCamera");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, CameraType) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::CameraType' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, CurrentCamera) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::CurrentCamera' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, CurrentSpringArm) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::CurrentSpringArm' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, Temp_byte_Variable) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterCamera, K2Node_Select_Default) == 0x000020, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterCamera::K2Node_Select_Default' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK CharacterSockets
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_CharacterSockets final
{
public:
	E_Sockets                                     Sockets;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Component;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_Sockets                                     Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E1[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_CharacterSockets) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_CharacterSockets");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_CharacterSockets) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_CharacterSockets");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterSockets, Sockets) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterSockets::Sockets' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterSockets, Component) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterSockets::Component' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterSockets, Temp_byte_Variable) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterSockets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CharacterSockets, K2Node_Select_Default) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_CharacterSockets::K2Node_Select_Default' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK CodeCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_CodeCheck final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CodeAccepted;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_CodeCheck) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_CodeCheck");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_CodeCheck) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_CodeCheck");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CodeCheck, Code) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_CodeCheck::Code' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CodeCheck, CodeAccepted) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_CodeCheck::CodeAccepted' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK CurrentHealth
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_CurrentHealth final
{
public:
	int32                                         Health;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_CurrentHealth) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_CurrentHealth");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_CurrentHealth) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_SGK_CurrentHealth");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_CurrentHealth, Health) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_CurrentHealth::Health' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK Damage
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_Damage final
{
public:
	int32                                         BaseDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E2[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_Damage) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_Damage");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_Damage) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_Damage");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Damage, BaseDamage) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_Damage::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Damage, EventInstigator) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_Damage::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Damage, DamageCauser) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_Damage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Damage, DamageType) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_Damage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Damage, HitBox) == 0x000019, "Member 'BP_SGKMasterCharacter_C_SGK_Damage::HitBox' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK DropItem
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_DropItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Dropped;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaveLoaded;                                        // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0033(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_DropItem) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_DropItem");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_DropItem) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_SGK_DropItem");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_DropItem, InvItem) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_DropItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_DropItem, Dropped) == 0x000030, "Member 'BP_SGKMasterCharacter_C_SGK_DropItem::Dropped' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_DropItem, Spawned) == 0x000031, "Member 'BP_SGKMasterCharacter_C_SGK_DropItem::Spawned' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_DropItem, SaveLoaded) == 0x000032, "Member 'BP_SGKMasterCharacter_C_SGK_DropItem::SaveLoaded' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_DropItem, ReturnValue) == 0x000033, "Member 'BP_SGKMasterCharacter_C_SGK_DropItem::ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK EndInteraction
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_EndInteraction final
{
public:
	class UBP_PlayerInventory_C*                  Param_PlayerInventory;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_EndInteraction) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_EndInteraction");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_EndInteraction) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_EndInteraction");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_EndInteraction, Param_PlayerInventory) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_EndInteraction::Param_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_EndInteraction, ReturnValue) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_EndInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_EndInteraction, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_SGKMasterCharacter_C_SGK_EndInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK GetMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_GetMesh final
{
public:
	E_BodyMesh                                    MeshType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Param_Mesh;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_BodyMesh                                    Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_GetMesh) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_GetMesh");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_GetMesh) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_GetMesh");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_GetMesh, MeshType) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_GetMesh::MeshType' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_GetMesh, Param_Mesh) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_GetMesh::Param_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_GetMesh, Temp_byte_Variable) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_GetMesh::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_GetMesh, K2Node_Select_Default) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_GetMesh::K2Node_Select_Default' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK GetVerifiedPlayers
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers final
{
public:
	TArray<class FText>                           VerifiedPlayers;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers, VerifiedPlayers) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_GetVerifiedPlayers::VerifiedPlayers' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK HideComponents
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_HideComponents final
{
public:
	TArray<class UPrimitiveComponent*>            Components;                                        // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_HideComponents) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_HideComponents");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_HideComponents) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_HideComponents");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_HideComponents, Components) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_HideComponents::Components' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK Interact
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_Interact final
{
public:
	class UBP_PlayerInventory_C*                  Param_PlayerInventory;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                Action;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E5[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EquipmentInventory_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_Interact) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_Interact");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_Interact) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_Interact");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Interact, Param_PlayerInventory) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_Interact::Param_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Interact, Action) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_Interact::Action' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Interact, ReturnValue) == 0x000009, "Member 'BP_SGKMasterCharacter_C_SGK_Interact::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Interact, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_Interact::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Interact, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_Interact::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK InteractName
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_InteractName final
{
public:
	class FText                                   InteractName;                                      // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_InteractName) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_InteractName");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_InteractName) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_SGK_InteractName");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_InteractName, InteractName) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_InteractName::InteractName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK InvItem
// 0x0038 (0x0038 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_InvItem final
{
public:
	bool                                          IsItem;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             InvItem;                                           // 0x0008(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_InvItem) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_InvItem");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_InvItem) == 0x000038, "Wrong size on BP_SGKMasterCharacter_C_SGK_InvItem");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_InvItem, IsItem) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_InvItem::IsItem' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_InvItem, InvItem) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_InvItem::InvItem' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK ItemAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_ItemAmount final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_ItemAmount) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_ItemAmount");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_ItemAmount) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_SGK_ItemAmount");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_ItemAmount, Amount) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_ItemAmount::Amount' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK LeanLeft
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_LeanLeft final
{
public:
	bool                                          Lean;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraLean;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirdPersonCameraOffset;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_LeanLeft) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_LeanLeft");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_LeanLeft) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_SGK_LeanLeft");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanLeft, Lean) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_LeanLeft::Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanLeft, CameraLean) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_LeanLeft::CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanLeft, ThirdPersonCameraOffset) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_LeanLeft::ThirdPersonCameraOffset' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK LeanRight
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_LeanRight final
{
public:
	bool                                          Lean;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CameraLean;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ThirdPersonCameraOffset;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_LeanRight) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_LeanRight");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_LeanRight) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_SGK_LeanRight");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanRight, Lean) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_LeanRight::Lean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanRight, CameraLean) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_LeanRight::CameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanRight, ThirdPersonCameraOffset) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_LeanRight::ThirdPersonCameraOffset' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK LeanValues
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_LeanValues final
{
public:
	double                                        Lean_Alpha;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TargetCamera;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_LeanValues) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_LeanValues");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_LeanValues) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_LeanValues");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanValues, Lean_Alpha) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_LeanValues::Lean_Alpha' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LeanValues, TargetCamera) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_LeanValues::TargetCamera' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK LookAtRotation
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_LookAtRotation final
{
public:
	struct FVector2D                              Param_LookAtRotation;                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_LookAtRotation) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_LookAtRotation");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_LookAtRotation) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_LookAtRotation");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_LookAtRotation, Param_LookAtRotation) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_LookAtRotation::Param_LookAtRotation' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK MaxHealth
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_MaxHealth final
{
public:
	int32                                         MaxHealth;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_MaxHealth) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_MaxHealth");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_MaxHealth) == 0x000004, "Wrong size on BP_SGKMasterCharacter_C_SGK_MaxHealth");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_MaxHealth, MaxHealth) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_MaxHealth::MaxHealth' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK Mesh
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_Mesh final
{
public:
	class UPrimitiveComponent*                    Param_Mesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_Mesh) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_Mesh");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_Mesh) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SGK_Mesh");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_Mesh, Param_Mesh) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_Mesh::Param_Mesh' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK PossibleActions
// 0x0050 (0x0050 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_PossibleActions final
{
public:
	class UBP_PlayerInventory_C*                  Param_PlayerInventory;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionsFound;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WorldAction>                 PossibleActions;                                   // 0x0010(0x0010)(Parm, OutParm)
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction;                   // 0x0020(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_PossibleActions) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_PossibleActions");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_PossibleActions) == 0x000050, "Wrong size on BP_SGKMasterCharacter_C_SGK_PossibleActions");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_PossibleActions, Param_PlayerInventory) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_PossibleActions::Param_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_PossibleActions, ActionsFound) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_PossibleActions::ActionsFound' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_PossibleActions, PossibleActions) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SGK_PossibleActions::PossibleActions' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction) == 0x000020, "Member 'BP_SGKMasterCharacter_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_PossibleActions, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_SGKMasterCharacter_C_SGK_PossibleActions::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK SetCurrentHealth
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_SetCurrentHealth final
{
public:
	int32                                         NewHealthAmount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_SetCurrentHealth) == 0x000004, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_SetCurrentHealth");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_SetCurrentHealth) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SGK_SetCurrentHealth");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_SetCurrentHealth, NewHealthAmount) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_SetCurrentHealth::NewHealthAmount' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_SetCurrentHealth, ReturnValue) == 0x000004, "Member 'BP_SGKMasterCharacter_C_SGK_SetCurrentHealth::ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK SetVerifiedPlayers
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers final
{
public:
	TArray<class FText>                           VerifiedPlayers;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers, VerifiedPlayers) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_SetVerifiedPlayers::VerifiedPlayers' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK ShowHealthWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_ShowHealthWidget final
{
public:
	bool                                          ShowHealthWidget;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EA[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HealthWidgetName;                                  // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_ShowHealthWidget) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_ShowHealthWidget");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_ShowHealthWidget) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_ShowHealthWidget");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_ShowHealthWidget, ShowHealthWidget) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_ShowHealthWidget::ShowHealthWidget' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_ShowHealthWidget, HealthWidgetName) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SGK_ShowHealthWidget::HealthWidgetName' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK TurnedOnEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_TurnedOnEffect final
{
public:
	bool                                          TurnedOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_TurnedOnEffect) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_TurnedOnEffect");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_TurnedOnEffect) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SGK_TurnedOnEffect");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_TurnedOnEffect, TurnedOn) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_TurnedOnEffect::TurnedOn' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK UpdateCode
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_UpdateCode final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_UpdateCode) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_UpdateCode");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_UpdateCode) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_UpdateCode");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_UpdateCode, Code) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_UpdateCode::Code' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_UpdateCode, ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_UpdateCode::ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SGK VerifyPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SGK_VerifyPlayer final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SGK_VerifyPlayer) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SGK_VerifyPlayer");
static_assert(sizeof(BP_SGKMasterCharacter_C_SGK_VerifyPlayer) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SGK_VerifyPlayer");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_VerifyPlayer, Text) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SGK_VerifyPlayer::Text' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SGK_VerifyPlayer, ReturnValue) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SGK_VerifyPlayer::ReturnValue' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ShowPlayerInfo
// 0x0028 (0x0028 - 0x0000)
struct BP_SGKMasterCharacter_C_ShowPlayerInfo final
{
public:
	class ABP_SGKMasterCharacter_C*               MyPawn;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Show_;                                             // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PlayerInfoOverhead_C*              K2Node_DynamicCast_AsWBP_Player_Info_Overhead;     // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ShowPlayerInfo) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ShowPlayerInfo");
static_assert(sizeof(BP_SGKMasterCharacter_C_ShowPlayerInfo) == 0x000028, "Wrong size on BP_SGKMasterCharacter_C_ShowPlayerInfo");
static_assert(offsetof(BP_SGKMasterCharacter_C_ShowPlayerInfo, MyPawn) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ShowPlayerInfo::MyPawn' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ShowPlayerInfo, Show_) == 0x000008, "Member 'BP_SGKMasterCharacter_C_ShowPlayerInfo::Show_' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ShowPlayerInfo, CallFunc_GetWidget_ReturnValue) == 0x000010, "Member 'BP_SGKMasterCharacter_C_ShowPlayerInfo::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ShowPlayerInfo, K2Node_DynamicCast_AsWBP_Player_Info_Overhead) == 0x000018, "Member 'BP_SGKMasterCharacter_C_ShowPlayerInfo::K2Node_DynamicCast_AsWBP_Player_Info_Overhead' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_ShowPlayerInfo, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SGKMasterCharacter_C_ShowPlayerInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Sound Event
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_Sound_Event final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Sound_Event) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Sound_Event");
static_assert(sizeof(BP_SGKMasterCharacter_C_Sound_Event) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_Sound_Event");
static_assert(offsetof(BP_SGKMasterCharacter_C_Sound_Event, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Sound_Event::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SRV_PlayDance
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_SRV_PlayDance final
{
public:
	class ACharacter*                             PlayerCharRef;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SRV_PlayDance) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SRV_PlayDance");
static_assert(sizeof(BP_SGKMasterCharacter_C_SRV_PlayDance) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_SRV_PlayDance");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRV_PlayDance, PlayerCharRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SRV_PlayDance::PlayerCharRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SRV_SetPlayerMovementState
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState final
{
public:
	EMovementMode                                 NewMovementMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState");
static_assert(sizeof(BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState, NewMovementMode) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SRV_SetPlayerMovementState::NewMovementMode' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.SRVMeleeAttack
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_SRVMeleeAttack final
{
public:
	bool                                          Param_CanMelee;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Param_Mesh;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               Param_Current_Victim;                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsKnife;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39ED[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RandomAnim;                                        // 0x001C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_SRVMeleeAttack) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_SRVMeleeAttack");
static_assert(sizeof(BP_SGKMasterCharacter_C_SRVMeleeAttack) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_SRVMeleeAttack");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRVMeleeAttack, Param_CanMelee) == 0x000000, "Member 'BP_SGKMasterCharacter_C_SRVMeleeAttack::Param_CanMelee' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRVMeleeAttack, Param_Mesh) == 0x000008, "Member 'BP_SGKMasterCharacter_C_SRVMeleeAttack::Param_Mesh' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRVMeleeAttack, Param_Current_Victim) == 0x000010, "Member 'BP_SGKMasterCharacter_C_SRVMeleeAttack::Param_Current_Victim' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRVMeleeAttack, Param_IsKnife) == 0x000018, "Member 'BP_SGKMasterCharacter_C_SRVMeleeAttack::Param_IsKnife' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_SRVMeleeAttack, RandomAnim) == 0x00001C, "Member 'BP_SGKMasterCharacter_C_SRVMeleeAttack::RandomAnim' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Start Lean
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKMasterCharacter_C_Start_Lean final
{
public:
	bool                                          Param_ShouldLean;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Param_TargetCameraLean;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_CameraOffset;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_bLeanRight;                                  // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Start_Lean) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Start_Lean");
static_assert(sizeof(BP_SGKMasterCharacter_C_Start_Lean) == 0x000020, "Wrong size on BP_SGKMasterCharacter_C_Start_Lean");
static_assert(offsetof(BP_SGKMasterCharacter_C_Start_Lean, Param_ShouldLean) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Start_Lean::Param_ShouldLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Start_Lean, Param_TargetCameraLean) == 0x000008, "Member 'BP_SGKMasterCharacter_C_Start_Lean::Param_TargetCameraLean' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Start_Lean, Param_CameraOffset) == 0x000010, "Member 'BP_SGKMasterCharacter_C_Start_Lean::Param_CameraOffset' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Start_Lean, Param_bLeanRight) == 0x000018, "Member 'BP_SGKMasterCharacter_C_Start_Lean::Param_bLeanRight' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.StartladderClimb
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_StartladderClimb final
{
public:
	class ABP_MasterLadder_C*                     LadderRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_StartladderClimb) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_StartladderClimb");
static_assert(sizeof(BP_SGKMasterCharacter_C_StartladderClimb) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_StartladderClimb");
static_assert(offsetof(BP_SGKMasterCharacter_C_StartladderClimb, LadderRef) == 0x000000, "Member 'BP_SGKMasterCharacter_C_StartladderClimb::LadderRef' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Svr Ladder
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKMasterCharacter_C_Svr_Ladder final
{
public:
	bool                                          Param_IsClimbingLadder;                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39EF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_ClimbableLadder_C*                  Param_Ladder;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          JumpOff;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Svr_Ladder) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Svr_Ladder");
static_assert(sizeof(BP_SGKMasterCharacter_C_Svr_Ladder) == 0x000018, "Wrong size on BP_SGKMasterCharacter_C_Svr_Ladder");
static_assert(offsetof(BP_SGKMasterCharacter_C_Svr_Ladder, Param_IsClimbingLadder) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Svr_Ladder::Param_IsClimbingLadder' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Svr_Ladder, Param_Ladder) == 0x000008, "Member 'BP_SGKMasterCharacter_C_Svr_Ladder::Param_Ladder' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Svr_Ladder, JumpOff) == 0x000010, "Member 'BP_SGKMasterCharacter_C_Svr_Ladder::JumpOff' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Svr TeleoprtToTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget final
{
public:
	class ABP_ClimbableLadder_C*                  Param_Ladder;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          OverlappedBase;                                    // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget");
static_assert(sizeof(BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget) == 0x000010, "Wrong size on BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget");
static_assert(offsetof(BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget, Param_Ladder) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget::Param_Ladder' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget, OverlappedBase) == 0x000008, "Member 'BP_SGKMasterCharacter_C_Svr_TeleoprtToTarget::OverlappedBase' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ThermalVision
// 0x0001 (0x0001 - 0x0000)
struct BP_SGKMasterCharacter_C_ThermalVision final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ThermalVision) == 0x000001, "Wrong alignment on BP_SGKMasterCharacter_C_ThermalVision");
static_assert(sizeof(BP_SGKMasterCharacter_C_ThermalVision) == 0x000001, "Wrong size on BP_SGKMasterCharacter_C_ThermalVision");
static_assert(offsetof(BP_SGKMasterCharacter_C_ThermalVision, On_) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ThermalVision::On_' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.ThermalVisionSound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_ThermalVisionSound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_ThermalVisionSound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_ThermalVisionSound");
static_assert(sizeof(BP_SGKMasterCharacter_C_ThermalVisionSound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_ThermalVisionSound");
static_assert(offsetof(BP_SGKMasterCharacter_C_ThermalVisionSound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_ThermalVisionSound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.UpdateEnemyNearbyCount
// 0x0058 (0x0058 - 0x0000)
struct BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount final
{
public:
	class UObject*                                Other_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Other_Comp;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Add_To_Count;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> CallFunc_Peak_GetTeam_self_CastInput;              // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F2[0x1];                                     // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F3[0x3];                                     // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EnterCombatMode_Finished1;                // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_Peak_GetTeam_CharacterTeam_1;             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount");
static_assert(sizeof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount) == 0x000058, "Wrong size on BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, Other_Actor) == 0x000000, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::Other_Actor' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, Other_Comp) == 0x000008, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::Other_Comp' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, Add_To_Count) == 0x000010, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::Add_To_Count' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000018, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Peak_GetTeam_self_CastInput) == 0x000028, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Peak_GetTeam_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Peak_GetTeam_CharacterTeam) == 0x000038, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Peak_GetTeam_CharacterTeam' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000039, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, Temp_int_Variable) == 0x00003C, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, Temp_int_Variable_1) == 0x000040, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_EnterCombatMode_Finished1) == 0x00004D, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_EnterCombatMode_Finished1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004E, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_BooleanAND_ReturnValue) == 0x00004F, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_Peak_GetTeam_CharacterTeam_1) == 0x000054, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_Peak_GetTeam_CharacterTeam_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000055, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount, CallFunc_BooleanAND_ReturnValue_1) == 0x000056, "Member 'BP_SGKMasterCharacter_C_UpdateEnemyNearbyCount::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.VoIP Activate Sound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_VoIP_Activate_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_VoIP_Activate_Sound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_VoIP_Activate_Sound");
static_assert(sizeof(BP_SGKMasterCharacter_C_VoIP_Activate_Sound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_VoIP_Activate_Sound");
static_assert(offsetof(BP_SGKMasterCharacter_C_VoIP_Activate_Sound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_VoIP_Activate_Sound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.VoIP Deactivate Sound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound");
static_assert(sizeof(BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound");
static_assert(offsetof(BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_VoIP_Deactivate_Sound::Sound' has a wrong offset!");

// Function BP_SGKMasterCharacter.BP_SGKMasterCharacter_C.Weapon Swap Sound
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKMasterCharacter_C_Weapon_Swap_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKMasterCharacter_C_Weapon_Swap_Sound) == 0x000008, "Wrong alignment on BP_SGKMasterCharacter_C_Weapon_Swap_Sound");
static_assert(sizeof(BP_SGKMasterCharacter_C_Weapon_Swap_Sound) == 0x000008, "Wrong size on BP_SGKMasterCharacter_C_Weapon_Swap_Sound");
static_assert(offsetof(BP_SGKMasterCharacter_C_Weapon_Swap_Sound, Sound) == 0x000000, "Member 'BP_SGKMasterCharacter_C_Weapon_Swap_Sound::Sound' has a wrong offset!");

}

