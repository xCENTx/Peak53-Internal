#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerFeedMessageWidget

#include "Basic.hpp"

#include "PlayerFeedMessageWidget_classes.hpp"
#include "PlayerFeedMessageWidget_parameters.hpp"


namespace SDK
{

// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerFeedMessageWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.ExecuteUbergraph_PlayerFeedMessageWidget
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerFeedMessageWidget_C::ExecuteUbergraph_PlayerFeedMessageWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "ExecuteUbergraph_PlayerFeedMessageWidget");

	Params::PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerFeedMessageWidget_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "PreConstruct");

	Params::PlayerFeedMessageWidget_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.RemoveActor
// (BlueprintCallable, BlueprintEvent)

void UPlayerFeedMessageWidget_C::RemoveActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "RemoveActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.RemoveActorEventSeq
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTextBlock*                       Param_MessageFeed                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UPlayerFeedMessageWidget_C::RemoveActorEventSeq(class UTextBlock* Param_MessageFeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "RemoveActorEventSeq");

	Params::PlayerFeedMessageWidget_C_RemoveActorEventSeq Parms{};

	Parms.Param_MessageFeed = Param_MessageFeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UPlayerFeedMessageWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerFeedMessageWidget_C", "Tick");

	Params::PlayerFeedMessageWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}

}

