#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentCharacter

#include "Basic.hpp"

#include "S_DefaultUnlocks_structs.hpp"
#include "Peak53Teams_structs.hpp"
#include "ST_EquipmentData_structs.hpp"
#include "E_EquipmentSlots_structs.hpp"
#include "ST_LoadoutData_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Load Loadout from Slot
// 0x0004 (0x0004 - 0x0000)
struct BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot final
{
public:
	int32                                         Slot_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot");
static_assert(sizeof(BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot) == 0x000004, "Wrong size on BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot");
static_assert(offsetof(BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot, Slot_Index) == 0x000000, "Member 'BP_EquipmentCharacter_C_CL_Load_Loadout_from_Slot::Slot_Index' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CL_Save Loadout to Slot
// 0x000C (0x000C - 0x0000)
struct BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot final
{
public:
	int32                                         Slot_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Loadout_Name;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot");
static_assert(sizeof(BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot) == 0x00000C, "Wrong size on BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot");
static_assert(offsetof(BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot, Slot_Index) == 0x000000, "Member 'BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot::Slot_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot, Loadout_Name) == 0x000004, "Member 'BP_EquipmentCharacter_C_CL_Save_Loadout_to_Slot::Loadout_Name' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.CMDUpdateEquipmentForAllClients
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients final
{
public:
	class FString                                 Param_CurrentEquipment;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients");
static_assert(sizeof(BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients) == 0x000010, "Wrong size on BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients");
static_assert(offsetof(BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients, Param_CurrentEquipment) == 0x000000, "Member 'BP_EquipmentCharacter_C_CMDUpdateEquipmentForAllClients::Param_CurrentEquipment' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Create Camo DMI
// 0x0098 (0x0098 - 0x0000)
struct BP_EquipmentCharacter_C_Create_Camo_DMI final
{
public:
	class UMaterialInstanceDynamic*               Current_MI;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A5[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture>                CallFunc_Array_Get_Item_2;                         // 0x0028(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_3;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_DynamicCast_AsTexture;                      // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A6[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A7[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Create_Camo_DMI) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Create_Camo_DMI");
static_assert(sizeof(BP_EquipmentCharacter_C_Create_Camo_DMI) == 0x000098, "Wrong size on BP_EquipmentCharacter_C_Create_Camo_DMI");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, Current_MI) == 0x000000, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::Current_MI' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, Current_Index) == 0x000008, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::Current_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Get_Item_1) == 0x00001C, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Add_ReturnValue) == 0x000024, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Get_Item_2) == 0x000028, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000058, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Get_Item_3) == 0x000060, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, K2Node_DynamicCast_AsTexture) == 0x000068, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::K2Node_DynamicCast_AsTexture' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_GetMaterial_ReturnValue) == 0x000078, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000088, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Create_Camo_DMI, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'BP_EquipmentCharacter_C_Create_Camo_DMI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.EquipCharRef_INT
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_EquipCharRef_INT final
{
public:
	class ABP_EquipmentCharacter_C*               Param_EquipCharRef_INT;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_EquipCharRef_INT) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_EquipCharRef_INT");
static_assert(sizeof(BP_EquipmentCharacter_C_EquipCharRef_INT) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_EquipCharRef_INT");
static_assert(offsetof(BP_EquipmentCharacter_C_EquipCharRef_INT, Param_EquipCharRef_INT) == 0x000000, "Member 'BP_EquipmentCharacter_C_EquipCharRef_INT::Param_EquipCharRef_INT' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ExecuteUbergraph_BP_EquipmentCharacter
// 0x0BA0 (0x0BA0 - 0x0000)
struct BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A8[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0038(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_2;                     // 0x0050(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key_1;                     // 0x0068(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable_1;                            // 0x0080(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x0098(0x0018)(HasGetValueTypeHash)
	EPeak53Teams                                  Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A9[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Item_ID_1;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AA[0xC];                                     // 0x00C4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EquipmentData                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x00D0(0x0130)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AB[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AC[0x4];                                     // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x0230(0x0018)(HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound_1;                        // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AD[0x6];                                     // 0x0252(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_CurrentEquipment;               // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AE[0x3];                                     // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NewParam;                       // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USoundBase*                             K2Node_CustomEvent_Sound;                          // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30AF[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_LoadoutData                        CallFunc_Array_Get_Item;                           // 0x02B0(0x0030)(HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MantleCheck_ReturnValue;                  // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting; // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isOnladder;                           // 0x02E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_isTopBox;                             // 0x02E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_2;                // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay_1;                // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_MontageToPlay;                  // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0300(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_EquipmentCharacter_C*>       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0318(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B0[0x2];                                     // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x0348(0x0018)(HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0360(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0370(0x0018)(HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_1;                          // 0x0388(0x0010)(ConstParm, ReferenceParm)
	struct FKey                                   K2Node_InputKeyEvent_Key_5;                        // 0x0398(0x0018)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_2;    // 0x0410(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_6;                        // 0x0428(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_p_3;                            // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_g_3;                            // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B1[0x2];                                     // 0x0446(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0448(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0460(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_p_2;                            // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_g_2;                            // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_p_1;                            // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_g_1;                            // 0x054B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_p;                              // 0x054C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_g;                              // 0x054D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x054E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x054F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B2[0x3];                                     // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0564(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0580(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_EquipmentCharacter_C*               CallFunc_Array_Get_Item_1;                         // 0x0670(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0680(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FST_LoadoutData                        K2Node_CustomEvent_ST_LoadoutData;                 // 0x0690(0x0030)(ConstParm, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Item_ID;                        // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_2;                         // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B3[0x3];                                     // 0x06D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Slot_Index_1;                   // 0x06D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Slot_Index;                     // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_Loadout_Name;                   // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_CustomEvent_Target;                         // 0x0708(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh;                        // 0x0710(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0748(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0831(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0832(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B4[0x1];                                     // 0x0833(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B5[0x4];                                     // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0858(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0870(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0888(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x08A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x08B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B6[0x4];                                     // 0x08D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x08D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x08F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0921(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B7[0x2];                                     // 0x0922(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0924(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0934(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B8[0x4];                                     // 0x093C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0940(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_3;    // 0x0958(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0970(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30B9[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_2;     // 0x0998(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BA[0x3];                                     // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x09A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x09B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BB[0x2];                                     // 0x09B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x09F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_2;     // 0x0A08(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0AF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0B00(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0B11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BC[0x6];                                     // 0x0B12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPeakWeaponHotSubsystem*                CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0B18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1; // 0x0B29(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0B2A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BD[0x5];                                     // 0x0B2B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State_1;        // 0x0B30(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BE[0x7];                                     // 0x0B39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_3;                         // 0x0B40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class USkeletalMesh>           K2Node_Select_Default;                             // 0x0B50(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0B80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0B88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x0B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter) == 0x000010, "Wrong alignment on BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter");
static_assert(sizeof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter) == 0x000BA0, "Wrong size on BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, EntryPoint) == 0x000000, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_1) == 0x000008, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_struct_Variable) == 0x000020, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key) == 0x000038, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputActionEvent_Key_2) == 0x000050, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputActionEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputActionEvent_Key_1) == 0x000068, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputActionEvent_Key_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_struct_Variable_1) == 0x000080, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputActionEvent_Key) == 0x000098, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_byte_Variable) == 0x0000B0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_int_Loop_Counter_Variable) == 0x0000B4, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Item_ID_1) == 0x0000B8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Item_ID_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000D0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000200, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Conv_NameToString_ReturnValue) == 0x000208, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000218, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000220, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_2) == 0x000230, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Sound_1) == 0x000248, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Sound_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_IsValid_ReturnValue) == 0x000250, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Event_EndPlayReason) == 0x000251, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000258, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_CurrentEquipment) == 0x000270, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_CurrentEquipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_SelectInt_ReturnValue) == 0x000280, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_IsServer_ReturnValue) == 0x000284, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NewParam) == 0x000288, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NewParam' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Sound) == 0x000298, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Sound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsPeak_53Player_State) == 0x0002A0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess) == 0x0002A8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Get_Item) == 0x0002B0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Event_DeltaSeconds) == 0x0002E0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_MantleCheck_ReturnValue) == 0x0002E4, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_MantleCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting) == 0x0002E5, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Event_isOnladder) == 0x0002E6, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Event_isOnladder' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Event_isTopBox) == 0x0002E7, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Event_isTopBox' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_MontageToPlay_2) == 0x0002E8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_MontageToPlay_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_MontageToPlay_1) == 0x0002F0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_MontageToPlay_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_MontageToPlay) == 0x0002F8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000300, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000310, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetAllActorsOfClass_OutActors) == 0x000318, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Length_ReturnValue) == 0x000328, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_IsValid_ReturnValue_1) == 0x00032C, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x00032D, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000330, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_3) == 0x000348, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_MakeArray_Array) == 0x000360, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_4) == 0x000370, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_MakeArray_Array_1) == 0x000388, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_5) == 0x000398, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0003B0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x0003C8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003E0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x0003F8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentLocation_ReturnValue_2) == 0x000410, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_InputKeyEvent_Key_6) == 0x000428, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_InputKeyEvent_Key_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_int_Array_Index_Variable) == 0x000440, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_p_3) == 0x000444, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_p_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_g_3) == 0x000445, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_g_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_VLerp_ReturnValue) == 0x000448, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000460, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_p_2) == 0x000548, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_p_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_g_2) == 0x000549, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_g_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_p_1) == 0x00054A, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_p_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_g_1) == 0x00054B, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_g_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_p) == 0x00054C, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_p' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_g) == 0x00054D, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_g' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_IsFalling_ReturnValue) == 0x00054E, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x00054F, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000550, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000558, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000560, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_int_Loop_Counter_Variable_1) == 0x000564, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_VLerp_ReturnValue_1) == 0x000568, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000580, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Add_IntInt_ReturnValue_1) == 0x000668, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_int_Array_Index_Variable_1) == 0x00066C, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Get_Item_1) == 0x000670, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NotifyName_1) == 0x000678, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x000680, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_ST_LoadoutData) == 0x000690, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_ST_LoadoutData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Item_ID) == 0x0006C0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Item_ID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Get_Item_2) == 0x0006C8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x0006D0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Less_IntInt_ReturnValue_1) == 0x0006D4, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Slot_Index_1) == 0x0006D8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Slot_Index_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Slot_Index) == 0x0006DC, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Slot_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Loadout_Name) == 0x0006E0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Loadout_Name' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NotifyName_2) == 0x0006E8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Conv_IntToVector_ReturnValue) == 0x0006F0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_Target) == 0x000708, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NewMesh) == 0x000710, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NewMesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000718, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x000730, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000748, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x000830, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x000831, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x000832, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_Time) == 0x000834, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_Distance) == 0x000838, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_Location) == 0x000840, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000858, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_Normal) == 0x000870, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x000888, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_PhysMat) == 0x0008A0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_HitActor) == 0x0008A8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_HitComponent) == 0x0008B0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x0008B8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_BoneName) == 0x0008C0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_HitItem) == 0x0008C8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_ElementIndex) == 0x0008CC, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x0008D0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_TraceStart) == 0x0008D8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x0008F0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000908, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000918, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess_2) == 0x000920, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000921, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x000924, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NotifyName_3) == 0x000934, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000940, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_GetComponentLocation_ReturnValue_3) == 0x000958, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_GetComponentLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetForwardVector_ReturnValue_1) == 0x000970, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000988, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000990, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsBP_SGKMaster_Character_2) == 0x000998, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsBP_SGKMaster_Character_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess_3) == 0x0009A0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x0009A4, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_bool_Variable) == 0x0009B4, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x0009B5, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_name_Variable) == 0x0009B8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0009C0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0009D8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0009F0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_K2_SetWorldLocation_SweepHitResult_2) == 0x000A08, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_K2_SetWorldLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NotifyName_4) == 0x000AF0, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000AF8, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x000B00, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_bool_Variable_1) == 0x000B10, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000B11, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000B18, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Event_NewController) == 0x000B20, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, Temp_bool_Variable_2) == 0x000B28, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1) == 0x000B29, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_CheckIfPlanting_Dancing_CurrentlyPlanting_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Not_PreBool_ReturnValue_3) == 0x000B2A, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsPeak_53Player_State_1) == 0x000B30, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsPeak_53Player_State_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000B38, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Array_Get_Item_3) == 0x000B40, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_CustomEvent_NotifyName) == 0x000B48, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_Select_Default) == 0x000B50, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000B80, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000B88, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x000B90, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter, K2Node_DynamicCast_bSuccess_5) == 0x000B98, "Member 'BP_EquipmentCharacter_C_ExecuteUbergraph_BP_EquipmentCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.GetisInTopBox
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_GetisInTopBox final
{
public:
	bool                                          IsTopBox;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_GetisInTopBox) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_GetisInTopBox");
static_assert(sizeof(BP_EquipmentCharacter_C_GetisInTopBox) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_GetisInTopBox");
static_assert(offsetof(BP_EquipmentCharacter_C_GetisInTopBox, IsTopBox) == 0x000000, "Member 'BP_EquipmentCharacter_C_GetisInTopBox::IsTopBox' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.GetisOnLadder
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_GetisOnLadder final
{
public:
	bool                                          Param_IsOnladder;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_GetisOnLadder) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_GetisOnLadder");
static_assert(sizeof(BP_EquipmentCharacter_C_GetisOnLadder) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_GetisOnLadder");
static_assert(offsetof(BP_EquipmentCharacter_C_GetisOnLadder, Param_IsOnladder) == 0x000000, "Member 'BP_EquipmentCharacter_C_GetisOnLadder::Param_IsOnladder' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Four_K2Node_InputKeyEvent_5
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Four_K2Node_InputKeyEvent_5::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_1::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Jump_K2Node_InputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Jump_K2Node_InputActionEvent_2::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_LeftShift_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_LeftShift_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_MouseScrollDown_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_One_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_One_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Prone_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Prone_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Three_K2Node_InputKeyEvent_6
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Three_K2Node_InputKeyEvent_6::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.InpActEvt_Two_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4");
static_assert(sizeof(BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4");
static_assert(offsetof(BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'BP_EquipmentCharacter_C_InpActEvt_Two_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Load Loadout Data
// 0x0030 (0x0030 - 0x0000)
struct BP_EquipmentCharacter_C_Load_Loadout_Data final
{
public:
	class US_LoadoutSave_C*                       Loadout_Save;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class US_LoadoutSave_C*                       K2Node_DynamicCast_AsS_Loadout_Save;               // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30BF[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Load_Loadout_Data) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Load_Loadout_Data");
static_assert(sizeof(BP_EquipmentCharacter_C_Load_Loadout_Data) == 0x000030, "Wrong size on BP_EquipmentCharacter_C_Load_Loadout_Data");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, Loadout_Save) == 0x000000, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::Loadout_Save' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000018, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, K2Node_DynamicCast_AsS_Loadout_Save) == 0x000020, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::K2Node_DynamicCast_AsS_Loadout_Save' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_Data, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00002C, "Member 'BP_EquipmentCharacter_C_Load_Loadout_Data::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Load Loadout from Slot
// 0x0070 (0x0070 - 0x0000)
struct BP_EquipmentCharacter_C_Load_Loadout_from_Slot final
{
public:
	int32                                         Slot_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_LoadoutData                        CallFunc_Array_Get_Item;                           // 0x0008(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_ByteByte_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C1[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_LoadoutData                        CallFunc_Array_Get_Item_1;                         // 0x0040(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Load_Loadout_from_Slot");
static_assert(sizeof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot) == 0x000070, "Wrong size on BP_EquipmentCharacter_C_Load_Loadout_from_Slot");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot, Slot_Index) == 0x000000, "Member 'BP_EquipmentCharacter_C_Load_Loadout_from_Slot::Slot_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EquipmentCharacter_C_Load_Loadout_from_Slot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot, CallFunc_Greater_ByteByte_ReturnValue) == 0x000038, "Member 'BP_EquipmentCharacter_C_Load_Loadout_from_Slot::CallFunc_Greater_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Load_Loadout_from_Slot, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EquipmentCharacter_C_Load_Loadout_from_Slot::CallFunc_Array_Get_Item_1' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Make Equipment Array
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentCharacter_C_Make_Equipment_Array final
{
public:
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_EquipmentCharacter_C_Make_Equipment_Array) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Make_Equipment_Array");
static_assert(sizeof(BP_EquipmentCharacter_C_Make_Equipment_Array) == 0x000010, "Wrong size on BP_EquipmentCharacter_C_Make_Equipment_Array");
static_assert(offsetof(BP_EquipmentCharacter_C_Make_Equipment_Array, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_EquipmentCharacter_C_Make_Equipment_Array::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MC_Change Equipment Mesh
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh final
{
public:
	class USkeletalMeshComponent*                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh");
static_assert(sizeof(BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh) == 0x000010, "Wrong size on BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh");
static_assert(offsetof(BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh, Target) == 0x000000, "Member 'BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh::Target' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh, NewMesh) == 0x000008, "Member 'BP_EquipmentCharacter_C_MC_Change_Equipment_Mesh::NewMesh' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MC_Equip Item
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_MC_Equip_Item final
{
public:
	class FName                                   Item_ID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_MC_Equip_Item) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_MC_Equip_Item");
static_assert(sizeof(BP_EquipmentCharacter_C_MC_Equip_Item) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_MC_Equip_Item");
static_assert(offsetof(BP_EquipmentCharacter_C_MC_Equip_Item, Item_ID) == 0x000000, "Member 'BP_EquipmentCharacter_C_MC_Equip_Item::Item_ID' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MLT_PlayEnterExitMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage");
static_assert(sizeof(BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage");
static_assert(offsetof(BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage, MontageToPlay) == 0x000000, "Member 'BP_EquipmentCharacter_C_MLT_PlayEnterExitMontage::MontageToPlay' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Multicast Sound
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_Multicast_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Multicast_Sound) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Multicast_Sound");
static_assert(sizeof(BP_EquipmentCharacter_C_Multicast_Sound) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_Multicast_Sound");
static_assert(offsetof(BP_EquipmentCharacter_C_Multicast_Sound, Sound) == 0x000000, "Member 'BP_EquipmentCharacter_C_Multicast_Sound::Sound' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.MulticastEquipItem
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_MulticastEquipItem final
{
public:
	class FName                                   Item_ID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_MulticastEquipItem) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_MulticastEquipItem");
static_assert(sizeof(BP_EquipmentCharacter_C_MulticastEquipItem) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_MulticastEquipItem");
static_assert(offsetof(BP_EquipmentCharacter_C_MulticastEquipItem, Item_ID) == 0x000000, "Member 'BP_EquipmentCharacter_C_MulticastEquipItem::Item_ID' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentAddItem
// 0x0500 (0x0500 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentAddItem final
{
public:
	class FString                                 NewEquipment;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         ReplaceString;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C2[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0040(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C3[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_EquipmentData                      CallFunc_GetItemInformation_Out_Row;               // 0x0090(0x0130)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C4[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C5[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_1;                    // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C6[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C7[0x3];                                     // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x0208(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_EquipmentData                      CallFunc_GetItemInformation_Out_Row_1;             // 0x0230(0x0130)(HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue_2;                    // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C8[0x3];                                     // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C9[0x3];                                     // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x038C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CA[0xC];                                     // 0x0394(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EquipmentData                      CallFunc_GetItemInformation_Out_Row_2;             // 0x03A0(0x0130)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x04D7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CB[0x7];                                     // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x04E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x04F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentAddItem) == 0x000010, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentAddItem");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentAddItem) == 0x000500, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentAddItem");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, NewEquipment) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::NewEquipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, ReplaceString) == 0x000010, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::ReplaceString' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Loop_Counter_Variable_1) == 0x000030, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Array_Index_Variable_2) == 0x000038, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_ParseIntoArray_ReturnValue) == 0x000040, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Replace_ReturnValue) == 0x000068, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Concat_StrStr_ReturnValue) == 0x000080, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_GetItemInformation_Out_Row) == 0x000090, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_GetItemInformation_Out_Row' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Add_ReturnValue) == 0x0001C0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001C4, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C8, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Length_ReturnValue) == 0x0001CC, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Less_IntInt_ReturnValue) == 0x0001D0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Replace_ReturnValue_1) == 0x0001E8, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Replace_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Length_ReturnValue_1) == 0x0001F8, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001FC, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Length_ReturnValue_2) == 0x000200, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000204, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_ParseIntoArray_ReturnValue_1) == 0x000208, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000218, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Get_Item_2) == 0x000220, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_GetItemInformation_Out_Row_1) == 0x000230, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_GetItemInformation_Out_Row_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Replace_ReturnValue_2) == 0x000360, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Replace_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000370, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000380, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Add_ReturnValue_1) == 0x000384, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000388, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Conv_StringToName_ReturnValue_2) == 0x00038C, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_GetItemInformation_Out_Row_2) == 0x0003A0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_GetItemInformation_Out_Row_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Array_Length_ReturnValue_3) == 0x0004D0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004D4, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0004D5, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0004D6, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_IsServer_ReturnValue) == 0x0004D7, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Contains_ReturnValue) == 0x0004D8, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0004E0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentAddItem, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0004F0, "Member 'BP_EquipmentCharacter_C_NewEquipmentAddItem::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentClearItems
// 0x01B0 (0x01B0 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentClearItems final
{
public:
	class FString                                 Temp;                                              // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CC[0xC];                                     // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EquipmentData                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0130)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0182(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CD[0x1];                                     // 0x0183(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentClearItems) == 0x000010, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentClearItems");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentClearItems) == 0x0001B0, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentClearItems");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, Temp) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::Temp' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_ParseIntoArray_ReturnValue) == 0x000010, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Conv_StringToName_ReturnValue) == 0x000038, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000180, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Less_IntInt_ReturnValue) == 0x000181, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000182, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Add_IntInt_ReturnValue) == 0x000184, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Conv_NameToString_ReturnValue) == 0x000188, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_Concat_StrStr_ReturnValue) == 0x000198, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentClearItems, CallFunc_IsServer_ReturnValue) == 0x0001A8, "Member 'BP_EquipmentCharacter_C_NewEquipmentClearItems::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentGetTargetSlot
// 0x0028 (0x0028 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot final
{
public:
	E_EquipmentSlots                              Slot;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Result;                                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_EquipmentSlots                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30CF[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot) == 0x000028, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot, Slot) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot, TargetMesh) == 0x000008, "Member 'BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot::TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot, Result) == 0x000010, "Member 'BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot::Result' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot, Temp_byte_Variable) == 0x000018, "Member 'BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot, K2Node_Select_Default) == 0x000020, "Member 'BP_EquipmentCharacter_C_NewEquipmentGetTargetSlot::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentResetToDefault
// 0x0002 (0x0002 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentResetToDefault final
{
public:
	EPeak53Teams                                  Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentResetToDefault) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentResetToDefault");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentResetToDefault) == 0x000002, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentResetToDefault");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentResetToDefault, Team) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentResetToDefault::Team' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentResetToDefault, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_EquipmentCharacter_C_NewEquipmentResetToDefault::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentResetToOutfit
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentResetToOutfit final
{
public:
	class FString                                 NewEquipment;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          UpdateVisual;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentResetToOutfit) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentResetToOutfit");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentResetToOutfit) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentResetToOutfit");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentResetToOutfit, NewEquipment) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentResetToOutfit::NewEquipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentResetToOutfit, UpdateVisual) == 0x000010, "Member 'BP_EquipmentCharacter_C_NewEquipmentResetToOutfit::UpdateVisual' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.NewEquipmentUpdateVisuals
// 0x0470 (0x0470 - 0x0000)
struct BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<class FString>                         NewLocalVar;                                       // 0x0010(0x0010)(Edit, BlueprintVisible)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D0[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue;               // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D1[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D2[0x3];                                     // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D3[0x1];                                     // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D4[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D5[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0088(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors_1;            // 0x0098(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D6[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon_1;     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D7[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_1;       // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D8[0x4];                                     // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Array_Get_Item_2;                         // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item_3;                         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Replace_ReturnValue;                      // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30D9[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EquipmentData                      CallFunc_GetItemInformation_Out_Row;               // 0x0160(0x0130)(HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DA[0x8];                                     // 0x0298(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EquipmentData                      CallFunc_GetItemTeamUsage_Out_Row;                 // 0x02A0(0x0130)(HasGetValueTypeHash)
	EPeak53Teams                                  CallFunc_GetItemTeamUsage_Seals;                   // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetItemTeamUsage_Sucess;                  // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DB[0x4];                                     // 0x03D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x03D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DC[0x7];                                     // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DD[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_NewEquipmentGetTargetSlot_TargetMesh;     // 0x0400(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DE[0x7];                                     // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x0410(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30DF[0x7];                                     // 0x0421(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E0[0x6];                                     // 0x0432(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_NewEquipmentGetTargetSlot_TargetMesh_1;   // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E1[0x3];                                     // 0x0441(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x044D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x044E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E2[0x1];                                     // 0x044F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0454(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E3[0x3];                                     // 0x0455(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_ParseIntoArray_ReturnValue_1;             // 0x0458(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals) == 0x000010, "Wrong alignment on BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals");
static_assert(sizeof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals) == 0x000470, "Wrong size on BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, NewParam) == 0x000000, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::NewParam' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, NewLocalVar) == 0x000010, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_ParseIntoArray_ReturnValue) == 0x000028, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_ParseIntoArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Not_PreBool_ReturnValue) == 0x000038, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000039, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Array_Index_Variable_1) == 0x000048, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Loop_Counter_Variable_1) == 0x00004C, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Add_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000054, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Array_Index_Variable_2) == 0x000058, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Not_PreBool_ReturnValue_1) == 0x00005C, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_bool_True_if_break_was_hit_Variable_2) == 0x00005D, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Not_PreBool_ReturnValue_2) == 0x00005E, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Loop_Counter_Variable_2) == 0x000060, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Array_Index_Variable_3) == 0x000068, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000070, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000080, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetAttachedActors_OutActors) == 0x000088, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetAttachedActors_OutActors_1) == 0x000098, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetAttachedActors_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Get_Item) == 0x0000A8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x0000B8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetDisplayName_ReturnValue) == 0x0000C8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_AsBP_Master_Range_Weapon_1) == 0x0000D8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_AsBP_Master_Range_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_bSuccess_1) == 0x0000E0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetComponentByClass_ReturnValue) == 0x0000E8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000F0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x0000F8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetSkeletalMeshAsset_ReturnValue_1) == 0x000100, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetSkeletalMeshAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Length_ReturnValue_1) == 0x00010C, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, Temp_int_Loop_Counter_Variable_3) == 0x000110, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_BooleanAND_ReturnValue) == 0x000115, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Less_IntInt_ReturnValue_1) == 0x000116, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_BooleanAND_ReturnValue_1) == 0x000117, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Add_IntInt_ReturnValue_3) == 0x000118, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Get_Item_2) == 0x000120, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Get_Item_3) == 0x000130, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Replace_ReturnValue) == 0x000140, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Replace_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Conv_StringToName_ReturnValue) == 0x000150, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetItemInformation_Out_Row) == 0x000160, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetItemInformation_Out_Row' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000290, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetItemTeamUsage_Out_Row) == 0x0002A0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetItemTeamUsage_Out_Row' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetItemTeamUsage_Seals) == 0x0003D0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetItemTeamUsage_Seals' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_GetItemTeamUsage_Sucess) == 0x0003D1, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_GetItemTeamUsage_Sucess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003D2, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_SwitchEnum_CmpSuccess) == 0x0003D3, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0003D8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0003E0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003E8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0003F0, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_bSuccess_2) == 0x0003F8, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003F9, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_NewEquipmentGetTargetSlot_TargetMesh) == 0x000400, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_NewEquipmentGetTargetSlot_TargetMesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_BooleanAND_ReturnValue_2) == 0x000408, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x000410, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x000418, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000420, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x000428, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, K2Node_DynamicCast_bSuccess_3) == 0x000430, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000431, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_NewEquipmentGetTargetSlot_TargetMesh_1) == 0x000438, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_NewEquipmentGetTargetSlot_TargetMesh_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_BooleanAND_ReturnValue_3) == 0x000440, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Length_ReturnValue_2) == 0x000444, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Length_ReturnValue_3) == 0x000448, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Less_IntInt_ReturnValue_2) == 0x00044C, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Less_IntInt_ReturnValue_3) == 0x00044D, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_BooleanAND_ReturnValue_4) == 0x00044E, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Array_Length_ReturnValue_4) == 0x000450, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_Greater_IntInt_ReturnValue) == 0x000454, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals, CallFunc_ParseIntoArray_ReturnValue_1) == 0x000458, "Member 'BP_EquipmentCharacter_C_NewEquipmentUpdateVisuals::CallFunc_ParseIntoArray_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(sizeof(BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(offsetof(BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521, NotifyName) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnBlendOut_BCAA89434B5A978F4970D9A3D52B6521::NotifyName' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnCompleted_BCAA89434B5A978F4970D9A3D52B6521
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(sizeof(BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(offsetof(BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521, NotifyName) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnCompleted_BCAA89434B5A978F4970D9A3D52B6521::NotifyName' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(sizeof(BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(offsetof(BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521, NotifyName) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnInterrupted_BCAA89434B5A978F4970D9A3D52B6521::NotifyName' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(sizeof(BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(offsetof(BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521, NotifyName) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnNotifyBegin_BCAA89434B5A978F4970D9A3D52B6521::NotifyName' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(sizeof(BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521");
static_assert(offsetof(BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521, NotifyName) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnNotifyEnd_BCAA89434B5A978F4970D9A3D52B6521::NotifyName' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_bgettingup?
// 0x0088 (0x0088 - 0x0000)
struct BP_EquipmentCharacter_C_OnRep_bgettingup_ final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALS_AnimBP_P533_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P533;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E4[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P532_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P532;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E5[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P531_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P531;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E6[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK4_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK4;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E7[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK3_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK3;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E8[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK2_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK2;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30E9[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK1_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK1;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EA[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_C*                          K2Node_DynamicCast_AsALS_Anim_BP;                  // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnRep_bgettingup_) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_OnRep_bgettingup_");
static_assert(sizeof(BP_EquipmentCharacter_C_OnRep_bgettingup_) == 0x000088, "Wrong size on BP_EquipmentCharacter_C_OnRep_bgettingup_");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_P533) == 0x000008, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_P533' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_P532) == 0x000018, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_P532' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_P531) == 0x000028, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_P531' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_INK4) == 0x000038, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_INK4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_INK3) == 0x000048, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_INK3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_4) == 0x000050, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_INK2) == 0x000058, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_INK2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_5) == 0x000060, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP_INK1) == 0x000068, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP_INK1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_6) == 0x000070, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_AsALS_Anim_BP) == 0x000078, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_AsALS_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bgettingup_, K2Node_DynamicCast_bSuccess_7) == 0x000080, "Member 'BP_EquipmentCharacter_C_OnRep_bgettingup_::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_bproning
// 0x0088 (0x0088 - 0x0000)
struct BP_EquipmentCharacter_C_OnRep_bproning final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALS_AnimBP_C*                          K2Node_DynamicCast_AsALS_Anim_BP;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EB[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P533_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P533;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EC[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P532_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P532;             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30ED[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P531_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P531;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EE[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK4_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK4;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30EF[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK3_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK3;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F0[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK2_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK2;             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F1[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK1_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK1;             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnRep_bproning) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_OnRep_bproning");
static_assert(sizeof(BP_EquipmentCharacter_C_OnRep_bproning) == 0x000088, "Wrong size on BP_EquipmentCharacter_C_OnRep_bproning");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP) == 0x000008, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_P533) == 0x000018, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_P533' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_1) == 0x000020, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_P532) == 0x000028, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_P532' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_2) == 0x000030, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_P531) == 0x000038, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_P531' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_3) == 0x000040, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_INK4) == 0x000048, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_INK4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_4) == 0x000050, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_INK3) == 0x000058, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_INK3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_5) == 0x000060, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_INK2) == 0x000068, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_INK2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_6) == 0x000070, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_AsALS_Anim_BP_INK1) == 0x000078, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_AsALS_Anim_BP_INK1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_bproning, K2Node_DynamicCast_bSuccess_7) == 0x000080, "Member 'BP_EquipmentCharacter_C_OnRep_bproning::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.OnRep_OnMyLadder
// 0x0090 (0x0090 - 0x0000)
struct BP_EquipmentCharacter_C_OnRep_OnMyLadder final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UALS_AnimBP_C*                          K2Node_DynamicCast_AsALS_Anim_BP;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F2[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P533_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P533;             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F3[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P532_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P532;             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_P531_C*                     K2Node_DynamicCast_AsALS_Anim_BP_P531;             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F5[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK4_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK4;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F6[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK3_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK3;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F7[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK2_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK2;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F8[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALS_AnimBP_INK1_C*                     K2Node_DynamicCast_AsALS_Anim_BP_INK1;             // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_OnRep_OnMyLadder) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_OnRep_OnMyLadder");
static_assert(sizeof(BP_EquipmentCharacter_C_OnRep_OnMyLadder) == 0x000090, "Wrong size on BP_EquipmentCharacter_C_OnRep_OnMyLadder");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_2) == 0x000002, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_3) == 0x000003, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_4) == 0x000004, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_5) == 0x000005, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_6) == 0x000006, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_IsValid_ReturnValue_7) == 0x000007, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP) == 0x000010, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_P533) == 0x000020, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_P533' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_P532) == 0x000030, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_P532' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_2) == 0x000038, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_P531) == 0x000040, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_P531' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_3) == 0x000048, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_INK4) == 0x000050, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_INK4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_4) == 0x000058, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_INK3) == 0x000060, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_INK3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_5) == 0x000068, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_INK2) == 0x000070, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_INK2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_6) == 0x000078, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_AsALS_Anim_BP_INK1) == 0x000080, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_AsALS_Anim_BP_INK1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_OnRep_OnMyLadder, K2Node_DynamicCast_bSuccess_7) == 0x000088, "Member 'BP_EquipmentCharacter_C_OnRep_OnMyLadder::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Open Equipment Screen
// 0x0040 (0x0040 - 0x0000)
struct BP_EquipmentCharacter_C_Open_Equipment_Screen final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30F9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_EquipmetScreen_C*                   CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_DefaultUnlocks                      CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Open_Equipment_Screen) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Open_Equipment_Screen");
static_assert(sizeof(BP_EquipmentCharacter_C_Open_Equipment_Screen) == 0x000040, "Wrong size on BP_EquipmentCharacter_C_Open_Equipment_Screen");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, K2Node_DynamicCast_AsPlayer_Controller) == 0x000010, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, CallFunc_Create_ReturnValue) == 0x000020, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Screen, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000038, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Screen::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Open Equipment Sound
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_Open_Equipment_Sound final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Open_Equipment_Sound) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Open_Equipment_Sound");
static_assert(sizeof(BP_EquipmentCharacter_C_Open_Equipment_Sound) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_Open_Equipment_Sound");
static_assert(offsetof(BP_EquipmentCharacter_C_Open_Equipment_Sound, Sound) == 0x000000, "Member 'BP_EquipmentCharacter_C_Open_Equipment_Sound::Sound' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Peak_GetTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_Peak_GetTeam final
{
public:
	EPeak53Teams                                  Param_CharacterTeam;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Peak_GetTeam) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_Peak_GetTeam");
static_assert(sizeof(BP_EquipmentCharacter_C_Peak_GetTeam) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_Peak_GetTeam");
static_assert(offsetof(BP_EquipmentCharacter_C_Peak_GetTeam, Param_CharacterTeam) == 0x000000, "Member 'BP_EquipmentCharacter_C_Peak_GetTeam::Param_CharacterTeam' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.PlayEnterExitMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_PlayEnterExitMontage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_PlayEnterExitMontage) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_PlayEnterExitMontage");
static_assert(sizeof(BP_EquipmentCharacter_C_PlayEnterExitMontage) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_PlayEnterExitMontage");
static_assert(offsetof(BP_EquipmentCharacter_C_PlayEnterExitMontage, MontageToPlay) == 0x000000, "Member 'BP_EquipmentCharacter_C_PlayEnterExitMontage::MontageToPlay' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_ReceiveEndPlay");
static_assert(sizeof(BP_EquipmentCharacter_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_ReceiveEndPlay");
static_assert(offsetof(BP_EquipmentCharacter_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_EquipmentCharacter_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_ReceivePossessed");
static_assert(sizeof(BP_EquipmentCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_ReceivePossessed");
static_assert(offsetof(BP_EquipmentCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_EquipmentCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_EquipmentCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_ReceiveTick");
static_assert(sizeof(BP_EquipmentCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_EquipmentCharacter_C_ReceiveTick");
static_assert(offsetof(BP_EquipmentCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_EquipmentCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Register with Weapon Hot System
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System final
{
public:
	class UPeakWeaponHotSubsystem*                CallFunc_GetWorldSubsystem_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System");
static_assert(sizeof(BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System");
static_assert(offsetof(BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System, CallFunc_GetWorldSubsystem_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_Register_with_Weapon_Hot_System::CallFunc_GetWorldSubsystem_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.RPCUpdateEquipment
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentCharacter_C_RPCUpdateEquipment final
{
public:
	class FString                                 NewParam;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_RPCUpdateEquipment) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_RPCUpdateEquipment");
static_assert(sizeof(BP_EquipmentCharacter_C_RPCUpdateEquipment) == 0x000010, "Wrong size on BP_EquipmentCharacter_C_RPCUpdateEquipment");
static_assert(offsetof(BP_EquipmentCharacter_C_RPCUpdateEquipment, NewParam) == 0x000000, "Member 'BP_EquipmentCharacter_C_RPCUpdateEquipment::NewParam' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Save Current Loadout to Slot
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot final
{
public:
	int32                                         Slot_Index;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Loadout_Name;                                      // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FB[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot");
static_assert(sizeof(BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot) == 0x000018, "Wrong size on BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot, Slot_Index) == 0x000000, "Member 'BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot::Slot_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot, Loadout_Name) == 0x000004, "Member 'BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot::Loadout_Name' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot, CallFunc_UtcNow_ReturnValue) == 0x000010, "Member 'BP_EquipmentCharacter_C_Save_Current_Loadout_to_Slot::CallFunc_UtcNow_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Save Loadout Data
// 0x0028 (0x0028 - 0x0000)
struct BP_EquipmentCharacter_C_Save_Loadout_Data final
{
public:
	class US_LoadoutSave_C*                       Loadout_Save;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FC[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class US_LoadoutSave_C*                       CallFunc_CreateSaveGameObject_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Save_Loadout_Data) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Save_Loadout_Data");
static_assert(sizeof(BP_EquipmentCharacter_C_Save_Loadout_Data) == 0x000028, "Wrong size on BP_EquipmentCharacter_C_Save_Loadout_Data");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Loadout_Data, Loadout_Save) == 0x000000, "Member 'BP_EquipmentCharacter_C_Save_Loadout_Data::Loadout_Save' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Loadout_Data, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BP_EquipmentCharacter_C_Save_Loadout_Data::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Loadout_Data, CallFunc_SaveGameToSlot_ReturnValue) == 0x000018, "Member 'BP_EquipmentCharacter_C_Save_Loadout_Data::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Save_Loadout_Data, CallFunc_CreateSaveGameObject_ReturnValue) == 0x000020, "Member 'BP_EquipmentCharacter_C_Save_Loadout_Data::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Select Next Camo
// 0x0004 (0x0004 - 0x0000)
struct BP_EquipmentCharacter_C_Select_Next_Camo final
{
public:
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_Select_Next_Camo) == 0x000004, "Wrong alignment on BP_EquipmentCharacter_C_Select_Next_Camo");
static_assert(sizeof(BP_EquipmentCharacter_C_Select_Next_Camo) == 0x000004, "Wrong size on BP_EquipmentCharacter_C_Select_Next_Camo");
static_assert(offsetof(BP_EquipmentCharacter_C_Select_Next_Camo, CallFunc_Add_IntInt_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_Select_Next_Camo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SetisInTopBox
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_SetisInTopBox final
{
public:
	bool                                          IsTopBox;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_SetisInTopBox) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_SetisInTopBox");
static_assert(sizeof(BP_EquipmentCharacter_C_SetisInTopBox) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_SetisInTopBox");
static_assert(offsetof(BP_EquipmentCharacter_C_SetisInTopBox, IsTopBox) == 0x000000, "Member 'BP_EquipmentCharacter_C_SetisInTopBox::IsTopBox' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SetOnLadderBool
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentCharacter_C_SetOnLadderBool final
{
public:
	bool                                          Param_IsOnladder;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_SetOnLadderBool) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_SetOnLadderBool");
static_assert(sizeof(BP_EquipmentCharacter_C_SetOnLadderBool) == 0x000001, "Wrong size on BP_EquipmentCharacter_C_SetOnLadderBool");
static_assert(offsetof(BP_EquipmentCharacter_C_SetOnLadderBool, Param_IsOnladder) == 0x000000, "Member 'BP_EquipmentCharacter_C_SetOnLadderBool::Param_IsOnladder' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SRV_PlayEnterExitMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage");
static_assert(sizeof(BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage) == 0x000008, "Wrong size on BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage");
static_assert(offsetof(BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage, MontageToPlay) == 0x000000, "Member 'BP_EquipmentCharacter_C_SRV_PlayEnterExitMontage::MontageToPlay' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.SV_Equip Loadout
// 0x0030 (0x0030 - 0x0000)
struct BP_EquipmentCharacter_C_SV_Equip_Loadout final
{
public:
	struct FST_LoadoutData                        ST_LoadoutData;                                    // 0x0000(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_SV_Equip_Loadout) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_SV_Equip_Loadout");
static_assert(sizeof(BP_EquipmentCharacter_C_SV_Equip_Loadout) == 0x000030, "Wrong size on BP_EquipmentCharacter_C_SV_Equip_Loadout");
static_assert(offsetof(BP_EquipmentCharacter_C_SV_Equip_Loadout, ST_LoadoutData) == 0x000000, "Member 'BP_EquipmentCharacter_C_SV_Equip_Loadout::ST_LoadoutData' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellClinetProneToStand
// 0x0002 (0x0002 - 0x0000)
struct BP_EquipmentCharacter_C_TellClinetProneToStand final
{
public:
	bool                                          P;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          G;                                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_TellClinetProneToStand) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_TellClinetProneToStand");
static_assert(sizeof(BP_EquipmentCharacter_C_TellClinetProneToStand) == 0x000002, "Wrong size on BP_EquipmentCharacter_C_TellClinetProneToStand");
static_assert(offsetof(BP_EquipmentCharacter_C_TellClinetProneToStand, P) == 0x000000, "Member 'BP_EquipmentCharacter_C_TellClinetProneToStand::P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_TellClinetProneToStand, G) == 0x000001, "Member 'BP_EquipmentCharacter_C_TellClinetProneToStand::G' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellClinetStandToProne
// 0x0002 (0x0002 - 0x0000)
struct BP_EquipmentCharacter_C_TellClinetStandToProne final
{
public:
	bool                                          P;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          G;                                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_TellClinetStandToProne) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_TellClinetStandToProne");
static_assert(sizeof(BP_EquipmentCharacter_C_TellClinetStandToProne) == 0x000002, "Wrong size on BP_EquipmentCharacter_C_TellClinetStandToProne");
static_assert(offsetof(BP_EquipmentCharacter_C_TellClinetStandToProne, P) == 0x000000, "Member 'BP_EquipmentCharacter_C_TellClinetStandToProne::P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_TellClinetStandToProne, G) == 0x000001, "Member 'BP_EquipmentCharacter_C_TellClinetStandToProne::G' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellServerProneToStand
// 0x0002 (0x0002 - 0x0000)
struct BP_EquipmentCharacter_C_TellServerProneToStand final
{
public:
	bool                                          P;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          G;                                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_TellServerProneToStand) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_TellServerProneToStand");
static_assert(sizeof(BP_EquipmentCharacter_C_TellServerProneToStand) == 0x000002, "Wrong size on BP_EquipmentCharacter_C_TellServerProneToStand");
static_assert(offsetof(BP_EquipmentCharacter_C_TellServerProneToStand, P) == 0x000000, "Member 'BP_EquipmentCharacter_C_TellServerProneToStand::P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_TellServerProneToStand, G) == 0x000001, "Member 'BP_EquipmentCharacter_C_TellServerProneToStand::G' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.TellServerStandToProne
// 0x0002 (0x0002 - 0x0000)
struct BP_EquipmentCharacter_C_TellServerStandToProne final
{
public:
	bool                                          P;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          G;                                                 // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_TellServerStandToProne) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_TellServerStandToProne");
static_assert(sizeof(BP_EquipmentCharacter_C_TellServerStandToProne) == 0x000002, "Wrong size on BP_EquipmentCharacter_C_TellServerStandToProne");
static_assert(offsetof(BP_EquipmentCharacter_C_TellServerStandToProne, P) == 0x000000, "Member 'BP_EquipmentCharacter_C_TellServerStandToProne::P' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_TellServerStandToProne, G) == 0x000001, "Member 'BP_EquipmentCharacter_C_TellServerStandToProne::G' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.UnDetectedRifleCheck
// 0x0005 (0x0005 - 0x0000)
struct BP_EquipmentCharacter_C_UnDetectedRifleCheck final
{
public:
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentCharacter_C_UnDetectedRifleCheck) == 0x000001, "Wrong alignment on BP_EquipmentCharacter_C_UnDetectedRifleCheck");
static_assert(sizeof(BP_EquipmentCharacter_C_UnDetectedRifleCheck) == 0x000005, "Wrong size on BP_EquipmentCharacter_C_UnDetectedRifleCheck");
static_assert(offsetof(BP_EquipmentCharacter_C_UnDetectedRifleCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000000, "Member 'BP_EquipmentCharacter_C_UnDetectedRifleCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_UnDetectedRifleCheck, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000001, "Member 'BP_EquipmentCharacter_C_UnDetectedRifleCheck::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_UnDetectedRifleCheck, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x000002, "Member 'BP_EquipmentCharacter_C_UnDetectedRifleCheck::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_UnDetectedRifleCheck, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'BP_EquipmentCharacter_C_UnDetectedRifleCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_UnDetectedRifleCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000004, "Member 'BP_EquipmentCharacter_C_UnDetectedRifleCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentCharacter.BP_EquipmentCharacter_C.Update Current Loadout
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentCharacter_C_Update_Current_Loadout final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Item;                                              // 0x0004(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30FD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Equipment_IDs;                                     // 0x0010(0x0010)(Edit, BlueprintVisible)
};
static_assert(alignof(BP_EquipmentCharacter_C_Update_Current_Loadout) == 0x000008, "Wrong alignment on BP_EquipmentCharacter_C_Update_Current_Loadout");
static_assert(sizeof(BP_EquipmentCharacter_C_Update_Current_Loadout) == 0x000020, "Wrong size on BP_EquipmentCharacter_C_Update_Current_Loadout");
static_assert(offsetof(BP_EquipmentCharacter_C_Update_Current_Loadout, Param_Index) == 0x000000, "Member 'BP_EquipmentCharacter_C_Update_Current_Loadout::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Update_Current_Loadout, Item) == 0x000004, "Member 'BP_EquipmentCharacter_C_Update_Current_Loadout::Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentCharacter_C_Update_Current_Loadout, Equipment_IDs) == 0x000010, "Member 'BP_EquipmentCharacter_C_Update_Current_Loadout::Equipment_IDs' has a wrong offset!");

}

