#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SocomCrosshair

#include "Basic.hpp"

#include "E_CrosshairType_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_SocomCrosshair.WBP_SocomCrosshair_C.ExecuteUbergraph_WBP_SocomCrosshair
// 0x0218 (0x0218 - 0x0000)
struct WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairType                               Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8C[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8D[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_CurrentSpread;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_3;           // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_4;           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_5;           // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_6;           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_7;           // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_CrosshairType                               K2Node_CustomEvent_CrosshairColor;                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8E[0x7];                                     // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_7;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHitMarker_C*                           CallFunc_Create_ReturnValue;                       // 0x0148(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_8;           // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_9;           // 0x0158(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               CallFunc_GetAnchors_ReturnValue;                   // 0x0168(0x0020)(NoDestructor)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue;                 // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UHitIndicatorWidget_C*                  CallFunc_Create_ReturnValue_1;                     // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWB_Reload_C*                           CallFunc_Create_ReturnValue_2;                     // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01B8(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8F[0x4];                                     // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair) == 0x000008, "Wrong alignment on WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair");
static_assert(sizeof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair) == 0x000218, "Wrong size on WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, EntryPoint) == 0x000000, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, Temp_byte_Variable) == 0x000004, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, Temp_struct_Variable) == 0x000008, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_Event_IsDesignTime) == 0x000018, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000048, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_CustomEvent_CurrentSpread) == 0x000058, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_CustomEvent_CurrentSpread' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000060, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000068, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_2) == 0x000070, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_3) == 0x000078, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_4) == 0x000090, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_5) == 0x000098, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_6) == 0x0000A0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_7) == 0x0000A8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_CustomEvent_CrosshairColor) == 0x0000B8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_CustomEvent_CrosshairColor' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0000C0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x0000C8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x0000D0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_MakeVector2D_ReturnValue_1) == 0x0000D8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_MakeVector2D_ReturnValue_2) == 0x0000E8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x0000F8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_MakeVector2D_ReturnValue_3) == 0x000108, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Subtract_DoubleDouble_ReturnValue_7) == 0x000118, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Subtract_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_MakeVector2D_ReturnValue_4) == 0x000120, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_Select_Default) == 0x000130, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetOwningPlayer_ReturnValue) == 0x000140, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Create_ReturnValue) == 0x000148, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_8) == 0x000150, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_SlotAsCanvasSlot_ReturnValue_9) == 0x000158, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_SlotAsCanvasSlot_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_AddChild_ReturnValue) == 0x000160, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetAnchors_ReturnValue) == 0x000168, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetAnchors_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetAlignment_ReturnValue) == 0x000188, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetAlignment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000198, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Create_ReturnValue_1) == 0x0001A0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0001A8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_Create_ReturnValue_2) == 0x0001B0, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_Event_MyGeometry) == 0x0001B8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_Event_InDeltaTime) == 0x0001F8, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000200, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000208, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, K2Node_DynamicCast_bSuccess) == 0x000210, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair, CallFunc_BooleanAND_ReturnValue) == 0x000211, "Member 'WBP_SocomCrosshair_C_ExecuteUbergraph_WBP_SocomCrosshair::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_SocomCrosshair.WBP_SocomCrosshair_C.PaintCrosshair
// 0x0001 (0x0001 - 0x0000)
struct WBP_SocomCrosshair_C_PaintCrosshair final
{
public:
	E_CrosshairType                               CrosshairColor;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SocomCrosshair_C_PaintCrosshair) == 0x000001, "Wrong alignment on WBP_SocomCrosshair_C_PaintCrosshair");
static_assert(sizeof(WBP_SocomCrosshair_C_PaintCrosshair) == 0x000001, "Wrong size on WBP_SocomCrosshair_C_PaintCrosshair");
static_assert(offsetof(WBP_SocomCrosshair_C_PaintCrosshair, CrosshairColor) == 0x000000, "Member 'WBP_SocomCrosshair_C_PaintCrosshair::CrosshairColor' has a wrong offset!");

// Function WBP_SocomCrosshair.WBP_SocomCrosshair_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_SocomCrosshair_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SocomCrosshair_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_SocomCrosshair_C_PreConstruct");
static_assert(sizeof(WBP_SocomCrosshair_C_PreConstruct) == 0x000001, "Wrong size on WBP_SocomCrosshair_C_PreConstruct");
static_assert(offsetof(WBP_SocomCrosshair_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_SocomCrosshair_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_SocomCrosshair.WBP_SocomCrosshair_C.SetSpread
// 0x0008 (0x0008 - 0x0000)
struct WBP_SocomCrosshair_C_SetSpread final
{
public:
	double                                        CurrentSpread;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SocomCrosshair_C_SetSpread) == 0x000008, "Wrong alignment on WBP_SocomCrosshair_C_SetSpread");
static_assert(sizeof(WBP_SocomCrosshair_C_SetSpread) == 0x000008, "Wrong size on WBP_SocomCrosshair_C_SetSpread");
static_assert(offsetof(WBP_SocomCrosshair_C_SetSpread, CurrentSpread) == 0x000000, "Member 'WBP_SocomCrosshair_C_SetSpread::CurrentSpread' has a wrong offset!");

// Function WBP_SocomCrosshair.WBP_SocomCrosshair_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct WBP_SocomCrosshair_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_SocomCrosshair_C_Tick) == 0x000008, "Wrong alignment on WBP_SocomCrosshair_C_Tick");
static_assert(sizeof(WBP_SocomCrosshair_C_Tick) == 0x000048, "Wrong size on WBP_SocomCrosshair_C_Tick");
static_assert(offsetof(WBP_SocomCrosshair_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_SocomCrosshair_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_SocomCrosshair_C_Tick, InDeltaTime) == 0x000040, "Member 'WBP_SocomCrosshair_C_Tick::InDeltaTime' has a wrong offset!");

}

