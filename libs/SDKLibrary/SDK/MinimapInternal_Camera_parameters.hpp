#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Camera

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function MinimapInternal_Camera.MinimapInternal_Camera_C.ExecuteUbergraph_MinimapInternal_Camera
// 0x0060 (0x0060 - 0x0000)
struct MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357C[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357D[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera) == 0x000008, "Wrong alignment on MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera");
static_assert(sizeof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera) == 0x000060, "Wrong size on MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, EntryPoint) == 0x000000, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, K2Node_Event_MyGeometry) == 0x000008, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, K2Node_Event_InDeltaTime) == 0x000048, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera, CallFunc_GetLocalSize_ReturnValue) == 0x000050, "Member 'MinimapInternal_Camera_C_ExecuteUbergraph_MinimapInternal_Camera::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Camera.MinimapInternal_Camera_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct MinimapInternal_Camera_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Camera_C_Tick) == 0x000008, "Wrong alignment on MinimapInternal_Camera_C_Tick");
static_assert(sizeof(MinimapInternal_Camera_C_Tick) == 0x000048, "Wrong size on MinimapInternal_Camera_C_Tick");
static_assert(offsetof(MinimapInternal_Camera_C_Tick, MyGeometry) == 0x000000, "Member 'MinimapInternal_Camera_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_Tick, InDeltaTime) == 0x000040, "Member 'MinimapInternal_Camera_C_Tick::InDeltaTime' has a wrong offset!");

// Function MinimapInternal_Camera.MinimapInternal_Camera_C.OnPaint
// 0x00E0 (0x00E0 - 0x0000)
struct MinimapInternal_Camera_C_OnPaint final
{
public:
	struct FPaintContext                          Context;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	struct FPaintContext                          InContext;                                         // 0x0030(0x0030)(Edit, BlueprintVisible, NoDestructor)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357E[0x2];                                     // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector2D>                      CallFunc_ComputeViewFrustum_CornerUVs;             // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_ComputeViewFrustum_ReturnValue;           // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_357F[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_1;                         // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item_2;                         // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ComputeViewFrustum_FloorDistance_ImplicitCast; // 0x00DC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Camera_C_OnPaint) == 0x000008, "Wrong alignment on MinimapInternal_Camera_C_OnPaint");
static_assert(sizeof(MinimapInternal_Camera_C_OnPaint) == 0x0000E0, "Wrong size on MinimapInternal_Camera_C_OnPaint");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, Context) == 0x000000, "Member 'MinimapInternal_Camera_C_OnPaint::Context' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, InContext) == 0x000030, "Member 'MinimapInternal_Camera_C_OnPaint::InContext' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, Temp_int_Variable) == 0x000060, "Member 'MinimapInternal_Camera_C_OnPaint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000069, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Add_IntInt_ReturnValue_1) == 0x00006C, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_ComputeViewFrustum_CornerUVs) == 0x000070, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_ComputeViewFrustum_CornerUVs' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_ComputeViewFrustum_ReturnValue) == 0x000080, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_ComputeViewFrustum_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Array_Get_Item) == 0x000088, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000A8, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0000B8, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Array_Get_Item_2) == 0x0000C8, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Camera_C_OnPaint, CallFunc_ComputeViewFrustum_FloorDistance_ImplicitCast) == 0x0000DC, "Member 'MinimapInternal_Camera_C_OnPaint::CallFunc_ComputeViewFrustum_FloorDistance_ImplicitCast' has a wrong offset!");

}

