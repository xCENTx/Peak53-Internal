#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKCharacterInterface

#include "Basic.hpp"

#include "E_CameraType_structs.hpp"
#include "E_Sockets_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Peak53Teams_structs.hpp"
#include "E_BodyMesh_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SGKCharacterInterface.BP_SGKCharacterInterface_C
// 0x0000 (0x0028 - 0x0028)
class IBP_SGKCharacterInterface_C final : public IInterface
{
public:
	void Peak_GetTeam(EPeak53Teams* CharacterTeam);
	void SGK_CharacterCamera(E_CameraType CameraType, class UCameraComponent** CurrentCamera, class USpringArmComponent** CurrentSpringArm);
	void SGK_CharacterSockets(E_Sockets Sockets, class USceneComponent** Component);
	void SGK_GetMesh(E_BodyMesh MeshType, class UPrimitiveComponent** Mesh);
	void SGK_HideComponents(const TArray<class UPrimitiveComponent*>& Components);
	void SGK_LeanLeft(bool Lean, double CameraLean, double ThirdPersonCameraOffset);
	void SGK_LeanRight(bool Lean, double CameraLean, double ThirdPersonCameraOffset);
	void SGK_LeanValues(double* Lean_Alpha, double* TargetCamera);
	void SGK_LookAtRotation(struct FVector2D* LookAtRotation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SGKCharacterInterface_C">();
	}
	static class IBP_SGKCharacterInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IBP_SGKCharacterInterface_C>();
	}
};
static_assert(alignof(IBP_SGKCharacterInterface_C) == 0x000008, "Wrong alignment on IBP_SGKCharacterInterface_C");
static_assert(sizeof(IBP_SGKCharacterInterface_C) == 0x000028, "Wrong size on IBP_SGKCharacterInterface_C");

}

