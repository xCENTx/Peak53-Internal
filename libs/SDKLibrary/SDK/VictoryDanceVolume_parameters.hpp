#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VictoryDanceVolume

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function VictoryDanceVolume.VictoryDanceVolume_C.BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E99[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'VictoryDanceVolume_C_BndEvt__VictoryDanceVolume_Area_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function VictoryDanceVolume.VictoryDanceVolume_C.ExecuteUbergraph_VictoryDanceVolume
// 0x01A8 (0x01A8 - 0x0000)
struct VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9A[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9C[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9E[0x3];                                     // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0050(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_1;     // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x014B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9F[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_2;     // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA0[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA1[0x6];                                     // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0168(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA2[0x4];                                     // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character_3;     // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0193(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0194(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0195(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EA3[0x2];                                     // 0x0196(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue_1;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume) == 0x000008, "Wrong alignment on VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume");
static_assert(sizeof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume) == 0x0001A8, "Wrong size on VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, EntryPoint) == 0x000000, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::EntryPoint' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x000018, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000028, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000030, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_OtherActor) == 0x000038, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_OtherComp) == 0x000040, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000048, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_bFromSweep) == 0x00004C, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_ComponentBoundEvent_SweepResult) == 0x000050, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_GetOwner_ReturnValue_1) == 0x000138, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_AsBP_SGKMaster_Character_1) == 0x000140, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_AsBP_SGKMaster_Character_1' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_bSuccess_1) == 0x000148, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000149, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00014A, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_IsValid_ReturnValue) == 0x00014B, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_AsBP_SGKMaster_Character_2) == 0x000150, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_AsBP_SGKMaster_Character_2' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_bSuccess_2) == 0x000158, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, Temp_int_Array_Index_Variable) == 0x00015C, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_IsValid_ReturnValue_1) == 0x000160, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000161, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000168, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_Array_Get_Item) == 0x000178, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_Array_Length_ReturnValue) == 0x000180, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_AsBP_SGKMaster_Character_3) == 0x000188, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_AsBP_SGKMaster_Character_3' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, K2Node_DynamicCast_bSuccess_3) == 0x000190, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000192, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000193, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000194, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_IsValid_ReturnValue_2) == 0x000195, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_GetOwner_ReturnValue_2) == 0x000198, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume, CallFunc_NotEqual_ObjectObject_ReturnValue_1) == 0x0001A0, "Member 'VictoryDanceVolume_C_ExecuteUbergraph_VictoryDanceVolume::CallFunc_NotEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

}

