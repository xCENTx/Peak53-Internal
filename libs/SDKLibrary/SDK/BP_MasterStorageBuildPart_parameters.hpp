#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterStorageBuildPart

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_LevelSaveData_structs.hpp"
#include "S_WorldAction_structs.hpp"
#include "E_WorldActions_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_StorageSave_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.ExecuteUbergraph_BP_MasterStorageBuildPart
// 0x01F0 (0x01F0 - 0x0000)
struct BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_538F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5390[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0038(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5391[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x0050(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0138(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5392[0x7];                                     // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StorageSave                         CallFunc_Array_Get_Item;                           // 0x0150(0x0090)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart) == 0x000010, "Wrong alignment on BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart");
static_assert(sizeof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart) == 0x0001F0, "Wrong size on BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, EntryPoint) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, Temp_object_Variable) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, K2Node_Event_SaveGame) == 0x000018, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, K2Node_Event_Index) == 0x000020, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000028, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, K2Node_MakeArray_Array) == 0x000038, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_SelectLevelSaveData_SaveFound) == 0x000048, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x000050, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000120, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_SphereOverlapActors_OutActors) == 0x000138, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_SphereOverlapActors_ReturnValue) == 0x000148, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_Array_Get_Item) == 0x000150, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0001E0, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_IsValid_ReturnValue) == 0x0001E1, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart, CallFunc_IsValid_ReturnValue_1) == 0x0001E2, "Member 'BP_MasterStorageBuildPart_C_ExecuteUbergraph_BP_MasterStorageBuildPart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.LockCheck
// 0x0070 (0x0070 - 0x0000)
struct BP_MasterStorageBuildPart_C_LockCheck final
{
public:
	class UBP_PlayerInventory_C*                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowOpen;                                         // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5393[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UBP_GridComponent_C*>            CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_GridComponent_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AttachedActorCheck_ActorFound;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5394[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_AttachedActorCheck_FoundActor;            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterLock_C*                       K2Node_DynamicCast_AsBP_Master_Lock;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOpen_AllowOpen;                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5395[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_PlayerFindKeyItem_Found;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5396[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_LockCheck) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_LockCheck");
static_assert(sizeof(BP_MasterStorageBuildPart_C_LockCheck) == 0x000070, "Wrong size on BP_MasterStorageBuildPart_C_LockCheck");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, Target) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_LockCheck::Target' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, AllowOpen) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_LockCheck::AllowOpen' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_MasterStorageBuildPart_C_LockCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_AttachedActorCheck_ActorFound) == 0x00002C, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_AttachedActorCheck_ActorFound' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_AttachedActorCheck_FoundActor) == 0x000030, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_AttachedActorCheck_FoundActor' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, K2Node_DynamicCast_AsBP_Master_Lock) == 0x000038, "Member 'BP_MasterStorageBuildPart_C_LockCheck::K2Node_DynamicCast_AsBP_Master_Lock' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_MasterStorageBuildPart_C_LockCheck::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_CanOpen_AllowOpen) == 0x000041, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_CanOpen_AllowOpen' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Conv_TextToString_ReturnValue) == 0x000048, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_MasterStorageBuildPart_C_LockCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_PlayerFindKeyItem_Found) == 0x000064, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_PlayerFindKeyItem_Found' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_LockCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_MasterStorageBuildPart_C_LockCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SaveExtraData
// 0x0288 (0x0288 - 0x0000)
struct BP_MasterStorageBuildPart_C_SaveExtraData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveData;                                     // 0x0008(0x00D0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         ExtraDataIndex;                                    // 0x00D8(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5397[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       NewLevelSaveData;                                  // 0x00E0(0x00D0)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_PrepareStorageSaveData_ExtraDataIndex;    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5398[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_PrepareStorageSaveData_NewLevelSaveData;  // 0x01B8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SaveExtraData) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SaveExtraData");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SaveExtraData) == 0x000288, "Wrong size on BP_MasterStorageBuildPart_C_SaveExtraData");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, SaveGame) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, LevelSaveData) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::LevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, ExtraDataIndex) == 0x0000D8, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, NewLevelSaveData) == 0x0000E0, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, CallFunc_PrepareStorageSaveData_ExtraDataIndex) == 0x0001B0, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::CallFunc_PrepareStorageSaveData_ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SaveExtraData, CallFunc_PrepareStorageSaveData_NewLevelSaveData) == 0x0001B8, "Member 'BP_MasterStorageBuildPart_C_SaveExtraData::CallFunc_PrepareStorageSaveData_NewLevelSaveData' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK AllowInteraction
// 0x0002 (0x0002 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_AllowInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowInteraction_AllowInteraction;    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_AllowInteraction) == 0x000001, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_AllowInteraction");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_AllowInteraction) == 0x000002, "Wrong size on BP_MasterStorageBuildPart_C_SGK_AllowInteraction");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_AllowInteraction, AllowInteraction) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_AllowInteraction::AllowInteraction' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_AllowInteraction, CallFunc_SGK_AllowInteraction_AllowInteraction) == 0x000001, "Member 'BP_MasterStorageBuildPart_C_SGK_AllowInteraction::CallFunc_SGK_AllowInteraction_AllowInteraction' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK EndInteraction
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_EndInteraction final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5399[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_EndInteraction) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_EndInteraction");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_EndInteraction) == 0x000018, "Wrong size on BP_MasterStorageBuildPart_C_SGK_EndInteraction");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_EndInteraction, PlayerInventory) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_EndInteraction::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_EndInteraction, ReturnValue) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_SGK_EndInteraction::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_EndInteraction, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_MasterStorageBuildPart_C_SGK_EndInteraction::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_EndInteraction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_MasterStorageBuildPart_C_SGK_EndInteraction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_Interact final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                Action;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LockCheck_AllowOpen;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_Interact) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_Interact");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_Interact) == 0x000010, "Wrong size on BP_MasterStorageBuildPart_C_SGK_Interact");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_Interact, PlayerInventory) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_Interact::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_Interact, Action) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_SGK_Interact::Action' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_Interact, ReturnValue) == 0x000009, "Member 'BP_MasterStorageBuildPart_C_SGK_Interact::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_Interact, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000A, "Member 'BP_MasterStorageBuildPart_C_SGK_Interact::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_Interact, CallFunc_LockCheck_AllowOpen) == 0x00000B, "Member 'BP_MasterStorageBuildPart_C_SGK_Interact::CallFunc_LockCheck_AllowOpen' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK InteractName
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_InteractName final
{
public:
	class FText                                   InteractName;                                      // 0x0000(0x0018)(Parm, OutParm)
	class FText                                   CallFunc_SGK_InteractName_InteractName;            // 0x0018(0x0018)()
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_InteractName) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_InteractName");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_InteractName) == 0x000030, "Wrong size on BP_MasterStorageBuildPart_C_SGK_InteractName");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_InteractName, InteractName) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_InteractName::InteractName' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_InteractName, CallFunc_SGK_InteractName_InteractName) == 0x000018, "Member 'BP_MasterStorageBuildPart_C_SGK_InteractName::CallFunc_SGK_InteractName_InteractName' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK LoadExtraData
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_LoadExtraData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_LoadExtraData) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_LoadExtraData");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_LoadExtraData) == 0x000010, "Wrong size on BP_MasterStorageBuildPart_C_SGK_LoadExtraData");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_LoadExtraData, SaveGame) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_LoadExtraData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_LoadExtraData, Param_Index) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_SGK_LoadExtraData::Param_Index' has a wrong offset!");

// Function BP_MasterStorageBuildPart.BP_MasterStorageBuildPart_C.SGK PossibleActions
// 0x0050 (0x0050 - 0x0000)
struct BP_MasterStorageBuildPart_C_SGK_PossibleActions final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionsFound;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539A[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WorldAction>                 PossibleActions;                                   // 0x0010(0x0010)(Parm, OutParm)
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction;                   // 0x0020(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_MasterStorageBuildPart_C_SGK_PossibleActions) == 0x000008, "Wrong alignment on BP_MasterStorageBuildPart_C_SGK_PossibleActions");
static_assert(sizeof(BP_MasterStorageBuildPart_C_SGK_PossibleActions) == 0x000050, "Wrong size on BP_MasterStorageBuildPart_C_SGK_PossibleActions");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_PossibleActions, PlayerInventory) == 0x000000, "Member 'BP_MasterStorageBuildPart_C_SGK_PossibleActions::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_PossibleActions, ActionsFound) == 0x000008, "Member 'BP_MasterStorageBuildPart_C_SGK_PossibleActions::ActionsFound' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_PossibleActions, PossibleActions) == 0x000010, "Member 'BP_MasterStorageBuildPart_C_SGK_PossibleActions::PossibleActions' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction) == 0x000020, "Member 'BP_MasterStorageBuildPart_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction' has a wrong offset!");
static_assert(offsetof(BP_MasterStorageBuildPart_C_SGK_PossibleActions, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_MasterStorageBuildPart_C_SGK_PossibleActions::K2Node_MakeArray_Array' has a wrong offset!");

}

