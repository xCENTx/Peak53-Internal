#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterInventoryGrid

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.ConstructInventoryCellArray
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterInventoryGrid_C_ConstructInventoryCellArray final
{
public:
	TArray<class UBP_InventoryCell_C*>            Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryCell_C*                    InvCellL;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C95[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C96[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_ConstructInventoryCellArray");
static_assert(sizeof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray) == 0x000048, "Wrong size on BP_MasterInventoryGrid_C_ConstructInventoryCellArray");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, Array) == 0x000000, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::Array' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, InvCellL) == 0x000010, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::InvCellL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryCellArray, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000040, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryCellArray::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.ConstructInventoryItemIconArray
// 0x0040 (0x0040 - 0x0000)
struct BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray final
{
public:
	TArray<class UBP_InventoryItemIcon_C*>        Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class UBP_InventoryItemIcon_C*                InvIconL;                                          // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C97[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item_1;                         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C98[0x2];                                     // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray");
static_assert(sizeof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray) == 0x000040, "Wrong size on BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, Array) == 0x000000, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::Array' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, InvIconL) == 0x000010, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::InvIconL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000028, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Array_Get_Item_1) == 0x000030, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Less_IntInt_ReturnValue) == 0x000039, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_MasterInventoryGrid_C_ConstructInventoryItemIconArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.ConstructInvGrid
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterInventoryGrid_C_ConstructInvGrid final
{
public:
	class UBP_InventoryItemIcon_C*                NewItemIconL;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    NewCellL;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C99[0x2];                                     // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryCell_C*                    CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_ConstructInvGrid) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_ConstructInvGrid");
static_assert(sizeof(BP_MasterInventoryGrid_C_ConstructInvGrid) == 0x000048, "Wrong size on BP_MasterInventoryGrid_C_ConstructInvGrid");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, NewItemIconL) == 0x000000, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::NewItemIconL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, NewCellL) == 0x000008, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::NewCellL' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Less_IntInt_ReturnValue) == 0x000035, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ConstructInvGrid, CallFunc_Less_IntInt_ReturnValue_1) == 0x000045, "Member 'BP_MasterInventoryGrid_C_ConstructInvGrid::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.ExecuteUbergraph_BP_MasterInventoryGrid
// 0x0048 (0x0048 - 0x0000)
struct BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_InventoryItemIcon_C*                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9C[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  K2Node_Event_GridInventory;                        // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid");
static_assert(sizeof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid) == 0x000048, "Wrong size on BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, EntryPoint) == 0x000000, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_IsStandalone_ReturnValue) == 0x000008, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, K2Node_Event_GridInventory) == 0x000028, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::K2Node_Event_GridInventory' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'BP_MasterInventoryGrid_C_ExecuteUbergraph_BP_MasterInventoryGrid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.GetCellCount
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventoryGrid_C_GetCellCount final
{
public:
	int32                                         InventoryCells;                                    // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_GetCellCount) == 0x000004, "Wrong alignment on BP_MasterInventoryGrid_C_GetCellCount");
static_assert(sizeof(BP_MasterInventoryGrid_C_GetCellCount) == 0x000008, "Wrong size on BP_MasterInventoryGrid_C_GetCellCount");
static_assert(offsetof(BP_MasterInventoryGrid_C_GetCellCount, InventoryCells) == 0x000000, "Member 'BP_MasterInventoryGrid_C_GetCellCount::InventoryCells' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_GetCellCount, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_MasterInventoryGrid_C_GetCellCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.GetInvColumnsCount
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventoryGrid_C_GetInvColumnsCount final
{
public:
	int32                                         Columns;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_GetInvColumnsCount) == 0x000004, "Wrong alignment on BP_MasterInventoryGrid_C_GetInvColumnsCount");
static_assert(sizeof(BP_MasterInventoryGrid_C_GetInvColumnsCount) == 0x000008, "Wrong size on BP_MasterInventoryGrid_C_GetInvColumnsCount");
static_assert(offsetof(BP_MasterInventoryGrid_C_GetInvColumnsCount, Columns) == 0x000000, "Member 'BP_MasterInventoryGrid_C_GetInvColumnsCount::Columns' has a wrong offset!");
static_assert(offsetof(BP_MasterInventoryGrid_C_GetInvColumnsCount, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_MasterInventoryGrid_C_GetInvColumnsCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.SGK CellSlots
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventoryGrid_C_SGK_CellSlots final
{
public:
	TArray<class UBP_InventoryCell_C*>            Cells;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterInventoryGrid_C_SGK_CellSlots) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_SGK_CellSlots");
static_assert(sizeof(BP_MasterInventoryGrid_C_SGK_CellSlots) == 0x000010, "Wrong size on BP_MasterInventoryGrid_C_SGK_CellSlots");
static_assert(offsetof(BP_MasterInventoryGrid_C_SGK_CellSlots, Cells) == 0x000000, "Member 'BP_MasterInventoryGrid_C_SGK_CellSlots::Cells' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.SGK ConstructGrid
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterInventoryGrid_C_SGK_ConstructGrid final
{
public:
	class UBP_MasterInventory_C*                  Param_GridInventory;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterInventoryGrid_C_SGK_ConstructGrid) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_SGK_ConstructGrid");
static_assert(sizeof(BP_MasterInventoryGrid_C_SGK_ConstructGrid) == 0x000008, "Wrong size on BP_MasterInventoryGrid_C_SGK_ConstructGrid");
static_assert(offsetof(BP_MasterInventoryGrid_C_SGK_ConstructGrid, Param_GridInventory) == 0x000000, "Member 'BP_MasterInventoryGrid_C_SGK_ConstructGrid::Param_GridInventory' has a wrong offset!");

// Function BP_MasterInventoryGrid.BP_MasterInventoryGrid_C.SGK InvItemSlots
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterInventoryGrid_C_SGK_InvItemSlots final
{
public:
	TArray<class UBP_InventoryItemIcon_C*>        ItemInvWidgets;                                    // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterInventoryGrid_C_SGK_InvItemSlots) == 0x000008, "Wrong alignment on BP_MasterInventoryGrid_C_SGK_InvItemSlots");
static_assert(sizeof(BP_MasterInventoryGrid_C_SGK_InvItemSlots) == 0x000010, "Wrong size on BP_MasterInventoryGrid_C_SGK_InvItemSlots");
static_assert(offsetof(BP_MasterInventoryGrid_C_SGK_InvItemSlots, ItemInvWidgets) == 0x000000, "Member 'BP_MasterInventoryGrid_C_SGK_InvItemSlots::ItemInvWidgets' has a wrong offset!");

}

