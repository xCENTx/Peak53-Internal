#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MinimapInternal_Icon

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MinimapPlugin_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.ExecuteUbergraph_MinimapInternal_Icon
// 0x0218 (0x0218 - 0x0000)
struct MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3774[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3775[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsLeftMouseButton)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3776[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapIconComponent*                      K2Node_CustomEvent_MapIcon_2;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMapIconComponent*                      K2Node_CustomEvent_MapIcon_1;                      // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMapIconComponent*                      K2Node_CustomEvent_MapIcon;                        // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMapViewComponent* MapView)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3777[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMapViewComponent*                      K2Node_CustomEvent_MapView;                        // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMapIconComponent* MapIcon)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0070(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMapIconComponent* MapIcon)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0090(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x00D0(0x0098)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0168(0x0098)(ConstParm)
	bool                                          K2Node_CustomEvent_IsLeftMouseButton;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3778[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UMapIconComponent* MapIcon)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon");
static_assert(sizeof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon) == 0x000218, "Wrong size on MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, EntryPoint) == 0x000000, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::EntryPoint' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_IsValid_ReturnValue_2) == 0x000006, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_IsValid_ReturnValue_3) == 0x000020, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate_1) == 0x000024, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CustomEvent_MapIcon_2) == 0x000038, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CustomEvent_MapIcon_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CustomEvent_MapIcon_1) == 0x000040, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CustomEvent_MapIcon_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CustomEvent_MapIcon) == 0x000048, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CustomEvent_MapIcon' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate_2) == 0x000050, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, CallFunc_IsValid_ReturnValue_4) == 0x000060, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CustomEvent_MapView) == 0x000068, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CustomEvent_MapView' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate_3) == 0x000070, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate_4) == 0x000080, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_Event_MyGeometry) == 0x000090, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_Event_MouseEvent_1) == 0x0000D0, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_Event_MouseEvent) == 0x000168, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CustomEvent_IsLeftMouseButton) == 0x000200, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CustomEvent_IsLeftMouseButton' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon, K2Node_CreateDelegate_OutputDelegate_5) == 0x000204, "Member 'MinimapInternal_Icon_C_ExecuteUbergraph_MinimapInternal_Icon::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.InitSlots
// 0x0030 (0x0030 - 0x0000)
struct MinimapInternal_Icon_C_InitSlots final
{
public:
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3779[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_1;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377A[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_AsCanvas_Panel_Slot_2;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_InitSlots) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_InitSlots");
static_assert(sizeof(MinimapInternal_Icon_C_InitSlots) == 0x000030, "Wrong size on MinimapInternal_Icon_C_InitSlots");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_AsCanvas_Panel_Slot) == 0x000000, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_AsCanvas_Panel_Slot' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_AsCanvas_Panel_Slot_1) == 0x000010, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_AsCanvas_Panel_Slot_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_bSuccess_1) == 0x000018, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_AsCanvas_Panel_Slot_2) == 0x000020, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_AsCanvas_Panel_Slot_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_InitSlots, K2Node_DynamicCast_bSuccess_2) == 0x000028, "Member 'MinimapInternal_Icon_C_InitSlots::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnAppearanceChanged
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Icon_C_OnAppearanceChanged final
{
public:
	class UMapIconComponent*                      MapIcon;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnAppearanceChanged) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnAppearanceChanged");
static_assert(sizeof(MinimapInternal_Icon_C_OnAppearanceChanged) == 0x000008, "Wrong size on MinimapInternal_Icon_C_OnAppearanceChanged");
static_assert(offsetof(MinimapInternal_Icon_C_OnAppearanceChanged, MapIcon) == 0x000000, "Member 'MinimapInternal_Icon_C_OnAppearanceChanged::MapIcon' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnBoxSelect__DelegateSignature
// 0x0028 (0x0028 - 0x0000)
struct MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature final
{
public:
	struct FVector2D                              StartUV;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              EndUV;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLeftMouseButton;                                 // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsShiftSelect;                                     // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsCtrlSelect;                                      // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature");
static_assert(sizeof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature) == 0x000028, "Wrong size on MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature");
static_assert(offsetof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature, StartUV) == 0x000000, "Member 'MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature::StartUV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature, EndUV) == 0x000010, "Member 'MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature::EndUV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature, IsLeftMouseButton) == 0x000020, "Member 'MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature::IsLeftMouseButton' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature, IsShiftSelect) == 0x000021, "Member 'MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature::IsShiftSelect' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature, IsCtrlSelect) == 0x000022, "Member 'MinimapInternal_Icon_C_OnBoxSelect__DelegateSignature::IsCtrlSelect' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconClicked
// 0x0248 (0x0248 - 0x0000)
struct MinimapInternal_Icon_C_OnIconClicked final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0190(0x00B8)()
};
static_assert(alignof(MinimapInternal_Icon_C_OnIconClicked) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnIconClicked");
static_assert(sizeof(MinimapInternal_Icon_C_OnIconClicked) == 0x000248, "Wrong size on MinimapInternal_Icon_C_OnIconClicked");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconClicked, MyGeometry) == 0x000000, "Member 'MinimapInternal_Icon_C_OnIconClicked::MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconClicked, MouseEvent) == 0x000040, "Member 'MinimapInternal_Icon_C_OnIconClicked::MouseEvent' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconClicked, ReturnValue) == 0x0000D8, "Member 'MinimapInternal_Icon_C_OnIconClicked::ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconClicked, CallFunc_Handled_ReturnValue) == 0x000190, "Member 'MinimapInternal_Icon_C_OnIconClicked::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconDestroyed
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Icon_C_OnIconDestroyed final
{
public:
	class UMapIconComponent*                      MapIcon;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnIconDestroyed) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnIconDestroyed");
static_assert(sizeof(MinimapInternal_Icon_C_OnIconDestroyed) == 0x000008, "Wrong size on MinimapInternal_Icon_C_OnIconDestroyed");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconDestroyed, MapIcon) == 0x000000, "Member 'MinimapInternal_Icon_C_OnIconDestroyed::MapIcon' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnIconMaterialChanged
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Icon_C_OnIconMaterialChanged final
{
public:
	class UMapIconComponent*                      MapIcon;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnIconMaterialChanged) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnIconMaterialChanged");
static_assert(sizeof(MinimapInternal_Icon_C_OnIconMaterialChanged) == 0x000008, "Wrong size on MinimapInternal_Icon_C_OnIconMaterialChanged");
static_assert(offsetof(MinimapInternal_Icon_C_OnIconMaterialChanged, MapIcon) == 0x000000, "Member 'MinimapInternal_Icon_C_OnIconMaterialChanged::MapIcon' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseClick_Event_0
// 0x0001 (0x0001 - 0x0000)
struct MinimapInternal_Icon_C_OnMouseClick_Event_0 final
{
public:
	bool                                          IsLeftMouseButton;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnMouseClick_Event_0) == 0x000001, "Wrong alignment on MinimapInternal_Icon_C_OnMouseClick_Event_0");
static_assert(sizeof(MinimapInternal_Icon_C_OnMouseClick_Event_0) == 0x000001, "Wrong size on MinimapInternal_Icon_C_OnMouseClick_Event_0");
static_assert(offsetof(MinimapInternal_Icon_C_OnMouseClick_Event_0, IsLeftMouseButton) == 0x000000, "Member 'MinimapInternal_Icon_C_OnMouseClick_Event_0::IsLeftMouseButton' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct MinimapInternal_Icon_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MinimapInternal_Icon_C_OnMouseEnter) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnMouseEnter");
static_assert(sizeof(MinimapInternal_Icon_C_OnMouseEnter) == 0x0000D8, "Wrong size on MinimapInternal_Icon_C_OnMouseEnter");
static_assert(offsetof(MinimapInternal_Icon_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'MinimapInternal_Icon_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'MinimapInternal_Icon_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct MinimapInternal_Icon_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MinimapInternal_Icon_C_OnMouseLeave) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnMouseLeave");
static_assert(sizeof(MinimapInternal_Icon_C_OnMouseLeave) == 0x000098, "Wrong size on MinimapInternal_Icon_C_OnMouseLeave");
static_assert(offsetof(MinimapInternal_Icon_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'MinimapInternal_Icon_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.OnViewSizeChanged_Event_0
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Icon_C_OnViewSizeChanged_Event_0 final
{
public:
	class UMapViewComponent*                      MapView;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_OnViewSizeChanged_Event_0) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_OnViewSizeChanged_Event_0");
static_assert(sizeof(MinimapInternal_Icon_C_OnViewSizeChanged_Event_0) == 0x000008, "Wrong size on MinimapInternal_Icon_C_OnViewSizeChanged_Event_0");
static_assert(offsetof(MinimapInternal_Icon_C_OnViewSizeChanged_Event_0, MapView) == 0x000000, "Member 'MinimapInternal_Icon_C_OnViewSizeChanged_Event_0::MapView' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.Precompute
// 0x00E8 (0x00E8 - 0x0000)
struct MinimapInternal_Icon_C_Precompute final
{
public:
	double                                        SizeTypeScale;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              UVtoPixelRatio;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIconSizeUnit                                 CallFunc_GetIconSizeUnit_ReturnValue;              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377B[0x2];                                     // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewExtent_ViewExtentX;                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewExtent_ViewExtentY;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377C[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetObjectiveArrowSize_ReturnValue;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377D[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetIconSize_ReturnValue;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377E[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue_1;     // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_Precompute) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_Precompute");
static_assert(sizeof(MinimapInternal_Icon_C_Precompute) == 0x0000E8, "Wrong size on MinimapInternal_Icon_C_Precompute");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, SizeTypeScale) == 0x000000, "Member 'MinimapInternal_Icon_C_Precompute::SizeTypeScale' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, UVtoPixelRatio) == 0x000008, "Member 'MinimapInternal_Icon_C_Precompute::UVtoPixelRatio' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_BreakVector2D_X) == 0x000018, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_BreakVector2D_X_1) == 0x000028, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_BreakVector2D_Y_1) == 0x000030, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_MakeVector2D_ReturnValue) == 0x000048, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_GetIconSizeUnit_ReturnValue) == 0x000058, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_GetIconSizeUnit_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, K2Node_SwitchEnum_CmpSuccess) == 0x000059, "Member 'MinimapInternal_Icon_C_Precompute::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_GetViewExtent_ViewExtentX) == 0x00005C, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_GetViewExtent_ViewExtentX' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_GetViewExtent_ViewExtentY) == 0x000060, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_GetViewExtent_ViewExtentY' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_GetObjectiveArrowSize_ReturnValue) == 0x000070, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_GetObjectiveArrowSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_GetIconSize_ReturnValue) == 0x000090, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_GetIconSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000098, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A8, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B0, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B8, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_Vector2DFloat_ReturnValue_1) == 0x0000C0, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_Vector2DFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000D0, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x0000D8, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_Precompute, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2) == 0x0000E0, "Member 'MinimapInternal_Icon_C_Precompute::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetTooltipShown
// 0x0018 (0x0018 - 0x0000)
struct MinimapInternal_Icon_C_SetTooltipShown final
{
public:
	bool                                          bNewShown;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_377F[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMinimapInternal_Tooltip_C*             CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_SetTooltipShown) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_SetTooltipShown");
static_assert(sizeof(MinimapInternal_Icon_C_SetTooltipShown) == 0x000018, "Wrong size on MinimapInternal_Icon_C_SetTooltipShown");
static_assert(offsetof(MinimapInternal_Icon_C_SetTooltipShown, bNewShown) == 0x000000, "Member 'MinimapInternal_Icon_C_SetTooltipShown::bNewShown' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_SetTooltipShown, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'MinimapInternal_Icon_C_SetTooltipShown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_SetTooltipShown, CallFunc_Create_ReturnValue) == 0x000008, "Member 'MinimapInternal_Icon_C_SetTooltipShown::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_SetTooltipShown, CallFunc_IsValid_ReturnValue_1) == 0x000010, "Member 'MinimapInternal_Icon_C_SetTooltipShown::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_SetTooltipShown, CallFunc_IsInViewport_ReturnValue) == 0x000011, "Member 'MinimapInternal_Icon_C_SetTooltipShown::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.SetupBoxSelect
// 0x0014 (0x0014 - 0x0000)
struct MinimapInternal_Icon_C_SetupBoxSelect final
{
public:
	bool                                          bEnableBoxSelect;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3780[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BoxSelectColor;                                    // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_SetupBoxSelect) == 0x000004, "Wrong alignment on MinimapInternal_Icon_C_SetupBoxSelect");
static_assert(sizeof(MinimapInternal_Icon_C_SetupBoxSelect) == 0x000014, "Wrong size on MinimapInternal_Icon_C_SetupBoxSelect");
static_assert(offsetof(MinimapInternal_Icon_C_SetupBoxSelect, bEnableBoxSelect) == 0x000000, "Member 'MinimapInternal_Icon_C_SetupBoxSelect::bEnableBoxSelect' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_SetupBoxSelect, BoxSelectColor) == 0x000004, "Member 'MinimapInternal_Icon_C_SetupBoxSelect::BoxSelectColor' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.TickIcon
// 0x0200 (0x0200 - 0x0000)
struct MinimapInternal_Icon_C_TickIcon final
{
public:
	bool                                          IsSameLevel;                                       // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3781[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MatInst;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IconWorldLocation;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIconFogInteraction                           FogInteraction;                                    // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsHiddenInFog;                                     // 0x0029(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3782[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              RenderUV;                                          // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RenderYaw;                                         // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsRendered;                                  // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtEdge;                                          // 0x0049(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInView;                                          // 0x004A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3783[0x5];                                     // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              UV;                                                // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconCategoryVisible_ReturnValue;        // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSameBackgroundLevel_ReturnValue;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3784[0x5];                                     // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3785[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIconFogInteraction                           CallFunc_GetIconFogInteraction_ReturnValue;        // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3786[0x1];                                     // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetIconFogRevealThreshold_ReturnValue;    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMapTrackerComponent*                   CallFunc_GetMapTracker_ReturnValue;                // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFogRevealedFactor_bIsInsideFogVolume;  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3787[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFogRevealedFactor_ReturnValue;         // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EIconFogInteraction>                   K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3788[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DetectIsInView_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3789[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378A[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               K2Node_Select_Default;                             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewYaw_Yaw;                           // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesObjectiveArrowRotate_ReturnValue;     // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesIconRotate_ReturnValue;               // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsObjectiveArrowEnabled_ReturnValue;      // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378B[0x6];                                     // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_ClampIntoView_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MarkRenderedInView_ReturnValue;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378C[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewCoordinates_U;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewCoordinates_V;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetViewCoordinates_ReturnValue;           // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378D[0x3];                                     // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconVisible_ReturnValue;                // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378E[0x3];                                     // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_ClampIntoView_OuterRadiusUV_ImplicitCast; // 0x01CC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_B_ImplicitCast;         // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_RenderYaw_ImplicitCast;         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_TickIcon) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_TickIcon");
static_assert(sizeof(MinimapInternal_Icon_C_TickIcon) == 0x000200, "Wrong size on MinimapInternal_Icon_C_TickIcon");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, IsSameLevel) == 0x000000, "Member 'MinimapInternal_Icon_C_TickIcon::IsSameLevel' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, MatInst) == 0x000008, "Member 'MinimapInternal_Icon_C_TickIcon::MatInst' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, IconWorldLocation) == 0x000010, "Member 'MinimapInternal_Icon_C_TickIcon::IconWorldLocation' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, FogInteraction) == 0x000028, "Member 'MinimapInternal_Icon_C_TickIcon::FogInteraction' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, IsHiddenInFog) == 0x000029, "Member 'MinimapInternal_Icon_C_TickIcon::IsHiddenInFog' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, RenderUV) == 0x000030, "Member 'MinimapInternal_Icon_C_TickIcon::RenderUV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, RenderYaw) == 0x000040, "Member 'MinimapInternal_Icon_C_TickIcon::RenderYaw' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, Param_IsRendered) == 0x000048, "Member 'MinimapInternal_Icon_C_TickIcon::Param_IsRendered' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, IsAtEdge) == 0x000049, "Member 'MinimapInternal_Icon_C_TickIcon::IsAtEdge' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, IsInView) == 0x00004A, "Member 'MinimapInternal_Icon_C_TickIcon::IsInView' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, UV) == 0x000050, "Member 'MinimapInternal_Icon_C_TickIcon::UV' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000060, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_IsIconCategoryVisible_ReturnValue) == 0x000061, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_IsIconCategoryVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_IsSameBackgroundLevel_ReturnValue) == 0x000062, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_IsSameBackgroundLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_X) == 0x000068, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_X_1) == 0x000080, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_Y_1) == 0x000088, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000098, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetIconFogInteraction_ReturnValue) == 0x00009A, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetIconFogInteraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetIconFogRevealThreshold_ReturnValue) == 0x00009C, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetIconFogRevealThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetMapTracker_ReturnValue) == 0x0000A0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetMapTracker_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetFogRevealedFactor_bIsInsideFogVolume) == 0x0000A8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetFogRevealedFactor_bIsInsideFogVolume' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetFogRevealedFactor_ReturnValue) == 0x0000AC, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetFogRevealedFactor_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, K2Node_MakeArray_Array) == 0x0000B0, "Member 'MinimapInternal_Icon_C_TickIcon::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Array_Contains_ReturnValue) == 0x0000C1, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanOR_ReturnValue) == 0x0000C2, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue) == 0x0000C3, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x0000C8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_DetectIsInView_ReturnValue) == 0x0000D0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_DetectIsInView_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x0000E0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, Temp_bool_Variable) == 0x0000E1, "Member 'MinimapInternal_Icon_C_TickIcon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_X_2) == 0x0000E8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_Y_2) == 0x0000F0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, K2Node_Select_Default) == 0x0000F8, "Member 'MinimapInternal_Icon_C_TickIcon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000108, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_MakeVector2D_ReturnValue) == 0x000110, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x000120, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_X_3) == 0x000130, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakVector2D_Y_3) == 0x000138, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000140, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_DegAtan2_ReturnValue) == 0x000158, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakRotator_Roll) == 0x000160, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakRotator_Pitch) == 0x000164, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BreakRotator_Yaw) == 0x000168, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetViewYaw_Yaw) == 0x00016C, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetViewYaw_Yaw' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_DoesObjectiveArrowRotate_ReturnValue) == 0x000170, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_DoesObjectiveArrowRotate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_DoesIconRotate_ReturnValue) == 0x000171, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_DoesIconRotate_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000172, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x000173, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanOR_ReturnValue_1) == 0x000174, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_4) == 0x000175, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_5) == 0x000176, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_IsObjectiveArrowEnabled_ReturnValue) == 0x000177, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_IsObjectiveArrowEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000178, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_BooleanAND_ReturnValue_6) == 0x000179, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_ClampIntoView_ReturnValue) == 0x000180, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_ClampIntoView_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_MarkRenderedInView_ReturnValue) == 0x000190, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_MarkRenderedInView_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetViewCoordinates_U) == 0x000194, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetViewCoordinates_U' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetViewCoordinates_V) == 0x000198, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetViewCoordinates_V' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_GetViewCoordinates_ReturnValue) == 0x00019C, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_GetViewCoordinates_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0001A0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001B8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_IsIconVisible_ReturnValue) == 0x0001C8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_IsIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_ClampIntoView_OuterRadiusUV_ImplicitCast) == 0x0001CC, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_ClampIntoView_OuterRadiusUV_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Less_DoubleDouble_B_ImplicitCast) == 0x0001D0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Less_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0001D8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001E0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0001E4, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, K2Node_VariableSet_RenderYaw_ImplicitCast) == 0x0001E8, "Member 'MinimapInternal_Icon_C_TickIcon::K2Node_VariableSet_RenderYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0001F0, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_TickIcon, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0001F8, "Member 'MinimapInternal_Icon_C_TickIcon::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateAppearance
// 0x0001 (0x0001 - 0x0000)
struct MinimapInternal_Icon_C_UpdateAppearance final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateAppearance) == 0x000001, "Wrong alignment on MinimapInternal_Icon_C_UpdateAppearance");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateAppearance) == 0x000001, "Wrong size on MinimapInternal_Icon_C_UpdateAppearance");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateAppearance, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateAppearance::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateArrow
// 0x0028 (0x0028 - 0x0000)
struct MinimapInternal_Icon_C_UpdateArrow final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_378F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetIconTexture_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_GetObjectiveArrowTexture_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3790[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateArrow) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateArrow");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateArrow) == 0x000028, "Wrong size on MinimapInternal_Icon_C_UpdateArrow");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateArrow, Temp_bool_Variable) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateArrow::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateArrow, CallFunc_GetIconTexture_ReturnValue) == 0x000008, "Member 'MinimapInternal_Icon_C_UpdateArrow::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateArrow, CallFunc_GetObjectiveArrowTexture_ReturnValue) == 0x000010, "Member 'MinimapInternal_Icon_C_UpdateArrow::CallFunc_GetObjectiveArrowTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateArrow, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'MinimapInternal_Icon_C_UpdateArrow::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateArrow, K2Node_Select_Default) == 0x000020, "Member 'MinimapInternal_Icon_C_UpdateArrow::K2Node_Select_Default' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateDrawColor
// 0x0010 (0x0010 - 0x0000)
struct MinimapInternal_Icon_C_UpdateDrawColor final
{
public:
	struct FLinearColor                           CallFunc_GetIconDrawColor_ReturnValue;             // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateDrawColor) == 0x000004, "Wrong alignment on MinimapInternal_Icon_C_UpdateDrawColor");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateDrawColor) == 0x000010, "Wrong size on MinimapInternal_Icon_C_UpdateDrawColor");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateDrawColor, CallFunc_GetIconDrawColor_ReturnValue) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateDrawColor::CallFunc_GetIconDrawColor_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateIcon
// 0x0008 (0x0008 - 0x0000)
struct MinimapInternal_Icon_C_UpdateIcon final
{
public:
	class UTexture2D*                             CallFunc_GetIconTexture_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateIcon) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateIcon");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateIcon) == 0x000008, "Wrong size on MinimapInternal_Icon_C_UpdateIcon");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateIcon, CallFunc_GetIconTexture_ReturnValue) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateIcon::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateInteractability
// 0x0005 (0x0005 - 0x0000)
struct MinimapInternal_Icon_C_UpdateInteractability final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconInteractable_ReturnValue;           // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateInteractability) == 0x000001, "Wrong alignment on MinimapInternal_Icon_C_UpdateInteractability");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateInteractability) == 0x000005, "Wrong size on MinimapInternal_Icon_C_UpdateInteractability");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateInteractability, Temp_bool_Variable) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateInteractability::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateInteractability, Temp_byte_Variable) == 0x000001, "Member 'MinimapInternal_Icon_C_UpdateInteractability::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateInteractability, Temp_byte_Variable_1) == 0x000002, "Member 'MinimapInternal_Icon_C_UpdateInteractability::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateInteractability, CallFunc_IsIconInteractable_ReturnValue) == 0x000003, "Member 'MinimapInternal_Icon_C_UpdateInteractability::CallFunc_IsIconInteractable_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateInteractability, K2Node_Select_Default) == 0x000004, "Member 'MinimapInternal_Icon_C_UpdateInteractability::K2Node_Select_Default' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateMaterial
// 0x0048 (0x0048 - 0x0000)
struct MinimapInternal_Icon_C_UpdateMaterial final
{
public:
	class UMaterialInterface*                     ArrowMaterialUMG;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     IconMaterialUMG;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3791[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3792[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetObjectiveArrowMaterialForUMG_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     CallFunc_GetIconMaterialForUMG_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateMaterial) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateMaterial");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateMaterial) == 0x000048, "Wrong size on MinimapInternal_Icon_C_UpdateMaterial");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, ArrowMaterialUMG) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateMaterial::ArrowMaterialUMG' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, IconMaterialUMG) == 0x000008, "Member 'MinimapInternal_Icon_C_UpdateMaterial::IconMaterialUMG' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x000028, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_GetObjectiveArrowMaterialForUMG_ReturnValue) == 0x000038, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_GetObjectiveArrowMaterialForUMG_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateMaterial, CallFunc_GetIconMaterialForUMG_ReturnValue) == 0x000040, "Member 'MinimapInternal_Icon_C_UpdateMaterial::CallFunc_GetIconMaterialForUMG_ReturnValue' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateOuterCanvas
// 0x0038 (0x0038 - 0x0000)
struct MinimapInternal_Icon_C_UpdateOuterCanvas final
{
public:
	class UCanvasPanel*                           ParentCanvas;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3793[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3794[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIconFogInteraction                           CallFunc_GetIconFogInteraction_ReturnValue;        // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3795[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanel*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateOuterCanvas) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateOuterCanvas");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateOuterCanvas) == 0x000038, "Wrong size on MinimapInternal_Icon_C_UpdateOuterCanvas");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, ParentCanvas) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::ParentCanvas' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_GetParent_ReturnValue) == 0x000010, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_AddChildToCanvas_ReturnValue) == 0x000020, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000028, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_BooleanOR_ReturnValue) == 0x000029, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, Temp_bool_Variable) == 0x00002A, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_GetIconFogInteraction_ReturnValue) == 0x00002B, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_GetIconFogInteraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateOuterCanvas, K2Node_Select_Default) == 0x000030, "Member 'MinimapInternal_Icon_C_UpdateOuterCanvas::K2Node_Select_Default' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateSize
// 0x00A8 (0x00A8 - 0x0000)
struct MinimapInternal_Icon_C_UpdateSize final
{
public:
	double                                        BaseSize;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SizeTypeScale;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RotatableIconSize;                                 // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3796[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewExtent_ViewExtentX;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewExtent_ViewExtentY;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetObjectiveArrowSize_ReturnValue;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetIconSize_ReturnValue;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EIconSizeUnit                                 CallFunc_GetIconSizeUnit_ReturnValue;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3797[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BaseSize_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BaseSize_ImplicitCast_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateSize) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateSize");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateSize) == 0x0000A8, "Wrong size on MinimapInternal_Icon_C_UpdateSize");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, BaseSize) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateSize::BaseSize' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, SizeTypeScale) == 0x000008, "Member 'MinimapInternal_Icon_C_UpdateSize::SizeTypeScale' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, RotatableIconSize) == 0x000010, "Member 'MinimapInternal_Icon_C_UpdateSize::RotatableIconSize' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_BreakVector2D_X) == 0x000030, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_GetViewExtent_ViewExtentX) == 0x000048, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_GetViewExtent_ViewExtentX' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_GetViewExtent_ViewExtentY) == 0x00004C, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_GetViewExtent_ViewExtentY' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000060, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000070, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_GetObjectiveArrowSize_ReturnValue) == 0x000080, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_GetObjectiveArrowSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_GetIconSize_ReturnValue) == 0x000084, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_GetIconSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_GetIconSizeUnit_ReturnValue) == 0x000088, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_GetIconSizeUnit_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, K2Node_SwitchEnum_CmpSuccess) == 0x000089, "Member 'MinimapInternal_Icon_C_UpdateSize::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'MinimapInternal_Icon_C_UpdateSize::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, K2Node_VariableSet_BaseSize_ImplicitCast) == 0x000098, "Member 'MinimapInternal_Icon_C_UpdateSize::K2Node_VariableSet_BaseSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateSize, K2Node_VariableSet_BaseSize_ImplicitCast_1) == 0x0000A0, "Member 'MinimapInternal_Icon_C_UpdateSize::K2Node_VariableSet_BaseSize_ImplicitCast_1' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateTooltip
// 0x0060 (0x0060 - 0x0000)
struct MinimapInternal_Icon_C_UpdateTooltip final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3798[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3799[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetIconTooltipText_ReturnValue;           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379A[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x0030(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0048(0x0018)()
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateTooltip) == 0x000008, "Wrong alignment on MinimapInternal_Icon_C_UpdateTooltip");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateTooltip) == 0x000060, "Wrong size on MinimapInternal_Icon_C_UpdateTooltip");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, Temp_bool_Variable) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateTooltip::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, Temp_text_Variable) == 0x000008, "Member 'MinimapInternal_Icon_C_UpdateTooltip::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'MinimapInternal_Icon_C_UpdateTooltip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, CallFunc_GetIconTooltipText_ReturnValue) == 0x000024, "Member 'MinimapInternal_Icon_C_UpdateTooltip::CallFunc_GetIconTooltipText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, CallFunc_NotEqual_NameName_ReturnValue) == 0x00002C, "Member 'MinimapInternal_Icon_C_UpdateTooltip::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, CallFunc_Conv_NameToText_ReturnValue) == 0x000030, "Member 'MinimapInternal_Icon_C_UpdateTooltip::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateTooltip, K2Node_Select_Default) == 0x000048, "Member 'MinimapInternal_Icon_C_UpdateTooltip::K2Node_Select_Default' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateVisibility
// 0x0005 (0x0005 - 0x0000)
struct MinimapInternal_Icon_C_UpdateVisibility final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIconVisible_ReturnValue;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateVisibility) == 0x000001, "Wrong alignment on MinimapInternal_Icon_C_UpdateVisibility");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateVisibility) == 0x000005, "Wrong size on MinimapInternal_Icon_C_UpdateVisibility");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateVisibility, Temp_bool_Variable) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateVisibility, Temp_byte_Variable) == 0x000001, "Member 'MinimapInternal_Icon_C_UpdateVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateVisibility, Temp_byte_Variable_1) == 0x000002, "Member 'MinimapInternal_Icon_C_UpdateVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateVisibility, CallFunc_IsIconVisible_ReturnValue) == 0x000003, "Member 'MinimapInternal_Icon_C_UpdateVisibility::CallFunc_IsIconVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateVisibility, K2Node_Select_Default) == 0x000004, "Member 'MinimapInternal_Icon_C_UpdateVisibility::K2Node_Select_Default' has a wrong offset!");

// Function MinimapInternal_Icon.MinimapInternal_Icon_C.UpdateZOrder
// 0x0004 (0x0004 - 0x0000)
struct MinimapInternal_Icon_C_UpdateZOrder final
{
public:
	int32                                         CallFunc_GetIconZOrder_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MinimapInternal_Icon_C_UpdateZOrder) == 0x000004, "Wrong alignment on MinimapInternal_Icon_C_UpdateZOrder");
static_assert(sizeof(MinimapInternal_Icon_C_UpdateZOrder) == 0x000004, "Wrong size on MinimapInternal_Icon_C_UpdateZOrder");
static_assert(offsetof(MinimapInternal_Icon_C_UpdateZOrder, CallFunc_GetIconZOrder_ReturnValue) == 0x000000, "Member 'MinimapInternal_Icon_C_UpdateZOrder::CallFunc_GetIconZOrder_ReturnValue' has a wrong offset!");

}

