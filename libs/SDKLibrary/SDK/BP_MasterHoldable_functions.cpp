#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterHoldable

#include "Basic.hpp"

#include "BP_MasterHoldable_classes.hpp"
#include "BP_MasterHoldable_parameters.hpp"


namespace SDK
{

// Function BP_MasterHoldable.BP_MasterHoldable_C.CalculateHoldableSway
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::CalculateHoldableSway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "CalculateHoldableSway");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.CharacterFalling
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::CharacterFalling()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "CharacterFalling");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.CharacterSprinting
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Sprinting                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::CharacterSprinting(bool Sprinting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "CharacterSprinting");

	Params::BP_MasterHoldable_C_CharacterSprinting Parms{};

	Parms.Sprinting = Sprinting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.ClientNewWeapon
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::ClientNewWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "ClientNewWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.ExecuteUbergraph_BP_MasterHoldable
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::ExecuteUbergraph_BP_MasterHoldable(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "ExecuteUbergraph_BP_MasterHoldable");

	Params::BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.LeanCheck
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool ABP_MasterHoldable_C::LeanCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "LeanCheck");

	Params::BP_MasterHoldable_C_LeanCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.MulticastAttach
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::MulticastAttach()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "MulticastAttach");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.NewOwner
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_Owner                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             Param_CurrentSocket                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::NewOwner(class AActor* Param_Owner, class FName Param_CurrentSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "NewOwner");

	Params::BP_MasterHoldable_C_NewOwner Parms{};

	Parms.Param_Owner = Param_Owner;
	Parms.Param_CurrentSocket = Param_CurrentSocket;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.OnRep_CurrentSocket
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::OnRep_CurrentSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "OnRep_CurrentSocket");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.OnRep_TickEnabled
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::OnRep_TickEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "OnRep_TickEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterHoldable_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "ReceiveTick");

	Params::BP_MasterHoldable_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK Aimed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aimed                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_Aimed(bool* Aimed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK Aimed");

	Params::BP_MasterHoldable_C_SGK_Aimed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Aimed != nullptr)
		*Aimed = Parms.Aimed;
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK AttachNewAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_MasterAttachment_C*           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FS_InvItem                       InvItem                                                (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// E_AttachmentType                        AttachmentType                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_AttachNewAttachment(class ABP_MasterAttachment_C* Attachment, const struct FS_InvItem& InvItem, E_AttachmentType AttachmentType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK AttachNewAttachment");

	Params::BP_MasterHoldable_C_SGK_AttachNewAttachment Parms{};

	Parms.Attachment = Attachment;
	Parms.InvItem = std::move(InvItem);
	Parms.AttachmentType = AttachmentType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ChamberWeaponAmmo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_ChamberWeaponAmmo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ChamberWeaponAmmo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK Character
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_Character()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK Character");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientPrimaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_ClientPrimaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ClientPrimaryAction");

	Params::BP_MasterHoldable_C_SGK_ClientPrimaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientReloadChecks
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_ClientReloadChecks()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ClientReloadChecks");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_ClientSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ClientSecondaryAction");

	Params::BP_MasterHoldable_C_SGK_ClientSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientToggleBuildMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_ClientToggleBuildMenu(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ClientToggleBuildMenu");

	Params::BP_MasterHoldable_C_SGK_ClientToggleBuildMenu Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK HoldableMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Mesh                                                   (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_HoldableMesh(class UPrimitiveComponent** Mesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK HoldableMesh");

	Params::BP_MasterHoldable_C_SGK_HoldableMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK HoldableRemoved
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_HoldableRemoved()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK HoldableRemoved");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK HoldableSkeletalMesh
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMeshComponent*           SkelMeshComp                                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_HoldableSkeletalMesh(class USkeletalMeshComponent** SkelMeshComp)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK HoldableSkeletalMesh");

	Params::BP_MasterHoldable_C_SGK_HoldableSkeletalMesh Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SkelMeshComp != nullptr)
		*SkelMeshComp = Parms.SkelMeshComp;
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK MeleeCollisionToggle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    TraceOn                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_MeleeCollisionToggle(bool TraceOn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK MeleeCollisionToggle");

	Params::BP_MasterHoldable_C_SGK_MeleeCollisionToggle Parms{};

	Parms.TraceOn = TraceOn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK NewHeld
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Held                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_NewHeld(bool Held)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK NewHeld");

	Params::BP_MasterHoldable_C_SGK_NewHeld Parms{};

	Parms.Held = Held;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ResetHoldable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_ResetHoldable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ResetHoldable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ServerPrimaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_ServerPrimaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ServerPrimaryAction");

	Params::BP_MasterHoldable_C_SGK_ServerPrimaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ServerSecondaryAction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    KeyDown                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_ServerSecondaryAction(bool KeyDown)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ServerSecondaryAction");

	Params::BP_MasterHoldable_C_SGK_ServerSecondaryAction Parms{};

	Parms.KeyDown = KeyDown;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ShowNewAttachment
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_ShowNewAttachment()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ShowNewAttachment");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK SpawnAttachment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Attachment                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::SGK_SpawnAttachment(class UClass* Attachment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK SpawnAttachment");

	Params::BP_MasterHoldable_C_SGK_SpawnAttachment Parms{};

	Parms.Attachment = Attachment;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ToggleFireMode
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterHoldable_C::SGK_ToggleFireMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "SGK ToggleFireMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterHoldable.BP_MasterHoldable_C.GetLookSensitivityMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// double                                  Multiplier                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterHoldable_C::GetLookSensitivityMultiplier(double* Multiplier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterHoldable_C", "GetLookSensitivityMultiplier");

	Params::BP_MasterHoldable_C_GetLookSensitivityMultiplier Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Multiplier != nullptr)
		*Multiplier = Parms.Multiplier;
}

}

