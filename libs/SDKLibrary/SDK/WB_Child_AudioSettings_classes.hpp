#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Child_AudioSettings

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AudioMixer_structs.hpp"
#include "WB_Child_Base_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WB_Child_AudioSettings.WB_Child_AudioSettings_C
// 0x00C8 (0x03A8 - 0x02E0)
class UWB_Child_AudioSettings_C final : public UWB_Child_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WB_Child_AudioSettings_C;           // 0x02E0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWB_Button_State_C*                     Button_AudioDevice;                                // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_DialogueVolume;                             // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_MasterVolume;                               // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_State_C*                     Button_MusicOn;                                    // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_MusicVolume;                                // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Button_Slider_C*                    Button_SFX_Volume;                                 // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWB_Infofield_C*                        Info_Field;                                        // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonActionWidget*                    InputSwitchListener;                               // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VB_Buttons;                                        // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bUsingGamepad;                                     // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4657[0x3];                                     // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NewState_Language;                                 // 0x0334(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentState_Language;                             // 0x0338(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4658[0x4];                                     // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Current_Audio_MasterVol;                           // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        New_Audio_MasterVol;                               // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Audio_SFX;                                 // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        New_Audio_SFX;                                     // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Audio_Music;                               // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        New_Audio_Music;                                   // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Audio_Dialogue;                            // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        New_Audio_Dialogue;                                // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Current_MusicOn;                                   // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New_MusicOn;                                       // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4659[0x6];                                     // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAudioOutputDeviceInfo>         FoundOutputDevices;                                // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class FString>                         OutputDevicesString;                               // 0x0398(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BindPanelWidgetChildren_ButtonOnHovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BindPanelWidgetChildren_ButtonOnUnhovered(class UPanelWidget* Panel_Widget, bool Bind_Unbind, const TDelegate<void(class UCommonButtonBase* Button)>& EventToBind);
	void BndEvt__WB_Child_AudioSettings_Button_AudioDevice_K2Node_ComponentBoundEvent_0_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_AudioSettings_Button_DialogueVolume_K2Node_ComponentBoundEvent_5_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_Child_AudioSettings_Button_MasterVolume_K2Node_ComponentBoundEvent_0_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_Child_AudioSettings_Button_MusicOn_K2Node_ComponentBoundEvent_4_OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState);
	void BndEvt__WB_Child_AudioSettings_Button_MusicVolume_K2Node_ComponentBoundEvent_7_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void BndEvt__WB_Child_AudioSettings_Button_SFX_Volume_K2Node_ComponentBoundEvent_6_OnValueChanged__DelegateSignature(class UWB_Button_Slider_C* Button, double Value);
	void Construct();
	void CustomEvent_2(const struct FSwapAudioOutputResult& SwapResult);
	void CustomEvent_3(const class FString& CurrentDevice);
	void ExecuteUbergraph_WB_Child_AudioSettings(int32 EntryPoint);
	int32 GetLanguageButton_State();
	void GetMusicOffVolume(double* Value);
	void GetStateButtonInfo(class UCommonButtonBase* Button, class FText* Head, class FText* Body);
	void OnAnyButtonHovered(class UCommonButtonBase* Button);
	void OnAnyButtonUnhovered(class UCommonButtonBase* Button);
	void OnApplyChanges();
	void OnAvailableAudioOutputDevicesFound(const TArray<struct FAudioOutputDeviceInfo>& AvailableDevices);
	void OnInputMethodChanged(bool Param_bUsingGamepad);
	void OnResetDefaults();
	void OnResetDefaultsFinished();
	void SetAudioButtonValue(class UWB_Button_Slider_C* Button, float InValue);
	void SetInfoFieldInfo(const class FText& Head, const class FText& Body);
	void SetupButtons();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WB_Child_AudioSettings_C">();
	}
	static class UWB_Child_AudioSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWB_Child_AudioSettings_C>();
	}
};
static_assert(alignof(UWB_Child_AudioSettings_C) == 0x000008, "Wrong alignment on UWB_Child_AudioSettings_C");
static_assert(sizeof(UWB_Child_AudioSettings_C) == 0x0003A8, "Wrong size on UWB_Child_AudioSettings_C");
static_assert(offsetof(UWB_Child_AudioSettings_C, UberGraphFrame_WB_Child_AudioSettings_C) == 0x0002E0, "Member 'UWB_Child_AudioSettings_C::UberGraphFrame_WB_Child_AudioSettings_C' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_AudioDevice) == 0x0002E8, "Member 'UWB_Child_AudioSettings_C::Button_AudioDevice' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_DialogueVolume) == 0x0002F0, "Member 'UWB_Child_AudioSettings_C::Button_DialogueVolume' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_MasterVolume) == 0x0002F8, "Member 'UWB_Child_AudioSettings_C::Button_MasterVolume' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_MusicOn) == 0x000300, "Member 'UWB_Child_AudioSettings_C::Button_MusicOn' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_MusicVolume) == 0x000308, "Member 'UWB_Child_AudioSettings_C::Button_MusicVolume' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Button_SFX_Volume) == 0x000310, "Member 'UWB_Child_AudioSettings_C::Button_SFX_Volume' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Info_Field) == 0x000318, "Member 'UWB_Child_AudioSettings_C::Info_Field' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, InputSwitchListener) == 0x000320, "Member 'UWB_Child_AudioSettings_C::InputSwitchListener' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, VB_Buttons) == 0x000328, "Member 'UWB_Child_AudioSettings_C::VB_Buttons' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, bUsingGamepad) == 0x000330, "Member 'UWB_Child_AudioSettings_C::bUsingGamepad' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, NewState_Language) == 0x000334, "Member 'UWB_Child_AudioSettings_C::NewState_Language' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, CurrentState_Language) == 0x000338, "Member 'UWB_Child_AudioSettings_C::CurrentState_Language' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Current_Audio_MasterVol) == 0x000340, "Member 'UWB_Child_AudioSettings_C::Current_Audio_MasterVol' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, New_Audio_MasterVol) == 0x000348, "Member 'UWB_Child_AudioSettings_C::New_Audio_MasterVol' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Current_Audio_SFX) == 0x000350, "Member 'UWB_Child_AudioSettings_C::Current_Audio_SFX' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, New_Audio_SFX) == 0x000358, "Member 'UWB_Child_AudioSettings_C::New_Audio_SFX' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Current_Audio_Music) == 0x000360, "Member 'UWB_Child_AudioSettings_C::Current_Audio_Music' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, New_Audio_Music) == 0x000368, "Member 'UWB_Child_AudioSettings_C::New_Audio_Music' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Current_Audio_Dialogue) == 0x000370, "Member 'UWB_Child_AudioSettings_C::Current_Audio_Dialogue' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, New_Audio_Dialogue) == 0x000378, "Member 'UWB_Child_AudioSettings_C::New_Audio_Dialogue' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, Current_MusicOn) == 0x000380, "Member 'UWB_Child_AudioSettings_C::Current_MusicOn' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, New_MusicOn) == 0x000381, "Member 'UWB_Child_AudioSettings_C::New_MusicOn' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, FoundOutputDevices) == 0x000388, "Member 'UWB_Child_AudioSettings_C::FoundOutputDevices' has a wrong offset!");
static_assert(offsetof(UWB_Child_AudioSettings_C, OutputDevicesString) == 0x000398, "Member 'UWB_Child_AudioSettings_C::OutputDevicesString' has a wrong offset!");

}

