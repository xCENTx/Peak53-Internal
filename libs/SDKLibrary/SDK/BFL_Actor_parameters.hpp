#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Actor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BFL_Actor.BFL_Actor_C.StopHitStop
// 0x0010 (0x0010 - 0x0000)
struct BFL_Actor_C_StopHitStop final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_StopHitStop) == 0x000008, "Wrong alignment on BFL_Actor_C_StopHitStop");
static_assert(sizeof(BFL_Actor_C_StopHitStop) == 0x000010, "Wrong size on BFL_Actor_C_StopHitStop");
static_assert(offsetof(BFL_Actor_C_StopHitStop, Target) == 0x000000, "Member 'BFL_Actor_C_StopHitStop::Target' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_StopHitStop, __WorldContext) == 0x000008, "Member 'BFL_Actor_C_StopHitStop::__WorldContext' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.StartHitStop
// 0x0028 (0x0028 - 0x0000)
struct BFL_Actor_C_StartHitStop final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_StartHitStop) == 0x000008, "Wrong alignment on BFL_Actor_C_StartHitStop");
static_assert(sizeof(BFL_Actor_C_StartHitStop) == 0x000028, "Wrong size on BFL_Actor_C_StartHitStop");
static_assert(offsetof(BFL_Actor_C_StartHitStop, Actor) == 0x000000, "Member 'BFL_Actor_C_StartHitStop::Actor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_StartHitStop, Duration) == 0x000008, "Member 'BFL_Actor_C_StartHitStop::Duration' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_StartHitStop, __WorldContext) == 0x000010, "Member 'BFL_Actor_C_StartHitStop::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_StartHitStop, CallFunc_K2_SetTimer_ReturnValue) == 0x000018, "Member 'BFL_Actor_C_StartHitStop::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_StartHitStop, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000020, "Member 'BFL_Actor_C_StartHitStop::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.SetActorTransformToNewTransform
// 0x0260 (0x0260 - 0x0000)
struct BFL_Actor_C_SetActorTransformToNewTransform final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Transform;                                         // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LocationTolerance;                                 // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58D9[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0080(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DA[0xF];                                     // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DB[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x0100(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DC[0x2];                                     // 0x024A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TInterpTo_InterpSpeed_ImplicitCast;       // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TInterpTo_DeltaTime_ImplicitCast;         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_SetActorTransformToNewTransform) == 0x000010, "Wrong alignment on BFL_Actor_C_SetActorTransformToNewTransform");
static_assert(sizeof(BFL_Actor_C_SetActorTransformToNewTransform) == 0x000260, "Wrong size on BFL_Actor_C_SetActorTransformToNewTransform");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, TargetActor) == 0x000000, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::TargetActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, InterpSpeed) == 0x000008, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, Transform) == 0x000010, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::Transform' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, LocationTolerance) == 0x000070, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::LocationTolerance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, __WorldContext) == 0x000078, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, ReturnValue) == 0x000080, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000F0, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x0000F8, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_TInterpTo_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000160, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000248, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_IsValid_ReturnValue) == 0x000249, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_TInterpTo_InterpSpeed_ImplicitCast) == 0x00024C, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_TInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewTransform, CallFunc_TInterpTo_DeltaTime_ImplicitCast) == 0x000250, "Member 'BFL_Actor_C_SetActorTransformToNewTransform::CallFunc_TInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.SetActorTransformToNewActorLocation
// 0x0270 (0x0270 - 0x0000)
struct BFL_Actor_C_SetActorTransformToNewActorLocation final
{
public:
	class USceneComponent*                        Target_componet;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 TargetActor;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DD[0xF];                                     // 0x0021(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DE[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58DF[0xF];                                     // 0x0101(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TInterpTo_ReturnValue;                    // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorTransform_SweepHitResult;      // 0x0170(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorTransform_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E0[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_TInterpTo_InterpSpeed_ImplicitCast;       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TInterpTo_DeltaTime_ImplicitCast;         // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_SetActorTransformToNewActorLocation) == 0x000010, "Wrong alignment on BFL_Actor_C_SetActorTransformToNewActorLocation");
static_assert(sizeof(BFL_Actor_C_SetActorTransformToNewActorLocation) == 0x000270, "Wrong size on BFL_Actor_C_SetActorTransformToNewActorLocation");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, Target_componet) == 0x000000, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::Target_componet' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, TargetActor) == 0x000008, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::TargetActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, InterpSpeed) == 0x000010, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, __WorldContext) == 0x000018, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, ReturnValue) == 0x000020, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000090, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_TInterpTo_ReturnValue) == 0x000110, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_TInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_K2_SetActorTransform_SweepHitResult) == 0x000170, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_K2_SetActorTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_K2_SetActorTransform_ReturnValue) == 0x000258, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_K2_SetActorTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_TInterpTo_InterpSpeed_ImplicitCast) == 0x00025C, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_TInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_SetActorTransformToNewActorLocation, CallFunc_TInterpTo_DeltaTime_ImplicitCast) == 0x000260, "Member 'BFL_Actor_C_SetActorTransformToNewActorLocation::CallFunc_TInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.RandomColor
// 0x0028 (0x0028 - 0x0000)
struct BFL_Actor_C_RandomColor final
{
public:
	class UObject*                                __WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 Color;                                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E1[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RandomInteger_ReturnValue_1;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue_2;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E2[0x2];                                     // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_MakeStruct_Color;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_RandomColor) == 0x000008, "Wrong alignment on BFL_Actor_C_RandomColor");
static_assert(sizeof(BFL_Actor_C_RandomColor) == 0x000028, "Wrong size on BFL_Actor_C_RandomColor");
static_assert(offsetof(BFL_Actor_C_RandomColor, __WorldContext) == 0x000000, "Member 'BFL_Actor_C_RandomColor::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, Color) == 0x000008, "Member 'BFL_Actor_C_RandomColor::Color' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00000C, "Member 'BFL_Actor_C_RandomColor::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_RandomInteger_ReturnValue) == 0x000010, "Member 'BFL_Actor_C_RandomColor::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_Conv_IntToByte_ReturnValue) == 0x000014, "Member 'BFL_Actor_C_RandomColor::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000015, "Member 'BFL_Actor_C_RandomColor::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_RandomInteger_ReturnValue_1) == 0x000018, "Member 'BFL_Actor_C_RandomColor::CallFunc_RandomInteger_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_RandomInteger_ReturnValue_2) == 0x00001C, "Member 'BFL_Actor_C_RandomColor::CallFunc_RandomInteger_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000020, "Member 'BFL_Actor_C_RandomColor::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000021, "Member 'BFL_Actor_C_RandomColor::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_RandomColor, K2Node_MakeStruct_Color) == 0x000024, "Member 'BFL_Actor_C_RandomColor::K2Node_MakeStruct_Color' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.IsRightOfActor?
// 0x00B8 (0x00B8 - 0x0000)
struct BFL_Actor_C_IsRightOfActor_ final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOnRightSide_;                                    // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E3[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ReturnAngle;                                       // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_IsRightOfActor_) == 0x000008, "Wrong alignment on BFL_Actor_C_IsRightOfActor_");
static_assert(sizeof(BFL_Actor_C_IsRightOfActor_) == 0x0000B8, "Wrong size on BFL_Actor_C_IsRightOfActor_");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, Actor) == 0x000000, "Member 'BFL_Actor_C_IsRightOfActor_::Actor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, OtherActor) == 0x000008, "Member 'BFL_Actor_C_IsRightOfActor_::OtherActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, __WorldContext) == 0x000010, "Member 'BFL_Actor_C_IsRightOfActor_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, IsOnRightSide_) == 0x000018, "Member 'BFL_Actor_C_IsRightOfActor_::IsOnRightSide_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, ReturnAngle) == 0x000020, "Member 'BFL_Actor_C_IsRightOfActor_::ReturnAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_GetActorRightVector_ReturnValue) == 0x000028, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000058, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000070, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_Normal_ReturnValue) == 0x000088, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000A0, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_DegAcos_ReturnValue) == 0x0000A8, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsRightOfActor_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BFL_Actor_C_IsRightOfActor_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.IsInFrontOfActor?
// 0x00A0 (0x00A0 - 0x0000)
struct BFL_Actor_C_IsInFrontOfActor_ final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        AcceptanceAngle;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E4[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInfront_;                                        // 0x0028(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E5[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           DebugColor;                                        // 0x002C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return;                                            // 0x003C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E6[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetHorizontalDotProductTo_ReturnValue;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDotProductTo_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E7[0x6];                                     // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_IsInFrontOfActor_) == 0x000008, "Wrong alignment on BFL_Actor_C_IsInFrontOfActor_");
static_assert(sizeof(BFL_Actor_C_IsInFrontOfActor_) == 0x0000A0, "Wrong size on BFL_Actor_C_IsInFrontOfActor_");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, Actor) == 0x000000, "Member 'BFL_Actor_C_IsInFrontOfActor_::Actor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, OtherActor) == 0x000008, "Member 'BFL_Actor_C_IsInFrontOfActor_::OtherActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, AcceptanceAngle) == 0x000010, "Member 'BFL_Actor_C_IsInFrontOfActor_::AcceptanceAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, UseXY_) == 0x000018, "Member 'BFL_Actor_C_IsInFrontOfActor_::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, Debug) == 0x000019, "Member 'BFL_Actor_C_IsInFrontOfActor_::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, __WorldContext) == 0x000020, "Member 'BFL_Actor_C_IsInFrontOfActor_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, IsInfront_) == 0x000028, "Member 'BFL_Actor_C_IsInFrontOfActor_::IsInfront_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, DebugColor) == 0x00002C, "Member 'BFL_Actor_C_IsInFrontOfActor_::DebugColor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, Return) == 0x00003C, "Member 'BFL_Actor_C_IsInFrontOfActor_::Return' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_GetHorizontalDotProductTo_ReturnValue) == 0x000050, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_GetHorizontalDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_GetDotProductTo_ReturnValue) == 0x000054, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_GetDotProductTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000068, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000078, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000088, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000089, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_IsInFrontOfActor_, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000098, "Member 'BFL_Actor_C_IsInFrontOfActor_::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetSpeed
// 0x0070 (0x0070 - 0x0000)
struct BFL_Actor_C_GetSpeed final
{
public:
	struct FVector                                VelocityThisFrame;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                VelocityLastFrame;                                 // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Speed;                                             // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetSpeed) == 0x000008, "Wrong alignment on BFL_Actor_C_GetSpeed");
static_assert(sizeof(BFL_Actor_C_GetSpeed) == 0x000070, "Wrong size on BFL_Actor_C_GetSpeed");
static_assert(offsetof(BFL_Actor_C_GetSpeed, VelocityThisFrame) == 0x000000, "Member 'BFL_Actor_C_GetSpeed::VelocityThisFrame' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, VelocityLastFrame) == 0x000018, "Member 'BFL_Actor_C_GetSpeed::VelocityLastFrame' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, DeltaTime) == 0x000030, "Member 'BFL_Actor_C_GetSpeed::DeltaTime' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, __WorldContext) == 0x000038, "Member 'BFL_Actor_C_GetSpeed::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, Speed) == 0x000040, "Member 'BFL_Actor_C_GetSpeed::Speed' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BFL_Actor_C_GetSpeed::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, CallFunc_VSize_ReturnValue) == 0x000060, "Member 'BFL_Actor_C_GetSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetSpeed, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'BFL_Actor_C_GetSpeed::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetRandomPointOnSphere
// 0x00F0 (0x00F0 - 0x0000)
struct BFL_Actor_C_GetRandomPointOnSphere final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E8[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CirclePoint;                                       // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnPoint;                                       // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E9[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x00C4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color_2;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetRandomPointOnSphere) == 0x000008, "Wrong alignment on BFL_Actor_C_GetRandomPointOnSphere");
static_assert(sizeof(BFL_Actor_C_GetRandomPointOnSphere) == 0x0000F0, "Wrong size on BFL_Actor_C_GetRandomPointOnSphere");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, Origin) == 0x000000, "Member 'BFL_Actor_C_GetRandomPointOnSphere::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, Radius) == 0x000018, "Member 'BFL_Actor_C_GetRandomPointOnSphere::Radius' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, Debug) == 0x000020, "Member 'BFL_Actor_C_GetRandomPointOnSphere::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, __WorldContext) == 0x000028, "Member 'BFL_Actor_C_GetRandomPointOnSphere::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CirclePoint) == 0x000030, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CirclePoint' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, ReturnPoint) == 0x000048, "Member 'BFL_Actor_C_GetRandomPointOnSphere::ReturnPoint' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_RandomUnitVector_ReturnValue) == 0x000060, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_RandomColor_Color) == 0x000078, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_RandomColor_Color' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000098, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_RandomColor_Color_1) == 0x0000C0, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_RandomColor_Color_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x0000C4, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_RandomColor_Color_2) == 0x0000D4, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_RandomColor_Color_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x0000D8, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnSphere, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x0000E8, "Member 'BFL_Actor_C_GetRandomPointOnSphere::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetRandomPointOnCircle
// 0x0178 (0x0178 - 0x0000)
struct BFL_Actor_C_GetRandomPointOnCircle final
{
public:
	struct FVector                                Origin;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Radius;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                YAxis;                                             // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ZAxis;                                             // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CirclePoint;                                       // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnPoint;                                       // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color;                        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color_1;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_1;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FColor                                 CallFunc_RandomColor_Color_2;                      // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_ColorToLinearColor_ReturnValue_2;    // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EB[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugCircle_Radius_ImplicitCast;      // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetRandomPointOnCircle) == 0x000008, "Wrong alignment on BFL_Actor_C_GetRandomPointOnCircle");
static_assert(sizeof(BFL_Actor_C_GetRandomPointOnCircle) == 0x000178, "Wrong size on BFL_Actor_C_GetRandomPointOnCircle");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, Origin) == 0x000000, "Member 'BFL_Actor_C_GetRandomPointOnCircle::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, Radius) == 0x000018, "Member 'BFL_Actor_C_GetRandomPointOnCircle::Radius' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, Debug) == 0x000020, "Member 'BFL_Actor_C_GetRandomPointOnCircle::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, YAxis) == 0x000028, "Member 'BFL_Actor_C_GetRandomPointOnCircle::YAxis' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, ZAxis) == 0x000040, "Member 'BFL_Actor_C_GetRandomPointOnCircle::ZAxis' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, __WorldContext) == 0x000058, "Member 'BFL_Actor_C_GetRandomPointOnCircle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CirclePoint) == 0x000060, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CirclePoint' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, ReturnPoint) == 0x000078, "Member 'BFL_Actor_C_GetRandomPointOnCircle::ReturnPoint' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_RandomColor_Color) == 0x000090, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_RandomColor_Color' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_RandomColor_Color_1) == 0x000094, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_RandomColor_Color_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Conv_ColorToLinearColor_ReturnValue) == 0x000098, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Conv_ColorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Conv_ColorToLinearColor_ReturnValue_1) == 0x0000A8, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Conv_ColorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_RandomColor_Color_2) == 0x0000B8, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_RandomColor_Color_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Conv_ColorToLinearColor_ReturnValue_2) == 0x0000BC, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Conv_ColorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000D0, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0000D8, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000F8, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Add_VectorVector_ReturnValue) == 0x000110, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Normal_ReturnValue) == 0x000128, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000140, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000158, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetRandomPointOnCircle, CallFunc_DrawDebugCircle_Radius_ImplicitCast) == 0x000170, "Member 'BFL_Actor_C_GetRandomPointOnCircle::CallFunc_DrawDebugCircle_Radius_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetFurthestInstance
// 0x0180 (0x0180 - 0x0000)
struct BFL_Actor_C_GetFurthestInstance final
{
public:
	TArray<class AActor*>                         ActorArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Origin;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Squared_;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EC[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FurthestActor;                                     // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FurthestDist;                                      // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDist;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58ED[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EE[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58EF[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F0[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F1[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F2[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetFurthestInstance) == 0x000008, "Wrong alignment on BFL_Actor_C_GetFurthestInstance");
static_assert(sizeof(BFL_Actor_C_GetFurthestInstance) == 0x000180, "Wrong size on BFL_Actor_C_GetFurthestInstance");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, ActorArray) == 0x000000, "Member 'BFL_Actor_C_GetFurthestInstance::ActorArray' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Origin) == 0x000010, "Member 'BFL_Actor_C_GetFurthestInstance::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, UseXY_) == 0x000028, "Member 'BFL_Actor_C_GetFurthestInstance::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Squared_) == 0x000029, "Member 'BFL_Actor_C_GetFurthestInstance::Squared_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Debug) == 0x00002A, "Member 'BFL_Actor_C_GetFurthestInstance::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, __WorldContext) == 0x000030, "Member 'BFL_Actor_C_GetFurthestInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, FurthestActor) == 0x000038, "Member 'BFL_Actor_C_GetFurthestInstance::FurthestActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Distance) == 0x000040, "Member 'BFL_Actor_C_GetFurthestInstance::Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, FurthestDist) == 0x000048, "Member 'BFL_Actor_C_GetFurthestInstance::FurthestDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CurrentDist) == 0x000050, "Member 'BFL_Actor_C_GetFurthestInstance::CurrentDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, ReturnActor) == 0x000058, "Member 'BFL_Actor_C_GetFurthestInstance::ReturnActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BFL_Actor_C_GetFurthestInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BFL_Actor_C_GetFurthestInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Array_Get_Item) == 0x000078, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BFL_Actor_C_GetFurthestInstance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C0, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_VSize_ReturnValue) == 0x0000F8, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_VSizeSquared_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000108, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000110, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_VSizeXYSquared_ReturnValue) == 0x000128, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_VSizeXY_ReturnValue) == 0x000130, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, Temp_int_Array_Index_Variable_1) == 0x000138, "Member 'BFL_Actor_C_GetFurthestInstance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000148, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000160, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestInstance, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000168, "Member 'BFL_Actor_C_GetFurthestInstance::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetFurthestActorOfClass
// 0x0188 (0x0188 - 0x0000)
struct BFL_Actor_C_GetFurthestActorOfClass final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Squared_;                                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F3[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 FurthestActor;                                     // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FurthestDist;                                      // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDist;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F4[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F5[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F6[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F7[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F8[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58F9[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetFurthestActorOfClass) == 0x000008, "Wrong alignment on BFL_Actor_C_GetFurthestActorOfClass");
static_assert(sizeof(BFL_Actor_C_GetFurthestActorOfClass) == 0x000188, "Wrong size on BFL_Actor_C_GetFurthestActorOfClass");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, ActorClass) == 0x000000, "Member 'BFL_Actor_C_GetFurthestActorOfClass::ActorClass' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Origin) == 0x000008, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, UseXY_) == 0x000020, "Member 'BFL_Actor_C_GetFurthestActorOfClass::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Squared_) == 0x000021, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Squared_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Debug) == 0x000022, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, __WorldContext) == 0x000028, "Member 'BFL_Actor_C_GetFurthestActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, FurthestActor) == 0x000030, "Member 'BFL_Actor_C_GetFurthestActorOfClass::FurthestActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Distance) == 0x000038, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, FurthestDist) == 0x000040, "Member 'BFL_Actor_C_GetFurthestActorOfClass::FurthestDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CurrentDist) == 0x000048, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CurrentDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, ReturnActor) == 0x000050, "Member 'BFL_Actor_C_GetFurthestActorOfClass::ReturnActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Array_Get_Item) == 0x000080, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C8, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E8, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_VSize_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_VSizeSquared_ReturnValue) == 0x000108, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000110, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000118, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_VSizeXYSquared_ReturnValue) == 0x000130, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_VSizeXY_ReturnValue) == 0x000138, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, Temp_int_Array_Index_Variable_1) == 0x000140, "Member 'BFL_Actor_C_GetFurthestActorOfClass::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000150, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000168, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetFurthestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000170, "Member 'BFL_Actor_C_GetFurthestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetDistanceToPoint
// 0x00D8 (0x00D8 - 0x0000)
struct BFL_Actor_C_GetDistanceToPoint final
{
public:
	struct FVector                                Source;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DistanceSquared_;                                  // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FA[0x5];                                     // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DebugDrawDuration;                                 // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnDist;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugLine_Duration_ImplicitCast;      // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugString_Duration_ImplicitCast;    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetDistanceToPoint) == 0x000008, "Wrong alignment on BFL_Actor_C_GetDistanceToPoint");
static_assert(sizeof(BFL_Actor_C_GetDistanceToPoint) == 0x0000D8, "Wrong size on BFL_Actor_C_GetDistanceToPoint");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, Source) == 0x000000, "Member 'BFL_Actor_C_GetDistanceToPoint::Source' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, Target) == 0x000018, "Member 'BFL_Actor_C_GetDistanceToPoint::Target' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, UseXY_) == 0x000030, "Member 'BFL_Actor_C_GetDistanceToPoint::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, DistanceSquared_) == 0x000031, "Member 'BFL_Actor_C_GetDistanceToPoint::DistanceSquared_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, Debug) == 0x000032, "Member 'BFL_Actor_C_GetDistanceToPoint::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, DebugDrawDuration) == 0x000038, "Member 'BFL_Actor_C_GetDistanceToPoint::DebugDrawDuration' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, __WorldContext) == 0x000040, "Member 'BFL_Actor_C_GetDistanceToPoint::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, Distance) == 0x000048, "Member 'BFL_Actor_C_GetDistanceToPoint::Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, ReturnDist) == 0x000050, "Member 'BFL_Actor_C_GetDistanceToPoint::ReturnDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000058, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000068, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000080, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_VSizeSquared_ReturnValue) == 0x000098, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_VSize_ReturnValue) == 0x0000A0, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_VSizeXYSquared_ReturnValue) == 0x0000A8, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_VSizeXY_ReturnValue) == 0x0000B0, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_DrawDebugLine_Duration_ImplicitCast) == 0x0000D0, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_DrawDebugLine_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetDistanceToPoint, CallFunc_DrawDebugString_Duration_ImplicitCast) == 0x0000D4, "Member 'BFL_Actor_C_GetDistanceToPoint::CallFunc_DrawDebugString_Duration_ImplicitCast' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetClosestInstance
// 0x0180 (0x0180 - 0x0000)
struct BFL_Actor_C_GetClosestInstance final
{
public:
	TArray<class AActor*>                         ActorArray;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Origin;                                            // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Squared_;                                          // 0x0029(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x002A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FB[0x5];                                     // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ClosestActor;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0040(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestDist;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDist;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FC[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FD[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FE[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58FF[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5900[0x4];                                     // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5901[0x7];                                     // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetClosestInstance) == 0x000008, "Wrong alignment on BFL_Actor_C_GetClosestInstance");
static_assert(sizeof(BFL_Actor_C_GetClosestInstance) == 0x000180, "Wrong size on BFL_Actor_C_GetClosestInstance");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, ActorArray) == 0x000000, "Member 'BFL_Actor_C_GetClosestInstance::ActorArray' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Origin) == 0x000010, "Member 'BFL_Actor_C_GetClosestInstance::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, UseXY_) == 0x000028, "Member 'BFL_Actor_C_GetClosestInstance::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Squared_) == 0x000029, "Member 'BFL_Actor_C_GetClosestInstance::Squared_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Debug) == 0x00002A, "Member 'BFL_Actor_C_GetClosestInstance::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, __WorldContext) == 0x000030, "Member 'BFL_Actor_C_GetClosestInstance::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, ClosestActor) == 0x000038, "Member 'BFL_Actor_C_GetClosestInstance::ClosestActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Distance) == 0x000040, "Member 'BFL_Actor_C_GetClosestInstance::Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, ClosestDist) == 0x000048, "Member 'BFL_Actor_C_GetClosestInstance::ClosestDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CurrentDist) == 0x000050, "Member 'BFL_Actor_C_GetClosestInstance::CurrentDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, ReturnActor) == 0x000058, "Member 'BFL_Actor_C_GetClosestInstance::ReturnActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BFL_Actor_C_GetClosestInstance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BFL_Actor_C_GetClosestInstance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Array_Get_Item) == 0x000078, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000080, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Array_Length_ReturnValue_1) == 0x0000B0, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Temp_int_Loop_Counter_Variable_1) == 0x0000B4, "Member 'BFL_Actor_C_GetClosestInstance::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C0, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E0, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_VSize_ReturnValue) == 0x0000F8, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_VSizeSquared_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000108, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000110, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_VSizeXYSquared_ReturnValue) == 0x000128, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_VSizeXY_ReturnValue) == 0x000130, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, Temp_int_Array_Index_Variable_1) == 0x000138, "Member 'BFL_Actor_C_GetClosestInstance::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_Array_Get_Item_1) == 0x000140, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000148, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000160, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestInstance, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000168, "Member 'BFL_Actor_C_GetClosestInstance::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetClosestActorOfClass
// 0x0188 (0x0188 - 0x0000)
struct BFL_Actor_C_GetClosestActorOfClass final
{
public:
	class UClass*                                 ActorClass;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Origin;                                            // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseXY_;                                            // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Squared_;                                          // 0x0021(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0022(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5902[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ClosestActor;                                      // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Distance;                                          // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ClosestDist;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentDist;                                       // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ReturnActor;                                       // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5903[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5904[0x3];                                     // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5905[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeSquared_ReturnValue;                 // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5906[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXYSquared_ReturnValue;               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5907[0x4];                                     // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5908[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetClosestActorOfClass) == 0x000008, "Wrong alignment on BFL_Actor_C_GetClosestActorOfClass");
static_assert(sizeof(BFL_Actor_C_GetClosestActorOfClass) == 0x000188, "Wrong size on BFL_Actor_C_GetClosestActorOfClass");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, ActorClass) == 0x000000, "Member 'BFL_Actor_C_GetClosestActorOfClass::ActorClass' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Origin) == 0x000008, "Member 'BFL_Actor_C_GetClosestActorOfClass::Origin' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, UseXY_) == 0x000020, "Member 'BFL_Actor_C_GetClosestActorOfClass::UseXY_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Squared_) == 0x000021, "Member 'BFL_Actor_C_GetClosestActorOfClass::Squared_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Debug) == 0x000022, "Member 'BFL_Actor_C_GetClosestActorOfClass::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, __WorldContext) == 0x000028, "Member 'BFL_Actor_C_GetClosestActorOfClass::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, ClosestActor) == 0x000030, "Member 'BFL_Actor_C_GetClosestActorOfClass::ClosestActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Distance) == 0x000038, "Member 'BFL_Actor_C_GetClosestActorOfClass::Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, ClosestDist) == 0x000040, "Member 'BFL_Actor_C_GetClosestActorOfClass::ClosestDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CurrentDist) == 0x000048, "Member 'BFL_Actor_C_GetClosestActorOfClass::CurrentDist' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, ReturnActor) == 0x000050, "Member 'BFL_Actor_C_GetClosestActorOfClass::ReturnActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'BFL_Actor_C_GetClosestActorOfClass::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BFL_Actor_C_GetClosestActorOfClass::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Array_Get_Item) == 0x000080, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000A0, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Temp_int_Loop_Counter_Variable_1) == 0x0000B8, "Member 'BFL_Actor_C_GetClosestActorOfClass::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000C8, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E8, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_VSize_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_VSizeSquared_ReturnValue) == 0x000108, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000110, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000118, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_VSizeXYSquared_ReturnValue) == 0x000130, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_VSizeXYSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_VSizeXY_ReturnValue) == 0x000138, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, Temp_int_Array_Index_Variable_1) == 0x000140, "Member 'BFL_Actor_C_GetClosestActorOfClass::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000150, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000168, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetClosestActorOfClass, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000170, "Member 'BFL_Actor_C_GetClosestActorOfClass::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.GetAngleBetweenActors
// 0x0118 (0x0118 - 0x0000)
struct BFL_Actor_C_GetAngleBetweenActors final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Degrees;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Debug;                                             // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5909[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnAngle;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Acos_ReturnValue;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_GetAngleBetweenActors) == 0x000008, "Wrong alignment on BFL_Actor_C_GetAngleBetweenActors");
static_assert(sizeof(BFL_Actor_C_GetAngleBetweenActors) == 0x000118, "Wrong size on BFL_Actor_C_GetAngleBetweenActors");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, Actor) == 0x000000, "Member 'BFL_Actor_C_GetAngleBetweenActors::Actor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, OtherActor) == 0x000008, "Member 'BFL_Actor_C_GetAngleBetweenActors::OtherActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, Degrees) == 0x000010, "Member 'BFL_Actor_C_GetAngleBetweenActors::Degrees' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, Debug) == 0x000011, "Member 'BFL_Actor_C_GetAngleBetweenActors::Debug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, __WorldContext) == 0x000018, "Member 'BFL_Actor_C_GetAngleBetweenActors::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, Angle) == 0x000020, "Member 'BFL_Actor_C_GetAngleBetweenActors::Angle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, ReturnAngle) == 0x000028, "Member 'BFL_Actor_C_GetAngleBetweenActors::ReturnAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_GetActorForwardVector_ReturnValue) == 0x000048, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000078, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000090, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C0, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D8, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000F0, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Acos_ReturnValue) == 0x0000F8, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Acos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_DegAcos_ReturnValue) == 0x000100, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_GetAngleBetweenActors, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000108, "Member 'BFL_Actor_C_GetAngleBetweenActors::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.CheckInFront
// 0x00E0 (0x00E0 - 0x0000)
struct BFL_Actor_C_CheckInFront final
{
public:
	struct FVector                                Source;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                SourceForward;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Target;                                            // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowDebug;                                         // 0x0048(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590A[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxAngle;                                          // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0058(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInfront_;                                        // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Infront_;                                          // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590B[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0064(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590C[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590D[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_CheckInFront) == 0x000008, "Wrong alignment on BFL_Actor_C_CheckInFront");
static_assert(sizeof(BFL_Actor_C_CheckInFront) == 0x0000E0, "Wrong size on BFL_Actor_C_CheckInFront");
static_assert(offsetof(BFL_Actor_C_CheckInFront, Source) == 0x000000, "Member 'BFL_Actor_C_CheckInFront::Source' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, SourceForward) == 0x000018, "Member 'BFL_Actor_C_CheckInFront::SourceForward' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, Target) == 0x000030, "Member 'BFL_Actor_C_CheckInFront::Target' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, ShowDebug) == 0x000048, "Member 'BFL_Actor_C_CheckInFront::ShowDebug' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, MaxAngle) == 0x000050, "Member 'BFL_Actor_C_CheckInFront::MaxAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, __WorldContext) == 0x000058, "Member 'BFL_Actor_C_CheckInFront::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, IsInfront_) == 0x000060, "Member 'BFL_Actor_C_CheckInFront::IsInfront_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, Infront_) == 0x000061, "Member 'BFL_Actor_C_CheckInFront::Infront_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, Color) == 0x000064, "Member 'BFL_Actor_C_CheckInFront::Color' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_FClamp_ReturnValue) == 0x000078, "Member 'BFL_Actor_C_CheckInFront::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Normal_ReturnValue) == 0x0000A0, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000B8, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_DegAcos_ReturnValue) == 0x0000C0, "Member 'BFL_Actor_C_CheckInFront::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CheckInFront, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000D0, "Member 'BFL_Actor_C_CheckInFront::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.CanSeeActor?
// 0x0400 (0x0400 - 0x0000)
struct BFL_Actor_C_CanSeeActor_ final
{
public:
	struct FVector                                EyeLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Target;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSee_;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590E[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_590F[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0058(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5910[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5911[0x4];                                     // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5912[0x7];                                     // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0238(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5913[0x1];                                     // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5914[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0378(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x03A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5915[0x4];                                     // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_CanSeeActor_) == 0x000008, "Wrong alignment on BFL_Actor_C_CanSeeActor_");
static_assert(sizeof(BFL_Actor_C_CanSeeActor_) == 0x000400, "Wrong size on BFL_Actor_C_CanSeeActor_");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, EyeLocation) == 0x000000, "Member 'BFL_Actor_C_CanSeeActor_::EyeLocation' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, Target) == 0x000018, "Member 'BFL_Actor_C_CanSeeActor_::Target' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, ActorsToIgnore) == 0x000020, "Member 'BFL_Actor_C_CanSeeActor_::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, __WorldContext) == 0x000030, "Member 'BFL_Actor_C_CanSeeActor_::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CanSee_) == 0x000038, "Member 'BFL_Actor_C_CanSeeActor_::CanSee_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, Temp_object_Variable) == 0x000040, "Member 'BFL_Actor_C_CanSeeActor_::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_LineTraceSingle_OutHit) == 0x000058, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_LineTraceSingle_ReturnValue) == 0x000140, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_Greater_IntInt_ReturnValue) == 0x000141, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_bBlockingHit) == 0x000142, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_bInitialOverlap) == 0x000143, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Time) == 0x000144, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Distance) == 0x000148, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ImpactPoint) == 0x000168, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Normal) == 0x000180, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ImpactNormal) == 0x000198, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_PhysMat) == 0x0001B0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitActor) == 0x0001B8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitComponent) == 0x0001C0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitBoneName) == 0x0001C8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_BoneName) == 0x0001D0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitItem) == 0x0001D8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ElementIndex) == 0x0001DC, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_FaceIndex) == 0x0001E0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_TraceStart) == 0x0001E8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_TraceEnd) == 0x000200, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000218, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000220, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_LineTraceSingle_OutHit_1) == 0x000238, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000320, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000321, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000322, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Time_1) == 0x000324, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Distance_1) == 0x000328, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Location_1) == 0x000330, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000348, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_Normal_1) == 0x000360, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000378, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_PhysMat_1) == 0x000390, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitActor_1) == 0x000398, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitComponent_1) == 0x0003A0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitBoneName_1) == 0x0003A8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_BoneName_1) == 0x0003B0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_HitItem_1) == 0x0003B8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_ElementIndex_1) == 0x0003BC, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_FaceIndex_1) == 0x0003C0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_TraceStart_1) == 0x0003C8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_BreakHitResult_TraceEnd_1) == 0x0003E0, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_CanSeeActor_, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0003F8, "Member 'BFL_Actor_C_CanSeeActor_::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BFL_Actor.BFL_Actor_C.AddToAngle
// 0x0068 (0x0068 - 0x0000)
struct BFL_Actor_C_AddToAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NewDegrees;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Degrees_;                                          // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5916[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        NewAngle;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnAngle;                                       // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegreesToRadians_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RadiansToDegrees_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5917[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Actor_C_AddToAngle) == 0x000008, "Wrong alignment on BFL_Actor_C_AddToAngle");
static_assert(sizeof(BFL_Actor_C_AddToAngle) == 0x000068, "Wrong size on BFL_Actor_C_AddToAngle");
static_assert(offsetof(BFL_Actor_C_AddToAngle, Angle) == 0x000000, "Member 'BFL_Actor_C_AddToAngle::Angle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, NewDegrees) == 0x000008, "Member 'BFL_Actor_C_AddToAngle::NewDegrees' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, Degrees_) == 0x000010, "Member 'BFL_Actor_C_AddToAngle::Degrees_' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, __WorldContext) == 0x000018, "Member 'BFL_Actor_C_AddToAngle::__WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, NewAngle) == 0x000020, "Member 'BFL_Actor_C_AddToAngle::NewAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, ReturnAngle) == 0x000028, "Member 'BFL_Actor_C_AddToAngle::ReturnAngle' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_DegreesToRadians_ReturnValue) == 0x000030, "Member 'BFL_Actor_C_AddToAngle::CallFunc_DegreesToRadians_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_RadiansToDegrees_ReturnValue) == 0x000040, "Member 'BFL_Actor_C_AddToAngle::CallFunc_RadiansToDegrees_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000051, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Actor_C_AddToAngle, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'BFL_Actor_C_AddToAngle::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

}

