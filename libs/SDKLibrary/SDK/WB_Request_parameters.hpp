#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Request

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "S_RequestOptions_structs.hpp"
#include "Engine_structs.hpp"
#include "CommonUI_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Request.WB_Request_C.Anim_Fade
// 0x0030 (0x0030 - 0x0000)
struct WB_Request_C_Anim_Fade final
{
public:
	double                                        PlaybackSpeed;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Forward;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49CF[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D0[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_Anim_Fade) == 0x000008, "Wrong alignment on WB_Request_C_Anim_Fade");
static_assert(sizeof(WB_Request_C_Anim_Fade) == 0x000030, "Wrong size on WB_Request_C_Anim_Fade");
static_assert(offsetof(WB_Request_C_Anim_Fade, PlaybackSpeed) == 0x000000, "Member 'WB_Request_C_Anim_Fade::PlaybackSpeed' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Forward) == 0x000008, "Member 'WB_Request_C_Anim_Fade::Forward' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_bool_Variable) == 0x000009, "Member 'WB_Request_C_Anim_Fade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_byte_Variable) == 0x00000A, "Member 'WB_Request_C_Anim_Fade::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_byte_Variable_1) == 0x00000B, "Member 'WB_Request_C_Anim_Fade::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_bool_Variable_1) == 0x00000C, "Member 'WB_Request_C_Anim_Fade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, K2Node_Select_Default) == 0x00000D, "Member 'WB_Request_C_Anim_Fade::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_int_Variable) == 0x000010, "Member 'WB_Request_C_Anim_Fade::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, Temp_int_Variable_1) == 0x000014, "Member 'WB_Request_C_Anim_Fade::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, K2Node_Select_Default_1) == 0x000018, "Member 'WB_Request_C_Anim_Fade::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WB_Request_C_Anim_Fade::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_Anim_Fade, CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast) == 0x000028, "Member 'WB_Request_C_Anim_Fade::CallFunc_PlayAnimation_PlaybackSpeed_ImplicitCast' has a wrong offset!");

// Function WB_Request.WB_Request_C.BP_OnHandleBackAction
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_C_BP_OnHandleBackAction final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_BP_OnHandleBackAction) == 0x000001, "Wrong alignment on WB_Request_C_BP_OnHandleBackAction");
static_assert(sizeof(WB_Request_C_BP_OnHandleBackAction) == 0x000001, "Wrong size on WB_Request_C_BP_OnHandleBackAction");
static_assert(offsetof(WB_Request_C_BP_OnHandleBackAction, ReturnValue) == 0x000000, "Member 'WB_Request_C_BP_OnHandleBackAction::ReturnValue' has a wrong offset!");

// Function WB_Request.WB_Request_C.ExecuteUbergraph_WB_Request
// 0x01C0 (0x01C0 - 0x0000)
struct WB_Request_C_ExecuteUbergraph_WB_Request final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D1[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D2[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool Confirmed)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D3[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UCommonButtonBase* Button)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D4[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D5[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RequestOptions                      CallFunc_Array_Get_Item;                           // 0x0048(0x0028)(HasGetValueTypeHash)
	class FText                                   CallFunc_FindText_ReturnValue;                     // 0x0070(0x0018)()
	bool                                          CallFunc_ValidateDataTableRow_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D6[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColorByType_ReturnValue;         // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D7[0x3];                                     // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x00A0(0x0014)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D8[0x3];                                     // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCommonButtonBase*                      K2Node_CustomEvent_Button;                         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateDataTableRow_ReturnValue_1;       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Confirmed;                      // 0x00C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49D9[0x4];                                     // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DA[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49DB[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Quick_Button_C*                     CallFunc_Create_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHorizontalBoxSlot*                     CallFunc_AddToHorizontalBox_ReturnValue;           // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle;              // 0x00F8(0x0010)(NoDestructor)
	struct FS_RequestOptions                      K2Node_MakeStruct_S_RequestOptions;                // 0x0108(0x0028)(HasGetValueTypeHash)
	struct FDataTableRowHandle                    K2Node_MakeStruct_DataTableRowHandle_1;            // 0x0130(0x0010)(NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DC[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_RequestOptions                      K2Node_MakeStruct_S_RequestOptions_1;              // 0x0148(0x0028)(HasGetValueTypeHash)
	TArray<struct FS_RequestOptions>              K2Node_MakeArray_Array;                            // 0x0170(0x0010)(ReferenceParm)
	TArray<struct FS_RequestOptions>              K2Node_MakeArray_Array_1;                          // 0x0180(0x0010)(ReferenceParm)
	TArray<struct FS_RequestOptions>              K2Node_Select_Default_1;                           // 0x0190(0x0010)(ReferenceParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x01A0(0x0014)()
	float                                         K2Node_MakeStruct_Left_ImplicitCast;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Right_ImplicitCast;              // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_ExecuteUbergraph_WB_Request) == 0x000008, "Wrong alignment on WB_Request_C_ExecuteUbergraph_WB_Request");
static_assert(sizeof(WB_Request_C_ExecuteUbergraph_WB_Request) == 0x0001C0, "Wrong size on WB_Request_C_ExecuteUbergraph_WB_Request");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, EntryPoint) == 0x000000, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_Variable) == 0x000004, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_Has_Been_Initd_Variable) == 0x00000C, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_IsClosed_Variable) == 0x000020, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_Array_Get_Item) == 0x000048, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_FindText_ReturnValue) == 0x000070, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_FindText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_ValidateDataTableRow_ReturnValue) == 0x000088, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_ValidateDataTableRow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_Variable_1) == 0x000089, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_GetGlobalColorByType_ReturnValue) == 0x00008C, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_GetGlobalColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_Has_Been_Initd_Variable_1) == 0x00009C, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_SlateColor) == 0x0000A0, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_Event_IsDesignTime) == 0x0000B4, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_CustomEvent_Button) == 0x0000B8, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_CustomEvent_Button' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_ValidateDataTableRow_ReturnValue_1) == 0x0000C0, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_ValidateDataTableRow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C1, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_Select_Default) == 0x0000C2, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_CustomEvent_Confirmed) == 0x0000C3, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_CustomEvent_Confirmed' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_MakeLiteralDouble_ReturnValue) == 0x0000C8, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_Variable_2) == 0x0000D0, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_Margin) == 0x0000D4, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_Create_ReturnValue) == 0x0000E8, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, CallFunc_AddToHorizontalBox_ReturnValue) == 0x0000F0, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::CallFunc_AddToHorizontalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_DataTableRowHandle) == 0x0000F8, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_S_RequestOptions) == 0x000108, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_S_RequestOptions' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_DataTableRowHandle_1) == 0x000130, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_DataTableRowHandle_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, Temp_bool_IsClosed_Variable_1) == 0x000140, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_S_RequestOptions_1) == 0x000148, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_S_RequestOptions_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeArray_Array) == 0x000170, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeArray_Array_1) == 0x000180, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_Select_Default_1) == 0x000190, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_SlateColor_1) == 0x0001A0, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_Left_ImplicitCast) == 0x0001B4, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_Left_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_Request_C_ExecuteUbergraph_WB_Request, K2Node_MakeStruct_Right_ImplicitCast) == 0x0001B8, "Member 'WB_Request_C_ExecuteUbergraph_WB_Request::K2Node_MakeStruct_Right_ImplicitCast' has a wrong offset!");

// Function WB_Request.WB_Request_C.FindText
// 0x03D0 (0x03D0 - 0x0000)
struct WB_Request_C_FindText final
{
public:
	class FText                                   TextOverride;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FDataTableRowHandle                    DataTableRowHandle;                                // 0x0018(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	class FText                                   ReturnValue;                                       // 0x0028(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DD[0xE];                                     // 0x0042(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCommonInputActionDataBase             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0360)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49DE[0x7];                                     // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x03B8(0x0018)()
};
static_assert(alignof(WB_Request_C_FindText) == 0x000010, "Wrong alignment on WB_Request_C_FindText");
static_assert(sizeof(WB_Request_C_FindText) == 0x0003D0, "Wrong size on WB_Request_C_FindText");
static_assert(offsetof(WB_Request_C_FindText, TextOverride) == 0x000000, "Member 'WB_Request_C_FindText::TextOverride' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, DataTableRowHandle) == 0x000018, "Member 'WB_Request_C_FindText::DataTableRowHandle' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, ReturnValue) == 0x000028, "Member 'WB_Request_C_FindText::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, Temp_bool_Variable) == 0x000040, "Member 'WB_Request_C_FindText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, CallFunc_TextIsEmpty_ReturnValue) == 0x000041, "Member 'WB_Request_C_FindText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'WB_Request_C_FindText::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003B0, "Member 'WB_Request_C_FindText::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_FindText, K2Node_Select_Default) == 0x0003B8, "Member 'WB_Request_C_FindText::K2Node_Select_Default' has a wrong offset!");

// Function WB_Request.WB_Request_C.OnButtonClicked
// 0x0008 (0x0008 - 0x0000)
struct WB_Request_C_OnButtonClicked final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_OnButtonClicked) == 0x000008, "Wrong alignment on WB_Request_C_OnButtonClicked");
static_assert(sizeof(WB_Request_C_OnButtonClicked) == 0x000008, "Wrong size on WB_Request_C_OnButtonClicked");
static_assert(offsetof(WB_Request_C_OnButtonClicked, Button) == 0x000000, "Member 'WB_Request_C_OnButtonClicked::Button' has a wrong offset!");

// Function WB_Request.WB_Request_C.OnPreviewKeyDown
// 0x0210 (0x0210 - 0x0000)
struct WB_Request_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0040(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0080(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0138(0x0018)(HasGetValueTypeHash)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0150(0x00B8)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue_1;          // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x020A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on WB_Request_C_OnPreviewKeyDown");
static_assert(sizeof(WB_Request_C_OnPreviewKeyDown) == 0x000210, "Wrong size on WB_Request_C_OnPreviewKeyDown");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'WB_Request_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, InKeyEvent) == 0x000040, "Member 'WB_Request_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, ReturnValue) == 0x000080, "Member 'WB_Request_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, CallFunc_GetKey_ReturnValue) == 0x000138, "Member 'WB_Request_C_OnPreviewKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000150, "Member 'WB_Request_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000208, "Member 'WB_Request_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue_1) == 0x000209, "Member 'WB_Request_C_OnPreviewKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Request_C_OnPreviewKeyDown, CallFunc_BooleanOR_ReturnValue) == 0x00020A, "Member 'WB_Request_C_OnPreviewKeyDown::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function WB_Request.WB_Request_C.OnUserReaction__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_C_OnUserReaction__DelegateSignature final
{
public:
	bool                                          Confirmed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_OnUserReaction__DelegateSignature) == 0x000001, "Wrong alignment on WB_Request_C_OnUserReaction__DelegateSignature");
static_assert(sizeof(WB_Request_C_OnUserReaction__DelegateSignature) == 0x000001, "Wrong size on WB_Request_C_OnUserReaction__DelegateSignature");
static_assert(offsetof(WB_Request_C_OnUserReaction__DelegateSignature, Confirmed) == 0x000000, "Member 'WB_Request_C_OnUserReaction__DelegateSignature::Confirmed' has a wrong offset!");

// Function WB_Request.WB_Request_C.OnUserReaction_Event
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_C_OnUserReaction_Event final
{
public:
	bool                                          Confirmed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_OnUserReaction_Event) == 0x000001, "Wrong alignment on WB_Request_C_OnUserReaction_Event");
static_assert(sizeof(WB_Request_C_OnUserReaction_Event) == 0x000001, "Wrong size on WB_Request_C_OnUserReaction_Event");
static_assert(offsetof(WB_Request_C_OnUserReaction_Event, Confirmed) == 0x000000, "Member 'WB_Request_C_OnUserReaction_Event::Confirmed' has a wrong offset!");

// Function WB_Request.WB_Request_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Request_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Request_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Request_C_PreConstruct");
static_assert(sizeof(WB_Request_C_PreConstruct) == 0x000001, "Wrong size on WB_Request_C_PreConstruct");
static_assert(offsetof(WB_Request_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Request_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

