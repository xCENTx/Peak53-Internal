#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TimerWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function TimerWidget.TimerWidget_C.CheckFFA
// 0x0020 (0x0020 - 0x0000)
struct TimerWidget_C_CheckFFA final
{
public:
	bool                                          FFA_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3270[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimerWidget_C_CheckFFA) == 0x000008, "Wrong alignment on TimerWidget_C_CheckFFA");
static_assert(sizeof(TimerWidget_C_CheckFFA) == 0x000020, "Wrong size on TimerWidget_C_CheckFFA");
static_assert(offsetof(TimerWidget_C_CheckFFA, FFA_) == 0x000000, "Member 'TimerWidget_C_CheckFFA::FFA_' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_CheckFFA, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000008, "Member 'TimerWidget_C_CheckFFA::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_CheckFFA, CallFunc_Contains_ReturnValue) == 0x000018, "Member 'TimerWidget_C_CheckFFA::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function TimerWidget.TimerWidget_C.ExecuteUbergraph_TimerWidget
// 0x0050 (0x0050 - 0x0000)
struct TimerWidget_C_ExecuteUbergraph_TimerWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3271[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3272[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AGameManager_C*>                 CallFunc_GetAllActorsOfClass_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3273[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameManager_C*                         CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(TimerWidget_C_ExecuteUbergraph_TimerWidget) == 0x000008, "Wrong alignment on TimerWidget_C_ExecuteUbergraph_TimerWidget");
static_assert(sizeof(TimerWidget_C_ExecuteUbergraph_TimerWidget) == 0x000050, "Wrong size on TimerWidget_C_ExecuteUbergraph_TimerWidget");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, EntryPoint) == 0x000000, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, K2Node_DynamicCast_AsPeak_53Game_State) == 0x000010, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, Temp_bool_True_if_break_was_hit_Variable) == 0x000019, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_GetAllActorsOfClass_OutActors) == 0x000028, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_Array_Get_Item) == 0x000040, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_ExecuteUbergraph_TimerWidget, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'TimerWidget_C_ExecuteUbergraph_TimerWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function TimerWidget.TimerWidget_C.Get_JumpIcon_Brush
// 0x00D0 (0x00D0 - 0x0000)
struct TimerWidget_C_Get_JumpIcon_Brush final
{
public:
	struct FSlateBrush                            ReturnValue;                                       // 0x0000(0x00D0)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(TimerWidget_C_Get_JumpIcon_Brush) == 0x000010, "Wrong alignment on TimerWidget_C_Get_JumpIcon_Brush");
static_assert(sizeof(TimerWidget_C_Get_JumpIcon_Brush) == 0x0000D0, "Wrong size on TimerWidget_C_Get_JumpIcon_Brush");
static_assert(offsetof(TimerWidget_C_Get_JumpIcon_Brush, ReturnValue) == 0x000000, "Member 'TimerWidget_C_Get_JumpIcon_Brush::ReturnValue' has a wrong offset!");

// Function TimerWidget.TimerWidget_C.TimerText
// 0x0140 (0x0140 - 0x0000)
struct TimerWidget_C_TimerText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFFA_FFA_;                            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3274[0x5];                                     // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3275[0x6];                                     // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3276[0x6];                                     // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0100(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0128(0x0018)()
};
static_assert(alignof(TimerWidget_C_TimerText) == 0x000008, "Wrong alignment on TimerWidget_C_TimerText");
static_assert(sizeof(TimerWidget_C_TimerText) == 0x000140, "Wrong size on TimerWidget_C_TimerText");
static_assert(offsetof(TimerWidget_C_TimerText, ReturnValue) == 0x000000, "Member 'TimerWidget_C_TimerText::ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, Temp_bool_Variable) == 0x000018, "Member 'TimerWidget_C_TimerText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, Temp_bool_Variable_1) == 0x000019, "Member 'TimerWidget_C_TimerText::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_CheckFFA_FFA_) == 0x00001A, "Member 'TimerWidget_C_TimerText::CallFunc_CheckFFA_FFA_' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000030, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'TimerWidget_C_TimerText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Greater_IntInt_ReturnValue) == 0x000041, "Member 'TimerWidget_C_TimerText::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000050, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'TimerWidget_C_TimerText::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000060, "Member 'TimerWidget_C_TimerText::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'TimerWidget_C_TimerText::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_FFloor_ReturnValue) == 0x000070, "Member 'TimerWidget_C_TimerText::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_FFloor_ReturnValue_1) == 0x000074, "Member 'TimerWidget_C_TimerText::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000078, "Member 'TimerWidget_C_TimerText::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000079, "Member 'TimerWidget_C_TimerText::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_IntToString_ReturnValue) == 0x000080, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000090, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, K2Node_Select_Default) == 0x0000C0, "Member 'TimerWidget_C_TimerText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, K2Node_Select_Default_1) == 0x0000D0, "Member 'TimerWidget_C_TimerText::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E0, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F0, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_StringToText_ReturnValue) == 0x000100, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000118, "Member 'TimerWidget_C_TimerText::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(TimerWidget_C_TimerText, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000128, "Member 'TimerWidget_C_TimerText::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

}

