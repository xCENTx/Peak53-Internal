#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInventory

#include "Basic.hpp"

#include "S_OtherInvSaves_structs.hpp"
#include "S_DurabilityDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "S_EquipmentSlot_structs.hpp"
#include "S_StartingWeaponItem_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "E_EquipmentType_structs.hpp"
#include "S_StartingEquipmentItem_structs.hpp"
#include "S_InvSaveSlot_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "E_WeaponSlots_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_DecayDetails_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_EquipmentSlotID_structs.hpp"
#include "S_WeaponSlotID_structs.hpp"
#include "S_WeaponSlot_structs.hpp"
#include "S_EquipmentDetails_structs.hpp"
#include "S_EquipmentInvSave_structs.hpp"
#include "S_EquipmentSlotSave_structs.hpp"
#include "S_WeaponSlotSave_structs.hpp"
#include "S_LevelSaveData_structs.hpp"
#include "E_DamageType_structs.hpp"
#include "E_Hitbox_structs.hpp"
#include "S_StorageSave_structs.hpp"
#include "S_NotificationDetails_structs.hpp"


namespace SDK::Params
{

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.AddUserToEquipmentItems
// 0x0138 (0x0138 - 0x0000)
struct BP_EquipmentInventory_C_AddUserToEquipmentItems final
{
public:
	class UBP_PlayerInventory_C*                  Player_Inv;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          Temp_struct_Variable;                              // 0x0010(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5248[0x2];                                     // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5249[0x5];                                     // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0078(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 Temp_byte_Variable;                                // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524A[0x2];                                     // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524B[0x4];                                     // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          K2Node_Select_Default;                             // 0x00D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524C[0x2];                                     // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_AddUserToEquipmentItems) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_AddUserToEquipmentItems");
static_assert(sizeof(BP_EquipmentInventory_C_AddUserToEquipmentItems) == 0x000138, "Wrong size on BP_EquipmentInventory_C_AddUserToEquipmentItems");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, Player_Inv) == 0x000000, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::Player_Inv' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_MakeLiteralInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, Temp_struct_Variable) == 0x000010, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, Temp_int_Variable) == 0x000060, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Conv_IntToByte_ReturnValue) == 0x000064, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_GetValidValue_ReturnValue) == 0x000065, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, Temp_int_Variable_1) == 0x00006C, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000070, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_GetValidValue_ReturnValue_1) == 0x000071, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000072, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000078, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, Temp_byte_Variable) == 0x0000C5, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x0000C8, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, K2Node_Select_Default) == 0x0000D0, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000120, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000124, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, CallFunc_IsValid_ReturnValue_1) == 0x000125, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000128, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AddUserToEquipmentItems, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_EquipmentInventory_C_AddUserToEquipmentItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.AllEquipmentActors
// 0x0098 (0x0098 - 0x0000)
struct BP_EquipmentInventory_C_AllEquipmentActors final
{
public:
	E_EquipmentType                               IgnoreSlot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524D[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_MasterClothingAttchment_C*>  Actors;                                            // 0x0008(0x0010)(Parm, OutParm)
	TArray<class ABP_MasterClothingAttchment_C*>  ActorsL;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524E[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_524F[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0038(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5250[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_AllEquipmentActors) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_AllEquipmentActors");
static_assert(sizeof(BP_EquipmentInventory_C_AllEquipmentActors) == 0x000098, "Wrong size on BP_EquipmentInventory_C_AllEquipmentActors");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, IgnoreSlot) == 0x000000, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::IgnoreSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, Actors) == 0x000008, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::Actors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, ActorsL) == 0x000018, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::ActorsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, Temp_int_Variable) == 0x000028, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_GetValidValue_ReturnValue) == 0x00002D, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000080, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_IsValid_ReturnValue) == 0x000081, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_Array_AddUnique_ReturnValue) == 0x000084, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_MakeLiteralInt_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_EquipmentInventory_C_AllEquipmentActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.AllEquipmentItems
// 0x0098 (0x0098 - 0x0000)
struct BP_EquipmentInventory_C_AllEquipmentItems final
{
public:
	E_EquipmentType                               IgnoreSlot;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5251[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvItem>                     Items;                                             // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvItem>                     ActorsL;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, ContainsInstancedReference)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5252[0x2];                                     // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5253[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0038(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5254[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_AllEquipmentItems) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_AllEquipmentItems");
static_assert(sizeof(BP_EquipmentInventory_C_AllEquipmentItems) == 0x000098, "Wrong size on BP_EquipmentInventory_C_AllEquipmentItems");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, IgnoreSlot) == 0x000000, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::IgnoreSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, Items) == 0x000008, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::Items' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, ActorsL) == 0x000018, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::ActorsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, Temp_int_Variable) == 0x000028, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_Conv_IntToByte_ReturnValue) == 0x00002C, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_GetValidValue_ReturnValue) == 0x00002D, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_MakeLiteralInt_ReturnValue) == 0x000084, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_Array_Add_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllEquipmentItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'BP_EquipmentInventory_C_AllEquipmentItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.AllWeaponActors
// 0x0090 (0x0090 - 0x0000)
struct BP_EquipmentInventory_C_AllWeaponActors final
{
public:
	TArray<class AActor*>                         Actors;                                            // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         ActorsL;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5255[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5256[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0030(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5257[0x2];                                     // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_AllWeaponActors) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_AllWeaponActors");
static_assert(sizeof(BP_EquipmentInventory_C_AllWeaponActors) == 0x000090, "Wrong size on BP_EquipmentInventory_C_AllWeaponActors");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, Actors) == 0x000000, "Member 'BP_EquipmentInventory_C_AllWeaponActors::Actors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, ActorsL) == 0x000010, "Member 'BP_EquipmentInventory_C_AllWeaponActors::ActorsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, Temp_int_Variable) == 0x000020, "Member 'BP_EquipmentInventory_C_AllWeaponActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_GetValidValue_ReturnValue) == 0x000025, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_MakeLiteralInt_ReturnValue) == 0x000080, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x000084, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000089, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_AllWeaponActors, CallFunc_Array_AddUnique_ReturnValue) == 0x00008C, "Member 'BP_EquipmentInventory_C_AllWeaponActors::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ApplyRandomEquipment
// 0x0060 (0x0060 - 0x0000)
struct BP_EquipmentInventory_C_ApplyRandomEquipment final
{
public:
	TArray<struct FDataTableRowHandle>            TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_EquipmentType                               EquipmentType;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5258[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexL;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5259[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingEquipmentItem               K2Node_MakeStruct_S_StartingEquipmentItem;         // 0x0038(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ApplyRandomEquipment) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ApplyRandomEquipment");
static_assert(sizeof(BP_EquipmentInventory_C_ApplyRandomEquipment) == 0x000060, "Wrong size on BP_EquipmentInventory_C_ApplyRandomEquipment");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, TargetArray) == 0x000000, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::TargetArray' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, EquipmentType) == 0x000010, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::EquipmentType' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, IndexL) == 0x000014, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::IndexL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, K2Node_MakeStruct_S_StartingEquipmentItem) == 0x000038, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::K2Node_MakeStruct_S_StartingEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Array_Length_ReturnValue_1) == 0x000054, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomEquipment, CallFunc_RandomIntegerInRange_ReturnValue) == 0x00005C, "Member 'BP_EquipmentInventory_C_ApplyRandomEquipment::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ApplyRandomWeapons
// 0x0068 (0x0068 - 0x0000)
struct BP_EquipmentInventory_C_ApplyRandomWeapons final
{
public:
	TArray<struct FS_StartingWeaponItem>          TargetArray;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	E_WeaponSlots                                 WeaponSlot;                                        // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525B[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexL;                                            // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525C[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingWeaponItem                  CallFunc_Array_Get_Item;                           // 0x0020(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525D[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingWeaponItem                  K2Node_MakeStruct_S_StartingWeaponItem;            // 0x0040(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ApplyRandomWeapons) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ApplyRandomWeapons");
static_assert(sizeof(BP_EquipmentInventory_C_ApplyRandomWeapons) == 0x000068, "Wrong size on BP_EquipmentInventory_C_ApplyRandomWeapons");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, TargetArray) == 0x000000, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::TargetArray' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, WeaponSlot) == 0x000010, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::WeaponSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, IndexL) == 0x000014, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::IndexL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, K2Node_MakeStruct_S_StartingWeaponItem) == 0x000040, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::K2Node_MakeStruct_S_StartingWeaponItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Array_Add_ReturnValue) == 0x000058, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ApplyRandomWeapons, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000064, "Member 'BP_EquipmentInventory_C_ApplyRandomWeapons::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ArmourDamageReduction
// 0x03D8 (0x03D8 - 0x0000)
struct BP_EquipmentInventory_C_ArmourDamageReduction final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525E[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         FinalDamage;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               ArrayElementL;                                     // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_525F[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         DamageReductionL;                                  // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               EquipmentTypeL;                                    // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5260[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5261[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5262[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5263[0x3];                                     // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0038(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5264[0x6];                                     // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0088(0x0170)(HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5265[0x3];                                     // 0x01FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5266[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_1;        // 0x0210(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull_1;            // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1; // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5267[0x6];                                     // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1; // 0x0260(0x0170)(HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               CallFunc_Map_Find_Value_2;                         // 0x03D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x03D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ArmourDamageReduction) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ArmourDamageReduction");
static_assert(sizeof(BP_EquipmentInventory_C_ArmourDamageReduction) == 0x0003D8, "Wrong size on BP_EquipmentInventory_C_ArmourDamageReduction");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, Damage) == 0x000000, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::Damage' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, DamageType) == 0x000004, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::DamageType' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, HitBox) == 0x000005, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::HitBox' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, FinalDamage) == 0x000008, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::FinalDamage' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, ArrayElementL) == 0x00000C, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, DamageReductionL) == 0x000010, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::DamageReductionL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, EquipmentTypeL) == 0x000014, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::EquipmentTypeL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, Temp_int_Variable) == 0x000018, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_MakeLiteralInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_GetValidValue_ReturnValue) == 0x000028, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000030, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Greater_IntInt_ReturnValue) == 0x000034, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_CheckEquipmentSlot_SlotFull) == 0x000080, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000081, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000088, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_Value) == 0x0001F8, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_ReturnValue) == 0x0001FC, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Add_IntInt_ReturnValue_1) == 0x000200, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000204, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000208, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SelectEquipmentSlot_ReturnValue_1) == 0x000210, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SelectEquipmentSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_CheckEquipmentSlot_SlotFull_1) == 0x000258, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_CheckEquipmentSlot_SlotFull_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1) == 0x000259, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1) == 0x000260, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_Value_1) == 0x0003D0, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_ReturnValue_1) == 0x0003D4, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_Value_2) == 0x0003D5, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ArmourDamageReduction, CallFunc_Map_Find_ReturnValue_2) == 0x0003D6, "Member 'BP_EquipmentInventory_C_ArmourDamageReduction::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.CheckEquipmentSlot
// 0x08F0 (0x08F0 - 0x0000)
struct BP_EquipmentInventory_C_CheckEquipmentSlot final
{
public:
	E_EquipmentType                               EquipmentType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SlotFull;                                          // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5268[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0008(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5269[0xF];                                     // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_CheckEquipmentSlot) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_CheckEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_CheckEquipmentSlot) == 0x0008F0, "Wrong size on BP_EquipmentInventory_C_CheckEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_CheckEquipmentSlot, EquipmentType) == 0x000000, "Member 'BP_EquipmentInventory_C_CheckEquipmentSlot::EquipmentType' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckEquipmentSlot, SlotFull) == 0x000001, "Member 'BP_EquipmentInventory_C_CheckEquipmentSlot::SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckEquipmentSlot, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_CheckEquipmentSlot::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckEquipmentSlot, CallFunc_SGK_ItemDetails_ItemFound) == 0x000050, "Member 'BP_EquipmentInventory_C_CheckEquipmentSlot::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckEquipmentSlot, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000060, "Member 'BP_EquipmentInventory_C_CheckEquipmentSlot::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.CheckIfCanEquip
// 0x01D8 (0x01D8 - 0x0000)
struct BP_EquipmentInventory_C_CheckIfCanEquip final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CanEquip;                                          // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               FreeSlot;                                          // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               ArrayElementL;                                     // 0x0032(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               FreeEquipmentTypeL;                                // 0x0033(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FreeSlotL;                                         // 0x0034(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526A[0x1];                                     // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0038(0x0170)(HasGetValueTypeHash)
	TArray<E_EquipmentType>                       CallFunc_Set_ToArray_Result;                       // 0x01A8(0x0010)(ReferenceParm)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526B[0x3];                                     // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               CallFunc_Array_Get_Item;                           // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526C[0x1];                                     // 0x01CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_CheckIfCanEquip) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_CheckIfCanEquip");
static_assert(sizeof(BP_EquipmentInventory_C_CheckIfCanEquip) == 0x0001D8, "Wrong size on BP_EquipmentInventory_C_CheckIfCanEquip");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, InvItem) == 0x000000, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CanEquip) == 0x000030, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CanEquip' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, FreeSlot) == 0x000031, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::FreeSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, ArrayElementL) == 0x000032, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, FreeEquipmentTypeL) == 0x000033, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::FreeEquipmentTypeL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, FreeSlotL) == 0x000034, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::FreeSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, Temp_bool_True_if_break_was_hit_Variable) == 0x000035, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000036, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000038, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Set_ToArray_Result) == 0x0001A8, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Not_PreBool_ReturnValue) == 0x0001B8, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Array_Length_ReturnValue) == 0x0001BC, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, Temp_int_Array_Index_Variable) == 0x0001C0, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, Temp_int_Loop_Counter_Variable) == 0x0001C4, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001C9, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Less_IntInt_ReturnValue) == 0x0001CA, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_BooleanAND_ReturnValue) == 0x0001D0, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_CheckIfCanEquip, CallFunc_CheckEquipmentSlot_SlotFull) == 0x0001D1, "Member 'BP_EquipmentInventory_C_CheckIfCanEquip::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.DamageEquipment
// 0x01D8 (0x01D8 - 0x0000)
struct BP_EquipmentInventory_C_DamageEquipment final
{
public:
	int32                                         Damage;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               EquipmentSlotL;                                    // 0x0006(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526D[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0008(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526E[0x6];                                     // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0058(0x0170)(HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               CallFunc_Map_Find_Value_1;                         // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_526F[0x1];                                     // 0x01CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DecreaseEquipmentDurability_DecreaseAmount_ImplicitCast; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_DamageEquipment) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_DamageEquipment");
static_assert(sizeof(BP_EquipmentInventory_C_DamageEquipment) == 0x0001D8, "Wrong size on BP_EquipmentInventory_C_DamageEquipment");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, Damage) == 0x000000, "Member 'BP_EquipmentInventory_C_DamageEquipment::Damage' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, DamageType) == 0x000004, "Member 'BP_EquipmentInventory_C_DamageEquipment::DamageType' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, HitBox) == 0x000005, "Member 'BP_EquipmentInventory_C_DamageEquipment::HitBox' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, EquipmentSlotL) == 0x000006, "Member 'BP_EquipmentInventory_C_DamageEquipment::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_CheckEquipmentSlot_SlotFull) == 0x000050, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000051, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000058, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_Map_Find_Value) == 0x0001C8, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_Map_Find_ReturnValue) == 0x0001CC, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_Map_Find_Value_1) == 0x0001CD, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_Map_Find_ReturnValue_1) == 0x0001CE, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DamageEquipment, CallFunc_DecreaseEquipmentDurability_DecreaseAmount_ImplicitCast) == 0x0001D0, "Member 'BP_EquipmentInventory_C_DamageEquipment::CallFunc_DecreaseEquipmentDurability_DecreaseAmount_ImplicitCast' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.DecreaseEquipmentDurability
// 0x0B90 (0x0B90 - 0x0000)
struct BP_EquipmentInventory_C_DecreaseEquipmentDurability final
{
public:
	double                                        DecreaseAmount;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               EquipmentSlot;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5270[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             NewEquipmentItemL;                                 // 0x0010(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       EquipmentSlotL;                                    // 0x0040(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5271[0x5];                                     // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x0090(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5272[0xF];                                     // 0x00E1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00F0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0980(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x09D0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x09E0(0x0018)()
	struct FS_NotificationDetails                 K2Node_MakeStruct_S_NotificationDetails;           // 0x09F8(0x0038)(HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0A30(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound_1;        // 0x0A40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5273[0x7];                                     // 0x0A41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails_1; // 0x0A48(0x0050)(HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0A98(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0AE0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5274[0x7];                                     // 0x0AE1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0AE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue_1;        // 0x0AF0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0B38(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5275[0x7];                                     // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0B78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast; // 0x0B80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_DecreaseEquipmentDurability) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_DecreaseEquipmentDurability");
static_assert(sizeof(BP_EquipmentInventory_C_DecreaseEquipmentDurability) == 0x000B90, "Wrong size on BP_EquipmentInventory_C_DecreaseEquipmentDurability");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, DecreaseAmount) == 0x000000, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::DecreaseAmount' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, EquipmentSlot) == 0x000008, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, NewEquipmentItemL) == 0x000010, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::NewEquipmentItemL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, EquipmentSlotL) == 0x000040, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000089, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x00008A, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x000090, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_ItemDetails_ItemFound) == 0x0000E0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000F0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_MakeStruct_FormatArgumentData) == 0x000980, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_MakeArray_Array) == 0x0009D0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_Format_ReturnValue) == 0x0009E0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_MakeStruct_S_NotificationDetails) == 0x0009F8, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_MakeStruct_S_NotificationDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000A30, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_DurabilityDetails_ItemFound_1) == 0x000A40, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_DurabilityDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SGK_DurabilityDetails_DurabilityDetails_1) == 0x000A48, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SGK_DurabilityDetails_DurabilityDetails_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000A98, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_IsValid_ReturnValue) == 0x000AE0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000AE8, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_SelectEquipmentSlot_ReturnValue_1) == 0x000AF0, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_SelectEquipmentSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_SetFieldsInStruct_StructOut) == 0x000B38, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_CheckEquipmentSlot_SlotFull) == 0x000B68, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000B70, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000B78, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DecreaseEquipmentDurability, K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast) == 0x000B80, "Member 'BP_EquipmentInventory_C_DecreaseEquipmentDurability::K2Node_SetFieldsInStruct_Durability_30_E9AF67CA4E71F502EF4B18A440FA0385_ImplicitCast' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.DestroyAttachedActors
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentInventory_C_DestroyAttachedActors final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MasterClothingAttchment_C*>  CallFunc_AllEquipmentActors_Actors;                // 0x0010(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_AllWeaponActors_Actors;                   // 0x0020(0x0010)(ReferenceParm)
	class ABP_MasterClothingAttchment_C*          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_DestroyAttachedActors) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_DestroyAttachedActors");
static_assert(sizeof(BP_EquipmentInventory_C_DestroyAttachedActors) == 0x000050, "Wrong size on BP_EquipmentInventory_C_DestroyAttachedActors");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, Temp_int_Variable) == 0x000000, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, Temp_int_Variable_1) == 0x000004, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_AllEquipmentActors_Actors) == 0x000010, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_AllEquipmentActors_Actors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_AllWeaponActors_Actors) == 0x000020, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_AllWeaponActors_Actors' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Array_Length_ReturnValue_1) == 0x000044, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyAttachedActors, CallFunc_Less_IntInt_ReturnValue_1) == 0x000049, "Member 'BP_EquipmentInventory_C_DestroyAttachedActors::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.DestroyEquipmentItem
// 0x00E0 (0x00E0 - 0x0000)
struct BP_EquipmentInventory_C_DestroyEquipmentItem final
{
public:
	E_EquipmentType                               EquipmentSlot;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5276[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  UsingPlayerL;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       EquipmentSlotL;                                    // 0x0010(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5277[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5278[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5279[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0070(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527A[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0090(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_DestroyEquipmentItem) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_DestroyEquipmentItem");
static_assert(sizeof(BP_EquipmentInventory_C_DestroyEquipmentItem) == 0x0000E0, "Wrong size on BP_EquipmentInventory_C_DestroyEquipmentItem");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, EquipmentSlot) == 0x000000, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, UsingPlayerL) == 0x000008, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::UsingPlayerL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, EquipmentSlotL) == 0x000010, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::EquipmentSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_CheckEquipmentSlot_SlotFull) == 0x00005C, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000064, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000070, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000090, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_DestroyEquipmentItem, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'BP_EquipmentInventory_C_DestroyEquipmentItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.EquipItem
// 0x12E0 (0x12E0 - 0x0000)
struct BP_EquipmentInventory_C_EquipItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_SaveLoaded;                                  // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ItemEquipped;                                      // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527B[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  ElementL;                                          // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterClothingAttchment_C*          NewEquipmentL;                                     // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527C[0x8];                                     // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0060(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527D[0xC];                                     // 0x08F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0900(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x096C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0970(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x097C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527E[0x3];                                     // 0x097D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0980(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0988(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_527F[0x3];                                     // 0x0989(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x098C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5280[0x7];                                     // 0x0991(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0998(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x09A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5281[0x3];                                     // 0x09A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x09A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5282[0x7];                                     // 0x09A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x09B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x09B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterClothingAttchment_C*          CallFunc_FinishSpawningActor_ReturnValue;          // 0x09C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x09C8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5283[0x5];                                     // 0x0A13(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5284[0x7];                                     // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0A28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5285[0x3];                                     // 0x0A31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5286[0x7];                                     // 0x0A39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_2;                         // 0x0A40(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0A4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0A4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5287[0x1];                                     // 0x0A4F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0A50(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_EquipItem) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_EquipItem");
static_assert(sizeof(BP_EquipmentInventory_C_EquipItem) == 0x0012E0, "Wrong size on BP_EquipmentInventory_C_EquipItem");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, InvItem) == 0x000000, "Member 'BP_EquipmentInventory_C_EquipItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, EquipmentSlotID) == 0x000030, "Member 'BP_EquipmentInventory_C_EquipItem::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Force) == 0x000040, "Member 'BP_EquipmentInventory_C_EquipItem::Force' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Param_SaveLoaded) == 0x000041, "Member 'BP_EquipmentInventory_C_EquipItem::Param_SaveLoaded' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, ItemEquipped) == 0x000042, "Member 'BP_EquipmentInventory_C_EquipItem::ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, ElementL) == 0x000048, "Member 'BP_EquipmentInventory_C_EquipItem::ElementL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, NewEquipmentL) == 0x000050, "Member 'BP_EquipmentInventory_C_EquipItem::NewEquipmentL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, ItemDetailsL) == 0x000060, "Member 'BP_EquipmentInventory_C_EquipItem::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Array_Index_Variable) == 0x0008F0, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_MakeTransform_ReturnValue) == 0x000900, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Loop_Counter_Variable) == 0x000960, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Loop_Counter_Variable_1) == 0x000964, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Add_IntInt_ReturnValue) == 0x000968, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x00096C, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Loop_Counter_Variable_2) == 0x000970, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Add_IntInt_ReturnValue_2) == 0x000974, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Array_Index_Variable_1) == 0x000978, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_IsStandalone_ReturnValue) == 0x00097C, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000980, "Member 'BP_EquipmentInventory_C_EquipItem::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, K2Node_DynamicCast_bSuccess) == 0x000988, "Member 'BP_EquipmentInventory_C_EquipItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Length_ReturnValue) == 0x00098C, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Less_IntInt_ReturnValue) == 0x000990, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000998, "Member 'BP_EquipmentInventory_C_EquipItem::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, K2Node_DynamicCast_bSuccess_1) == 0x0009A0, "Member 'BP_EquipmentInventory_C_EquipItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, Temp_int_Array_Index_Variable_2) == 0x0009A4, "Member 'BP_EquipmentInventory_C_EquipItem::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Not_PreBool_ReturnValue) == 0x0009A8, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Get_Item) == 0x0009B0, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0009B8, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_FinishSpawningActor_ReturnValue) == 0x0009C0, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0009C8, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000A10, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000A11, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_IsValid_ReturnValue) == 0x000A12, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_GetComponentByClass_ReturnValue) == 0x000A18, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_IsValid_ReturnValue_1) == 0x000A20, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Get_Item_1) == 0x000A28, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_IsValid_ReturnValue_2) == 0x000A30, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Length_ReturnValue_1) == 0x000A34, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A38, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Get_Item_2) == 0x000A40, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Array_Length_ReturnValue_2) == 0x000A48, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Less_IntInt_ReturnValue_2) == 0x000A4C, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_Set_Contains_ReturnValue) == 0x000A4D, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000A4E, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000A50, "Member 'BP_EquipmentInventory_C_EquipItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.EquipmentInventoryReplication
// 0x0070 (0x0070 - 0x0000)
struct BP_EquipmentInventory_C_EquipmentInventoryReplication final
{
public:
	bool                                          Replicate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5288[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5289[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0020(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_EquipmentInventoryReplication) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_EquipmentInventoryReplication");
static_assert(sizeof(BP_EquipmentInventory_C_EquipmentInventoryReplication) == 0x000070, "Wrong size on BP_EquipmentInventory_C_EquipmentInventoryReplication");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, Replicate) == 0x000000, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::Replicate' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, Temp_int_Variable) == 0x000008, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, Temp_int_Variable_1) == 0x00000C, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_GetValidValue_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000019, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_CheckEquipmentSlot_SlotFull) == 0x00001A, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001B, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipmentInventoryReplication, CallFunc_IsValid_ReturnValue) == 0x000069, "Member 'BP_EquipmentInventory_C_EquipmentInventoryReplication::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.EquipWeapon
// 0x1470 (0x1470 - 0x0000)
struct BP_EquipmentInventory_C_EquipWeapon final
{
public:
	struct FS_InvItem                             Inv_Item;                                          // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ClearQuickSlot;                                    // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Force;                                             // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Return_Value;                                      // 0x0042(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528A[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    MeshL;                                             // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SocketL;                                           // 0x0050(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528B[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterWeapon_C*                     WeaponL;                                           // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  WeaponInventoryL;                                  // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItemL;                                          // 0x0068(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterHoldable_C*                   NewHoldableL;                                      // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x00A0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528C[0x4];                                     // 0x0934(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0938(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528D[0x7];                                     // 0x0949(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0950(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0968(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528E[0x7];                                     // 0x0971(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0978(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_528F[0x7];                                     // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x0988(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5290[0x7];                                     // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh;                         // 0x09A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x09A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x09A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5291[0x2];                                     // 0x09AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value;                           // 0x09AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5292[0x3];                                     // 0x09B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInventoryInterface_C> CallFunc_SGK_LoadWeaponAttachments_self_CastInput; // 0x09B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5293[0x7];                                     // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterWeapon_C*                     K2Node_DynamicCast_AsBP_Master_Weapon;             // 0x09D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x09E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5294[0x6];                                     // 0x09E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x09E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value_1;                         // 0x0A3C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0A44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5295[0x3];                                     // 0x0A45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Map_Find_Value_2;                         // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0A51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5296[0x2];                                     // 0x0A52(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default_1;                           // 0x0A54(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5297[0x4];                                     // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0A60(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0AD8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5298[0x7];                                     // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0B10(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x13A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x1400(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterHoldable_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x1408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue_1;         // 0x1410(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x1460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_EquipWeapon) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_EquipWeapon");
static_assert(sizeof(BP_EquipmentInventory_C_EquipWeapon) == 0x001470, "Wrong size on BP_EquipmentInventory_C_EquipWeapon");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Inv_Item) == 0x000000, "Member 'BP_EquipmentInventory_C_EquipWeapon::Inv_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Weapon_Slot_ID) == 0x000030, "Member 'BP_EquipmentInventory_C_EquipWeapon::Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, ClearQuickSlot) == 0x000040, "Member 'BP_EquipmentInventory_C_EquipWeapon::ClearQuickSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Force) == 0x000041, "Member 'BP_EquipmentInventory_C_EquipWeapon::Force' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Return_Value) == 0x000042, "Member 'BP_EquipmentInventory_C_EquipWeapon::Return_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, MeshL) == 0x000048, "Member 'BP_EquipmentInventory_C_EquipWeapon::MeshL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, SocketL) == 0x000050, "Member 'BP_EquipmentInventory_C_EquipWeapon::SocketL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, WeaponL) == 0x000058, "Member 'BP_EquipmentInventory_C_EquipWeapon::WeaponL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, WeaponInventoryL) == 0x000060, "Member 'BP_EquipmentInventory_C_EquipWeapon::WeaponInventoryL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, InvItemL) == 0x000068, "Member 'BP_EquipmentInventory_C_EquipWeapon::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, NewHoldableL) == 0x000098, "Member 'BP_EquipmentInventory_C_EquipWeapon::NewHoldableL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, ItemDetailsL) == 0x0000A0, "Member 'BP_EquipmentInventory_C_EquipWeapon::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Temp_int_Variable) == 0x000930, "Member 'BP_EquipmentInventory_C_EquipWeapon::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Conv_NameToString_ReturnValue) == 0x000938, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Temp_bool_Variable) == 0x000948, "Member 'BP_EquipmentInventory_C_EquipWeapon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_GetSocketLocation_ReturnValue) == 0x000950, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000968, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_bSuccess) == 0x000970, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000978, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_bSuccess_1) == 0x000980, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x000988, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_bSuccess_2) == 0x000998, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SGK_GetMesh_Mesh) == 0x0009A0, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SGK_GetMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x0009A8, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_IsValid_ReturnValue) == 0x0009A9, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_Value) == 0x0009AC, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_ReturnValue) == 0x0009B4, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SGK_LoadWeaponAttachments_self_CastInput) == 0x0009B8, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SGK_LoadWeaponAttachments_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Temp_name_Variable) == 0x0009C8, "Member 'BP_EquipmentInventory_C_EquipWeapon::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, Temp_bool_Variable_1) == 0x0009D0, "Member 'BP_EquipmentInventory_C_EquipWeapon::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_AsBP_Master_Weapon) == 0x0009D8, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_DynamicCast_bSuccess_3) == 0x0009E0, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_IsValid_ReturnValue_1) == 0x0009E1, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x0009E8, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_Select_Default) == 0x000A38, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_Value_1) == 0x000A3C, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_ReturnValue_1) == 0x000A44, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_Value_2) == 0x000A48, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Map_Find_ReturnValue_2) == 0x000A50, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_Set_Contains_ReturnValue) == 0x000A51, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, K2Node_Select_Default_1) == 0x000A54, "Member 'BP_EquipmentInventory_C_EquipWeapon::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_GetSocketTransform_ReturnValue) == 0x000A60, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_BreakTransform_Location) == 0x000AC0, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_BreakTransform_Rotation) == 0x000AD8, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_BreakTransform_Scale) == 0x000AF0, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SGK_ItemDetails_ItemFound) == 0x000B08, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000B10, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_MakeTransform_ReturnValue) == 0x0013A0, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x001400, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x001408, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_SelectedWeaponSlot_ReturnValue_1) == 0x001410, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_SelectedWeaponSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_EquipWeapon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x001460, "Member 'BP_EquipmentInventory_C_EquipWeapon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ExecuteUbergraph_BP_EquipmentInventory
// 0x0520 (0x0520 - 0x0000)
struct BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5299[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529A[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529B[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529C[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529D[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       Temp_struct_Variable;                              // 0x0068(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529E[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529F[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A0[0x8];                                     // 0x00E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FS_StorageSave                         K2Node_Event_S_StorageSave;                        // 0x0160(0x0090)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEquipmentSaveData_SaveFound;          // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A1[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentInvSave                    CallFunc_FindEquipmentSaveData_Array_Element;      // 0x0200(0x00B0)(ContainsInstancedReference, HasGetValueTypeHash)
	E_EquipmentType                               Temp_byte_Variable;                                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A2[0x3];                                     // 0x02B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_CustomEvent_PlayerInventory_1;              // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RemoveAll;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A3[0x4];                                     // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       K2Node_Select_Default;                             // 0x02C8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A4[0x4];                                     // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       K2Node_SetFieldsInStruct_StructOut;                // 0x0318(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	const class UBP_PlayerInventory_C*            K2Node_CustomEvent_PlayerInventory;                // 0x0360(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0368(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A5[0x4];                                     // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          K2Node_CustomEvent_Weapon_Slot;                    // 0x0378(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A6[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          Temp_struct_Variable_1;                            // 0x03D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0420(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0428(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A7[0x4];                                     // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       K2Node_CustomEvent_EquipmentSlot;                  // 0x0430(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_WeaponSlots                                 Temp_byte_Variable_1;                              // 0x0479(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A8[0x6];                                     // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          K2Node_Select_Default_1;                           // 0x0480(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          K2Node_SetFieldsInStruct_StructOut_1;              // 0x04D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory");
static_assert(sizeof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory) == 0x000520, "Wrong size on BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, EntryPoint) == 0x000000, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_MakeLiteralInt_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x000028, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_IsServer_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetObjectClass_ReturnValue) == 0x000038, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000048, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetOwner_ReturnValue_1) == 0x000050, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_IsValid_ReturnValue_1) == 0x000058, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Variable) == 0x00005C, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetValidValue_ReturnValue) == 0x000061, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000062, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x000064, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_struct_Variable) == 0x000068, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_IsValid_ReturnValue_2) == 0x0000B0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetGameMode_ReturnValue) == 0x0000B8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0000C0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetOwner_ReturnValue_2) == 0x0000D8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_SGK_GetSaveGame_SaveGame) == 0x0000E0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000150, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_Event_S_StorageSave) == 0x000160, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_Event_S_StorageSave' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_Event_SaveGame) == 0x0001F0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_FindEquipmentSaveData_SaveFound) == 0x0001F8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_FindEquipmentSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_FindEquipmentSaveData_Array_Element) == 0x000200, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_FindEquipmentSaveData_Array_Element' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_byte_Variable) == 0x0002B0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_int_Variable_1) == 0x0002B4, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_CustomEvent_PlayerInventory_1) == 0x0002B8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_CustomEvent_PlayerInventory_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_CustomEvent_RemoveAll) == 0x0002C0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_CustomEvent_RemoveAll' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0002C1, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_GetValidValue_ReturnValue_1) == 0x0002C2, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002C3, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_Select_Default) == 0x0002C8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Add_IntInt_ReturnValue_3) == 0x000310, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_SetFieldsInStruct_StructOut) == 0x000318, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_CustomEvent_PlayerInventory) == 0x000360, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_CustomEvent_PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Array_Get_Item) == 0x000368, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Array_Length_ReturnValue) == 0x000370, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_CustomEvent_Weapon_Slot) == 0x000378, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_CustomEvent_Weapon_Slot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Less_IntInt_ReturnValue) == 0x0003C8, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_struct_Variable_1) == 0x0003D0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Array_Get_Item_1) == 0x000420, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Array_Length_ReturnValue_1) == 0x000428, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_CustomEvent_EquipmentSlot) == 0x000430, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_CustomEvent_EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, CallFunc_Less_IntInt_ReturnValue_1) == 0x000478, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, Temp_byte_Variable_1) == 0x000479, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_Select_Default_1) == 0x000480, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory, K2Node_SetFieldsInStruct_StructOut_1) == 0x0004D0, "Member 'BP_EquipmentInventory_C_ExecuteUbergraph_BP_EquipmentInventory::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.HasItemEquipped
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EquipmentInventory_C_HasItemEquipped final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52A9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       EquipmentSlot;                                     // 0x0010(0x0048)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AA[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AB[0x2];                                     // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AC[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0070(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AD[0x2];                                     // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_HasItemEquipped) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_HasItemEquipped");
static_assert(sizeof(BP_EquipmentInventory_C_HasItemEquipped) == 0x0000C8, "Wrong size on BP_EquipmentInventory_C_HasItemEquipped");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, ItemId) == 0x000000, "Member 'BP_EquipmentInventory_C_HasItemEquipped::ItemId' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_HasItemEquipped::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, EquipmentSlot) == 0x000010, "Member 'BP_EquipmentInventory_C_HasItemEquipped::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000058, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, Temp_int_Variable) == 0x00005C, "Member 'BP_EquipmentInventory_C_HasItemEquipped::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_Conv_IntToByte_ReturnValue) == 0x000060, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_GetValidValue_ReturnValue) == 0x000061, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, Temp_int_Variable_1) == 0x000064, "Member 'BP_EquipmentInventory_C_HasItemEquipped::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00006C, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000070, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x0000B8, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x0000B9, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000BC, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HasItemEquipped, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000C5, "Member 'BP_EquipmentInventory_C_HasItemEquipped::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.HideComponentCheck
// 0x01F0 (0x01F0 - 0x0000)
struct BP_EquipmentInventory_C_HideComponentCheck final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_EquipmentType                               Ignore;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Found;                                             // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AE[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvItem>                     CallFunc_AllEquipmentItems_Items;                  // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_Array_Get_Item;                           // 0x0030(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52AF[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0068(0x0170)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B0[0x2];                                     // 0x01E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_HideComponentCheck) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_HideComponentCheck");
static_assert(sizeof(BP_EquipmentInventory_C_HideComponentCheck) == 0x0001F0, "Wrong size on BP_EquipmentInventory_C_HideComponentCheck");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, Tag) == 0x000000, "Member 'BP_EquipmentInventory_C_HideComponentCheck::Tag' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, Ignore) == 0x000010, "Member 'BP_EquipmentInventory_C_HideComponentCheck::Ignore' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, Found) == 0x000011, "Member 'BP_EquipmentInventory_C_HideComponentCheck::Found' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_AllEquipmentItems_Items) == 0x000018, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_AllEquipmentItems_Items' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_EquipmentInventory_C_HideComponentCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000060, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000068, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, Temp_int_Loop_Counter_Variable) == 0x0001D8, "Member 'BP_EquipmentInventory_C_HideComponentCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Array_Length_ReturnValue_1) == 0x0001DC, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E1, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Add_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideComponentCheck, CallFunc_Array_Contains_ReturnValue) == 0x0001E8, "Member 'BP_EquipmentInventory_C_HideComponentCheck::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.HideEquipmentComponents
// 0x0240 (0x0240 - 0x0000)
struct BP_EquipmentInventory_C_HideEquipmentComponents final
{
public:
	bool                                          Hide;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             InvItem;                                           // 0x0008(0x0030)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_EquipmentType                               IgnoreSlot;                                        // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B2[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B3[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentDetails                    CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails; // 0x0048(0x0170)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B4[0x3];                                     // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HideComponentCheck_Found;                 // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B5[0x6];                                     // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPrimitiveComponent*>            CallFunc_GetComponentsByTag_ReturnValue;           // 0x0208(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B6[0x3];                                     // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_1;                         // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B7[0x4];                                     // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item_2;                         // 0x0230(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_HideEquipmentComponents) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_HideEquipmentComponents");
static_assert(sizeof(BP_EquipmentInventory_C_HideEquipmentComponents) == 0x000240, "Wrong size on BP_EquipmentInventory_C_HideEquipmentComponents");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, Hide) == 0x000000, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::Hide' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, InvItem) == 0x000008, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, IgnoreSlot) == 0x000038, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::IgnoreSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, Temp_int_Variable) == 0x00003C, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem) == 0x000040, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_SGK_ItemEquipmentDetails_IsEquipmentItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails) == 0x000048, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_SGK_ItemEquipmentDetails_EquipmentDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Add_IntInt_ReturnValue) == 0x0001B8, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Length_ReturnValue) == 0x0001BC, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, Temp_int_Variable_1) == 0x0001C0, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001C4, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, Temp_int_Array_Index_Variable) == 0x0001C8, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, Temp_int_Loop_Counter_Variable) == 0x0001CC, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Get_Item) == 0x0001D0, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Conv_StringToName_ReturnValue) == 0x0001E0, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Less_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001EC, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x0001F0, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_HideComponentCheck_Found) == 0x000201, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_HideComponentCheck_Found' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_GetComponentsByTag_ReturnValue) == 0x000208, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021C, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Get_Item_1) == 0x000220, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Length_ReturnValue_2) == 0x000228, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Array_Get_Item_2) == 0x000230, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_HideEquipmentComponents, CallFunc_Less_IntInt_ReturnValue_2) == 0x000238, "Member 'BP_EquipmentInventory_C_HideEquipmentComponents::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.InitializeEquipmentInventory
// 0x0018 (0x0018 - 0x0000)
struct BP_EquipmentInventory_C_InitializeEquipmentInventory final
{
public:
	class AActor*                                 Param_OwningCharacter;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_InitializeEquipmentInventory) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_InitializeEquipmentInventory");
static_assert(sizeof(BP_EquipmentInventory_C_InitializeEquipmentInventory) == 0x000018, "Wrong size on BP_EquipmentInventory_C_InitializeEquipmentInventory");
static_assert(offsetof(BP_EquipmentInventory_C_InitializeEquipmentInventory, Param_OwningCharacter) == 0x000000, "Member 'BP_EquipmentInventory_C_InitializeEquipmentInventory::Param_OwningCharacter' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_InitializeEquipmentInventory, K2Node_DynamicCast_AsCharacter) == 0x000008, "Member 'BP_EquipmentInventory_C_InitializeEquipmentInventory::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_InitializeEquipmentInventory, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_EquipmentInventory_C_InitializeEquipmentInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ItemDecay
// 0x1520 (0x1520 - 0x0000)
struct BP_EquipmentInventory_C_ItemDecay final
{
public:
	struct FS_EquipmentSlot                       EquipmentL;                                        // 0x0000(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_DecayDetails                        DecayDetailsL;                                     // 0x0048(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             ItemL;                                             // 0x0068(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B8[0x2];                                     // 0x009E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52B9[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00A8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BA[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BB[0x8];                                     // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BC[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BD[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BE[0x8];                                     // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInventoryInterface_C> K2Node_DynamicCast_AsBP_SGKInventory_Interface;    // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52BF[0x7];                                     // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C0[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x02C8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x02F8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C1[0x7];                                     // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0330(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0360(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C2[0xF];                                     // 0x0371(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0380(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0C10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C3[0xF];                                     // 0x0C11(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0C20(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x14B0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x14C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x14C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C4[0x3];                                     // 0x14C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x14C8(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x1518(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ItemDecay) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_ItemDecay");
static_assert(sizeof(BP_EquipmentInventory_C_ItemDecay) == 0x001520, "Wrong size on BP_EquipmentInventory_C_ItemDecay");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, EquipmentL) == 0x000000, "Member 'BP_EquipmentInventory_C_ItemDecay::EquipmentL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, DecayDetailsL) == 0x000048, "Member 'BP_EquipmentInventory_C_ItemDecay::DecayDetailsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, ItemL) == 0x000068, "Member 'BP_EquipmentInventory_C_ItemDecay::ItemL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, Temp_int_Variable) == 0x000098, "Member 'BP_EquipmentInventory_C_ItemDecay::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Conv_IntToByte_ReturnValue) == 0x00009C, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetValidValue_ReturnValue) == 0x00009D, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000A8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000F0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue) == 0x000100, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Greater_IntInt_ReturnValue) == 0x000170, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_BreakTransform_Location) == 0x000178, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_BreakTransform_Rotation) == 0x000190, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_BreakTransform_Scale) == 0x0001A8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0001C0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue_1) == 0x0001D8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001E0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_DoesImplementInterface_ReturnValue) == 0x0001F8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Add_VectorVector_ReturnValue) == 0x000200, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_MakeTransform_ReturnValue) == 0x000220, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetOwner_ReturnValue_2) == 0x000280, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_DynamicCast_AsBP_SGKInventory_Interface) == 0x000288, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_DynamicCast_AsBP_SGKInventory_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_DynamicCast_bSuccess) == 0x000298, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_GetGameMode_ReturnValue) == 0x0002A0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0002A8, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_DynamicCast_bSuccess_1) == 0x0002B8, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0002C0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_CreateNewItem_NewItem) == 0x0002C8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_MakeStruct_S_InvItem) == 0x0002F8, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_AddItem_RemainingItem) == 0x000328, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_AddItem_RemainingInvItem) == 0x000330, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_AddItem_NewItemSlot) == 0x000360, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemFound) == 0x000370, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000380, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000C10, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000C20, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, K2Node_MakeStruct_S_EquipmentSlotID) == 0x0014B0, "Member 'BP_EquipmentInventory_C_ItemDecay::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0014C0, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x0014C4, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x0014C8, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ItemDecay, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x001518, "Member 'BP_EquipmentInventory_C_ItemDecay::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.LoadComponentData
// 0x0150 (0x0150 - 0x0000)
struct BP_EquipmentInventory_C_LoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadComplete;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C5[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C6[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEquipmentSaveData_SaveFound;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C7[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentInvSave                    CallFunc_FindEquipmentSaveData_Array_Element;      // 0x00A0(0x00B0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_LoadComponentData) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_LoadComponentData");
static_assert(sizeof(BP_EquipmentInventory_C_LoadComponentData) == 0x000150, "Wrong size on BP_EquipmentInventory_C_LoadComponentData");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, SaveGame) == 0x000000, "Member 'BP_EquipmentInventory_C_LoadComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, LoadComplete) == 0x000008, "Member 'BP_EquipmentInventory_C_LoadComponentData::LoadComplete' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_LoadComponentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_LoadComponentData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_LoadComponentData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, CallFunc_FindEquipmentSaveData_SaveFound) == 0x000090, "Member 'BP_EquipmentInventory_C_LoadComponentData::CallFunc_FindEquipmentSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadComponentData, CallFunc_FindEquipmentSaveData_Array_Element) == 0x0000A0, "Member 'BP_EquipmentInventory_C_LoadComponentData::CallFunc_FindEquipmentSaveData_Array_Element' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.LoadEquipmentData
// 0x0770 (0x0770 - 0x0000)
struct BP_EquipmentInventory_C_LoadEquipmentData final
{
public:
	struct FS_EquipmentInvSave                    StorageSave;                                       // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotSave                   EquipmentSlotSaveL;                                // 0x00B0(0x001C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_WeaponSlotSave                      WeaponSlotL;                                       // 0x00CC(0x0024)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvItem                             InvItemL;                                          // 0x0100(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x0130(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C8[0x8];                                     // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentInvSave                    EquipmentSaveL;                                    // 0x0160(0x00B0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52C9[0x3];                                     // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CA[0x3];                                     // 0x0231(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item;                           // 0x0238(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_1;                         // 0x0280(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CB[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x02C8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CC[0x6];                                     // 0x02FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_2;                         // 0x0300(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CD[0x3];                                     // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         CallFunc_Array_Get_Item_3;                         // 0x0350(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CE[0x7];                                     // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52CF[0x3];                                     // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D0[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2;  // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D1[0x7];                                     // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_2; // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x03F0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0420(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotSave                      CallFunc_Array_Get_Item_4;                         // 0x0450(0x0024)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D2[0x7];                                     // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0480(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D3[0x7];                                     // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_5;                         // 0x0498(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x04D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0508(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID_1;                // 0x0538(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value_1;               // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D4[0x7];                                     // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_6;                         // 0x0550(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotSave                   CallFunc_Array_Get_Item_7;                         // 0x0590(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D5[0x7];                                     // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x05B8(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D6[0x7];                                     // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID_1;             // 0x05D0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped_1;                 // 0x05E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D7[0x7];                                     // 0x05E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_8;                         // 0x05E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x0638(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0670(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory_1;        // 0x0680(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D8[0x6];                                     // 0x068A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_9;                         // 0x0690(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_2;                  // 0x06D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut_1;              // 0x0700(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52D9[0x7];                                     // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0738(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_2;         // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DA[0x7];                                     // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_1;   // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_2;   // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_3;   // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_LoadEquipmentData) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_LoadEquipmentData");
static_assert(sizeof(BP_EquipmentInventory_C_LoadEquipmentData) == 0x000770, "Wrong size on BP_EquipmentInventory_C_LoadEquipmentData");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, StorageSave) == 0x000000, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::StorageSave' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, EquipmentSlotSaveL) == 0x0000B0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::EquipmentSlotSaveL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, WeaponSlotL) == 0x0000CC, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::WeaponSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, FoundSlotsL) == 0x0000F0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, InvItemL) == 0x000100, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, InvSaveSlotL) == 0x000130, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, EquipmentSaveL) == 0x000160, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::EquipmentSaveL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Loop_Counter_Variable) == 0x000210, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_IsValid_ReturnValue) == 0x000214, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Add_IntInt_ReturnValue) == 0x000218, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Array_Index_Variable) == 0x00021C, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Loop_Counter_Variable_1) == 0x000220, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Add_IntInt_ReturnValue_1) == 0x000224, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000228, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_bSuccess) == 0x000230, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Array_Index_Variable_1) == 0x000234, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item) == 0x000238, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Loop_Counter_Variable_2) == 0x000278, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Add_IntInt_ReturnValue_2) == 0x00027C, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_1) == 0x000280, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0002C0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_InvItem) == 0x0002C8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x0002F8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0002F9, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_2) == 0x000300, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_IsValid_ReturnValue_1) == 0x000340, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, Temp_int_Array_Index_Variable_2) == 0x000344, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_GetGameMode_ReturnValue) == 0x000348, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_3) == 0x000350, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000378, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_bSuccess_1) == 0x000388, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000390, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Length_ReturnValue) == 0x000398, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Less_IntInt_ReturnValue) == 0x00039C, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_GetGameMode_ReturnValue_1) == 0x0003A0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x0003A8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_bSuccess_2) == 0x0003B8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_GetGameMode_ReturnValue_2) == 0x0003C0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x0003C8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2) == 0x0003D0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_bSuccess_3) == 0x0003E0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_GetGlobalInventory_GlobalInventory_2) == 0x0003E8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_GetGlobalInventory_GlobalInventory_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_CreateNewItem_NewItem) == 0x0003F0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_SetFieldsInStruct_StructOut) == 0x000420, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_4) == 0x000450, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Length_ReturnValue_1) == 0x000474, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Less_IntInt_ReturnValue_1) == 0x000478, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_WeaponSlotID) == 0x000480, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EquipWeapon_Return_Value) == 0x000490, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_5) == 0x000498, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_CreateNewItem_NewItem_1) == 0x0004D8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_InvItem_1) == 0x000508, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_WeaponSlotID_1) == 0x000538, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_WeaponSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EquipWeapon_Return_Value_1) == 0x000548, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EquipWeapon_Return_Value_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_6) == 0x000550, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_7) == 0x000590, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Length_ReturnValue_2) == 0x0005AC, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Less_IntInt_ReturnValue_2) == 0x0005B0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_EquipmentSlotID) == 0x0005B8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EquipItem_ItemEquipped) == 0x0005C8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_EquipmentSlotID_1) == 0x0005D0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_EquipmentSlotID_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EquipItem_ItemEquipped_1) == 0x0005E0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EquipItem_ItemEquipped_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_8) == 0x0005E8, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_MakeStruct_S_InvItem_2) == 0x000638, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_ItemSize_Height) == 0x000668, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_ItemSize_Width) == 0x00066C, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000670, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_AsBP_Weapon_Inventory_1) == 0x000680, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_AsBP_Weapon_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_DynamicCast_bSuccess_4) == 0x000688, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x000689, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_Get_Item_9) == 0x000690, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_CreateNewItem_NewItem_2) == 0x0006D0, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_CreateNewItem_NewItem_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_SetFieldsInStruct_StructOut_1) == 0x000700, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_SetFieldsInStruct_StructOut_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000730, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000738, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, CallFunc_Array_IsValidIndex_ReturnValue_2) == 0x000748, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::CallFunc_Array_IsValidIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x000750, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_VariableSet_CurrentWeight_ImplicitCast_1) == 0x000758, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_VariableSet_CurrentWeight_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_VariableSet_CurrentWeight_ImplicitCast_2) == 0x000760, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_VariableSet_CurrentWeight_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_LoadEquipmentData, K2Node_VariableSet_CurrentWeight_ImplicitCast_3) == 0x000768, "Member 'BP_EquipmentInventory_C_LoadEquipmentData::K2Node_VariableSet_CurrentWeight_ImplicitCast_3' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.LoadInventoryData
// 0x0090 (0x0090 - 0x0000)
struct BP_EquipmentInventory_C_LoadInventoryData final
{
public:
	struct FS_StorageSave                         S_StorageSave;                                     // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_LoadInventoryData) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_LoadInventoryData");
static_assert(sizeof(BP_EquipmentInventory_C_LoadInventoryData) == 0x000090, "Wrong size on BP_EquipmentInventory_C_LoadInventoryData");
static_assert(offsetof(BP_EquipmentInventory_C_LoadInventoryData, S_StorageSave) == 0x000000, "Member 'BP_EquipmentInventory_C_LoadInventoryData::S_StorageSave' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_BackpackEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DB[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_BackpackEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_EyewearEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DC[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_EyewearEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_GlovesEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_GlovesEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_HelmetEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DE[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_HelmetEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_PantsEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52DF[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_PantsEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_PrimaryEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E0[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_PrimaryEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_SecondaryWeaponSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_SecondaryWeaponSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_ShirtEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E2[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_ShirtEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_ShoesEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_ShoesEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.OnRep_TacticalRigEquipmentSlot
// 0x0020 (0x0020 - 0x0000)
struct BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E4[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot) == 0x000020, "Wrong size on BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot, CallFunc_IsDedicatedServer_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_OnRep_TacticalRigEquipmentSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.RemoveUserToEquipmentItems
// 0x00D8 (0x00D8 - 0x0000)
struct BP_EquipmentInventory_C_RemoveUserToEquipmentItems final
{
public:
	bool                                          RemoveAll;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E5[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  Player_Inv;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E6[0x1];                                     // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x0020(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E7[0x1];                                     // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0080(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E8[0x3];                                     // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_RemoveUserToEquipmentItems");
static_assert(sizeof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems) == 0x0000D8, "Wrong size on BP_EquipmentInventory_C_RemoveUserToEquipmentItems");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, RemoveAll) == 0x000000, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::RemoveAll' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, Player_Inv) == 0x000008, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::Player_Inv' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_MakeLiteralInt_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, Temp_int_Variable) == 0x000014, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Conv_IntToByte_ReturnValue) == 0x00001C, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001D, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_GetValidValue_ReturnValue) == 0x00001E, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, Temp_int_Variable_1) == 0x000074, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000079, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_GetValidValue_ReturnValue_1) == 0x00007A, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x00007C, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000080, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x0000CC, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_RemoveUserToEquipmentItems, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000D4, "Member 'BP_EquipmentInventory_C_RemoveUserToEquipmentItems::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SaveComponentData
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInventory_C_SaveComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SaveComponentData) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_SaveComponentData");
static_assert(sizeof(BP_EquipmentInventory_C_SaveComponentData) == 0x000008, "Wrong size on BP_EquipmentInventory_C_SaveComponentData");
static_assert(offsetof(BP_EquipmentInventory_C_SaveComponentData, SaveGame) == 0x000000, "Member 'BP_EquipmentInventory_C_SaveComponentData::SaveGame' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SaveEquipmentData
// 0x0298 (0x0298 - 0x0000)
struct BP_EquipmentInventory_C_SaveEquipmentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x0008(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_PrepareEquipmentSaveData_ExtraDataIndex;  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52E9[0x4];                                     // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_PrepareEquipmentSaveData_NewLevelSaveData; // 0x00E0(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EA[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x01C8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SaveEquipmentData) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_SaveEquipmentData");
static_assert(sizeof(BP_EquipmentInventory_C_SaveEquipmentData) == 0x000298, "Wrong size on BP_EquipmentInventory_C_SaveEquipmentData");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, SaveGame) == 0x000000, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, LevelSaveDataL) == 0x000008, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, CallFunc_PrepareEquipmentSaveData_ExtraDataIndex) == 0x0000D8, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::CallFunc_PrepareEquipmentSaveData_ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, CallFunc_PrepareEquipmentSaveData_NewLevelSaveData) == 0x0000E0, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::CallFunc_PrepareEquipmentSaveData_NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0001B0, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, CallFunc_SelectLevelSaveData_SaveFound) == 0x0001C0, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SaveEquipmentData, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x0001C8, "Member 'BP_EquipmentInventory_C_SaveEquipmentData::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SearchEquipmentForEmptySlots
// 0x00C8 (0x00C8 - 0x0000)
struct BP_EquipmentInventory_C_SearchEquipmentForEmptySlots final
{
public:
	bool                                          AllowRotation;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EB[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ItemId;                                            // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_EquipmentType                               IgnoreEquipment;                                   // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_WeightCheck;                                 // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EC[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         WeightCheckAmount;                                 // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpaceFound;                                        // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotation;                                          // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52ED[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FoundSlots;                                        // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          CallFunc_FindEmptySlots_SpaceFound;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated;                   // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EE[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots;                // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52EF[0x2];                                     // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F0[0x2];                                     // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F1[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x0058(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_SpaceFound_1;              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindEmptySlots_Rotated_1;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F2[0x5];                                     // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_FindEmptySlots_FoundSlots_1;              // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F3[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_SearchEquipmentForEmptySlots");
static_assert(sizeof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots) == 0x0000C8, "Wrong size on BP_EquipmentInventory_C_SearchEquipmentForEmptySlots");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, AllowRotation) == 0x000000, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::AllowRotation' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, ItemId) == 0x000004, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::ItemId' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, IgnoreEquipment) == 0x00000C, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::IgnoreEquipment' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, Param_WeightCheck) == 0x00000D, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::Param_WeightCheck' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, WeightCheckAmount) == 0x000010, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::WeightCheckAmount' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, SpaceFound) == 0x000014, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, Rotation) == 0x000015, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::Rotation' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, FoundSlots) == 0x000018, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_SpaceFound) == 0x000028, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_SpaceFound' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_Rotated) == 0x000029, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_Rotated' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_FoundSlots) == 0x000030, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, Temp_bool_Variable) == 0x000040, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_Not_PreBool_ReturnValue) == 0x000041, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, Temp_int_Variable) == 0x000044, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_Conv_IntToByte_ReturnValue) == 0x000048, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_GetValidValue_ReturnValue) == 0x000049, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x000058, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_SpaceFound_1) == 0x0000A1, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_SpaceFound_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_Rotated_1) == 0x0000A2, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_Rotated_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_FindEmptySlots_FoundSlots_1) == 0x0000A8, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_FindEmptySlots_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_MakeLiteralInt_ReturnValue) == 0x0000BC, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SearchEquipmentForEmptySlots, CallFunc_BooleanAND_ReturnValue) == 0x0000C5, "Member 'BP_EquipmentInventory_C_SearchEquipmentForEmptySlots::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SelectedWeaponSlot
// 0x0100 (0x0100 - 0x0000)
struct BP_EquipmentInventory_C_SelectedWeaponSlot final
{
public:
	E_WeaponSlots                                 Weapon_Slot;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          ReturnValue;                                       // 0x0008(0x0050)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_WeaponSlots                                 Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F5[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          Temp_struct_Variable;                              // 0x0060(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          K2Node_Select_Default;                             // 0x00B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SelectedWeaponSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_SelectedWeaponSlot");
static_assert(sizeof(BP_EquipmentInventory_C_SelectedWeaponSlot) == 0x000100, "Wrong size on BP_EquipmentInventory_C_SelectedWeaponSlot");
static_assert(offsetof(BP_EquipmentInventory_C_SelectedWeaponSlot, Weapon_Slot) == 0x000000, "Member 'BP_EquipmentInventory_C_SelectedWeaponSlot::Weapon_Slot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectedWeaponSlot, ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_SelectedWeaponSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectedWeaponSlot, Temp_byte_Variable) == 0x000058, "Member 'BP_EquipmentInventory_C_SelectedWeaponSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectedWeaponSlot, Temp_struct_Variable) == 0x000060, "Member 'BP_EquipmentInventory_C_SelectedWeaponSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectedWeaponSlot, K2Node_Select_Default) == 0x0000B0, "Member 'BP_EquipmentInventory_C_SelectedWeaponSlot::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SelectEquipmentSlot
// 0x00E8 (0x00E8 - 0x0000)
struct BP_EquipmentInventory_C_SelectEquipmentSlot final
{
public:
	E_EquipmentType                               EquipmentSlot;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_EquipmentType                               Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F7[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_EquipmentSlot                       Temp_struct_Variable;                              // 0x0058(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       K2Node_Select_Default;                             // 0x00A0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SelectEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_SelectEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_SelectEquipmentSlot) == 0x0000E8, "Wrong size on BP_EquipmentInventory_C_SelectEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_SelectEquipmentSlot, EquipmentSlot) == 0x000000, "Member 'BP_EquipmentInventory_C_SelectEquipmentSlot::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectEquipmentSlot, ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_SelectEquipmentSlot::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectEquipmentSlot, Temp_byte_Variable) == 0x000050, "Member 'BP_EquipmentInventory_C_SelectEquipmentSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectEquipmentSlot, Temp_struct_Variable) == 0x000058, "Member 'BP_EquipmentInventory_C_SelectEquipmentSlot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SelectEquipmentSlot, K2Node_Select_Default) == 0x0000A0, "Member 'BP_EquipmentInventory_C_SelectEquipmentSlot::K2Node_Select_Default' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ServerAddUserToEquipmentItems
// 0x0008 (0x0008 - 0x0000)
struct BP_EquipmentInventory_C_ServerAddUserToEquipmentItems final
{
public:
	const class UBP_PlayerInventory_C*            PlayerInventory;                                   // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ServerAddUserToEquipmentItems) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ServerAddUserToEquipmentItems");
static_assert(sizeof(BP_EquipmentInventory_C_ServerAddUserToEquipmentItems) == 0x000008, "Wrong size on BP_EquipmentInventory_C_ServerAddUserToEquipmentItems");
static_assert(offsetof(BP_EquipmentInventory_C_ServerAddUserToEquipmentItems, PlayerInventory) == 0x000000, "Member 'BP_EquipmentInventory_C_ServerAddUserToEquipmentItems::PlayerInventory' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ServerRemoveUserToEquipmentItems
// 0x0010 (0x0010 - 0x0000)
struct BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveAll;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems");
static_assert(sizeof(BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems) == 0x000010, "Wrong size on BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems");
static_assert(offsetof(BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems, PlayerInventory) == 0x000000, "Member 'BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems, RemoveAll) == 0x000008, "Member 'BP_EquipmentInventory_C_ServerRemoveUserToEquipmentItems::RemoveAll' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ServerUpdateEquipmentSlot
// 0x0048 (0x0048 - 0x0000)
struct BP_EquipmentInventory_C_ServerUpdateEquipmentSlot final
{
public:
	struct FS_EquipmentSlot                       EquipmentSlot;                                     // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ServerUpdateEquipmentSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ServerUpdateEquipmentSlot");
static_assert(sizeof(BP_EquipmentInventory_C_ServerUpdateEquipmentSlot) == 0x000048, "Wrong size on BP_EquipmentInventory_C_ServerUpdateEquipmentSlot");
static_assert(offsetof(BP_EquipmentInventory_C_ServerUpdateEquipmentSlot, EquipmentSlot) == 0x000000, "Member 'BP_EquipmentInventory_C_ServerUpdateEquipmentSlot::EquipmentSlot' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.ServerUpdateWeaponSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentInventory_C_ServerUpdateWeaponSlot final
{
public:
	struct FS_WeaponSlot                          Weapon_Slot;                                       // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_ServerUpdateWeaponSlot) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_ServerUpdateWeaponSlot");
static_assert(sizeof(BP_EquipmentInventory_C_ServerUpdateWeaponSlot) == 0x000050, "Wrong size on BP_EquipmentInventory_C_ServerUpdateWeaponSlot");
static_assert(offsetof(BP_EquipmentInventory_C_ServerUpdateWeaponSlot, Weapon_Slot) == 0x000000, "Member 'BP_EquipmentInventory_C_ServerUpdateWeaponSlot::Weapon_Slot' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SGK AllowStartingItems
// 0x0001 (0x0001 - 0x0000)
struct BP_EquipmentInventory_C_SGK_AllowStartingItems final
{
public:
	bool                                          AllowStartingItems;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong alignment on BP_EquipmentInventory_C_SGK_AllowStartingItems");
static_assert(sizeof(BP_EquipmentInventory_C_SGK_AllowStartingItems) == 0x000001, "Wrong size on BP_EquipmentInventory_C_SGK_AllowStartingItems");
static_assert(offsetof(BP_EquipmentInventory_C_SGK_AllowStartingItems, AllowStartingItems) == 0x000000, "Member 'BP_EquipmentInventory_C_SGK_AllowStartingItems::AllowStartingItems' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.SpawnEquipmentDestructionBag
// 0x02B0 (0x02B0 - 0x0000)
struct BP_EquipmentInventory_C_SpawnEquipmentDestructionBag final
{
public:
	class UBP_EquipmentInventory_C*               EquipmentL;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  InventoryL;                                        // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F8[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52F9[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FA[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlot                       CallFunc_SelectEquipmentSlot_ReturnValue;          // 0x00F8(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FB[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FC[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FD[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_3;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FE[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52FF[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_1;                           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5300[0x8];                                     // 0x0228(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0230(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_DestroyedStorageBag_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag) == 0x000010, "Wrong alignment on BP_EquipmentInventory_C_SpawnEquipmentDestructionBag");
static_assert(sizeof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag) == 0x0002B0, "Wrong size on BP_EquipmentInventory_C_SpawnEquipmentDestructionBag");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, EquipmentL) == 0x000000, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::EquipmentL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, InventoryL) == 0x000008, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::InventoryL' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_MakeLiteralInt_ReturnValue) == 0x000010, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000014, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, Temp_int_Variable) == 0x000018, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_Conv_IntToByte_ReturnValue) == 0x000028, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetValidValue_ReturnValue) == 0x000090, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakTransform_Location) == 0x000098, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakTransform_Rotation) == 0x0000B0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakTransform_Scale) == 0x0000C8, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakVector_X) == 0x0000E0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakVector_Y) == 0x0000E8, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BreakVector_Z) == 0x0000F0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_SelectEquipmentSlot_ReturnValue) == 0x0000F8, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_SelectEquipmentSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000140, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomFloatInRange_ReturnValue) == 0x000148, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomBool_ReturnValue) == 0x000150, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000158, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000160, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomBool_ReturnValue_1) == 0x000168, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_RandomFloatInRange_ReturnValue_3) == 0x000170, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_RandomFloatInRange_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, Temp_bool_Variable) == 0x000178, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, K2Node_Select_Default) == 0x000180, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000188, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, Temp_bool_Variable_1) == 0x000190, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, K2Node_Select_Default_1) == 0x000198, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_MakeVector_ReturnValue) == 0x0001A8, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_MakeTransform_ReturnValue) == 0x0001C0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetOwner_ReturnValue_1) == 0x000220, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetTransform_ReturnValue_1) == 0x000230, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000290, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_FinishSpawningActor_ReturnValue) == 0x000298, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_SpawnEquipmentDestructionBag, CallFunc_GetComponentByClass_ReturnValue) == 0x0002A0, "Member 'BP_EquipmentInventory_C_SpawnEquipmentDestructionBag::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.StartItemEquipment
// 0x01C0 (0x01C0 - 0x0000)
struct BP_EquipmentInventory_C_StartItemEquipment final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5301[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5302[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_DynamicCast_AsController;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5303[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5304[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_StartingWeaponItem                  CallFunc_Array_Get_Item;                           // 0x0070(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5305[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlotID                        K2Node_MakeStruct_S_WeaponSlotID;                  // 0x0090(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x00A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x00F0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EquipWeapon_Return_Value;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5306[0x5];                                     // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5307[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StartingEquipmentItem               CallFunc_Array_Get_Item_1;                         // 0x0148(0x0018)(NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     K2Node_MakeStruct_S_EquipmentSlotID;               // 0x0168(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEquipmentSlot_SlotFull;              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5308[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x0180(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EquipItem_ItemEquipped;                   // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5309[0x2];                                     // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_StartItemEquipment) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_StartItemEquipment");
static_assert(sizeof(BP_EquipmentInventory_C_StartItemEquipment) == 0x0001C0, "Wrong size on BP_EquipmentInventory_C_StartItemEquipment");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EquipmentInventory_C_StartItemEquipment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_EquipmentInventory_C_StartItemEquipment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_EquipmentInventory_C_StartItemEquipment::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'BP_EquipmentInventory_C_StartItemEquipment::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000018, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Add_IntInt_ReturnValue_1) == 0x000024, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_AsController) == 0x000030, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_AsController' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_GetGameMode_ReturnValue) == 0x000040, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000050, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_bSuccess_2) == 0x000060, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000068, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Array_Get_Item) == 0x000070, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_MakeStruct_S_WeaponSlotID) == 0x000090, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_MakeStruct_S_WeaponSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x0000A0, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_CreateNewItem_NewItem) == 0x0000F0, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_EquipWeapon_Return_Value) == 0x000120, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_EquipWeapon_Return_Value' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Greater_IntInt_ReturnValue) == 0x000121, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_IsValid_ReturnValue) == 0x000122, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_GetGameMode_ReturnValue_1) == 0x000128, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000130, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_DynamicCast_bSuccess_3) == 0x000140, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Array_Get_Item_1) == 0x000148, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000160, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, K2Node_MakeStruct_S_EquipmentSlotID) == 0x000168, "Member 'BP_EquipmentInventory_C_StartItemEquipment::K2Node_MakeStruct_S_EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_CheckEquipmentSlot_SlotFull) == 0x000178, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_CheckEquipmentSlot_SlotFull' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_CreateNewItem_NewItem_1) == 0x000180, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_IsValid_ReturnValue_1) == 0x0001B0, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_EquipItem_ItemEquipped) == 0x0001B1, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_EquipItem_ItemEquipped' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Array_Length_ReturnValue_1) == 0x0001B4, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_StartItemEquipment, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001B8, "Member 'BP_EquipmentInventory_C_StartItemEquipment::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.UpdateEquipmentSlotItem
// 0x0058 (0x0058 - 0x0000)
struct BP_EquipmentInventory_C_UpdateEquipmentSlotItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_EquipmentSlotID                     EquipmentSlotID;                                   // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterClothingAttchment_C*          EquipmentActor;                                    // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_UpdateEquipmentSlotItem");
static_assert(sizeof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem) == 0x000058, "Wrong size on BP_EquipmentInventory_C_UpdateEquipmentSlotItem");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem, InvItem) == 0x000000, "Member 'BP_EquipmentInventory_C_UpdateEquipmentSlotItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem, EquipmentSlotID) == 0x000030, "Member 'BP_EquipmentInventory_C_UpdateEquipmentSlotItem::EquipmentSlotID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem, EquipmentActor) == 0x000040, "Member 'BP_EquipmentInventory_C_UpdateEquipmentSlotItem::EquipmentActor' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_EquipmentInventory_C_UpdateEquipmentSlotItem::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateEquipmentSlotItem, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_EquipmentInventory_C_UpdateEquipmentSlotItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EquipmentInventory.BP_EquipmentInventory_C.UpdateWeaponSlotItem
// 0x0050 (0x0050 - 0x0000)
struct BP_EquipmentInventory_C_UpdateWeaponSlotItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_WeaponSlotID                        Weapon_Slot_ID;                                    // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterHoldable_C*                   Holdable;                                          // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         QuickSlot;                                         // 0x0048(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EquipmentInventory_C_UpdateWeaponSlotItem) == 0x000008, "Wrong alignment on BP_EquipmentInventory_C_UpdateWeaponSlotItem");
static_assert(sizeof(BP_EquipmentInventory_C_UpdateWeaponSlotItem) == 0x000050, "Wrong size on BP_EquipmentInventory_C_UpdateWeaponSlotItem");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateWeaponSlotItem, InvItem) == 0x000000, "Member 'BP_EquipmentInventory_C_UpdateWeaponSlotItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateWeaponSlotItem, Weapon_Slot_ID) == 0x000030, "Member 'BP_EquipmentInventory_C_UpdateWeaponSlotItem::Weapon_Slot_ID' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateWeaponSlotItem, Holdable) == 0x000040, "Member 'BP_EquipmentInventory_C_UpdateWeaponSlotItem::Holdable' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateWeaponSlotItem, QuickSlot) == 0x000048, "Member 'BP_EquipmentInventory_C_UpdateWeaponSlotItem::QuickSlot' has a wrong offset!");
static_assert(offsetof(BP_EquipmentInventory_C_UpdateWeaponSlotItem, K2Node_SwitchEnum_CmpSuccess) == 0x00004C, "Member 'BP_EquipmentInventory_C_UpdateWeaponSlotItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

