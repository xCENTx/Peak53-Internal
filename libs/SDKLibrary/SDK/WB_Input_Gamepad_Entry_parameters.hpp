#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Input_Gamepad_Entry

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_Input_Gamepad_Entry.WB_Input_Gamepad_Entry_C.ExecuteUbergraph_WB_Input_Gamepad_Entry
// 0x0068 (0x0068 - 0x0000)
struct WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4973[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHorizontalAlignment                          K2Node_Select_Default_1;                           // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4974[0x6];                                     // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ETextJustify                                  K2Node_Select_Default_2;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasColorChanged_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4975[0x2];                                     // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetGlobalColorByType_ReturnValue;         // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default_3;                           // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4976[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHorizontalBoxSlot*                     CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1;    // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry) == 0x000008, "Wrong alignment on WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry");
static_assert(sizeof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry) == 0x000068, "Wrong size on WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, EntryPoint) == 0x000000, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_bool_Variable) == 0x000004, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable) == 0x000005, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable_1) == 0x000006, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_bool_Variable_1) == 0x000007, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable_2) == 0x000008, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable_3) == 0x000009, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_bool_Variable_2) == 0x00000A, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable_4) == 0x00000B, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_byte_Variable_5) == 0x00000C, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, Temp_bool_Variable_3) == 0x00000D, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_Event_IsDesignTime) == 0x00000E, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000010, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_Select_Default) == 0x000018, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_Select_Default_1) == 0x000019, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue) == 0x000020, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_Select_Default_2) == 0x000028, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, CallFunc_HasColorChanged_ReturnValue) == 0x000029, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::CallFunc_HasColorChanged_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, CallFunc_GetGlobalColorByType_ReturnValue) == 0x00002C, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::CallFunc_GetGlobalColorByType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_Select_Default_3) == 0x00003C, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1) == 0x000050, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::CallFunc_SlotAsHorizontalBoxSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry, K2Node_MakeStruct_Margin) == 0x000058, "Member 'WB_Input_Gamepad_Entry_C_ExecuteUbergraph_WB_Input_Gamepad_Entry::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WB_Input_Gamepad_Entry.WB_Input_Gamepad_Entry_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_Input_Gamepad_Entry_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_Input_Gamepad_Entry_C_PreConstruct) == 0x000001, "Wrong alignment on WB_Input_Gamepad_Entry_C_PreConstruct");
static_assert(sizeof(WB_Input_Gamepad_Entry_C_PreConstruct) == 0x000001, "Wrong size on WB_Input_Gamepad_Entry_C_PreConstruct");
static_assert(offsetof(WB_Input_Gamepad_Entry_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_Input_Gamepad_Entry_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

