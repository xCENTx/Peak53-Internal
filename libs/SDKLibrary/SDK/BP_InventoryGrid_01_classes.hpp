#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_InventoryGrid_01

#include "Basic.hpp"

#include "S_ManualIndexs_structs.hpp"
#include "Engine_structs.hpp"
#include "BP_MasterInventoryGrid_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_InventoryGrid_01.BP_InventoryGrid_01_C
// 0x0060 (0x0310 - 0x02B0)
class UBP_InventoryGrid_01_C final : public UBP_MasterInventoryGrid_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_InventoryGrid_01_C;              // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_InventoryCell_C*                    BP_InventoryCell_01;                               // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    BP_InventoryCell_02;                               // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    BP_InventoryCell_03;                               // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryCell_C*                    BP_InventoryCell_04;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                BP_InventoryItemIcon_01;                           // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                BP_InventoryItemIcon_02;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                BP_InventoryItemIcon_03;                           // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryItemIcon_C*                BP_InventoryItemIcon_04;                           // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_01;                                        // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<struct FS_ManualIndexs>                ManualInvSlots;                                    // 0x0300(0x0010)(Edit, BlueprintVisible)

public:
	void ExecuteUbergraph_BP_InventoryGrid_01(int32 EntryPoint);
	void SetCustomSlots();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_InventoryGrid_01_C">();
	}
	static class UBP_InventoryGrid_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_InventoryGrid_01_C>();
	}
};
static_assert(alignof(UBP_InventoryGrid_01_C) == 0x000008, "Wrong alignment on UBP_InventoryGrid_01_C");
static_assert(sizeof(UBP_InventoryGrid_01_C) == 0x000310, "Wrong size on UBP_InventoryGrid_01_C");
static_assert(offsetof(UBP_InventoryGrid_01_C, UberGraphFrame_BP_InventoryGrid_01_C) == 0x0002B0, "Member 'UBP_InventoryGrid_01_C::UberGraphFrame_BP_InventoryGrid_01_C' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryCell_01) == 0x0002B8, "Member 'UBP_InventoryGrid_01_C::BP_InventoryCell_01' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryCell_02) == 0x0002C0, "Member 'UBP_InventoryGrid_01_C::BP_InventoryCell_02' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryCell_03) == 0x0002C8, "Member 'UBP_InventoryGrid_01_C::BP_InventoryCell_03' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryCell_04) == 0x0002D0, "Member 'UBP_InventoryGrid_01_C::BP_InventoryCell_04' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryItemIcon_01) == 0x0002D8, "Member 'UBP_InventoryGrid_01_C::BP_InventoryItemIcon_01' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryItemIcon_02) == 0x0002E0, "Member 'UBP_InventoryGrid_01_C::BP_InventoryItemIcon_02' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryItemIcon_03) == 0x0002E8, "Member 'UBP_InventoryGrid_01_C::BP_InventoryItemIcon_03' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, BP_InventoryItemIcon_04) == 0x0002F0, "Member 'UBP_InventoryGrid_01_C::BP_InventoryItemIcon_04' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, SizeBox_01) == 0x0002F8, "Member 'UBP_InventoryGrid_01_C::SizeBox_01' has a wrong offset!");
static_assert(offsetof(UBP_InventoryGrid_01_C, ManualInvSlots) == 0x000300, "Member 'UBP_InventoryGrid_01_C::ManualInvSlots' has a wrong offset!");

}

