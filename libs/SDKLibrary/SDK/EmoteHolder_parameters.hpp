#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EmoteHolder

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function EmoteHolder.EmoteHolder_C.ExecuteUbergraph_EmoteHolder
// 0x00B8 (0x00B8 - 0x0000)
struct EmoteHolder_C_ExecuteUbergraph_EmoteHolder final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AD[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(ESlateVisibility InVisibility)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AE[0x3];                                     // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0040(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AF[0x4];                                     // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B0[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEmoteSelection_C*                      CallFunc_Create_ReturnValue;                       // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWrapBoxSlot*                           CallFunc_AddChildToWrapBox_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_CustomEvent_InVisibility;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B1[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40B2[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SGKMasterCharacter_C*               K2Node_DynamicCast_AsBP_SGKMaster_Character;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder) == 0x000008, "Wrong alignment on EmoteHolder_C_ExecuteUbergraph_EmoteHolder");
static_assert(sizeof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder) == 0x0000B8, "Wrong size on EmoteHolder_C_ExecuteUbergraph_EmoteHolder");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, EntryPoint) == 0x000000, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::EntryPoint' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000014, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_CreateDelegate_OutputDelegate_1) == 0x000020, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, Temp_int_Array_Index_Variable) == 0x000030, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_Event_IsDesignTime) == 0x00003C, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000040, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_Array_Get_Item) == 0x000050, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_GetOwningPlayer_ReturnValue) == 0x000060, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_Create_ReturnValue) == 0x000070, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_AddChildToWrapBox_ReturnValue) == 0x000078, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_AddChildToWrapBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000080, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_DynamicCast_AsBP_SGKController) == 0x000088, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_CustomEvent_InVisibility) == 0x000091, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_CustomEvent_InVisibility' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_K2_GetPawn_ReturnValue) == 0x000098, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_SwitchEnum_CmpSuccess) == 0x0000A0, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_DynamicCast_AsBP_SGKMaster_Character) == 0x0000A8, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_DynamicCast_AsBP_SGKMaster_Character' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(EmoteHolder_C_ExecuteUbergraph_EmoteHolder, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x0000B1, "Member 'EmoteHolder_C_ExecuteUbergraph_EmoteHolder::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");

// Function EmoteHolder.EmoteHolder_C.OnVisibilityChanged_Event
// 0x0001 (0x0001 - 0x0000)
struct EmoteHolder_C_OnVisibilityChanged_Event final
{
public:
	ESlateVisibility                              InVisibility;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteHolder_C_OnVisibilityChanged_Event) == 0x000001, "Wrong alignment on EmoteHolder_C_OnVisibilityChanged_Event");
static_assert(sizeof(EmoteHolder_C_OnVisibilityChanged_Event) == 0x000001, "Wrong size on EmoteHolder_C_OnVisibilityChanged_Event");
static_assert(offsetof(EmoteHolder_C_OnVisibilityChanged_Event, InVisibility) == 0x000000, "Member 'EmoteHolder_C_OnVisibilityChanged_Event::InVisibility' has a wrong offset!");

// Function EmoteHolder.EmoteHolder_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct EmoteHolder_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(EmoteHolder_C_PreConstruct) == 0x000001, "Wrong alignment on EmoteHolder_C_PreConstruct");
static_assert(sizeof(EmoteHolder_C_PreConstruct) == 0x000001, "Wrong size on EmoteHolder_C_PreConstruct");
static_assert(offsetof(EmoteHolder_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'EmoteHolder_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

