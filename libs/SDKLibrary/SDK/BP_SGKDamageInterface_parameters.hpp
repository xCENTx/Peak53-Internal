#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SGKDamageInterface

#include "Basic.hpp"

#include "E_DamageType_structs.hpp"
#include "E_Hitbox_structs.hpp"


namespace SDK::Params
{

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK BleedDamage
// 0x0018 (0x0018 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_BleedDamage final
{
public:
	int32                                         TickDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386E[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TickTime;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BleedLength;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_BleedDamage) == 0x000008, "Wrong alignment on BP_SGKDamageInterface_C_SGK_BleedDamage");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_BleedDamage) == 0x000018, "Wrong size on BP_SGKDamageInterface_C_SGK_BleedDamage");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_BleedDamage, TickDamage) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_BleedDamage::TickDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_BleedDamage, TickTime) == 0x000008, "Member 'BP_SGKDamageInterface_C_SGK_BleedDamage::TickTime' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_BleedDamage, BleedLength) == 0x000010, "Member 'BP_SGKDamageInterface_C_SGK_BleedDamage::BleedLength' has a wrong offset!");

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK CurrentHealth
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_CurrentHealth final
{
public:
	int32                                         Health;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_CurrentHealth) == 0x000004, "Wrong alignment on BP_SGKDamageInterface_C_SGK_CurrentHealth");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_CurrentHealth) == 0x000004, "Wrong size on BP_SGKDamageInterface_C_SGK_CurrentHealth");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_CurrentHealth, Health) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_CurrentHealth::Health' has a wrong offset!");

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK Damage
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_Damage final
{
public:
	int32                                         BaseDamage;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_386F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 EventInstigator;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 DamageCauser;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_DamageType                                  DamageType;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Hitbox                                      HitBox;                                            // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_Damage) == 0x000008, "Wrong alignment on BP_SGKDamageInterface_C_SGK_Damage");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_Damage) == 0x000020, "Wrong size on BP_SGKDamageInterface_C_SGK_Damage");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_Damage, BaseDamage) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_Damage::BaseDamage' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_Damage, EventInstigator) == 0x000008, "Member 'BP_SGKDamageInterface_C_SGK_Damage::EventInstigator' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_Damage, DamageCauser) == 0x000010, "Member 'BP_SGKDamageInterface_C_SGK_Damage::DamageCauser' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_Damage, DamageType) == 0x000018, "Member 'BP_SGKDamageInterface_C_SGK_Damage::DamageType' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_Damage, HitBox) == 0x000019, "Member 'BP_SGKDamageInterface_C_SGK_Damage::HitBox' has a wrong offset!");

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK MaxHealth
// 0x0004 (0x0004 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_MaxHealth final
{
public:
	int32                                         MaxHealth;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_MaxHealth) == 0x000004, "Wrong alignment on BP_SGKDamageInterface_C_SGK_MaxHealth");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_MaxHealth) == 0x000004, "Wrong size on BP_SGKDamageInterface_C_SGK_MaxHealth");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_MaxHealth, MaxHealth) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_MaxHealth::MaxHealth' has a wrong offset!");

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK SetCurrentHealth
// 0x0008 (0x0008 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_SetCurrentHealth final
{
public:
	int32                                         NewHealthAmount;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_SetCurrentHealth) == 0x000004, "Wrong alignment on BP_SGKDamageInterface_C_SGK_SetCurrentHealth");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_SetCurrentHealth) == 0x000008, "Wrong size on BP_SGKDamageInterface_C_SGK_SetCurrentHealth");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_SetCurrentHealth, NewHealthAmount) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_SetCurrentHealth::NewHealthAmount' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_SetCurrentHealth, ReturnValue) == 0x000004, "Member 'BP_SGKDamageInterface_C_SGK_SetCurrentHealth::ReturnValue' has a wrong offset!");

// Function BP_SGKDamageInterface.BP_SGKDamageInterface_C.SGK ShowHealthWidget
// 0x0020 (0x0020 - 0x0000)
struct BP_SGKDamageInterface_C_SGK_ShowHealthWidget final
{
public:
	bool                                          ShowHealthWidget;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3870[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   HealthWidgetName;                                  // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_SGKDamageInterface_C_SGK_ShowHealthWidget) == 0x000008, "Wrong alignment on BP_SGKDamageInterface_C_SGK_ShowHealthWidget");
static_assert(sizeof(BP_SGKDamageInterface_C_SGK_ShowHealthWidget) == 0x000020, "Wrong size on BP_SGKDamageInterface_C_SGK_ShowHealthWidget");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_ShowHealthWidget, ShowHealthWidget) == 0x000000, "Member 'BP_SGKDamageInterface_C_SGK_ShowHealthWidget::ShowHealthWidget' has a wrong offset!");
static_assert(offsetof(BP_SGKDamageInterface_C_SGK_ShowHealthWidget, HealthWidgetName) == 0x000008, "Member 'BP_SGKDamageInterface_C_SGK_ShowHealthWidget::HealthWidgetName' has a wrong offset!");

}

