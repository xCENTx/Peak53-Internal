#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AntizeVOIPComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AntizeVOIPComponent.BP_AntizeVOIPComponent_C
// 0x0058 (0x00F8 - 0x00A0)
class UBP_AntizeVOIPComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVOIPTalker*                            MyVoiceRef;                                        // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          VOIPLoopBack_;                                     // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D90[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer_CheckForLoop;                                // 0x00B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UW_VOIPHUD_C*                           W_VOIPHUDRef;                                      // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        MaxDistanceForVOIPWidget;                          // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VOIPIconVisible_;                                  // 0x00D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMuted_;                                          // 0x00D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D91[0x6];                                     // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerList_C*                        PlayerLisrRef;                                     // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CharacterRef;                                      // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVOIPActivated_;                                  // 0x00E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D92[0x3];                                     // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TeamId;                                            // 0x00EC(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attempt;                                           // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateDeactivateVOIP(bool Activated_);
	void CallJoinTeam(int32 NewTeamID);
	void CallSetAttenuationOnTeam(bool PassToAnotherPlayer_, bool InSameTeam_, class ACharacter* ToPlayerRef, class ACharacter* FromPlayerRef);
	void CanPassOnTeam(int32 PlayerTeamID, int32 MyTeamNewID, int32 MyTeamOldID, bool* CanPass_);
	void CheckForVOIP();
	void Client_RefreshAttenuationOnTeam(bool InSameTeam_, class ACharacter* FromPlayerRef);
	void CreateVOIP();
	void ExecuteUbergraph_BP_AntizeVOIPComponent(int32 EntryPoint);
	class USoundAttenuation* GetAttenutation(bool InMyTeam, bool Param_IsMuted_);
	void GetIsInSameTeam(int32 TeamId_1, int32 TeamId_2, bool* InSameTeam_);
	void Local_RefreshAttenuationOnTeam(bool InSameTeam);
	void Local_SetIsMuted(bool Mute_, bool InMyTeam);
	void Local_SetVisibilityVOIPIcon(bool Visible_);
	void MuteTemplate(int32 PlayerIndex);
	void OnDeath();
	void OnJoinTeam(int32 NewTeamID, int32 OldTeamID);
	void OnTimer_CheckForVOIP();
	void ReceiveBeginPlay();
	void SecureMute();
	void Server_SendSetAttenuationOnTeam(bool InSameTeam_, class ACharacter* ToPlayerRef, class ACharacter* FromPlayerRef);
	void Server_SetTeamID(int32 Param_TeamId);
	void Server_SetVOIPActivated(bool VOIPActivated_);
	void SetVisibilityVOIPIconByActorRef(class AActor* ActorRef, bool Visible_);
	void ShowHidePlayerList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AntizeVOIPComponent_C">();
	}
	static class UBP_AntizeVOIPComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AntizeVOIPComponent_C>();
	}
};
static_assert(alignof(UBP_AntizeVOIPComponent_C) == 0x000008, "Wrong alignment on UBP_AntizeVOIPComponent_C");
static_assert(sizeof(UBP_AntizeVOIPComponent_C) == 0x0000F8, "Wrong size on UBP_AntizeVOIPComponent_C");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_AntizeVOIPComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, MyVoiceRef) == 0x0000A8, "Member 'UBP_AntizeVOIPComponent_C::MyVoiceRef' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, VOIPLoopBack_) == 0x0000B0, "Member 'UBP_AntizeVOIPComponent_C::VOIPLoopBack_' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, Timer_CheckForLoop) == 0x0000B8, "Member 'UBP_AntizeVOIPComponent_C::Timer_CheckForLoop' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, W_VOIPHUDRef) == 0x0000C0, "Member 'UBP_AntizeVOIPComponent_C::W_VOIPHUDRef' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, MaxDistanceForVOIPWidget) == 0x0000C8, "Member 'UBP_AntizeVOIPComponent_C::MaxDistanceForVOIPWidget' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, VOIPIconVisible_) == 0x0000D0, "Member 'UBP_AntizeVOIPComponent_C::VOIPIconVisible_' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, IsMuted_) == 0x0000D1, "Member 'UBP_AntizeVOIPComponent_C::IsMuted_' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, PlayerLisrRef) == 0x0000D8, "Member 'UBP_AntizeVOIPComponent_C::PlayerLisrRef' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, CharacterRef) == 0x0000E0, "Member 'UBP_AntizeVOIPComponent_C::CharacterRef' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, IsVOIPActivated_) == 0x0000E8, "Member 'UBP_AntizeVOIPComponent_C::IsVOIPActivated_' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, TeamId) == 0x0000EC, "Member 'UBP_AntizeVOIPComponent_C::TeamId' has a wrong offset!");
static_assert(offsetof(UBP_AntizeVOIPComponent_C, Attempt) == 0x0000F0, "Member 'UBP_AntizeVOIPComponent_C::Attempt' has a wrong offset!");

}

