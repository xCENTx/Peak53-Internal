#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HostNewGameServer

#include "Basic.hpp"

#include "S_SaveMetaData_structs.hpp"


namespace SDK::Params
{

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(sizeof(BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature) == 0x000018, "Wrong size on BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature");
static_assert(offsetof(BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'BP_HostNewGameServer_C_BndEvt__BP_HostNewGameServer_SaveNameEntryBox_K2Node_ComponentBoundEvent_0_OnEditableTextBoxChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.DeleteExistingSave
// 0x0088 (0x0088 - 0x0000)
struct BP_HostNewGameServer_C_DeleteExistingSave final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SaveFoundL;                                        // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4947[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MetaDataIndexL;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKSaveGameMetaData_C*              SaveMetaDataL;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4948[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4949[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494A[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494B[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_SaveMetaData                        CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494C[0x1];                                     // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKSaveGameMetaData_C*              K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data;    // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HostNewGameServer_C_DeleteExistingSave) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_DeleteExistingSave");
static_assert(sizeof(BP_HostNewGameServer_C_DeleteExistingSave) == 0x000088, "Wrong size on BP_HostNewGameServer_C_DeleteExistingSave");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, SlotName) == 0x000000, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::SlotName' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, SaveFoundL) == 0x000010, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::SaveFoundL' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, MetaDataIndexL) == 0x000014, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::MetaDataIndexL' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, SaveMetaDataL) == 0x000018, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::SaveMetaDataL' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_SaveGameToSlot_ReturnValue) == 0x000030, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_DeleteGameInSlot_ReturnValue) == 0x000038, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00006D, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000070, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data) == 0x000078, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_DeleteExistingSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000081, "Member 'BP_HostNewGameServer_C_DeleteExistingSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.ExecuteUbergraph_BP_HostNewGameServer
// 0x0198 (0x0198 - 0x0000)
struct BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494D[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494E[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0038(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4950[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue_1;                    // 0x0098(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSelectedOption_ReturnValue;            // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue_2;                    // 0x00E0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetText_ReturnValue_3;                    // 0x0108(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4951[0x4];                                     // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0138(0x0018)(ConstParm)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4952[0x4];                                     // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Left_ReturnValue;                         // 0x0168(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4953[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0018)()
};
static_assert(alignof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer");
static_assert(sizeof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer) == 0x000198, "Wrong size on BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, EntryPoint) == 0x000000, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface) == 0x000020, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetText_ReturnValue) == 0x000038, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetGameInstance_ReturnValue_1) == 0x000060, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1) == 0x000068, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetGameInstance_ReturnValue_2) == 0x000080, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000088, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetText_ReturnValue_1) == 0x000098, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B0, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0000C0, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetSelectedOption_ReturnValue) == 0x0000D0, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetSelectedOption_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetText_ReturnValue_2) == 0x0000E0, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_TextToString_ReturnValue_2) == 0x0000F8, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_GetText_ReturnValue_3) == 0x000108, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_GetText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000120, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_StringToInt_ReturnValue) == 0x000130, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, K2Node_ComponentBoundEvent_Text) == 0x000138, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000150, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Len_ReturnValue) == 0x000160, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Left_ReturnValue) == 0x000168, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Greater_IntInt_ReturnValue) == 0x000178, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'BP_HostNewGameServer_C_ExecuteUbergraph_BP_HostNewGameServer::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.FindExistingSave
// 0x0080 (0x0080 - 0x0000)
struct BP_HostNewGameServer_C_FindExistingSave final
{
public:
	class FString                                 SlotName;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          SaveFound;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4954[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGameMetaData_C*              SaveMetaDataL;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SaveMetaData                        CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4955[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4956[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGameMetaData_C*              K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data;    // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HostNewGameServer_C_FindExistingSave) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_FindExistingSave");
static_assert(sizeof(BP_HostNewGameServer_C_FindExistingSave) == 0x000080, "Wrong size on BP_HostNewGameServer_C_FindExistingSave");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, SlotName) == 0x000000, "Member 'BP_HostNewGameServer_C_FindExistingSave::SlotName' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, SaveFound) == 0x000010, "Member 'BP_HostNewGameServer_C_FindExistingSave::SaveFound' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, SaveMetaDataL) == 0x000018, "Member 'BP_HostNewGameServer_C_FindExistingSave::SaveMetaDataL' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_HostNewGameServer_C_FindExistingSave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BP_HostNewGameServer_C_FindExistingSave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000059, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_LoadGameFromSlot_ReturnValue) == 0x000060, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, CallFunc_DoesSaveGameExist_ReturnValue) == 0x000068, "Member 'BP_HostNewGameServer_C_FindExistingSave::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data) == 0x000070, "Member 'BP_HostNewGameServer_C_FindExistingSave::K2Node_DynamicCast_AsBP_SGKSave_Game_Meta_Data' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_FindExistingSave, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_HostNewGameServer_C_FindExistingSave::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.Get_CreateServerButton_bIsEnabled
// 0x0020 (0x0020 - 0x0000)
struct BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4957[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled");
static_assert(sizeof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled) == 0x000020, "Wrong size on BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled");
static_assert(offsetof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled, ReturnValue) == 0x000000, "Member 'BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000010, "Member 'BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_HostNewGameServer_C_Get_CreateServerButton_bIsEnabled::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.GetText
// 0x0040 (0x0040 - 0x0000)
struct BP_HostNewGameServer_C_GetText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	double                                        CallFunc_Round_A_ImplicitCast;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HostNewGameServer_C_GetText) == 0x000008, "Wrong alignment on BP_HostNewGameServer_C_GetText");
static_assert(sizeof(BP_HostNewGameServer_C_GetText) == 0x000040, "Wrong size on BP_HostNewGameServer_C_GetText");
static_assert(offsetof(BP_HostNewGameServer_C_GetText, ReturnValue) == 0x000000, "Member 'BP_HostNewGameServer_C_GetText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_GetText, CallFunc_GetValue_ReturnValue) == 0x000018, "Member 'BP_HostNewGameServer_C_GetText::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_GetText, CallFunc_Round_ReturnValue) == 0x00001C, "Member 'BP_HostNewGameServer_C_GetText::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_GetText, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'BP_HostNewGameServer_C_GetText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HostNewGameServer_C_GetText, CallFunc_Round_A_ImplicitCast) == 0x000038, "Member 'BP_HostNewGameServer_C_GetText::CallFunc_Round_A_ImplicitCast' has a wrong offset!");

// Function BP_HostNewGameServer.BP_HostNewGameServer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_HostNewGameServer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HostNewGameServer_C_PreConstruct) == 0x000001, "Wrong alignment on BP_HostNewGameServer_C_PreConstruct");
static_assert(sizeof(BP_HostNewGameServer_C_PreConstruct) == 0x000001, "Wrong size on BP_HostNewGameServer_C_PreConstruct");
static_assert(offsetof(BP_HostNewGameServer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_HostNewGameServer_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

