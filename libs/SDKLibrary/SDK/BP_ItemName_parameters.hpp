#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemName

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ItemName.BP_ItemName_C.ExecuteUbergraph_BP_ItemName
// 0x0008 (0x0008 - 0x0000)
struct BP_ItemName_C_ExecuteUbergraph_BP_ItemName final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemName_C_ExecuteUbergraph_BP_ItemName) == 0x000004, "Wrong alignment on BP_ItemName_C_ExecuteUbergraph_BP_ItemName");
static_assert(sizeof(BP_ItemName_C_ExecuteUbergraph_BP_ItemName) == 0x000008, "Wrong size on BP_ItemName_C_ExecuteUbergraph_BP_ItemName");
static_assert(offsetof(BP_ItemName_C_ExecuteUbergraph_BP_ItemName, EntryPoint) == 0x000000, "Member 'BP_ItemName_C_ExecuteUbergraph_BP_ItemName::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_ExecuteUbergraph_BP_ItemName, K2Node_Event_IsDesignTime) == 0x000004, "Member 'BP_ItemName_C_ExecuteUbergraph_BP_ItemName::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_ItemName.BP_ItemName_C.InitializeName
// 0x0308 (0x0308 - 0x0000)
struct BP_ItemName_C_InitializeName final
{
public:
	class AActor*                                 LookAtActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        LookAtComponent;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountL;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5234[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AInstancedFoliageActor*                 K2Node_DynamicCast_AsInstanced_Foliage_Actor;      // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5235[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5236[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5237[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_ItemAmount_Amount;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SGK_InteractName_InteractName;            // 0x0058(0x0018)()
	class FText                                   CallFunc_TextToUpper_ReturnValue;                  // 0x0070(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5238[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0098(0x0050)(HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5239[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x00F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0108(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0158(0x0010)(ReferenceParm)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2; // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523A[0x7];                                     // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0180(0x0018)()
	int32                                         CallFunc_SGK_ItemAmount_Amount_1;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523B[0x4];                                     // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_1;                           // 0x01A0(0x0018)()
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523C[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_SGK_InteractName_InteractName_1;          // 0x01D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x01F0(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_TextToUpper_ReturnValue_1;                // 0x0240(0x0018)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523D[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default_2;                           // 0x0260(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0278(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x02C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x02D8(0x0018)()
	class FText                                   K2Node_Select_Default_3;                           // 0x02F0(0x0018)()
};
static_assert(alignof(BP_ItemName_C_InitializeName) == 0x000008, "Wrong alignment on BP_ItemName_C_InitializeName");
static_assert(sizeof(BP_ItemName_C_InitializeName) == 0x000308, "Wrong size on BP_ItemName_C_InitializeName");
static_assert(offsetof(BP_ItemName_C_InitializeName, LookAtActor) == 0x000000, "Member 'BP_ItemName_C_InitializeName::LookAtActor' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, LookAtComponent) == 0x000008, "Member 'BP_ItemName_C_InitializeName::LookAtComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, AmountL) == 0x000010, "Member 'BP_ItemName_C_InitializeName::AmountL' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, Temp_bool_Variable) == 0x000014, "Member 'BP_ItemName_C_InitializeName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_IsValid_ReturnValue) == 0x000015, "Member 'BP_ItemName_C_InitializeName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_AsInstanced_Foliage_Actor) == 0x000018, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_AsInstanced_Foliage_Actor' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, Temp_bool_Variable_1) == 0x000021, "Member 'BP_ItemName_C_InitializeName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, Temp_bool_Variable_2) == 0x000022, "Member 'BP_ItemName_C_InitializeName::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, Temp_bool_Variable_3) == 0x000023, "Member 'BP_ItemName_C_InitializeName::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000028, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1) == 0x000040, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_SGK_ItemAmount_Amount) == 0x000054, "Member 'BP_ItemName_C_InitializeName::CallFunc_SGK_ItemAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_SGK_InteractName_InteractName) == 0x000058, "Member 'BP_ItemName_C_InitializeName::CallFunc_SGK_InteractName_InteractName' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_TextToUpper_ReturnValue) == 0x000070, "Member 'BP_ItemName_C_InitializeName::CallFunc_TextToUpper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_ItemName_C_InitializeName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000090, "Member 'BP_ItemName_C_InitializeName::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeStruct_FormatArgumentData) == 0x000098, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_ItemName_C_InitializeName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_Select_Default) == 0x0000F0, "Member 'BP_ItemName_C_InitializeName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeStruct_FormatArgumentData_1) == 0x000108, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeArray_Array) == 0x000158, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2) == 0x000168, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_bSuccess_3) == 0x000178, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Format_ReturnValue) == 0x000180, "Member 'BP_ItemName_C_InitializeName::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_SGK_ItemAmount_Amount_1) == 0x000198, "Member 'BP_ItemName_C_InitializeName::CallFunc_SGK_ItemAmount_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_Select_Default_1) == 0x0001A0, "Member 'BP_ItemName_C_InitializeName::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3) == 0x0001B8, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_3' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_DynamicCast_bSuccess_4) == 0x0001C8, "Member 'BP_ItemName_C_InitializeName::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0001D0, "Member 'BP_ItemName_C_InitializeName::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_SGK_InteractName_InteractName_1) == 0x0001D8, "Member 'BP_ItemName_C_InitializeName::CallFunc_SGK_InteractName_InteractName_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeStruct_FormatArgumentData_2) == 0x0001F0, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_TextToUpper_ReturnValue_1) == 0x000240, "Member 'BP_ItemName_C_InitializeName::CallFunc_TextToUpper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000258, "Member 'BP_ItemName_C_InitializeName::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_Select_Default_2) == 0x000260, "Member 'BP_ItemName_C_InitializeName::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeStruct_FormatArgumentData_3) == 0x000278, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_MakeArray_Array_1) == 0x0002C8, "Member 'BP_ItemName_C_InitializeName::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, CallFunc_Format_ReturnValue_1) == 0x0002D8, "Member 'BP_ItemName_C_InitializeName::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_InitializeName, K2Node_Select_Default_3) == 0x0002F0, "Member 'BP_ItemName_C_InitializeName::K2Node_Select_Default_3' has a wrong offset!");

// Function BP_ItemName.BP_ItemName_C.NamePanelVisibility
// 0x0138 (0x0138 - 0x0000)
struct BP_ItemName_C_NamePanelVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponentL;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HitActorL;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523F[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowInteraction_AllowInteraction;    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5240[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_AllowInteraction_AllowInteraction_1;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5241[0x4];                                     // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5242[0x1];                                     // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5243[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5244[0x4];                                     // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemName_C_NamePanelVisibility) == 0x000008, "Wrong alignment on BP_ItemName_C_NamePanelVisibility");
static_assert(sizeof(BP_ItemName_C_NamePanelVisibility) == 0x000138, "Wrong size on BP_ItemName_C_NamePanelVisibility");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, ReturnValue) == 0x000000, "Member 'BP_ItemName_C_NamePanelVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, HitComponentL) == 0x000008, "Member 'BP_ItemName_C_NamePanelVisibility::HitComponentL' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, HitActorL) == 0x000010, "Member 'BP_ItemName_C_NamePanelVisibility::HitActorL' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000020, "Member 'BP_ItemName_C_NamePanelVisibility::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_ItemName_C_NamePanelVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_SGK_AllowInteraction_AllowInteraction) == 0x000031, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_SGK_AllowInteraction_AllowInteraction' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1) == 0x000038, "Member 'BP_ItemName_C_NamePanelVisibility::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BP_ItemName_C_NamePanelVisibility::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_SGK_AllowInteraction_AllowInteraction_1) == 0x000049, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_SGK_AllowInteraction_AllowInteraction_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_IsValid_ReturnValue) == 0x00004A, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x00004B, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_GetPlayerController_ReturnValue) == 0x000050, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_bBlockingHit) == 0x000061, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_bInitialOverlap) == 0x000062, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_Time) == 0x000064, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_Distance) == 0x000068, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_Location) == 0x000070, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_ImpactPoint) == 0x000088, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_Normal) == 0x0000A0, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_BoneName) == 0x0000F0, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_HitItem) == 0x0000F8, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_ElementIndex) == 0x0000FC, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_FaceIndex) == 0x000100, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_TraceStart) == 0x000108, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ItemName_C_NamePanelVisibility, CallFunc_BreakHitResult_TraceEnd) == 0x000120, "Member 'BP_ItemName_C_NamePanelVisibility::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

// Function BP_ItemName.BP_ItemName_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ItemName_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ItemName_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ItemName_C_PreConstruct");
static_assert(sizeof(BP_ItemName_C_PreConstruct) == 0x000001, "Wrong size on BP_ItemName_C_PreConstruct");
static_assert(offsetof(BP_ItemName_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ItemName_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

