#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_MasterMenuPanel_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_AudioSettings.BP_AudioSettings_C
// 0x0150 (0x0450 - 0x0300)
class UBP_AudioSettings_C final : public UBP_MasterMenuPanel_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_AudioSettings_C;                 // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USlider*                                AmbientSlider;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Backround;                                         // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                EffectSlider_1;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MasterSlider;                                      // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MusicSlider;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MusicSlider_1;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                MusicSlider_2;                                     // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Subtitle;                                          // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGameInstance*                          GameInstance;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackroundColor;                                    // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x0368(0x0018)(Edit, BlueprintVisible)
	class FText                                   SubtitleText;                                      // 0x0380(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         TitleFont;                                         // 0x0398(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         SubtitleFont;                                      // 0x03F0(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	class USoundCue*                              Sound_Cue;                                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__AmbientSlider_K2Node_ComponentBoundEvent_3_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__BP_AudioSettings_MusicSlider_1_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__BP_AudioSettings_MusicSlider_2_K2Node_ComponentBoundEvent_1_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__EffectSlider_1_K2Node_ComponentBoundEvent_2_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__MasterSlider_K2Node_ComponentBoundEvent_0_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void BndEvt__MusicSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature(float Value);
	void Construct();
	void ExecuteUbergraph_BP_AudioSettings(int32 EntryPoint);
	void GetSaveSetting();
	void LoadAudioSaveVolumes();
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AudioSettings_C">();
	}
	static class UBP_AudioSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_AudioSettings_C>();
	}
};
static_assert(alignof(UBP_AudioSettings_C) == 0x000008, "Wrong alignment on UBP_AudioSettings_C");
static_assert(sizeof(UBP_AudioSettings_C) == 0x000450, "Wrong size on UBP_AudioSettings_C");
static_assert(offsetof(UBP_AudioSettings_C, UberGraphFrame_BP_AudioSettings_C) == 0x000300, "Member 'UBP_AudioSettings_C::UberGraphFrame_BP_AudioSettings_C' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, AmbientSlider) == 0x000308, "Member 'UBP_AudioSettings_C::AmbientSlider' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, Backround) == 0x000310, "Member 'UBP_AudioSettings_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, EffectSlider_1) == 0x000318, "Member 'UBP_AudioSettings_C::EffectSlider_1' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, MasterSlider) == 0x000320, "Member 'UBP_AudioSettings_C::MasterSlider' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, MusicSlider) == 0x000328, "Member 'UBP_AudioSettings_C::MusicSlider' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, MusicSlider_1) == 0x000330, "Member 'UBP_AudioSettings_C::MusicSlider_1' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, MusicSlider_2) == 0x000338, "Member 'UBP_AudioSettings_C::MusicSlider_2' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, Subtitle) == 0x000340, "Member 'UBP_AudioSettings_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, Title) == 0x000348, "Member 'UBP_AudioSettings_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, GameInstance) == 0x000350, "Member 'UBP_AudioSettings_C::GameInstance' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, BackroundColor) == 0x000358, "Member 'UBP_AudioSettings_C::BackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, TitleText) == 0x000368, "Member 'UBP_AudioSettings_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, SubtitleText) == 0x000380, "Member 'UBP_AudioSettings_C::SubtitleText' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, TitleFont) == 0x000398, "Member 'UBP_AudioSettings_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, SubtitleFont) == 0x0003F0, "Member 'UBP_AudioSettings_C::SubtitleFont' has a wrong offset!");
static_assert(offsetof(UBP_AudioSettings_C, Sound_Cue) == 0x000448, "Member 'UBP_AudioSettings_C::Sound_Cue' has a wrong offset!");

}

