#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SaveSystem

#include "Basic.hpp"

#include "S_LevelSaveData_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SaveSystem.BP_SaveSystem_C
// 0x01D0 (0x0460 - 0x0290)
class ABP_SaveSystem_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadSaveOnBeginPlay;                               // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531A[0x7];                                     // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SlotName;                                          // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash)
	bool                                          Show_Debug_Text;                                   // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531B[0x7];                                     // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Debug_Text_Time;                                   // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             SaveData;                                          // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             LoadData;                                          // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          FirstLoadDone;                                     // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531C[0x7];                                     // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           AutoSaveTimer;                                     // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKSaveGame_C*                      SaveGameData;                                      // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKSaveGame_C*                      LoadedSaveGameData;                                // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoSave;                                          // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531D[0x7];                                     // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        AutoSaveTime;                                      // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Loading;                                           // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChangeAutoSaveSlotOnSave;                          // 0x0319(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531E[0x6];                                     // 0x031A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 SaveLevel;                                         // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          PlayerLoadSave;                                    // 0x0330(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531F[0x7];                                     // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UActorComponent*>                SaveComponents;                                    // 0x0338(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class FString                                 SavingSlot;                                        // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_LevelSaveData                       CurrentLevelSave;                                  // 0x0358(0x00D0)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          InSave;                                            // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5320[0x7];                                     // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         TempActors;                                        // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	TArray<class UActorComponent*>                TempComponents;                                    // 0x0440(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<class AActor*>                         SaveActors;                                        // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void AutoSaveGame();
	void CallSaveEvents(const class FString& SaveSlot);
	void Completed_A03379DA470360706C4BD1BF93C92FA9(class USaveGame* Param_SaveGame, bool bSuccess);
	void Completed_E4E68CAB46C23F15046FDB8C35460535(class USaveGame* Param_SaveGame, bool bSuccess);
	void DebugText(const class FString& Param_DebugText, const struct FLinearColor& TextColour);
	void DeleteMetaData(const class FString& Param_SlotName);
	void DeletePlayerSave(const class FText& PlayerSave, const class FString& Param_SlotName, const class FText& RespawnName);
	void DeleteSave();
	void DeleteSettingsSave();
	void ExecuteUbergraph_BP_SaveSystem(int32 EntryPoint);
	bool FindPlayerLocation(const class FText& PlayerName, struct FTransform* Transform);
	void InitializeSaveSystem();
	void ItemSpawnSaveData(class ABP_MasterItemSpawner_C* ItemSpawner, class UBP_SGKSaveGame_C* Param_SaveGame, bool* SaveFound, struct FS_MasterItemSave* ItemSave);
	void LoadAllBuildParts();
	void LoadBuildParts();
	void LoadData__DelegateSignature(class UBP_SGKSaveGame_C* Param_SaveGame);
	void LoadSave(bool InGameLoad, const class FString& SaveSlotName, const class FString& LevelName);
	void LoadSavedItems();
	void ReceiveBeginPlay();
	void SaveData__DelegateSignature(class UBP_SGKSaveGame_C* Param_SaveGame);
	void SaveDataToSlot(const class FString& Param_SlotName, class USaveGame* SaveGameObject);
	void SaveGame(const class FString& SaveSlotName);
	void SaveMetaData(const class FString& SaveSlotName);
	void ServerSaveGame(const class FString& SaveSlotName);
	void StartAutoSaveTimer();
	void UpdatePlayerSave(const class FString& SaveName, class UBP_PlayerInventory_C* PlayerInventory);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SaveSystem_C">();
	}
	static class ABP_SaveSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SaveSystem_C>();
	}
};
static_assert(alignof(ABP_SaveSystem_C) == 0x000008, "Wrong alignment on ABP_SaveSystem_C");
static_assert(sizeof(ABP_SaveSystem_C) == 0x000460, "Wrong size on ABP_SaveSystem_C");
static_assert(offsetof(ABP_SaveSystem_C, UberGraphFrame) == 0x000290, "Member 'ABP_SaveSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, Billboard) == 0x000298, "Member 'ABP_SaveSystem_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, LoadSaveOnBeginPlay) == 0x0002A0, "Member 'ABP_SaveSystem_C::LoadSaveOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SlotName) == 0x0002A8, "Member 'ABP_SaveSystem_C::SlotName' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, Show_Debug_Text) == 0x0002B8, "Member 'ABP_SaveSystem_C::Show_Debug_Text' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, Debug_Text_Time) == 0x0002C0, "Member 'ABP_SaveSystem_C::Debug_Text_Time' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SaveData) == 0x0002C8, "Member 'ABP_SaveSystem_C::SaveData' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, LoadData) == 0x0002D8, "Member 'ABP_SaveSystem_C::LoadData' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, FirstLoadDone) == 0x0002E8, "Member 'ABP_SaveSystem_C::FirstLoadDone' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, AutoSaveTimer) == 0x0002F0, "Member 'ABP_SaveSystem_C::AutoSaveTimer' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SaveGameData) == 0x0002F8, "Member 'ABP_SaveSystem_C::SaveGameData' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, LoadedSaveGameData) == 0x000300, "Member 'ABP_SaveSystem_C::LoadedSaveGameData' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, AutoSave) == 0x000308, "Member 'ABP_SaveSystem_C::AutoSave' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, AutoSaveTime) == 0x000310, "Member 'ABP_SaveSystem_C::AutoSaveTime' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, Loading) == 0x000318, "Member 'ABP_SaveSystem_C::Loading' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, ChangeAutoSaveSlotOnSave) == 0x000319, "Member 'ABP_SaveSystem_C::ChangeAutoSaveSlotOnSave' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SaveLevel) == 0x000320, "Member 'ABP_SaveSystem_C::SaveLevel' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, PlayerLoadSave) == 0x000330, "Member 'ABP_SaveSystem_C::PlayerLoadSave' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SaveComponents) == 0x000338, "Member 'ABP_SaveSystem_C::SaveComponents' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SavingSlot) == 0x000348, "Member 'ABP_SaveSystem_C::SavingSlot' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, CurrentLevelSave) == 0x000358, "Member 'ABP_SaveSystem_C::CurrentLevelSave' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, InSave) == 0x000428, "Member 'ABP_SaveSystem_C::InSave' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, TempActors) == 0x000430, "Member 'ABP_SaveSystem_C::TempActors' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, TempComponents) == 0x000440, "Member 'ABP_SaveSystem_C::TempComponents' has a wrong offset!");
static_assert(offsetof(ABP_SaveSystem_C, SaveActors) == 0x000450, "Member 'ABP_SaveSystem_C::SaveActors' has a wrong offset!");

}

