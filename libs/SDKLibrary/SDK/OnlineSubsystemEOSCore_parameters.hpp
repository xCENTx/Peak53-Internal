#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OnlineSubsystemEOSCore

#include "Basic.hpp"

#include "OnlineSubsystemEOSCore_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"


namespace SDK::Params
{

// Function OnlineSubsystemEOSCore.CreateEOSSessionCallbackProxy.Create_EOS_Session
// 0x0078 (0x0078 - 0x0000)
struct CreateEOSSessionCallbackProxy_Create_EOS_Session final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FEOSSessionSetting> SessionSettings;                                   // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 SessionName;                                       // 0x0058(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PublicConnections;                                 // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLanMatch;                                       // 0x006C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2A9E[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCreateEOSSessionCallbackProxy*         ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CreateEOSSessionCallbackProxy_Create_EOS_Session) == 0x000008, "Wrong alignment on CreateEOSSessionCallbackProxy_Create_EOS_Session");
static_assert(sizeof(CreateEOSSessionCallbackProxy_Create_EOS_Session) == 0x000078, "Wrong size on CreateEOSSessionCallbackProxy_Create_EOS_Session");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, WorldContextObject) == 0x000000, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, SessionSettings) == 0x000008, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::SessionSettings' has a wrong offset!");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, SessionName) == 0x000058, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::SessionName' has a wrong offset!");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, PublicConnections) == 0x000068, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::PublicConnections' has a wrong offset!");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, bIsLanMatch) == 0x00006C, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::bIsLanMatch' has a wrong offset!");
static_assert(offsetof(CreateEOSSessionCallbackProxy_Create_EOS_Session, ReturnValue) == 0x000070, "Member 'CreateEOSSessionCallbackProxy_Create_EOS_Session::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemEOSCore.FindEOSSessionsCallbackProxy.FindEOSSessions
// 0x0068 (0x0068 - 0x0000)
struct FindEOSSessionsCallbackProxy_FindEOSSessions final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FEOSSessionSearchSetting> SearchSettings;                                    // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	int32                                         MaxResults;                                        // 0x0058(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsLanQuery;                                       // 0x005C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA0[0x3];                                     // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFindEOSSessionsCallbackProxy*          ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FindEOSSessionsCallbackProxy_FindEOSSessions) == 0x000008, "Wrong alignment on FindEOSSessionsCallbackProxy_FindEOSSessions");
static_assert(sizeof(FindEOSSessionsCallbackProxy_FindEOSSessions) == 0x000068, "Wrong size on FindEOSSessionsCallbackProxy_FindEOSSessions");
static_assert(offsetof(FindEOSSessionsCallbackProxy_FindEOSSessions, WorldContextObject) == 0x000000, "Member 'FindEOSSessionsCallbackProxy_FindEOSSessions::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FindEOSSessionsCallbackProxy_FindEOSSessions, SearchSettings) == 0x000008, "Member 'FindEOSSessionsCallbackProxy_FindEOSSessions::SearchSettings' has a wrong offset!");
static_assert(offsetof(FindEOSSessionsCallbackProxy_FindEOSSessions, MaxResults) == 0x000058, "Member 'FindEOSSessionsCallbackProxy_FindEOSSessions::MaxResults' has a wrong offset!");
static_assert(offsetof(FindEOSSessionsCallbackProxy_FindEOSSessions, bIsLanQuery) == 0x00005C, "Member 'FindEOSSessionsCallbackProxy_FindEOSSessions::bIsLanQuery' has a wrong offset!");
static_assert(offsetof(FindEOSSessionsCallbackProxy_FindEOSSessions, ReturnValue) == 0x000060, "Member 'FindEOSSessionsCallbackProxy_FindEOSSessions::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemEOSCore.FindEOSSessionsCallbackProxy.OnCompleted
// 0x0001 (0x0001 - 0x0000)
struct FindEOSSessionsCallbackProxy_OnCompleted final
{
public:
	bool                                          bSuccessful;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FindEOSSessionsCallbackProxy_OnCompleted) == 0x000001, "Wrong alignment on FindEOSSessionsCallbackProxy_OnCompleted");
static_assert(sizeof(FindEOSSessionsCallbackProxy_OnCompleted) == 0x000001, "Wrong size on FindEOSSessionsCallbackProxy_OnCompleted");
static_assert(offsetof(FindEOSSessionsCallbackProxy_OnCompleted, bSuccessful) == 0x000000, "Member 'FindEOSSessionsCallbackProxy_OnCompleted::bSuccessful' has a wrong offset!");

// Function OnlineSubsystemEOSCore.EOSSubsystemLibrary.ListenForSessionInvites
// 0x0018 (0x0018 - 0x0000)
struct EOSSubsystemLibrary_ListenForSessionInvites final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool bSuccess, class APlayerController* PlayerController, const struct FBlueprintSessionResult& Session)> Callback;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSSubsystemLibrary_ListenForSessionInvites) == 0x000008, "Wrong alignment on EOSSubsystemLibrary_ListenForSessionInvites");
static_assert(sizeof(EOSSubsystemLibrary_ListenForSessionInvites) == 0x000018, "Wrong size on EOSSubsystemLibrary_ListenForSessionInvites");
static_assert(offsetof(EOSSubsystemLibrary_ListenForSessionInvites, PlayerController) == 0x000000, "Member 'EOSSubsystemLibrary_ListenForSessionInvites::PlayerController' has a wrong offset!");
static_assert(offsetof(EOSSubsystemLibrary_ListenForSessionInvites, Callback) == 0x000008, "Member 'EOSSubsystemLibrary_ListenForSessionInvites::Callback' has a wrong offset!");

// Function OnlineSubsystemEOSCore.EOSSubsystemLibrary.StopListeningForSessionInvites
// 0x0008 (0x0008 - 0x0000)
struct EOSSubsystemLibrary_StopListeningForSessionInvites final
{
public:
	class APlayerController*                      PlayerController;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(EOSSubsystemLibrary_StopListeningForSessionInvites) == 0x000008, "Wrong alignment on EOSSubsystemLibrary_StopListeningForSessionInvites");
static_assert(sizeof(EOSSubsystemLibrary_StopListeningForSessionInvites) == 0x000008, "Wrong size on EOSSubsystemLibrary_StopListeningForSessionInvites");
static_assert(offsetof(EOSSubsystemLibrary_StopListeningForSessionInvites, PlayerController) == 0x000000, "Member 'EOSSubsystemLibrary_StopListeningForSessionInvites::PlayerController' has a wrong offset!");

// Function OnlineSubsystemEOSCore.UpdateEOSSessionCallbackProxy.Update_EOS_Session
// 0x0078 (0x0078 - 0x0000)
struct UpdateEOSSessionCallbackProxy_Update_EOS_Session final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, struct FEOSSessionSearchSetting> Settings;                                          // 0x0008(0x0050)(Parm, NativeAccessSpecifierPublic)
	class FString                                 SessionName;                                       // 0x0058(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PublicConnections;                                 // 0x0068(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA3[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUpdateEOSSessionCallbackProxy*         ReturnValue;                                       // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(UpdateEOSSessionCallbackProxy_Update_EOS_Session) == 0x000008, "Wrong alignment on UpdateEOSSessionCallbackProxy_Update_EOS_Session");
static_assert(sizeof(UpdateEOSSessionCallbackProxy_Update_EOS_Session) == 0x000078, "Wrong size on UpdateEOSSessionCallbackProxy_Update_EOS_Session");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_Update_EOS_Session, WorldContextObject) == 0x000000, "Member 'UpdateEOSSessionCallbackProxy_Update_EOS_Session::WorldContextObject' has a wrong offset!");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_Update_EOS_Session, Settings) == 0x000008, "Member 'UpdateEOSSessionCallbackProxy_Update_EOS_Session::Settings' has a wrong offset!");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_Update_EOS_Session, SessionName) == 0x000058, "Member 'UpdateEOSSessionCallbackProxy_Update_EOS_Session::SessionName' has a wrong offset!");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_Update_EOS_Session, PublicConnections) == 0x000068, "Member 'UpdateEOSSessionCallbackProxy_Update_EOS_Session::PublicConnections' has a wrong offset!");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_Update_EOS_Session, ReturnValue) == 0x000070, "Member 'UpdateEOSSessionCallbackProxy_Update_EOS_Session::ReturnValue' has a wrong offset!");

// Function OnlineSubsystemEOSCore.UpdateEOSSessionCallbackProxy.OnCompleted
// 0x000C (0x000C - 0x0000)
struct UpdateEOSSessionCallbackProxy_OnCompleted final
{
public:
	class FName                                   SessionName;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWasSuccessful;                                    // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2AA4[0x3];                                     // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(UpdateEOSSessionCallbackProxy_OnCompleted) == 0x000004, "Wrong alignment on UpdateEOSSessionCallbackProxy_OnCompleted");
static_assert(sizeof(UpdateEOSSessionCallbackProxy_OnCompleted) == 0x00000C, "Wrong size on UpdateEOSSessionCallbackProxy_OnCompleted");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_OnCompleted, SessionName) == 0x000000, "Member 'UpdateEOSSessionCallbackProxy_OnCompleted::SessionName' has a wrong offset!");
static_assert(offsetof(UpdateEOSSessionCallbackProxy_OnCompleted, bWasSuccessful) == 0x000008, "Member 'UpdateEOSSessionCallbackProxy_OnCompleted::bWasSuccessful' has a wrong offset!");

}

