#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WoodDoor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterBuildPart_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "E_WorldActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WoodDoor.BP_WoodDoor_C
// 0x0098 (0x0418 - 0x0380)
class ABP_WoodDoor_C final : public ABP_MasterBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_WoodDoor_C;                      // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          BuildCollision4;                                   // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision3;                                   // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GridComponent_C*                    BP_GridComponent;                                  // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_SupportComponent_C*                 BP_SupportComponent;                               // 0x03A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision2;                                   // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision1;                                   // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Swing_Closed_Rotation_FEEF53624F1E1F1C3BBAE8ACFD3B4163; // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Swing_Closed__Direction_FEEF53624F1E1F1C3BBAE8ACFD3B4163; // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5465[0x3];                                     // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Swing_Closed;                                      // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Swing_Open_Rotation_D652619E46CA188EF4DDFDA736C8FF6B; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Swing_Open__Direction_D652619E46CA188EF4DDFDA736C8FF6B; // 0x03D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5466[0x3];                                     // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Swing_Open;                                        // 0x03D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x03E0(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OpenDirection;                                     // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Door_Open;                                         // 0x03F9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5467[0x6];                                     // 0x03FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  InteractedPlayerInventory;                         // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             OpenDoorSound;                                     // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundBase*                             CloseDoorSound;                                    // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

public:
	void CheckLocks(bool* AllowOpen);
	void DoorAnimation();
	void ExecuteUbergraph_BP_WoodDoor(int32 EntryPoint);
	void Interact();
	void MulticastBuildPartPlaced();
	void OnRep_Door_Open();
	void Open();
	void SGK_AllowInteraction(bool* AllowInteraction);
	bool SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action);
	void SGK_InteractName(class FText* InteractName);
	void SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions);
	void Swing_Closed__FinishedFunc();
	void Swing_Closed__UpdateFunc();
	void Swing_Open__FinishedFunc();
	void Swing_Open__UpdateFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WoodDoor_C">();
	}
	static class ABP_WoodDoor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WoodDoor_C>();
	}
};
static_assert(alignof(ABP_WoodDoor_C) == 0x000008, "Wrong alignment on ABP_WoodDoor_C");
static_assert(sizeof(ABP_WoodDoor_C) == 0x000418, "Wrong size on ABP_WoodDoor_C");
static_assert(offsetof(ABP_WoodDoor_C, UberGraphFrame_BP_WoodDoor_C) == 0x000380, "Member 'ABP_WoodDoor_C::UberGraphFrame_BP_WoodDoor_C' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BuildCollision4) == 0x000388, "Member 'ABP_WoodDoor_C::BuildCollision4' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BuildCollision3) == 0x000390, "Member 'ABP_WoodDoor_C::BuildCollision3' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BP_GridComponent) == 0x000398, "Member 'ABP_WoodDoor_C::BP_GridComponent' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BP_SupportComponent) == 0x0003A0, "Member 'ABP_WoodDoor_C::BP_SupportComponent' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BuildCollision2) == 0x0003A8, "Member 'ABP_WoodDoor_C::BuildCollision2' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BuildCollision1) == 0x0003B0, "Member 'ABP_WoodDoor_C::BuildCollision1' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, BuildCollision) == 0x0003B8, "Member 'ABP_WoodDoor_C::BuildCollision' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Closed_Rotation_FEEF53624F1E1F1C3BBAE8ACFD3B4163) == 0x0003C0, "Member 'ABP_WoodDoor_C::Swing_Closed_Rotation_FEEF53624F1E1F1C3BBAE8ACFD3B4163' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Closed__Direction_FEEF53624F1E1F1C3BBAE8ACFD3B4163) == 0x0003C4, "Member 'ABP_WoodDoor_C::Swing_Closed__Direction_FEEF53624F1E1F1C3BBAE8ACFD3B4163' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Closed) == 0x0003C8, "Member 'ABP_WoodDoor_C::Swing_Closed' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Open_Rotation_D652619E46CA188EF4DDFDA736C8FF6B) == 0x0003D0, "Member 'ABP_WoodDoor_C::Swing_Open_Rotation_D652619E46CA188EF4DDFDA736C8FF6B' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Open__Direction_D652619E46CA188EF4DDFDA736C8FF6B) == 0x0003D4, "Member 'ABP_WoodDoor_C::Swing_Open__Direction_D652619E46CA188EF4DDFDA736C8FF6B' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Swing_Open) == 0x0003D8, "Member 'ABP_WoodDoor_C::Swing_Open' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Location) == 0x0003E0, "Member 'ABP_WoodDoor_C::Location' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, OpenDirection) == 0x0003F8, "Member 'ABP_WoodDoor_C::OpenDirection' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, Door_Open) == 0x0003F9, "Member 'ABP_WoodDoor_C::Door_Open' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, InteractedPlayerInventory) == 0x000400, "Member 'ABP_WoodDoor_C::InteractedPlayerInventory' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, OpenDoorSound) == 0x000408, "Member 'ABP_WoodDoor_C::OpenDoorSound' has a wrong offset!");
static_assert(offsetof(ABP_WoodDoor_C, CloseDoorSound) == 0x000410, "Member 'ABP_WoodDoor_C::CloseDoorSound' has a wrong offset!");

}

