#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Bed

#include "Basic.hpp"

#include "BP_MasterRespawnPoint_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Bed.BP_Bed_C
// 0x0028 (0x03D0 - 0x03A8)
class ABP_Bed_C final : public ABP_MasterRespawnPoint_C
{
public:
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent3;                          // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent2;                          // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent1;                          // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x03C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x03C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Bed_C">();
	}
	static class ABP_Bed_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Bed_C>();
	}
};
static_assert(alignof(ABP_Bed_C) == 0x000008, "Wrong alignment on ABP_Bed_C");
static_assert(sizeof(ABP_Bed_C) == 0x0003D0, "Wrong size on ABP_Bed_C");
static_assert(offsetof(ABP_Bed_C, BP_GroundCheckComponent3) == 0x0003A8, "Member 'ABP_Bed_C::BP_GroundCheckComponent3' has a wrong offset!");
static_assert(offsetof(ABP_Bed_C, BP_GroundCheckComponent2) == 0x0003B0, "Member 'ABP_Bed_C::BP_GroundCheckComponent2' has a wrong offset!");
static_assert(offsetof(ABP_Bed_C, BP_GroundCheckComponent1) == 0x0003B8, "Member 'ABP_Bed_C::BP_GroundCheckComponent1' has a wrong offset!");
static_assert(offsetof(ABP_Bed_C, BP_GroundCheckComponent) == 0x0003C0, "Member 'ABP_Bed_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_Bed_C, BuildCollision) == 0x0003C8, "Member 'ABP_Bed_C::BuildCollision' has a wrong offset!");

}

