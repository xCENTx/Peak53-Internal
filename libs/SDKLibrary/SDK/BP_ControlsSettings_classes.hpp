#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlsSettings

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "BP_MasterMenuPanel_classes.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_ControlsSettings.BP_ControlsSettings_C
// 0x01A8 (0x04A8 - 0x0300)
class UBP_ControlsSettings_C final : public UBP_MasterMenuPanel_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ControlsSettings_C;              // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Backround;                                         // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NumericalTextBox_C*                 BP_NumericalTextBox;                               // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_NumericalTextBox_C*                 BP_NumericalTextBox_1;                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           ControlVerticalBox;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             InputsBox;                                         // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                RefreshButton;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider;                                            // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USlider*                                Slider_172;                                        // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Subtitle;                                          // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Title;                                             // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          AutoPopulateKeybind;                               // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C2[0x3];                                     // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackroundColor;                                    // 0x035C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C3[0x4];                                     // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TitleText;                                         // 0x0370(0x0018)(Edit, BlueprintVisible)
	class FText                                   SubtitleText;                                      // 0x0388(0x0018)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         TitleFont;                                         // 0x03A0(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FSlateFontInfo                         SubtitleFont;                                      // 0x03F8(0x0058)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TMap<class FName, struct FKey>                DefaultKeys;                                       // 0x0450(0x0050)(Edit, BlueprintVisible)
	class UPlayerMappableInputConfig*             BindableInputConfig;                               // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__RefreshButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void CreateKeybindWidgets();
	void ExecuteUbergraph_BP_ControlsSettings(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ResetKeybinds();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ControlsSettings_C">();
	}
	static class UBP_ControlsSettings_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ControlsSettings_C>();
	}
};
static_assert(alignof(UBP_ControlsSettings_C) == 0x000008, "Wrong alignment on UBP_ControlsSettings_C");
static_assert(sizeof(UBP_ControlsSettings_C) == 0x0004A8, "Wrong size on UBP_ControlsSettings_C");
static_assert(offsetof(UBP_ControlsSettings_C, UberGraphFrame_BP_ControlsSettings_C) == 0x000300, "Member 'UBP_ControlsSettings_C::UberGraphFrame_BP_ControlsSettings_C' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, Backround) == 0x000308, "Member 'UBP_ControlsSettings_C::Backround' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, BP_NumericalTextBox) == 0x000310, "Member 'UBP_ControlsSettings_C::BP_NumericalTextBox' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, BP_NumericalTextBox_1) == 0x000318, "Member 'UBP_ControlsSettings_C::BP_NumericalTextBox_1' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, ControlVerticalBox) == 0x000320, "Member 'UBP_ControlsSettings_C::ControlVerticalBox' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, InputsBox) == 0x000328, "Member 'UBP_ControlsSettings_C::InputsBox' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, RefreshButton) == 0x000330, "Member 'UBP_ControlsSettings_C::RefreshButton' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, Slider) == 0x000338, "Member 'UBP_ControlsSettings_C::Slider' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, Slider_172) == 0x000340, "Member 'UBP_ControlsSettings_C::Slider_172' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, Subtitle) == 0x000348, "Member 'UBP_ControlsSettings_C::Subtitle' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, Title) == 0x000350, "Member 'UBP_ControlsSettings_C::Title' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, AutoPopulateKeybind) == 0x000358, "Member 'UBP_ControlsSettings_C::AutoPopulateKeybind' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, BackroundColor) == 0x00035C, "Member 'UBP_ControlsSettings_C::BackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, TitleText) == 0x000370, "Member 'UBP_ControlsSettings_C::TitleText' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, SubtitleText) == 0x000388, "Member 'UBP_ControlsSettings_C::SubtitleText' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, TitleFont) == 0x0003A0, "Member 'UBP_ControlsSettings_C::TitleFont' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, SubtitleFont) == 0x0003F8, "Member 'UBP_ControlsSettings_C::SubtitleFont' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, DefaultKeys) == 0x000450, "Member 'UBP_ControlsSettings_C::DefaultKeys' has a wrong offset!");
static_assert(offsetof(UBP_ControlsSettings_C, BindableInputConfig) == 0x0004A0, "Member 'UBP_ControlsSettings_C::BindableInputConfig' has a wrong offset!");

}

