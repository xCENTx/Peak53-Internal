#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DebugComponent

#include "Basic.hpp"

#include "DebugComponent_classes.hpp"
#include "DebugComponent_parameters.hpp"


namespace SDK
{

// Function DebugComponent.DebugComponent_C.DrawDebugSpheres
// (Event, Public, BlueprintEvent)

void UDebugComponent_C::DrawDebugSpheres()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "DrawDebugSpheres");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.ExecuteUbergraph_DebugComponent
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::ExecuteUbergraph_DebugComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "ExecuteUbergraph_DebugComponent");

	Params::DebugComponent_C_ExecuteUbergraph_DebugComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DebugComponent.DebugComponent_C.OnDrawDebugSpheres
// (Public, BlueprintCallable, BlueprintEvent)

void UDebugComponent_C::OnDrawDebugSpheres()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OnDrawDebugSpheres");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.OnPlayerControllerInitialized
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::OnPlayerControllerInitialized(class APlayerController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OnPlayerControllerInitialized");

	Params::DebugComponent_C_OnPlayerControllerInitialized Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DebugComponent.DebugComponent_C.OnSetDynamicMaterials
// (Public, BlueprintCallable, BlueprintEvent)

void UDebugComponent_C::OnSetDynamicMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OnSetDynamicMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.OnSetResetColors
// (Public, BlueprintCallable, BlueprintEvent)

void UDebugComponent_C::OnSetResetColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OnSetResetColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.OnUpdateColoringSystem
// (Public, BlueprintCallable, BlueprintEvent)

void UDebugComponent_C::OnUpdateColoringSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OnUpdateColoringSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.OpenOverlayMenu
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::OpenOverlayMenu(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OpenOverlayMenu");

	Params::DebugComponent_C_OpenOverlayMenu Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DebugComponent.DebugComponent_C.OverlayMenuCycle
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bValue                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::OverlayMenuCycle(bool bValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "OverlayMenuCycle");

	Params::DebugComponent_C_OverlayMenuCycle Parms{};

	Parms.bValue = bValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function DebugComponent.DebugComponent_C.SetDynamicMaterials
// (Event, Public, BlueprintEvent)

void UDebugComponent_C::SetDynamicMaterials()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "SetDynamicMaterials");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.SetResetColors
// (Event, Public, BlueprintEvent)

void UDebugComponent_C::SetResetColors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "SetResetColors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.UpdateColoringSystem
// (Event, Public, BlueprintEvent)

void UDebugComponent_C::UpdateColoringSystem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "UpdateColoringSystem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function DebugComponent.DebugComponent_C.IsMaterialValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::IsMaterialValid(bool* Valid_) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "IsMaterialValid");

	Params::DebugComponent_C_IsMaterialValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}


// Function DebugComponent.DebugComponent_C.IsMeshValid
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class USkeletalMesh*                    SkeletalMesh                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UDebugComponent_C::IsMeshValid(class USkeletalMesh* SkeletalMesh, bool* Valid_) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("DebugComponent_C", "IsMeshValid");

	Params::DebugComponent_C_IsMeshValid Parms{};

	Parms.SkeletalMesh = SkeletalMesh;

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}

}

