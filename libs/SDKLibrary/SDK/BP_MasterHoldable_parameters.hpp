#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterHoldable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "E_AttachmentType_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterHoldable.BP_MasterHoldable_C.CalculateHoldableSway
// 0x0080 (0x0080 - 0x0000)
struct BP_MasterHoldable_C_CalculateHoldableSway final
{
public:
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320A[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_CalculateHoldableSway) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_CalculateHoldableSway");
static_assert(sizeof(BP_MasterHoldable_C_CalculateHoldableSway) == 0x000080, "Wrong size on BP_MasterHoldable_C_CalculateHoldableSway");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000018, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000020, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_FClamp_ReturnValue_1) == 0x000030, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_RInterpTo_ReturnValue) == 0x000058, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x000070, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000074, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000078, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_CalculateHoldableSway, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x00007C, "Member 'BP_MasterHoldable_C_CalculateHoldableSway::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.CharacterSprinting
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_CharacterSprinting final
{
public:
	bool                                          Sprinting;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_CharacterSprinting) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_CharacterSprinting");
static_assert(sizeof(BP_MasterHoldable_C_CharacterSprinting) == 0x000001, "Wrong size on BP_MasterHoldable_C_CharacterSprinting");
static_assert(offsetof(BP_MasterHoldable_C_CharacterSprinting, Sprinting) == 0x000000, "Member 'BP_MasterHoldable_C_CharacterSprinting::Sprinting' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.ExecuteUbergraph_BP_MasterHoldable
// 0x0138 (0x0138 - 0x0000)
struct BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_TraceOn;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Open;                                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown_2;                            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320B[0x1];                                     // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Event_Attachment;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterAttachment_C*                 K2Node_Event_Attachment_1;                         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_Event_InvItem;                              // 0x0018(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_AttachmentType                              K2Node_Event_AttachmentType;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown_1;                            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown;                              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320C[0x1];                                     // 0x004B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown_3;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320D[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320E[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_320F[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Held;                                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3210[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3211[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Owner;                          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_CurrentSocket;                  // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_CharacterComponent_C*               CallFunc_GetComponentByClass_ReturnValue_1;        // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Sprinting)>               K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3212[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3213[0x6];                                     // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3214[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1;  // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3215[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh_1;                       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable");
static_assert(sizeof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable) == 0x000138, "Wrong size on BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, EntryPoint) == 0x000000, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_TraceOn) == 0x000004, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_TraceOn' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_Open) == 0x000005, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_Open' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_KeyDown_2) == 0x000006, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_KeyDown_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_Attachment) == 0x000008, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_Attachment' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_Attachment_1) == 0x000010, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_Attachment_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_InvItem) == 0x000018, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_AttachmentType) == 0x000048, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_AttachmentType' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_KeyDown_1) == 0x000049, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_KeyDown_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_KeyDown) == 0x00004A, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_KeyDown' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_KeyDown_3) == 0x000050, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_KeyDown_3' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetOwner_ReturnValue) == 0x000058, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_HasAuthority_ReturnValue) == 0x000060, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x000068, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_SGK_GetMesh_Mesh) == 0x000080, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_SGK_GetMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_HasAuthority_ReturnValue_1) == 0x000088, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000089, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_Event_Held) == 0x00008A, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_Event_Held' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_IsLocallyControlled_ReturnValue) == 0x00008B, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetController_ReturnValue) == 0x000090, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetComponentByClass_ReturnValue) == 0x0000A0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_CustomEvent_Owner) == 0x0000A8, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_CustomEvent_CurrentSocket) == 0x0000B0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_CustomEvent_CurrentSocket' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetComponentByClass_ReturnValue_1) == 0x0000B8, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000D0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetOwner_ReturnValue_1) == 0x0000E8, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_BooleanOR_ReturnValue) == 0x0000F0, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_IsValid_ReturnValue_1) == 0x0000F1, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_AsCharacter) == 0x0000F8, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_bSuccess_1) == 0x000100, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_IsValid_ReturnValue_2) == 0x000101, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_GetOwner_ReturnValue_2) == 0x000108, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1) == 0x000110, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_AsBP_SGKCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, K2Node_DynamicCast_bSuccess_2) == 0x000120, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_SGK_GetMesh_Mesh_1) == 0x000128, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_SGK_GetMesh_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000130, "Member 'BP_MasterHoldable_C_ExecuteUbergraph_BP_MasterHoldable::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.LeanCheck
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterHoldable_C_LeanCheck final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_LeanCheck) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_LeanCheck");
static_assert(sizeof(BP_MasterHoldable_C_LeanCheck) == 0x000008, "Wrong size on BP_MasterHoldable_C_LeanCheck");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, ReturnValue) == 0x000000, "Member 'BP_MasterHoldable_C_LeanCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000003, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_LeanCheck, CallFunc_BooleanOR_ReturnValue_1) == 0x000007, "Member 'BP_MasterHoldable_C_LeanCheck::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.NewOwner
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterHoldable_C_NewOwner final
{
public:
	class AActor*                                 Param_Owner;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Param_CurrentSocket;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_NewOwner) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_NewOwner");
static_assert(sizeof(BP_MasterHoldable_C_NewOwner) == 0x000010, "Wrong size on BP_MasterHoldable_C_NewOwner");
static_assert(offsetof(BP_MasterHoldable_C_NewOwner, Param_Owner) == 0x000000, "Member 'BP_MasterHoldable_C_NewOwner::Param_Owner' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_NewOwner, Param_CurrentSocket) == 0x000008, "Member 'BP_MasterHoldable_C_NewOwner::Param_CurrentSocket' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.OnRep_CurrentSocket
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterHoldable_C_OnRep_CurrentSocket final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKCharacterInterface_C> K2Node_DynamicCast_AsBP_SGKCharacter_Interface;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3216[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_SGK_GetMesh_Mesh;                         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_OnRep_CurrentSocket) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_OnRep_CurrentSocket");
static_assert(sizeof(BP_MasterHoldable_C_OnRep_CurrentSocket) == 0x000030, "Wrong size on BP_MasterHoldable_C_OnRep_CurrentSocket");
static_assert(offsetof(BP_MasterHoldable_C_OnRep_CurrentSocket, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'BP_MasterHoldable_C_OnRep_CurrentSocket::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_OnRep_CurrentSocket, K2Node_DynamicCast_AsBP_SGKCharacter_Interface) == 0x000008, "Member 'BP_MasterHoldable_C_OnRep_CurrentSocket::K2Node_DynamicCast_AsBP_SGKCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_OnRep_CurrentSocket, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_MasterHoldable_C_OnRep_CurrentSocket::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_OnRep_CurrentSocket, CallFunc_SGK_GetMesh_Mesh) == 0x000020, "Member 'BP_MasterHoldable_C_OnRep_CurrentSocket::CallFunc_SGK_GetMesh_Mesh' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_OnRep_CurrentSocket, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000028, "Member 'BP_MasterHoldable_C_OnRep_CurrentSocket::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterHoldable_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MasterHoldable_C_ReceiveTick");
static_assert(sizeof(BP_MasterHoldable_C_ReceiveTick) == 0x000004, "Wrong size on BP_MasterHoldable_C_ReceiveTick");
static_assert(offsetof(BP_MasterHoldable_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MasterHoldable_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK Aimed
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_Aimed final
{
public:
	bool                                          Aimed;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_Aimed) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_Aimed");
static_assert(sizeof(BP_MasterHoldable_C_SGK_Aimed) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_Aimed");
static_assert(offsetof(BP_MasterHoldable_C_SGK_Aimed, Aimed) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_Aimed::Aimed' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK AttachNewAttachment
// 0x0040 (0x0040 - 0x0000)
struct BP_MasterHoldable_C_SGK_AttachNewAttachment final
{
public:
	class ABP_MasterAttachment_C*                 Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             InvItem;                                           // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_AttachmentType                              AttachmentType;                                    // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_AttachNewAttachment) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_SGK_AttachNewAttachment");
static_assert(sizeof(BP_MasterHoldable_C_SGK_AttachNewAttachment) == 0x000040, "Wrong size on BP_MasterHoldable_C_SGK_AttachNewAttachment");
static_assert(offsetof(BP_MasterHoldable_C_SGK_AttachNewAttachment, Attachment) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_AttachNewAttachment::Attachment' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_SGK_AttachNewAttachment, InvItem) == 0x000008, "Member 'BP_MasterHoldable_C_SGK_AttachNewAttachment::InvItem' has a wrong offset!");
static_assert(offsetof(BP_MasterHoldable_C_SGK_AttachNewAttachment, AttachmentType) == 0x000038, "Member 'BP_MasterHoldable_C_SGK_AttachNewAttachment::AttachmentType' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_ClientPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_ClientPrimaryAction");
static_assert(sizeof(BP_MasterHoldable_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_ClientPrimaryAction");
static_assert(offsetof(BP_MasterHoldable_C_SGK_ClientPrimaryAction, KeyDown) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_ClientPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_ClientSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_ClientSecondaryAction");
static_assert(sizeof(BP_MasterHoldable_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_ClientSecondaryAction");
static_assert(offsetof(BP_MasterHoldable_C_SGK_ClientSecondaryAction, KeyDown) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_ClientSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ClientToggleBuildMenu
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_ClientToggleBuildMenu final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_ClientToggleBuildMenu) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_ClientToggleBuildMenu");
static_assert(sizeof(BP_MasterHoldable_C_SGK_ClientToggleBuildMenu) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_ClientToggleBuildMenu");
static_assert(offsetof(BP_MasterHoldable_C_SGK_ClientToggleBuildMenu, Open) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_ClientToggleBuildMenu::Open' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK HoldableMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterHoldable_C_SGK_HoldableMesh final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_HoldableMesh) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_SGK_HoldableMesh");
static_assert(sizeof(BP_MasterHoldable_C_SGK_HoldableMesh) == 0x000008, "Wrong size on BP_MasterHoldable_C_SGK_HoldableMesh");
static_assert(offsetof(BP_MasterHoldable_C_SGK_HoldableMesh, Mesh) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_HoldableMesh::Mesh' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK HoldableSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterHoldable_C_SGK_HoldableSkeletalMesh final
{
public:
	class USkeletalMeshComponent*                 SkelMeshComp;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_HoldableSkeletalMesh) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_SGK_HoldableSkeletalMesh");
static_assert(sizeof(BP_MasterHoldable_C_SGK_HoldableSkeletalMesh) == 0x000008, "Wrong size on BP_MasterHoldable_C_SGK_HoldableSkeletalMesh");
static_assert(offsetof(BP_MasterHoldable_C_SGK_HoldableSkeletalMesh, SkelMeshComp) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_HoldableSkeletalMesh::SkelMeshComp' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK MeleeCollisionToggle
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_MeleeCollisionToggle final
{
public:
	bool                                          TraceOn;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_MeleeCollisionToggle) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_MeleeCollisionToggle");
static_assert(sizeof(BP_MasterHoldable_C_SGK_MeleeCollisionToggle) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_MeleeCollisionToggle");
static_assert(offsetof(BP_MasterHoldable_C_SGK_MeleeCollisionToggle, TraceOn) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_MeleeCollisionToggle::TraceOn' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK NewHeld
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_NewHeld final
{
public:
	bool                                          Held;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_NewHeld) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_NewHeld");
static_assert(sizeof(BP_MasterHoldable_C_SGK_NewHeld) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_NewHeld");
static_assert(offsetof(BP_MasterHoldable_C_SGK_NewHeld, Held) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_NewHeld::Held' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ServerPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_ServerPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_ServerPrimaryAction) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_ServerPrimaryAction");
static_assert(sizeof(BP_MasterHoldable_C_SGK_ServerPrimaryAction) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_ServerPrimaryAction");
static_assert(offsetof(BP_MasterHoldable_C_SGK_ServerPrimaryAction, KeyDown) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_ServerPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK ServerSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterHoldable_C_SGK_ServerSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong alignment on BP_MasterHoldable_C_SGK_ServerSecondaryAction");
static_assert(sizeof(BP_MasterHoldable_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong size on BP_MasterHoldable_C_SGK_ServerSecondaryAction");
static_assert(offsetof(BP_MasterHoldable_C_SGK_ServerSecondaryAction, KeyDown) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_ServerSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.SGK SpawnAttachment
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterHoldable_C_SGK_SpawnAttachment final
{
public:
	class UClass*                                 Attachment;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_SGK_SpawnAttachment) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_SGK_SpawnAttachment");
static_assert(sizeof(BP_MasterHoldable_C_SGK_SpawnAttachment) == 0x000008, "Wrong size on BP_MasterHoldable_C_SGK_SpawnAttachment");
static_assert(offsetof(BP_MasterHoldable_C_SGK_SpawnAttachment, Attachment) == 0x000000, "Member 'BP_MasterHoldable_C_SGK_SpawnAttachment::Attachment' has a wrong offset!");

// Function BP_MasterHoldable.BP_MasterHoldable_C.GetLookSensitivityMultiplier
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterHoldable_C_GetLookSensitivityMultiplier final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterHoldable_C_GetLookSensitivityMultiplier) == 0x000008, "Wrong alignment on BP_MasterHoldable_C_GetLookSensitivityMultiplier");
static_assert(sizeof(BP_MasterHoldable_C_GetLookSensitivityMultiplier) == 0x000008, "Wrong size on BP_MasterHoldable_C_GetLookSensitivityMultiplier");
static_assert(offsetof(BP_MasterHoldable_C_GetLookSensitivityMultiplier, Multiplier) == 0x000000, "Member 'BP_MasterHoldable_C_GetLookSensitivityMultiplier::Multiplier' has a wrong offset!");

}

