#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PMM_Instance

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "NetCore_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PMM_Instance.PMM_Instance_C
// 0x02D8 (0x0498 - 0x01C0)
class UPMM_Instance_C final : public UGameInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_PMM_Savegame_C*                     PMM_SaveGame;                                      // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          PMM_DoesSaveGameExist;                             // 0x01D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF4[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PMM_Savegame_C*                     PMM_LoadGame;                                      // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FString                                 Savegame_Slot;                                     // 0x01E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Settings_General_Language;                         // 0x01F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGlobalGameSettingsApplied;                       // 0x0200(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsProcessingApply;                                 // 0x0210(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProcessingSave;                                  // 0x0211(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProcessingLoad;                                  // 0x0212(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF5[0x5];                                     // 0x0213(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_Loading_C*                          LoadingWidget;                                     // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnGlobalGameSettingsSaved;                         // 0x0220(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnGlobalGameSettingsLoaded;                        // 0x0230(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	double                                        ProcessingDuration;                                // 0x0240(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Default_General_Language;                          // 0x0248(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsProcessingResetDefault_General;                  // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF6[0x7];                                     // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnResetDefaults_GeneralSettings;                   // 0x0260(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetDefaults_ControlSettings;                   // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetDefaults_InputSettings;                     // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetDefaults_AudioSettings;                     // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnResetDefaults_VideoSettings;                     // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnSetDefaultsCompleted;                            // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsProcessingResetDefault_Control;                  // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF7[0x7];                                     // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Settings_Control_MouseSen;                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Control_MouseSen;                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Control_GamepadSen;                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Settings_Control_GamepadSen;                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Default_Control_InvMouse;                          // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Default_Control_InvGamepad;                        // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Settings_Control_InvMouse;                         // 0x02EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Settings_Control_InvGamepad;                       // 0x02EB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF8[0x4];                                     // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FText>                Default_Input_Mappings;                            // 0x02F0(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, double>                     Settings_Input_AxisMappingValueMap;                // 0x0340(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, struct FKey>                Settings_Input_Mappings;                           // 0x0390(0x0050)(Edit, BlueprintVisible)
	TMap<class FName, class FText>                Default_Input_Mappings_Info;                       // 0x03E0(0x0050)(Edit, BlueprintVisible)
	bool                                          IsProcessingResetDefault_Video;                    // 0x0430(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   Default_FullscreenMode;                            // 0x0431(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsProcessingResetDefault_Audio;                    // 0x0432(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DF9[0x5];                                     // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Default_Audio_MasterVolume;                        // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Audio_SFX_Volume;                          // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Audio_MusicVolume;                         // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Default_Audio_DialogueVolume;                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Settings_Audio_MasterVolume;                       // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Settings_Audio_SFX_Volume;                         // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Settings_Audio_MusicVolume;                        // 0x0468(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Settings_Audio_DialogueVolume;                     // 0x0470(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Default_Audio_MusicOn;                             // 0x0478(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Settings_Audio_MusicOn;                            // 0x0479(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFA[0x6];                                     // 0x047A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Default_Audio_MusicOffVolume;                      // 0x0480(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRunning;                                         // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWindowMode                                   LastConfirmedFullscreenMode;                       // 0x0489(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DFB[0x2];                                     // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              LastConfirmedScreenResolution;                     // 0x048C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ApplySettings();
	void CacheLastConfirmedVideoMode();
	void CreateLoadingWidget(int32 ZOrder);
	void CustomEvent(bool Confirmed);
	void CustomEvent_0(bool Confirmed);
	void ExecuteUbergraph_PMM_Instance(int32 EntryPoint);
	void FindDefaultAxisMappingNames(TArray<class FName>* Result);
	void GetDefaultAxisActionMappingNames(TArray<class FName>* AxisNames, TArray<class FName>* ActionNames);
	void GetDefaultInputMappingNames(TArray<class FName>* Keys);
	void HandleNetworkError(ENetworkFailure FailureType, bool bIsServer);
	void HandleTravelError(ETravelFailure FailureType);
	void LoadSettings(bool ContinueWithApply);
	void OnAudioSettingsReset();
	void OnControlSettingsReset();
	void OnGeneralSettingsReset();
	void OnGlobalGameSettingsApplied__DelegateSignature();
	void OnGlobalGameSettingsLoaded__DelegateSignature();
	void OnGlobalGameSettingsLoaded_Event();
	void OnGlobalGameSettingsSaved__DelegateSignature();
	void OnGlobalGameSettingsSaved_Event();
	void OnResetDefaults_AudioSettings__DelegateSignature();
	void OnResetDefaults_ControlSettings__DelegateSignature();
	void OnResetDefaults_GeneralSettings__DelegateSignature();
	void OnResetDefaults_InputSettings__DelegateSignature();
	void OnResetDefaults_VideoSettings__DelegateSignature();
	void OnResetDefaultsCompleted_Event();
	void OnSetDefaultsCompleted__DelegateSignature();
	void OnVideoSettingsReset();
	void ReceiveInit();
	void RemoveLoadingWidget();
	void ResetDefaults_AudioSettings(bool ContinueWithSave);
	void ResetDefaults_ControlSettings(bool ContinueWithSave);
	void ResetDefaults_GeneralSettings(bool ContinueWithSave);
	void ResetDefaults_InputSettings(bool ContinueWithSave);
	void ResetDefaults_VideoSettings(bool ContinueWithSave);
	void SaveSettings(bool ContinueWithApply);
	void SetDefaultSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PMM_Instance_C">();
	}
	static class UPMM_Instance_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPMM_Instance_C>();
	}
};
static_assert(alignof(UPMM_Instance_C) == 0x000008, "Wrong alignment on UPMM_Instance_C");
static_assert(sizeof(UPMM_Instance_C) == 0x000498, "Wrong size on UPMM_Instance_C");
static_assert(offsetof(UPMM_Instance_C, UberGraphFrame) == 0x0001C0, "Member 'UPMM_Instance_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, PMM_SaveGame) == 0x0001C8, "Member 'UPMM_Instance_C::PMM_SaveGame' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, PMM_DoesSaveGameExist) == 0x0001D0, "Member 'UPMM_Instance_C::PMM_DoesSaveGameExist' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, PMM_LoadGame) == 0x0001D8, "Member 'UPMM_Instance_C::PMM_LoadGame' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Savegame_Slot) == 0x0001E0, "Member 'UPMM_Instance_C::Savegame_Slot' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_General_Language) == 0x0001F0, "Member 'UPMM_Instance_C::Settings_General_Language' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnGlobalGameSettingsApplied) == 0x000200, "Member 'UPMM_Instance_C::OnGlobalGameSettingsApplied' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingApply) == 0x000210, "Member 'UPMM_Instance_C::IsProcessingApply' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingSave) == 0x000211, "Member 'UPMM_Instance_C::IsProcessingSave' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingLoad) == 0x000212, "Member 'UPMM_Instance_C::IsProcessingLoad' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, LoadingWidget) == 0x000218, "Member 'UPMM_Instance_C::LoadingWidget' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnGlobalGameSettingsSaved) == 0x000220, "Member 'UPMM_Instance_C::OnGlobalGameSettingsSaved' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnGlobalGameSettingsLoaded) == 0x000230, "Member 'UPMM_Instance_C::OnGlobalGameSettingsLoaded' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, ProcessingDuration) == 0x000240, "Member 'UPMM_Instance_C::ProcessingDuration' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_General_Language) == 0x000248, "Member 'UPMM_Instance_C::Default_General_Language' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingResetDefault_General) == 0x000258, "Member 'UPMM_Instance_C::IsProcessingResetDefault_General' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnResetDefaults_GeneralSettings) == 0x000260, "Member 'UPMM_Instance_C::OnResetDefaults_GeneralSettings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnResetDefaults_ControlSettings) == 0x000270, "Member 'UPMM_Instance_C::OnResetDefaults_ControlSettings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnResetDefaults_InputSettings) == 0x000280, "Member 'UPMM_Instance_C::OnResetDefaults_InputSettings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnResetDefaults_AudioSettings) == 0x000290, "Member 'UPMM_Instance_C::OnResetDefaults_AudioSettings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnResetDefaults_VideoSettings) == 0x0002A0, "Member 'UPMM_Instance_C::OnResetDefaults_VideoSettings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, OnSetDefaultsCompleted) == 0x0002B0, "Member 'UPMM_Instance_C::OnSetDefaultsCompleted' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingResetDefault_Control) == 0x0002C0, "Member 'UPMM_Instance_C::IsProcessingResetDefault_Control' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Control_MouseSen) == 0x0002C8, "Member 'UPMM_Instance_C::Settings_Control_MouseSen' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Control_MouseSen) == 0x0002D0, "Member 'UPMM_Instance_C::Default_Control_MouseSen' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Control_GamepadSen) == 0x0002D8, "Member 'UPMM_Instance_C::Default_Control_GamepadSen' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Control_GamepadSen) == 0x0002E0, "Member 'UPMM_Instance_C::Settings_Control_GamepadSen' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Control_InvMouse) == 0x0002E8, "Member 'UPMM_Instance_C::Default_Control_InvMouse' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Control_InvGamepad) == 0x0002E9, "Member 'UPMM_Instance_C::Default_Control_InvGamepad' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Control_InvMouse) == 0x0002EA, "Member 'UPMM_Instance_C::Settings_Control_InvMouse' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Control_InvGamepad) == 0x0002EB, "Member 'UPMM_Instance_C::Settings_Control_InvGamepad' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Input_Mappings) == 0x0002F0, "Member 'UPMM_Instance_C::Default_Input_Mappings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Input_AxisMappingValueMap) == 0x000340, "Member 'UPMM_Instance_C::Settings_Input_AxisMappingValueMap' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Input_Mappings) == 0x000390, "Member 'UPMM_Instance_C::Settings_Input_Mappings' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Input_Mappings_Info) == 0x0003E0, "Member 'UPMM_Instance_C::Default_Input_Mappings_Info' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingResetDefault_Video) == 0x000430, "Member 'UPMM_Instance_C::IsProcessingResetDefault_Video' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_FullscreenMode) == 0x000431, "Member 'UPMM_Instance_C::Default_FullscreenMode' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsProcessingResetDefault_Audio) == 0x000432, "Member 'UPMM_Instance_C::IsProcessingResetDefault_Audio' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_MasterVolume) == 0x000438, "Member 'UPMM_Instance_C::Default_Audio_MasterVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_SFX_Volume) == 0x000440, "Member 'UPMM_Instance_C::Default_Audio_SFX_Volume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_MusicVolume) == 0x000448, "Member 'UPMM_Instance_C::Default_Audio_MusicVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_DialogueVolume) == 0x000450, "Member 'UPMM_Instance_C::Default_Audio_DialogueVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Audio_MasterVolume) == 0x000458, "Member 'UPMM_Instance_C::Settings_Audio_MasterVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Audio_SFX_Volume) == 0x000460, "Member 'UPMM_Instance_C::Settings_Audio_SFX_Volume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Audio_MusicVolume) == 0x000468, "Member 'UPMM_Instance_C::Settings_Audio_MusicVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Audio_DialogueVolume) == 0x000470, "Member 'UPMM_Instance_C::Settings_Audio_DialogueVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_MusicOn) == 0x000478, "Member 'UPMM_Instance_C::Default_Audio_MusicOn' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Settings_Audio_MusicOn) == 0x000479, "Member 'UPMM_Instance_C::Settings_Audio_MusicOn' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, Default_Audio_MusicOffVolume) == 0x000480, "Member 'UPMM_Instance_C::Default_Audio_MusicOffVolume' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, IsRunning) == 0x000488, "Member 'UPMM_Instance_C::IsRunning' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, LastConfirmedFullscreenMode) == 0x000489, "Member 'UPMM_Instance_C::LastConfirmedFullscreenMode' has a wrong offset!");
static_assert(offsetof(UPMM_Instance_C, LastConfirmedScreenResolution) == 0x00048C, "Member 'UPMM_Instance_C::LastConfirmedScreenResolution' has a wrong offset!");

}

