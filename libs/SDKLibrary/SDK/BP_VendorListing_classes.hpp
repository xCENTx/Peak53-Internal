#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VendorListing

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "S_VendorSell_structs.hpp"
#include "S_VendorBuy_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_VendorListing.BP_VendorListing_C
// 0x00E0 (0x0358 - 0x0278)
class UBP_VendorListing_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UEditableText*                          VenderAmountText;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                VenderButton;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VenderButtonText;                                  // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VenderListingIcon;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VenderListingNameText;                             // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UClass*                                 VenderListingTooltip;                              // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          UseItemShortName;                                  // 0x02B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SellListing;                                       // 0x02B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3837[0x6];                                     // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   LastText;                                          // 0x02B8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UBP_VendorListingTooltips_C*            Tooltip;                                           // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_VendorSell                          VenderSellListing;                                 // 0x02D8(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FS_VendorBuy                           VenderBuyListing;                                  // 0x0310(0x0040)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__EditableText_287_K2Node_ComponentBoundEvent_1_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__VenderAmountText_K2Node_ComponentBoundEvent_2_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void BndEvt__VenderButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_BP_VendorListing(int32 EntryPoint);
	void InitializeVenderBuyListing(const struct FS_VendorBuy& VenderListing);
	void InitializeVenderSellListing(const struct FS_VendorSell& Param_VenderSellListing);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void ToggleTooltip(bool OpenTooltip);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VendorListing_C">();
	}
	static class UBP_VendorListing_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_VendorListing_C>();
	}
};
static_assert(alignof(UBP_VendorListing_C) == 0x000008, "Wrong alignment on UBP_VendorListing_C");
static_assert(sizeof(UBP_VendorListing_C) == 0x000358, "Wrong size on UBP_VendorListing_C");
static_assert(offsetof(UBP_VendorListing_C, UberGraphFrame) == 0x000278, "Member 'UBP_VendorListing_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderAmountText) == 0x000280, "Member 'UBP_VendorListing_C::VenderAmountText' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderButton) == 0x000288, "Member 'UBP_VendorListing_C::VenderButton' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderButtonText) == 0x000290, "Member 'UBP_VendorListing_C::VenderButtonText' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderListingIcon) == 0x000298, "Member 'UBP_VendorListing_C::VenderListingIcon' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderListingNameText) == 0x0002A0, "Member 'UBP_VendorListing_C::VenderListingNameText' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderListingTooltip) == 0x0002A8, "Member 'UBP_VendorListing_C::VenderListingTooltip' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, UseItemShortName) == 0x0002B0, "Member 'UBP_VendorListing_C::UseItemShortName' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, SellListing) == 0x0002B1, "Member 'UBP_VendorListing_C::SellListing' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, LastText) == 0x0002B8, "Member 'UBP_VendorListing_C::LastText' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, Tooltip) == 0x0002D0, "Member 'UBP_VendorListing_C::Tooltip' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderSellListing) == 0x0002D8, "Member 'UBP_VendorListing_C::VenderSellListing' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, VenderBuyListing) == 0x000310, "Member 'UBP_VendorListing_C::VenderBuyListing' has a wrong offset!");
static_assert(offsetof(UBP_VendorListing_C, PlayerInventory) == 0x000350, "Member 'UBP_VendorListing_C::PlayerInventory' has a wrong offset!");

}

