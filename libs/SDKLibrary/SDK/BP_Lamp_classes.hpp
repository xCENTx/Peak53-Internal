#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Lamp

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BP_MasterBuildPart_classes.hpp"
#include "E_WorldActions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Lamp.BP_Lamp_C
// 0x0028 (0x03A8 - 0x0380)
class ABP_Lamp_C final : public ABP_MasterBuildPart_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_Lamp_C;                          // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   PointLight;                                        // 0x0388(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_GroundCheckComponent_C*             BP_GroundCheckComponent;                           // 0x0390(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          BuildCollision;                                    // 0x0398(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          HideLight;                                         // 0x03A0(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Lamp(int32 EntryPoint);
	void LoadExtraData(class UBP_SGKSaveGame_C* SaveGame, int32 Param_Index);
	void MultcastToggleLight(bool NewHidden);
	void ReceiveBeginPlay();
	void SaveExtraData(class UBP_SGKSaveGame_C* SaveGame, const struct FS_LevelSaveData& LevelSaveData, int32* ExtraDataIndex, struct FS_LevelSaveData* NewLevelSaveData);
	void SGK_AllowInteraction(bool* AllowInteraction);
	void SGK_BuildPartPlaced(class UBP_PlayerInventory_C* PlayerInventory, bool FromSaveGame);
	bool SGK_Interact(class UBP_PlayerInventory_C* PlayerInventory, E_WorldActions Action);
	void SGK_PossibleActions(class UBP_PlayerInventory_C* PlayerInventory, bool* ActionsFound, TArray<struct FS_WorldAction>* PossibleActions);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Lamp_C">();
	}
	static class ABP_Lamp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Lamp_C>();
	}
};
static_assert(alignof(ABP_Lamp_C) == 0x000008, "Wrong alignment on ABP_Lamp_C");
static_assert(sizeof(ABP_Lamp_C) == 0x0003A8, "Wrong size on ABP_Lamp_C");
static_assert(offsetof(ABP_Lamp_C, UberGraphFrame_BP_Lamp_C) == 0x000380, "Member 'ABP_Lamp_C::UberGraphFrame_BP_Lamp_C' has a wrong offset!");
static_assert(offsetof(ABP_Lamp_C, PointLight) == 0x000388, "Member 'ABP_Lamp_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Lamp_C, BP_GroundCheckComponent) == 0x000390, "Member 'ABP_Lamp_C::BP_GroundCheckComponent' has a wrong offset!");
static_assert(offsetof(ABP_Lamp_C, BuildCollision) == 0x000398, "Member 'ABP_Lamp_C::BuildCollision' has a wrong offset!");
static_assert(offsetof(ABP_Lamp_C, HideLight) == 0x0003A0, "Member 'ABP_Lamp_C::HideLight' has a wrong offset!");

}

