#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CookingSlot

#include "Basic.hpp"

#include "S_InvItem_structs.hpp"
#include "S_CookingRecipe_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "E_SpecialSlotType_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_CookingSlot.BP_CookingSlot_C.ExecuteUbergraph_BP_CookingSlot
// 0x02D8 (0x02D8 - 0x0000)
struct BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D6[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0048(0x0098)(ConstParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D7[0x6];                                     // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemTooltip_C*                      CallFunc_Create_ReturnValue;                       // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D8[0x7];                                     // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D9[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DA[0x5];                                     // 0x014B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x0150(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DB[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_2;            // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_ItemTooltip_C*                      CallFunc_Create_ReturnValue_1;                     // 0x01D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x01E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DC[0x6];                                     // 0x01E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_CurrentTime;                    // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_TimerLength;                    // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Paused;                         // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DD[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Time;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DE[0x7];                                     // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemValid_ItemValid;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55DF[0x6];                                     // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0220(0x0098)(ConstParm)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_StartTimer_Time_ImplicitCast;             // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot) == 0x000008, "Wrong alignment on BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot");
static_assert(sizeof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot) == 0x0002D8, "Wrong size on BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, EntryPoint) == 0x000000, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_Event_MyGeometry) == 0x000008, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_Event_MouseEvent) == 0x000048, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x0000E0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue) == 0x0000E1, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_GetOwningPlayer_ReturnValue) == 0x0000E8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_Create_ReturnValue) == 0x0000F0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_1) == 0x0000F8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000100, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_K2_SetTimer_ReturnValue) == 0x000108, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000110, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_2) == 0x000118, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_GetComponentByClass_ReturnValue) == 0x000120, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_BreakVector2D_X) == 0x000128, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_BreakVector2D_Y) == 0x000130, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_BreakVector2D_X_1) == 0x000138, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_BreakVector2D_Y_1) == 0x000140, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_Event_IsDesignTime) == 0x000148, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_3) == 0x000149, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x00014A, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x000150, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_4) == 0x0001C8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_GetOwningPlayer_ReturnValue_2) == 0x0001D0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_GetOwningPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_Create_ReturnValue_1) == 0x0001D8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x0001E1, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_CustomEvent_CurrentTime) == 0x0001E8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_CustomEvent_CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_CustomEvent_TimerLength) == 0x0001F0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_CustomEvent_TimerLength' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_CustomEvent_Paused) == 0x0001F8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_CustomEvent_Paused' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_CustomEvent_Time) == 0x000200, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_5) == 0x000208, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000210, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsItemValid_ItemValid) == 0x000218, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsItemValid_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_IsValid_ReturnValue_6) == 0x000219, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, K2Node_Event_MouseEvent_1) == 0x000220, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0002B8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x0002BC, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x0002C0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x0002C4, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_StartTimer_Time_ImplicitCast) == 0x0002C8, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_StartTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x0002D0, "Member 'BP_CookingSlot_C_ExecuteUbergraph_BP_CookingSlot::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.Get_ProgressText_Text_0
// 0x0058 (0x0058 - 0x0000)
struct BP_CookingSlot_C_Get_ProgressText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E0[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(BP_CookingSlot_C_Get_ProgressText_Text_0) == 0x000008, "Wrong alignment on BP_CookingSlot_C_Get_ProgressText_Text_0");
static_assert(sizeof(BP_CookingSlot_C_Get_ProgressText_Text_0) == 0x000058, "Wrong size on BP_CookingSlot_C_Get_ProgressText_Text_0");
static_assert(offsetof(BP_CookingSlot_C_Get_ProgressText_Text_0, ReturnValue) == 0x000000, "Member 'BP_CookingSlot_C_Get_ProgressText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_Get_ProgressText_Text_0, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_CookingSlot_C_Get_ProgressText_Text_0::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_Get_ProgressText_Text_0, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_CookingSlot_C_Get_ProgressText_Text_0::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_Get_ProgressText_Text_0, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_CookingSlot_C_Get_ProgressText_Text_0::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_Get_ProgressText_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_CookingSlot_C_Get_ProgressText_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.GetItemName
// 0x0960 (0x0960 - 0x0000)
struct BP_CookingSlot_C_GetItemName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   ShortNameL;                                        // 0x0018(0x0018)(Edit, BlueprintVisible)
	class FText                                   NameL;                                             // 0x0030(0x0018)(Edit, BlueprintVisible)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E1[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0050(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E2[0xF];                                     // 0x0081(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0090(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E3[0x7];                                     // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0928(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E4[0x3];                                     // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select_Default;                             // 0x0940(0x0018)()
};
static_assert(alignof(BP_CookingSlot_C_GetItemName) == 0x000010, "Wrong alignment on BP_CookingSlot_C_GetItemName");
static_assert(sizeof(BP_CookingSlot_C_GetItemName) == 0x000960, "Wrong size on BP_CookingSlot_C_GetItemName");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, ReturnValue) == 0x000000, "Member 'BP_CookingSlot_C_GetItemName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, ShortNameL) == 0x000018, "Member 'BP_CookingSlot_C_GetItemName::ShortNameL' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, NameL) == 0x000030, "Member 'BP_CookingSlot_C_GetItemName::NameL' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, Temp_bool_Variable) == 0x000048, "Member 'BP_CookingSlot_C_GetItemName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_SGK_InvSlotItem_InvItem) == 0x000050, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_SGK_ItemDetails_ItemFound) == 0x000080, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000090, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_Greater_IntInt_ReturnValue) == 0x000920, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_Conv_TextToString_ReturnValue) == 0x000928, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_Len_ReturnValue) == 0x000938, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00093C, "Member 'BP_CookingSlot_C_GetItemName::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetItemName, K2Node_Select_Default) == 0x000940, "Member 'BP_CookingSlot_C_GetItemName::K2Node_Select_Default' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.GetProgressPercentText
// 0x0058 (0x0058 - 0x0000)
struct BP_CookingSlot_C_GetProgressPercentText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E5[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(BP_CookingSlot_C_GetProgressPercentText) == 0x000008, "Wrong alignment on BP_CookingSlot_C_GetProgressPercentText");
static_assert(sizeof(BP_CookingSlot_C_GetProgressPercentText) == 0x000058, "Wrong size on BP_CookingSlot_C_GetProgressPercentText");
static_assert(offsetof(BP_CookingSlot_C_GetProgressPercentText, ReturnValue) == 0x000000, "Member 'BP_CookingSlot_C_GetProgressPercentText::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetProgressPercentText, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_CookingSlot_C_GetProgressPercentText::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetProgressPercentText, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_CookingSlot_C_GetProgressPercentText::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetProgressPercentText, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'BP_CookingSlot_C_GetProgressPercentText::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_GetProgressPercentText, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_CookingSlot_C_GetProgressPercentText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.IsItemValid
// 0x0040 (0x0040 - 0x0000)
struct BP_CookingSlot_C_IsItemValid final
{
public:
	bool                                          ItemValid;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E6[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0008(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_IsItemValid) == 0x000008, "Wrong alignment on BP_CookingSlot_C_IsItemValid");
static_assert(sizeof(BP_CookingSlot_C_IsItemValid) == 0x000040, "Wrong size on BP_CookingSlot_C_IsItemValid");
static_assert(offsetof(BP_CookingSlot_C_IsItemValid, ItemValid) == 0x000000, "Member 'BP_CookingSlot_C_IsItemValid::ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_IsItemValid, CallFunc_SGK_InvSlotItem_InvItem) == 0x000008, "Member 'BP_CookingSlot_C_IsItemValid::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_IsItemValid, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_CookingSlot_C_IsItemValid::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.LoadGameSettings
// 0x0030 (0x0030 - 0x0000)
struct BP_CookingSlot_C_LoadGameSettings final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameInstanceInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E7[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSettingsSaveData_C*              CallFunc_SGK_Options_Save_Settings;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_LoadGameSettings) == 0x000008, "Wrong alignment on BP_CookingSlot_C_LoadGameSettings");
static_assert(sizeof(BP_CookingSlot_C_LoadGameSettings) == 0x000030, "Wrong size on BP_CookingSlot_C_LoadGameSettings");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'BP_CookingSlot_C_LoadGameSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, CallFunc_GetGameInstance_ReturnValue_1) == 0x000008, "Member 'BP_CookingSlot_C_LoadGameSettings::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface) == 0x000010, "Member 'BP_CookingSlot_C_LoadGameSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_CookingSlot_C_LoadGameSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_CookingSlot_C_LoadGameSettings::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_LoadGameSettings, CallFunc_SGK_Options_Save_Settings) == 0x000028, "Member 'BP_CookingSlot_C_LoadGameSettings::CallFunc_SGK_Options_Save_Settings' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnDragDetected
// 0x0120 (0x0120 - 0x0000)
struct BP_CookingSlot_C_OnDragDetected final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MoveIcon_C*                         MoveIconL;                                         // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDragDropOperation*                     CallFunc_CreateDragDropOperation_ReturnValue;      // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E8[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_MoveIcon_C*                         CallFunc_Create_ReturnValue;                       // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemValid_ItemValid;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_OnDragDetected) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnDragDetected");
static_assert(sizeof(BP_CookingSlot_C_OnDragDetected) == 0x000120, "Wrong size on BP_CookingSlot_C_OnDragDetected");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, MyGeometry) == 0x000000, "Member 'BP_CookingSlot_C_OnDragDetected::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, PointerEvent) == 0x000040, "Member 'BP_CookingSlot_C_OnDragDetected::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, Operation) == 0x0000D8, "Member 'BP_CookingSlot_C_OnDragDetected::Operation' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, MoveIconL) == 0x0000E0, "Member 'BP_CookingSlot_C_OnDragDetected::MoveIconL' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, CallFunc_CreateDragDropOperation_ReturnValue) == 0x0000E8, "Member 'BP_CookingSlot_C_OnDragDetected::CallFunc_CreateDragDropOperation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, K2Node_MakeStruct_S_InvSlotID) == 0x0000F0, "Member 'BP_CookingSlot_C_OnDragDetected::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, CallFunc_MakeLiteralByte_ReturnValue) == 0x000100, "Member 'BP_CookingSlot_C_OnDragDetected::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, CallFunc_GetOwningPlayer_ReturnValue) == 0x000108, "Member 'BP_CookingSlot_C_OnDragDetected::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, CallFunc_Create_ReturnValue) == 0x000110, "Member 'BP_CookingSlot_C_OnDragDetected::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDragDetected, CallFunc_IsItemValid_ItemValid) == 0x000118, "Member 'BP_CookingSlot_C_OnDragDetected::CallFunc_IsItemValid_ItemValid' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnDrop
// 0x0130 (0x0130 - 0x0000)
struct BP_CookingSlot_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0040(0x0098)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00D8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00E0(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E9[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MoveIcon_C*                         MoveIconL;                                         // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlotID                           MoveSlotL;                                         // 0x00F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             Temp_byte_Variable;                                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             Temp_byte_Variable_1;                              // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0107(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_SpecialSlotType                             K2Node_Select_Default;                             // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EA[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlotID                           K2Node_MakeStruct_S_InvSlotID;                     // 0x0110(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MoveIcon_C*                         K2Node_DynamicCast_AsBP_Move_Icon;                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_OnDrop) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnDrop");
static_assert(sizeof(BP_CookingSlot_C_OnDrop) == 0x000130, "Wrong size on BP_CookingSlot_C_OnDrop");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, MyGeometry) == 0x000000, "Member 'BP_CookingSlot_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, PointerEvent) == 0x000040, "Member 'BP_CookingSlot_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, Operation) == 0x0000D8, "Member 'BP_CookingSlot_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, ReturnValue) == 0x0000E0, "Member 'BP_CookingSlot_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, MoveIconL) == 0x0000E8, "Member 'BP_CookingSlot_C_OnDrop::MoveIconL' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, MoveSlotL) == 0x0000F0, "Member 'BP_CookingSlot_C_OnDrop::MoveSlotL' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, Temp_bool_Variable) == 0x000100, "Member 'BP_CookingSlot_C_OnDrop::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, Temp_byte_Variable) == 0x000101, "Member 'BP_CookingSlot_C_OnDrop::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, Temp_byte_Variable_1) == 0x000102, "Member 'BP_CookingSlot_C_OnDrop::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, K2Node_SwitchEnum_CmpSuccess) == 0x000103, "Member 'BP_CookingSlot_C_OnDrop::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000104, "Member 'BP_CookingSlot_C_OnDrop::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000105, "Member 'BP_CookingSlot_C_OnDrop::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000106, "Member 'BP_CookingSlot_C_OnDrop::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, CallFunc_BooleanAND_ReturnValue) == 0x000107, "Member 'BP_CookingSlot_C_OnDrop::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, K2Node_Select_Default) == 0x000108, "Member 'BP_CookingSlot_C_OnDrop::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, CallFunc_Not_PreBool_ReturnValue) == 0x000109, "Member 'BP_CookingSlot_C_OnDrop::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, K2Node_MakeStruct_S_InvSlotID) == 0x000110, "Member 'BP_CookingSlot_C_OnDrop::K2Node_MakeStruct_S_InvSlotID' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, K2Node_DynamicCast_AsBP_Move_Icon) == 0x000120, "Member 'BP_CookingSlot_C_OnDrop::K2Node_DynamicCast_AsBP_Move_Icon' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x000128, "Member 'BP_CookingSlot_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseButtonDoubleClick
// 0x0190 (0x0190 - 0x0000)
struct BP_CookingSlot_C_OnMouseButtonDoubleClick final
{
public:
	struct FGeometry                              InMyGeometry;                                      // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          InMouseEvent;                                      // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_CookingSlot_C_OnMouseButtonDoubleClick) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnMouseButtonDoubleClick");
static_assert(sizeof(BP_CookingSlot_C_OnMouseButtonDoubleClick) == 0x000190, "Wrong size on BP_CookingSlot_C_OnMouseButtonDoubleClick");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDoubleClick, InMyGeometry) == 0x000000, "Member 'BP_CookingSlot_C_OnMouseButtonDoubleClick::InMyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDoubleClick, InMouseEvent) == 0x000040, "Member 'BP_CookingSlot_C_OnMouseButtonDoubleClick::InMouseEvent' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDoubleClick, ReturnValue) == 0x0000D8, "Member 'BP_CookingSlot_C_OnMouseButtonDoubleClick::ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseButtonDown
// 0x0248 (0x0248 - 0x0000)
struct BP_CookingSlot_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_DetectDragIfPressed_ReturnValue;          // 0x0190(0x00B8)()
};
static_assert(alignof(BP_CookingSlot_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnMouseButtonDown");
static_assert(sizeof(BP_CookingSlot_C_OnMouseButtonDown) == 0x000248, "Wrong size on BP_CookingSlot_C_OnMouseButtonDown");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'BP_CookingSlot_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDown, MouseEvent) == 0x000040, "Member 'BP_CookingSlot_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDown, ReturnValue) == 0x0000D8, "Member 'BP_CookingSlot_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseButtonDown, CallFunc_DetectDragIfPressed_ReturnValue) == 0x000190, "Member 'BP_CookingSlot_C_OnMouseButtonDown::CallFunc_DetectDragIfPressed_ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct BP_CookingSlot_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CookingSlot_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnMouseEnter");
static_assert(sizeof(BP_CookingSlot_C_OnMouseEnter) == 0x0000D8, "Wrong size on BP_CookingSlot_C_OnMouseEnter");
static_assert(offsetof(BP_CookingSlot_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_CookingSlot_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'BP_CookingSlot_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct BP_CookingSlot_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CookingSlot_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_CookingSlot_C_OnMouseLeave");
static_assert(sizeof(BP_CookingSlot_C_OnMouseLeave) == 0x000098, "Wrong size on BP_CookingSlot_C_OnMouseLeave");
static_assert(offsetof(BP_CookingSlot_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_CookingSlot_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_CookingSlot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_PreConstruct) == 0x000001, "Wrong alignment on BP_CookingSlot_C_PreConstruct");
static_assert(sizeof(BP_CookingSlot_C_PreConstruct) == 0x000001, "Wrong size on BP_CookingSlot_C_PreConstruct");
static_assert(offsetof(BP_CookingSlot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_CookingSlot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.ResumeFrom
// 0x0018 (0x0018 - 0x0000)
struct BP_CookingSlot_C_ResumeFrom final
{
public:
	double                                        Param_CurrentTime;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Param_TimerLength;                                 // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Paused;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_ResumeFrom) == 0x000008, "Wrong alignment on BP_CookingSlot_C_ResumeFrom");
static_assert(sizeof(BP_CookingSlot_C_ResumeFrom) == 0x000018, "Wrong size on BP_CookingSlot_C_ResumeFrom");
static_assert(offsetof(BP_CookingSlot_C_ResumeFrom, Param_CurrentTime) == 0x000000, "Member 'BP_CookingSlot_C_ResumeFrom::Param_CurrentTime' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ResumeFrom, Param_TimerLength) == 0x000008, "Member 'BP_CookingSlot_C_ResumeFrom::Param_TimerLength' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_ResumeFrom, Paused) == 0x000010, "Member 'BP_CookingSlot_C_ResumeFrom::Paused' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.SetProgressPercent
// 0x0020 (0x0020 - 0x0000)
struct BP_CookingSlot_C_SetProgressPercent final
{
public:
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EB[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_SetProgressPercent) == 0x000008, "Wrong alignment on BP_CookingSlot_C_SetProgressPercent");
static_assert(sizeof(BP_CookingSlot_C_SetProgressPercent) == 0x000020, "Wrong size on BP_CookingSlot_C_SetProgressPercent");
static_assert(offsetof(BP_CookingSlot_C_SetProgressPercent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000000, "Member 'BP_CookingSlot_C_SetProgressPercent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_SetProgressPercent, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_CookingSlot_C_SetProgressPercent::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_SetProgressPercent, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'BP_CookingSlot_C_SetProgressPercent::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_SetProgressPercent, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_CookingSlot_C_SetProgressPercent::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.StartTimer
// 0x0008 (0x0008 - 0x0000)
struct BP_CookingSlot_C_StartTimer final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_StartTimer) == 0x000008, "Wrong alignment on BP_CookingSlot_C_StartTimer");
static_assert(sizeof(BP_CookingSlot_C_StartTimer) == 0x000008, "Wrong size on BP_CookingSlot_C_StartTimer");
static_assert(offsetof(BP_CookingSlot_C_StartTimer, Time) == 0x000000, "Member 'BP_CookingSlot_C_StartTimer::Time' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.UpdateCookingItem
// 0x1200 (0x1200 - 0x0000)
struct BP_CookingSlot_C_UpdateCookingItem final
{
public:
	struct FS_InvSlot                             Param_CookingSlot;                                 // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_GetItemName_ReturnValue;                  // 0x0050(0x0018)()
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0068(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EC[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00A0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0930(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55ED[0xF];                                     // 0x0961(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0970(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_UpdateCookingItem) == 0x000010, "Wrong alignment on BP_CookingSlot_C_UpdateCookingItem");
static_assert(sizeof(BP_CookingSlot_C_UpdateCookingItem) == 0x001200, "Wrong size on BP_CookingSlot_C_UpdateCookingItem");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, Param_CookingSlot) == 0x000000, "Member 'BP_CookingSlot_C_UpdateCookingItem::Param_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_GetItemName_ReturnValue) == 0x000050, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_GetItemName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x000068, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000098, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000A0, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000930, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000960, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateCookingItem, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000970, "Member 'BP_CookingSlot_C_UpdateCookingItem::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");

// Function BP_CookingSlot.BP_CookingSlot_C.UpdateItemCount
// 0x0268 (0x0268 - 0x0000)
struct BP_CookingSlot_C_UpdateItemCount final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetItemRangeClass_ReturnValue;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EE[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_SGK_GetItemRangeClass_RangeWeapon;        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55EF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TotalAmmo_ReturnValue;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TotalMaxAmmo_MaxAmmo;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F0[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F1[0x7];                                     // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F2[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails; // 0x00A0(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0140(0x0018)()
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound_1;     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F3[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_1; // 0x0160(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound_2;     // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F4[0x7];                                     // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_2; // 0x01D8(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0248(0x0018)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItemValid_ItemValid;                    // 0x0263(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingSlot_C_UpdateItemCount) == 0x000008, "Wrong alignment on BP_CookingSlot_C_UpdateItemCount");
static_assert(sizeof(BP_CookingSlot_C_UpdateItemCount) == 0x000268, "Wrong size on BP_CookingSlot_C_UpdateItemCount");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, Temp_bool_Variable) == 0x000000, "Member 'BP_CookingSlot_C_UpdateItemCount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, Temp_byte_Variable) == 0x000001, "Member 'BP_CookingSlot_C_UpdateItemCount::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, Temp_byte_Variable_1) == 0x000002, "Member 'BP_CookingSlot_C_UpdateItemCount::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_GetItemRangeClass_ReturnValue) == 0x000003, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_GetItemRangeClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_GetItemRangeClass_RangeWeapon) == 0x000008, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_GetItemRangeClass_RangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000010, "Member 'BP_CookingSlot_C_UpdateItemCount::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CookingSlot_C_UpdateItemCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_TotalAmmo_ReturnValue) == 0x00001C, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_TotalAmmo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_TotalMaxAmmo_MaxAmmo) == 0x000020, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_TotalMaxAmmo_MaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000028, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000038, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000088, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemFound) == 0x000098, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails) == 0x0000A0, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000110, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000120, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000130, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000140, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemFound_1) == 0x000158, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_1) == 0x000160, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_1' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemFound_2) == 0x0001D0, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_2) == 0x0001D8, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails_2' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000248, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, K2Node_SwitchEnum_CmpSuccess) == 0x000260, "Member 'BP_CookingSlot_C_UpdateItemCount::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_Greater_IntInt_ReturnValue) == 0x000261, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, K2Node_Select_Default) == 0x000262, "Member 'BP_CookingSlot_C_UpdateItemCount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CookingSlot_C_UpdateItemCount, CallFunc_IsItemValid_ItemValid) == 0x000263, "Member 'BP_CookingSlot_C_UpdateItemCount::CallFunc_IsItemValid_ItemValid' has a wrong offset!");

}

