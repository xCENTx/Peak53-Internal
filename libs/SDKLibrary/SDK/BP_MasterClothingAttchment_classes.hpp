#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterClothingAttchment

#include "Basic.hpp"

#include "S_EquipmentDetails_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_InvItem_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterClothingAttchment.BP_MasterClothingAttchment_C
// 0x01D0 (0x0460 - 0x0290)
class ABP_MasterClothingAttchment_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             EquipmentItem;                                     // 0x02A0(0x0030)(Edit, BlueprintVisible, Net, NoDestructor, ContainsInstancedReference, ExposeOnSpawn, HasGetValueTypeHash)
	struct FS_EquipmentDetails                    EquipmentDetails;                                  // 0x02D0(0x0170)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AActor*                                 AttachActor;                                       // 0x0440(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, RepNotify, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             OwningCharacter;                                   // 0x0448(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            FirstPersonMeshes;                                 // 0x0450(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void AddFirstPersonSkeletalMeshes();
	void AddFirstPersonStaticMeshes();
	void AddThirdPersonSkeletalMeshes();
	void AddThirdPersonStaticMeshes();
	void ClientThirdPersonMeshes();
	void ExecuteUbergraph_BP_MasterClothingAttchment(int32 EntryPoint);
	void FirstPersonMode();
	void FirstPersonVisibility(bool Hide);
	void HideComponents();
	void InitializeClothing();
	void OnRep_AttachActor();
	void OwnerDestroyed(class AActor* DestroyedActor);
	void ReceiveBeginPlay();
	void SetMesh();
	void ThirdPersonMode();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterClothingAttchment_C">();
	}
	static class ABP_MasterClothingAttchment_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterClothingAttchment_C>();
	}
};
static_assert(alignof(ABP_MasterClothingAttchment_C) == 0x000008, "Wrong alignment on ABP_MasterClothingAttchment_C");
static_assert(sizeof(ABP_MasterClothingAttchment_C) == 0x000460, "Wrong size on ABP_MasterClothingAttchment_C");
static_assert(offsetof(ABP_MasterClothingAttchment_C, UberGraphFrame) == 0x000290, "Member 'ABP_MasterClothingAttchment_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_MasterClothingAttchment_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, EquipmentItem) == 0x0002A0, "Member 'ABP_MasterClothingAttchment_C::EquipmentItem' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, EquipmentDetails) == 0x0002D0, "Member 'ABP_MasterClothingAttchment_C::EquipmentDetails' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, AttachActor) == 0x000440, "Member 'ABP_MasterClothingAttchment_C::AttachActor' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, OwningCharacter) == 0x000448, "Member 'ABP_MasterClothingAttchment_C::OwningCharacter' has a wrong offset!");
static_assert(offsetof(ABP_MasterClothingAttchment_C, FirstPersonMeshes) == 0x000450, "Member 'ABP_MasterClothingAttchment_C::FirstPersonMeshes' has a wrong offset!");

}

