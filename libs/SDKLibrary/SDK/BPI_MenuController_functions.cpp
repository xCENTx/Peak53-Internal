#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MenuController

#include "Basic.hpp"

#include "BPI_MenuController_classes.hpp"
#include "BPI_MenuController_parameters.hpp"


namespace SDK
{

// Function BPI_MenuController.BPI_MenuController_C.ClientUpdateChat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Team_Chat                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MenuController_C::ClientUpdateChat(const class FText& Sender, const class FText& Text, bool Team_Chat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MenuController_C", "ClientUpdateChat");

	Params::BPI_MenuController_C_ClientUpdateChat Parms{};

	Parms.Sender = std::move(Sender);
	Parms.Text = std::move(Text);
	Parms.Team_Chat = Team_Chat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MenuController.BPI_MenuController_C.GetChatMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             TextToSend                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    TeamChat                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                SenderPC                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_MenuController_C::GetChatMessage(const class FText& TextToSend, bool TeamChat, class APlayerController* SenderPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MenuController_C", "GetChatMessage");

	Params::BPI_MenuController_C_GetChatMessage Parms{};

	Parms.TextToSend = std::move(TextToSend);
	Parms.TeamChat = TeamChat;
	Parms.SenderPC = SenderPC;

	UObject::ProcessEvent(Func, &Parms);
}

}

