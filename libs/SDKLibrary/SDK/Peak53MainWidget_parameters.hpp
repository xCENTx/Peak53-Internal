#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Peak53MainWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "S_ScoreValues_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Peak53MainWidget.Peak53MainWidget_C.AddScoreInfo
// 0x0018 (0x0018 - 0x0000)
struct Peak53MainWidget_C_AddScoreInfo final
{
public:
	struct FS_ScoreValues                         ScoreInfo;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_AddScoreInfo) == 0x000008, "Wrong alignment on Peak53MainWidget_C_AddScoreInfo");
static_assert(sizeof(Peak53MainWidget_C_AddScoreInfo) == 0x000018, "Wrong size on Peak53MainWidget_C_AddScoreInfo");
static_assert(offsetof(Peak53MainWidget_C_AddScoreInfo, ScoreInfo) == 0x000000, "Member 'Peak53MainWidget_C_AddScoreInfo::ScoreInfo' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.ExecuteUbergraph_Peak53MainWidget
// 0x0100 (0x0100 - 0x0000)
struct Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A0[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ScoreValues                         K2Node_CustomEvent_scoreInfo;                      // 0x0008(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_score_display_C*                     CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bIsTeamChat)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsTeamChat;                    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A2[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53PlayerState_C*                   K2Node_DynamicCast_AsPeak_53Player_State;          // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A3[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPingInMilliseconds_ReturnValue;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A4[0x4];                                     // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0098(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A5[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D8(0x0018)()
	bool                                          K2Node_CustomEvent_Condition;                      // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A6[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FTrunc_A_ImplicitCast;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget) == 0x000008, "Wrong alignment on Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget");
static_assert(sizeof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget) == 0x000100, "Wrong size on Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, EntryPoint) == 0x000000, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_CustomEvent_scoreInfo) == 0x000008, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_CustomEvent_scoreInfo' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_Event_IsDesignTime) == 0x000020, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_Create_ReturnValue) == 0x000028, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_AddChild_ReturnValue) == 0x000030, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000038, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000040, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_DynamicCast_AsBP_SGKController) == 0x000050, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_CustomEvent_bIsTeamChat) == 0x000059, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_CustomEvent_bIsTeamChat' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_GetPlayerController_ReturnValue) == 0x000060, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_DynamicCast_AsPeak_53Player_State) == 0x000068, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_DynamicCast_AsPeak_53Player_State' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_GetPlayerController_ReturnValue_1) == 0x000078, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x000080, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_GetPingInMilliseconds_ReturnValue) == 0x000090, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_GetPingInMilliseconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000098, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_FTrunc_ReturnValue) == 0x0000A0, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_Conv_IntToString_ReturnValue) == 0x0000A8, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C8, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D8, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, K2Node_CustomEvent_Condition) == 0x0000F0, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::K2Node_CustomEvent_Condition' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget, CallFunc_FTrunc_A_ImplicitCast) == 0x0000F8, "Member 'Peak53MainWidget_C_ExecuteUbergraph_Peak53MainWidget::CallFunc_FTrunc_A_ImplicitCast' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.GetVisibility_0
// 0x0020 (0x0020 - 0x0000)
struct Peak53MainWidget_C_GetVisibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_GetVisibility_0) == 0x000008, "Wrong alignment on Peak53MainWidget_C_GetVisibility_0");
static_assert(sizeof(Peak53MainWidget_C_GetVisibility_0) == 0x000020, "Wrong size on Peak53MainWidget_C_GetVisibility_0");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_0, ReturnValue) == 0x000000, "Member 'Peak53MainWidget_C_GetVisibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_0, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Peak53MainWidget_C_GetVisibility_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_0, K2Node_DynamicCast_AsPeak_53Game_State) == 0x000010, "Member 'Peak53MainWidget_C_GetVisibility_0::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_0, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Peak53MainWidget_C_GetVisibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.GetVisibility_1
// 0x0020 (0x0020 - 0x0000)
struct Peak53MainWidget_C_GetVisibility_1 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A8[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APeak53GameState_C*                     K2Node_DynamicCast_AsPeak_53Game_State;            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_GetVisibility_1) == 0x000008, "Wrong alignment on Peak53MainWidget_C_GetVisibility_1");
static_assert(sizeof(Peak53MainWidget_C_GetVisibility_1) == 0x000020, "Wrong size on Peak53MainWidget_C_GetVisibility_1");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_1, ReturnValue) == 0x000000, "Member 'Peak53MainWidget_C_GetVisibility_1::ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_1, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Peak53MainWidget_C_GetVisibility_1::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_1, K2Node_DynamicCast_AsPeak_53Game_State) == 0x000010, "Member 'Peak53MainWidget_C_GetVisibility_1::K2Node_DynamicCast_AsPeak_53Game_State' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_1, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Peak53MainWidget_C_GetVisibility_1::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.GetVisibility_2
// 0x0001 (0x0001 - 0x0000)
struct Peak53MainWidget_C_GetVisibility_2 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_GetVisibility_2) == 0x000001, "Wrong alignment on Peak53MainWidget_C_GetVisibility_2");
static_assert(sizeof(Peak53MainWidget_C_GetVisibility_2) == 0x000001, "Wrong size on Peak53MainWidget_C_GetVisibility_2");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_2, ReturnValue) == 0x000000, "Member 'Peak53MainWidget_C_GetVisibility_2::ReturnValue' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.GetVisibility_3
// 0x0038 (0x0038 - 0x0000)
struct Peak53MainWidget_C_GetVisibility_3 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40A9[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SGKController_C*                    K2Node_DynamicCast_AsBP_SGKController;             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40AA[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_EquipmentCharacter_C*               K2Node_DynamicCast_AsBP_Equipment_Character;       // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_GetVisibility_3) == 0x000008, "Wrong alignment on Peak53MainWidget_C_GetVisibility_3");
static_assert(sizeof(Peak53MainWidget_C_GetVisibility_3) == 0x000038, "Wrong size on Peak53MainWidget_C_GetVisibility_3");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, ReturnValue) == 0x000000, "Member 'Peak53MainWidget_C_GetVisibility_3::ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, Temp_bool_Variable) == 0x000001, "Member 'Peak53MainWidget_C_GetVisibility_3::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, Temp_byte_Variable) == 0x000002, "Member 'Peak53MainWidget_C_GetVisibility_3::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, Temp_byte_Variable_1) == 0x000003, "Member 'Peak53MainWidget_C_GetVisibility_3::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'Peak53MainWidget_C_GetVisibility_3::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, K2Node_DynamicCast_AsBP_SGKController) == 0x000010, "Member 'Peak53MainWidget_C_GetVisibility_3::K2Node_DynamicCast_AsBP_SGKController' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Peak53MainWidget_C_GetVisibility_3::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'Peak53MainWidget_C_GetVisibility_3::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, K2Node_DynamicCast_AsBP_Equipment_Character) == 0x000028, "Member 'Peak53MainWidget_C_GetVisibility_3::K2Node_DynamicCast_AsBP_Equipment_Character' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Peak53MainWidget_C_GetVisibility_3::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Peak53MainWidget_C_GetVisibility_3, K2Node_Select_Default) == 0x000031, "Member 'Peak53MainWidget_C_GetVisibility_3::K2Node_Select_Default' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.OpenChat
// 0x0001 (0x0001 - 0x0000)
struct Peak53MainWidget_C_OpenChat final
{
public:
	bool                                          bIsTeamChat;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_OpenChat) == 0x000001, "Wrong alignment on Peak53MainWidget_C_OpenChat");
static_assert(sizeof(Peak53MainWidget_C_OpenChat) == 0x000001, "Wrong size on Peak53MainWidget_C_OpenChat");
static_assert(offsetof(Peak53MainWidget_C_OpenChat, bIsTeamChat) == 0x000000, "Member 'Peak53MainWidget_C_OpenChat::bIsTeamChat' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct Peak53MainWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_PreConstruct) == 0x000001, "Wrong alignment on Peak53MainWidget_C_PreConstruct");
static_assert(sizeof(Peak53MainWidget_C_PreConstruct) == 0x000001, "Wrong size on Peak53MainWidget_C_PreConstruct");
static_assert(offsetof(Peak53MainWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'Peak53MainWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function Peak53MainWidget.Peak53MainWidget_C.ShowTooltip
// 0x0001 (0x0001 - 0x0000)
struct Peak53MainWidget_C_ShowTooltip final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Peak53MainWidget_C_ShowTooltip) == 0x000001, "Wrong alignment on Peak53MainWidget_C_ShowTooltip");
static_assert(sizeof(Peak53MainWidget_C_ShowTooltip) == 0x000001, "Wrong size on Peak53MainWidget_C_ShowTooltip");
static_assert(offsetof(Peak53MainWidget_C_ShowTooltip, Condition) == 0x000000, "Member 'Peak53MainWidget_C_ShowTooltip::Condition' has a wrong offset!");

}

