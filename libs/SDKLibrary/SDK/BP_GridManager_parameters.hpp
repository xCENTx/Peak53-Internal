#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GridManager

#include "Basic.hpp"

#include "E_BuildType_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GridManager.BP_GridManager_C.CreateGridActors
// 0x00B0 (0x00B0 - 0x0000)
struct BP_GridManager_C_CreateGridActors final
{
public:
	class ABP_MasterGrid_C*                       NewGrid;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	E_BuildType                                   GridTypeL;                                         // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F5[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F6[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F7[0xE];                                     // 0x0022(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_SGK_GridClasses_Grid;                     // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F8[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       CallFunc_FinishSpawningActor_ReturnValue;          // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GridManager_C_CreateGridActors) == 0x000010, "Wrong alignment on BP_GridManager_C_CreateGridActors");
static_assert(sizeof(BP_GridManager_C_CreateGridActors) == 0x0000B0, "Wrong size on BP_GridManager_C_CreateGridActors");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, NewGrid) == 0x000000, "Member 'BP_GridManager_C_CreateGridActors::NewGrid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, GridTypeL) == 0x000008, "Member 'BP_GridManager_C_CreateGridActors::GridTypeL' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, Temp_int_Variable) == 0x00000C, "Member 'BP_GridManager_C_CreateGridActors::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_MakeLiteralInt_ReturnValue) == 0x000018, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'BP_GridManager_C_CreateGridActors::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_SGK_GridClasses_Grid) == 0x000090, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_SGK_GridClasses_Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_IsValidClass_ReturnValue) == 0x000098, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A0, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_CreateGridActors, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000A8, "Member 'BP_GridManager_C_CreateGridActors::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_GridManager.BP_GridManager_C.DeleteGrid
// 0x0038 (0x0038 - 0x0000)
struct BP_GridManager_C_DeleteGrid final
{
public:
	class UBoxComponent*                          Grid;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55F9[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       K2Node_DynamicCast_AsBP_Master_Grid;               // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55FA[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterGrid_C*                       CallFunc_SelectGridActor_Grid;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GridManager_C_DeleteGrid) == 0x000008, "Wrong alignment on BP_GridManager_C_DeleteGrid");
static_assert(sizeof(BP_GridManager_C_DeleteGrid) == 0x000038, "Wrong size on BP_GridManager_C_DeleteGrid");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, Grid) == 0x000000, "Member 'BP_GridManager_C_DeleteGrid::Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GridManager_C_DeleteGrid::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_GridManager_C_DeleteGrid::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, K2Node_DynamicCast_AsBP_Master_Grid) == 0x000018, "Member 'BP_GridManager_C_DeleteGrid::K2Node_DynamicCast_AsBP_Master_Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GridManager_C_DeleteGrid::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, CallFunc_SelectGridActor_Grid) == 0x000028, "Member 'BP_GridManager_C_DeleteGrid::CallFunc_SelectGridActor_Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_DeleteGrid, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'BP_GridManager_C_DeleteGrid::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GridManager.BP_GridManager_C.ExecuteUbergraph_BP_GridManager
// 0x0004 (0x0004 - 0x0000)
struct BP_GridManager_C_ExecuteUbergraph_BP_GridManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GridManager_C_ExecuteUbergraph_BP_GridManager) == 0x000004, "Wrong alignment on BP_GridManager_C_ExecuteUbergraph_BP_GridManager");
static_assert(sizeof(BP_GridManager_C_ExecuteUbergraph_BP_GridManager) == 0x000004, "Wrong size on BP_GridManager_C_ExecuteUbergraph_BP_GridManager");
static_assert(offsetof(BP_GridManager_C_ExecuteUbergraph_BP_GridManager, EntryPoint) == 0x000000, "Member 'BP_GridManager_C_ExecuteUbergraph_BP_GridManager::EntryPoint' has a wrong offset!");

// Function BP_GridManager.BP_GridManager_C.GetAllGrids
// 0x0048 (0x0048 - 0x0000)
struct BP_GridManager_C_GetAllGrids final
{
public:
	TArray<class ABP_MasterGrid_C*>               AllGrids;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<class ABP_MasterGrid_C*>               AllGridsL;                                         // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55FB[0x2];                                     // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55FC[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterGrid_C*                       CallFunc_SelectGridActor_Grid;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GridManager_C_GetAllGrids) == 0x000008, "Wrong alignment on BP_GridManager_C_GetAllGrids");
static_assert(sizeof(BP_GridManager_C_GetAllGrids) == 0x000048, "Wrong size on BP_GridManager_C_GetAllGrids");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, AllGrids) == 0x000000, "Member 'BP_GridManager_C_GetAllGrids::AllGrids' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, AllGridsL) == 0x000010, "Member 'BP_GridManager_C_GetAllGrids::AllGridsL' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, Temp_int_Variable) == 0x000020, "Member 'BP_GridManager_C_GetAllGrids::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_Conv_IntToByte_ReturnValue) == 0x000024, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_GetValidValue_ReturnValue) == 0x000025, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_SelectGridActor_Grid) == 0x000030, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_SelectGridActor_Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_MakeLiteralInt_ReturnValue) == 0x00003C, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_Subtract_IntInt_ReturnValue) == 0x000040, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_GetAllGrids, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000044, "Member 'BP_GridManager_C_GetAllGrids::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_GridManager.BP_GridManager_C.SelectGridActor
// 0x0030 (0x0030 - 0x0000)
struct BP_GridManager_C_SelectGridActor final
{
public:
	E_BuildType                                   GridType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55FD[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterGrid_C*                       Grid;                                              // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_BuildType                                   Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55FE[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterGrid_C*                       Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       Temp_object_Variable_1;                            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_MasterGrid_C*                       K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GridManager_C_SelectGridActor) == 0x000008, "Wrong alignment on BP_GridManager_C_SelectGridActor");
static_assert(sizeof(BP_GridManager_C_SelectGridActor) == 0x000030, "Wrong size on BP_GridManager_C_SelectGridActor");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, GridType) == 0x000000, "Member 'BP_GridManager_C_SelectGridActor::GridType' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, Grid) == 0x000008, "Member 'BP_GridManager_C_SelectGridActor::Grid' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, Temp_byte_Variable) == 0x000010, "Member 'BP_GridManager_C_SelectGridActor::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, Temp_object_Variable) == 0x000018, "Member 'BP_GridManager_C_SelectGridActor::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, Temp_object_Variable_1) == 0x000020, "Member 'BP_GridManager_C_SelectGridActor::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GridManager_C_SelectGridActor, K2Node_Select_Default) == 0x000028, "Member 'BP_GridManager_C_SelectGridActor::K2Node_Select_Default' has a wrong offset!");

}

