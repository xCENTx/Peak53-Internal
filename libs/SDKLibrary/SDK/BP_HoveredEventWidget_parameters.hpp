#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HoveredEventWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_HoveredEventWidget.BP_HoveredEventWidget_C.ExecuteUbergraph_BP_HoveredEventWidget
// 0x0178 (0x0178 - 0x0000)
struct BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3861[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent_1;                         // 0x0008(0x0098)(ConstParm)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00A0(0x0040)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x00E0(0x0098)(ConstParm)
};
static_assert(alignof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget) == 0x000008, "Wrong alignment on BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget");
static_assert(sizeof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget) == 0x000178, "Wrong size on BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget");
static_assert(offsetof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget, EntryPoint) == 0x000000, "Member 'BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget, K2Node_Event_MouseEvent_1) == 0x000008, "Member 'BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget::K2Node_Event_MouseEvent_1' has a wrong offset!");
static_assert(offsetof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget, K2Node_Event_MyGeometry) == 0x0000A0, "Member 'BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget, K2Node_Event_MouseEvent) == 0x0000E0, "Member 'BP_HoveredEventWidget_C_ExecuteUbergraph_BP_HoveredEventWidget::K2Node_Event_MouseEvent' has a wrong offset!");

// Function BP_HoveredEventWidget.BP_HoveredEventWidget_C.OnMouseEnter
// 0x00D8 (0x00D8 - 0x0000)
struct BP_HoveredEventWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HoveredEventWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on BP_HoveredEventWidget_C_OnMouseEnter");
static_assert(sizeof(BP_HoveredEventWidget_C_OnMouseEnter) == 0x0000D8, "Wrong size on BP_HoveredEventWidget_C_OnMouseEnter");
static_assert(offsetof(BP_HoveredEventWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'BP_HoveredEventWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(BP_HoveredEventWidget_C_OnMouseEnter, MouseEvent) == 0x000040, "Member 'BP_HoveredEventWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function BP_HoveredEventWidget.BP_HoveredEventWidget_C.OnMouseLeave
// 0x0098 (0x0098 - 0x0000)
struct BP_HoveredEventWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HoveredEventWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on BP_HoveredEventWidget_C_OnMouseLeave");
static_assert(sizeof(BP_HoveredEventWidget_C_OnMouseLeave) == 0x000098, "Wrong size on BP_HoveredEventWidget_C_OnMouseLeave");
static_assert(offsetof(BP_HoveredEventWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'BP_HoveredEventWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

}

