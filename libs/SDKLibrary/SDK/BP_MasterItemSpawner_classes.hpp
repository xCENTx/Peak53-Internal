#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterItemSpawner

#include "Basic.hpp"

#include "E_RecipeCategory_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "S_SpawnerList_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MasterItemSpawner.BP_MasterItemSpawner_C
// 0x00B0 (0x0340 - 0x0290)
class ABP_MasterItemSpawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextRenderComponent*                   TextRender;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnItem;                                         // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnItemOnBeginPlay;                              // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnItemOnTimer;                                  // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4914[0x5];                                     // 0x02AB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SpawnTimerLength;                                  // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<E_RecipeCategory>                        SpawnerTypes;                                      // 0x02B8(0x0050)(Edit, BlueprintVisible)
	bool                                          AlwaysSpawnItem;                                   // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4915[0x3];                                     // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxAlwaysSpawnAttempts;                            // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 AttachItemToActor;                                 // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_SpawnerList>                 ItemSpawnList;                                     // 0x0318(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         AlwaysSpawnNumOfChecks;                            // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4916[0x4];                                     // 0x032C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_SaveSystem_C*                       SaveGame;                                          // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 SpawnedItem;                                       // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ConstructItemSpawnList();
	void ExecuteUbergraph_BP_MasterItemSpawner(int32 EntryPoint);
	void LoadItemSpawner(class UBP_SGKSaveGame_C* Param_SaveGame);
	bool LoadItemSpawnerSave();
	void ReceiveBeginPlay();
	void SGKSave(class UBP_SGKSaveGame_C* Save);
	void SpawnNewItem();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MasterItemSpawner_C">();
	}
	static class ABP_MasterItemSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MasterItemSpawner_C>();
	}
};
static_assert(alignof(ABP_MasterItemSpawner_C) == 0x000008, "Wrong alignment on ABP_MasterItemSpawner_C");
static_assert(sizeof(ABP_MasterItemSpawner_C) == 0x000340, "Wrong size on ABP_MasterItemSpawner_C");
static_assert(offsetof(ABP_MasterItemSpawner_C, UberGraphFrame) == 0x000290, "Member 'ABP_MasterItemSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, TextRender) == 0x000298, "Member 'ABP_MasterItemSpawner_C::TextRender' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, DefaultSceneRoot) == 0x0002A0, "Member 'ABP_MasterItemSpawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnItem) == 0x0002A8, "Member 'ABP_MasterItemSpawner_C::SpawnItem' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnItemOnBeginPlay) == 0x0002A9, "Member 'ABP_MasterItemSpawner_C::SpawnItemOnBeginPlay' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnItemOnTimer) == 0x0002AA, "Member 'ABP_MasterItemSpawner_C::SpawnItemOnTimer' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnTimerLength) == 0x0002B0, "Member 'ABP_MasterItemSpawner_C::SpawnTimerLength' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnerTypes) == 0x0002B8, "Member 'ABP_MasterItemSpawner_C::SpawnerTypes' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, AlwaysSpawnItem) == 0x000308, "Member 'ABP_MasterItemSpawner_C::AlwaysSpawnItem' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, MaxAlwaysSpawnAttempts) == 0x00030C, "Member 'ABP_MasterItemSpawner_C::MaxAlwaysSpawnAttempts' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, AttachItemToActor) == 0x000310, "Member 'ABP_MasterItemSpawner_C::AttachItemToActor' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, ItemSpawnList) == 0x000318, "Member 'ABP_MasterItemSpawner_C::ItemSpawnList' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, AlwaysSpawnNumOfChecks) == 0x000328, "Member 'ABP_MasterItemSpawner_C::AlwaysSpawnNumOfChecks' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SaveGame) == 0x000330, "Member 'ABP_MasterItemSpawner_C::SaveGame' has a wrong offset!");
static_assert(offsetof(ABP_MasterItemSpawner_C, SpawnedItem) == 0x000338, "Member 'ABP_MasterItemSpawner_C::SpawnedItem' has a wrong offset!");

}

