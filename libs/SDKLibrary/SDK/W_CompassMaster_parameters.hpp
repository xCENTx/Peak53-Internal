#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CompassMaster

#include "Basic.hpp"

#include "E_CI_PositionMode_structs.hpp"
#include "E_C_RotationMode_structs.hpp"
#include "E_C_CalculateDistanceFrom_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_CompassMaster.W_CompassMaster_C.AddIndicator
// 0x0008 (0x0008 - 0x0000)
struct W_CompassMaster_C_AddIndicator final
{
public:
	class UBP_CompassIndicatorComponent_C*        TargetComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_AddIndicator) == 0x000008, "Wrong alignment on W_CompassMaster_C_AddIndicator");
static_assert(sizeof(W_CompassMaster_C_AddIndicator) == 0x000008, "Wrong size on W_CompassMaster_C_AddIndicator");
static_assert(offsetof(W_CompassMaster_C_AddIndicator, TargetComponent) == 0x000000, "Member 'W_CompassMaster_C_AddIndicator::TargetComponent' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.CalcIndicatorPosition
// 0x01A0 (0x01A0 - 0x0000)
struct W_CompassMaster_C_CalcIndicatorPosition final
{
public:
	E_CI_PositionMode                             IndicatorPositionMode;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E7[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PositionX;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PlayerRotation_local_;                             // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                PlayerLocation_local_;                             // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E8[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42E9[0x7];                                     // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EA[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EB[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EC[0x7];                                     // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_CalcIndicatorPosition) == 0x000008, "Wrong alignment on W_CompassMaster_C_CalcIndicatorPosition");
static_assert(sizeof(W_CompassMaster_C_CalcIndicatorPosition) == 0x0001A0, "Wrong size on W_CompassMaster_C_CalcIndicatorPosition");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, IndicatorPositionMode) == 0x000000, "Member 'W_CompassMaster_C_CalcIndicatorPosition::IndicatorPositionMode' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, TargetLocation) == 0x000008, "Member 'W_CompassMaster_C_CalcIndicatorPosition::TargetLocation' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, PositionX) == 0x000020, "Member 'W_CompassMaster_C_CalcIndicatorPosition::PositionX' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, PlayerRotation_local_) == 0x000028, "Member 'W_CompassMaster_C_CalcIndicatorPosition::PlayerRotation_local_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, PlayerLocation_local_) == 0x000040, "Member 'W_CompassMaster_C_CalcIndicatorPosition::PlayerLocation_local_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'W_CompassMaster_C_CalcIndicatorPosition::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakVector2D_X) == 0x000060, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, K2Node_SwitchEnum_CmpSuccess_1) == 0x000090, "Member 'W_CompassMaster_C_CalcIndicatorPosition::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakVector2D_Y_1) == 0x0000A0, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000A8, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetCameraLocation_ReturnValue) == 0x0000B8, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000D0, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_IsValid_ReturnValue) == 0x0000D8, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000E0, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000F8, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000110, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000118, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetCameraRotation_ReturnValue) == 0x000130, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakRotator_Roll) == 0x000148, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakRotator_Pitch) == 0x00014C, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_BreakRotator_Yaw) == 0x000150, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000158, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000160, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Lerp_ReturnValue) == 0x000168, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_IsValid_ReturnValue_1) == 0x000170, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_FClamp_ReturnValue) == 0x000178, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000180, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_CalcIndicatorPosition, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000198, "Member 'W_CompassMaster_C_CalcIndicatorPosition::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.ExecuteUbergraph_W_CompassMaster
// 0x01D0 (0x01D0 - 0x0000)
struct W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42ED[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EE[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0020(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42EF[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsOfClass_OutActors;            // 0x0078(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F0[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CompassIndicatorComponent_C*        K2Node_CustomEvent_TargetComponent_1;              // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F1[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F2[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CompassIndicatorComponent_C*        K2Node_CustomEvent_TargetComponent;                // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F3[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F4[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F5[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F6[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            K2Node_DynamicCast_AsW_Compass_Indicator_Master;   // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F7[0x3];                                     // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F8[0x7];                                     // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_CompassIndicatorComponent_C*        CallFunc_GetComponentByClass_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42F9[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            CallFunc_Create_ReturnValue;                       // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_2;                         // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FA[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            K2Node_DynamicCast_AsW_Compass_Indicator_Master_1; // 0x0150(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FB[0x3];                                     // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FC[0x3];                                     // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue_1;              // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FD[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCompassAngle_Z__Yaw_;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_CompassIndicatorMaster_C*            CallFunc_Create_ReturnValue_1;                     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FE[0x7];                                     // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue_1;          // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42FF[0x4];                                     // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_PlayerRotationYaw_ImplicitCast; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_SecondTimer_ImplicitCast;       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster) == 0x000008, "Wrong alignment on W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster");
static_assert(sizeof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster) == 0x0001D0, "Wrong size on W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, EntryPoint) == 0x000000, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable_1) == 0x000008, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue) == 0x000010, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable) == 0x000018, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_IsDesignTime) == 0x00001C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_MyGeometry) == 0x000020, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_Event_InDeltaTime) == 0x000060, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetLocalSize_ReturnValue) == 0x000068, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllActorsOfClass_OutActors) == 0x000078, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_CustomEvent_TargetComponent_1) == 0x000090, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_CustomEvent_TargetComponent_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable_1) == 0x00009C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0000A0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_RemoveChild_ReturnValue) == 0x0000A8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_CustomEvent_TargetComponent) == 0x0000B0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_CustomEvent_TargetComponent' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Loop_Counter_Variable_2) == 0x0000BC, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllChildren_ReturnValue) == 0x0000C8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_RemoveChildAt_ReturnValue) == 0x0000D8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue_1) == 0x0000E8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_AsW_Compass_Indicator_Master) == 0x0000F0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_AsW_Compass_Indicator_Master' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_bSuccess) == 0x0000F8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000FC, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Max_ReturnValue) == 0x000100, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, Temp_int_Array_Index_Variable_2) == 0x000104, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item_1) == 0x000108, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000110, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetComponentByClass_ReturnValue) == 0x000118, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue_2) == 0x000120, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Create_ReturnValue) == 0x000128, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetAllChildren_ReturnValue_1) == 0x000130, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Array_Length_ReturnValue_2) == 0x000148, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_AsW_Compass_Indicator_Master_1) == 0x000150, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_AsW_Compass_Indicator_Master_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_DynamicCast_bSuccess_1) == 0x000158, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00015C, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Max_ReturnValue_1) == 0x000160, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000164, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_AddChildToOverlay_ReturnValue) == 0x000168, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_RemoveChildAt_ReturnValue_1) == 0x000170, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_RemoveChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_GetCompassAngle_Z__Yaw_) == 0x000174, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_GetCompassAngle_Z__Yaw_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000178, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Create_ReturnValue_1) == 0x000180, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_IsValid_ReturnValue_3) == 0x000188, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_AddChildToOverlay_ReturnValue_1) == 0x000190, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_AddChildToOverlay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000198, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0001A0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0001A4, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0001A8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0001B0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_VariableSet_PlayerRotationYaw_ImplicitCast) == 0x0001B8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_VariableSet_PlayerRotationYaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0001C0, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster, K2Node_VariableSet_SecondTimer_ImplicitCast) == 0x0001C8, "Member 'W_CompassMaster_C_ExecuteUbergraph_W_CompassMaster::K2Node_VariableSet_SecondTimer_ImplicitCast' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.GetCompassAngle
// 0x0098 (0x0098 - 0x0000)
struct W_CompassMaster_C_GetCompassAngle final
{
public:
	E_C_RotationMode                              IndicatorPositionMode;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4300[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Z__Yaw_;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4301[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4302[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4303[0x4];                                     // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Z__Yaw__ImplicitCast;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_Z__Yaw__ImplicitCast_1;      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_GetCompassAngle) == 0x000008, "Wrong alignment on W_CompassMaster_C_GetCompassAngle");
static_assert(sizeof(W_CompassMaster_C_GetCompassAngle) == 0x000098, "Wrong size on W_CompassMaster_C_GetCompassAngle");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, IndicatorPositionMode) == 0x000000, "Member 'W_CompassMaster_C_GetCompassAngle::IndicatorPositionMode' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, Z__Yaw_) == 0x000004, "Member 'W_CompassMaster_C_GetCompassAngle::Z__Yaw_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'W_CompassMaster_C_GetCompassAngle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000010, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_GetPlayerPawn_ReturnValue) == 0x000018, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_GetCameraRotation_ReturnValue) == 0x000020, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Roll) == 0x00003C, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Pitch) == 0x000040, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Yaw) == 0x000044, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000050, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Roll_1) == 0x000068, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Pitch_1) == 0x00006C, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_BreakRotator_Yaw_1) == 0x000070, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, K2Node_FunctionResult_Z__Yaw__ImplicitCast) == 0x000080, "Member 'W_CompassMaster_C_GetCompassAngle::K2Node_FunctionResult_Z__Yaw__ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, K2Node_FunctionResult_Z__Yaw__ImplicitCast_1) == 0x000084, "Member 'W_CompassMaster_C_GetCompassAngle::K2Node_FunctionResult_Z__Yaw__ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000088, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetCompassAngle, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000090, "Member 'W_CompassMaster_C_GetCompassAngle::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.GetPlayerLocationByDistanceMode
// 0x0090 (0x0090 - 0x0000)
struct W_CompassMaster_C_GetPlayerLocationByDistanceMode final
{
public:
	E_C_CalculateDistanceFrom                     GetDistanceMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4304[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4305[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4306[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_GetPlayerLocationByDistanceMode) == 0x000008, "Wrong alignment on W_CompassMaster_C_GetPlayerLocationByDistanceMode");
static_assert(sizeof(W_CompassMaster_C_GetPlayerLocationByDistanceMode) == 0x000090, "Wrong size on W_CompassMaster_C_GetPlayerLocationByDistanceMode");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, GetDistanceMode) == 0x000000, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::GetDistanceMode' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, ReturnValue) == 0x000008, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000020, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000048, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000050, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_GetPlayerPawn_ReturnValue) == 0x000068, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_GetPlayerLocationByDistanceMode, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'W_CompassMaster_C_GetPlayerLocationByDistanceMode::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_CompassMaster_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_PreConstruct) == 0x000001, "Wrong alignment on W_CompassMaster_C_PreConstruct");
static_assert(sizeof(W_CompassMaster_C_PreConstruct) == 0x000001, "Wrong size on W_CompassMaster_C_PreConstruct");
static_assert(offsetof(W_CompassMaster_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_CompassMaster_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.RemoveIndicator
// 0x0008 (0x0008 - 0x0000)
struct W_CompassMaster_C_RemoveIndicator final
{
public:
	class UBP_CompassIndicatorComponent_C*        TargetComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_RemoveIndicator) == 0x000008, "Wrong alignment on W_CompassMaster_C_RemoveIndicator");
static_assert(sizeof(W_CompassMaster_C_RemoveIndicator) == 0x000008, "Wrong size on W_CompassMaster_C_RemoveIndicator");
static_assert(offsetof(W_CompassMaster_C_RemoveIndicator, TargetComponent) == 0x000000, "Member 'W_CompassMaster_C_RemoveIndicator::TargetComponent' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct W_CompassMaster_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_Tick) == 0x000008, "Wrong alignment on W_CompassMaster_C_Tick");
static_assert(sizeof(W_CompassMaster_C_Tick) == 0x000048, "Wrong size on W_CompassMaster_C_Tick");
static_assert(offsetof(W_CompassMaster_C_Tick, MyGeometry) == 0x000000, "Member 'W_CompassMaster_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_Tick, InDeltaTime) == 0x000040, "Member 'W_CompassMaster_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_CompassMaster.W_CompassMaster_C.UpdateIndicators
// 0x0180 (0x0180 - 0x0000)
struct W_CompassMaster_C_UpdateIndicators final
{
public:
	double                                        IndicatorPositionX_local_;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndicatorDistance_local_;                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4307[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_CompassIndicatorMaster_C*            IndicatorWidget_local_;                            // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4308[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChildAt_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4309[0x6];                                     // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430A[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430B[0x5];                                     // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalcIndicatorPosition_PositionX;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430C[0x7];                                     // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430D[0x5];                                     // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430E[0x5];                                     // 0x011B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPlayerLocationByDistanceMode_ReturnValue; // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0148(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_430F[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CompassIndicatorMaster_C*            K2Node_DynamicCast_AsW_Compass_Indicator_Master;   // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4310[0x3];                                     // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CompassMaster_C_UpdateIndicators) == 0x000008, "Wrong alignment on W_CompassMaster_C_UpdateIndicators");
static_assert(sizeof(W_CompassMaster_C_UpdateIndicators) == 0x000180, "Wrong size on W_CompassMaster_C_UpdateIndicators");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, IndicatorPositionX_local_) == 0x000000, "Member 'W_CompassMaster_C_UpdateIndicators::IndicatorPositionX_local_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, IndicatorDistance_local_) == 0x000008, "Member 'W_CompassMaster_C_UpdateIndicators::IndicatorDistance_local_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, IndicatorWidget_local_) == 0x000010, "Member 'W_CompassMaster_C_UpdateIndicators::IndicatorWidget_local_' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'W_CompassMaster_C_UpdateIndicators::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_CompassMaster_C_UpdateIndicators::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_RemoveChildAt_ReturnValue) == 0x000028, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_RemoveChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_CompassMaster_C_UpdateIndicators::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_X) == 0x000030, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_Y) == 0x000038, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000068, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BooleanOR_ReturnValue) == 0x000069, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_IsValid_ReturnValue) == 0x00006A, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GetOwner_ReturnValue) == 0x000070, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_CalcIndicatorPosition_PositionX) == 0x000090, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_CalcIndicatorPosition_PositionX' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_Y_1) == 0x0000A0, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000A8, "Member 'W_CompassMaster_C_UpdateIndicators::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000B0, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000B8, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x0000D1, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BooleanOR_ReturnValue_1) == 0x0000D2, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_X_2) == 0x0000D8, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_BreakVector2D_Y_2) == 0x0000E0, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_MakeVector2D_ReturnValue) == 0x0000E8, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GetOwner_ReturnValue_1) == 0x0000F8, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000100, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000118, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000119, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, K2Node_SwitchEnum_CmpSuccess_2) == 0x00011A, "Member 'W_CompassMaster_C_UpdateIndicators::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GetPlayerLocationByDistanceMode_ReturnValue) == 0x000120, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GetPlayerLocationByDistanceMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Vector_Distance_ReturnValue) == 0x000138, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000140, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_GetAllChildren_ReturnValue) == 0x000148, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_FFloor_ReturnValue) == 0x000158, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Array_Get_Item) == 0x000160, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, K2Node_DynamicCast_AsW_Compass_Indicator_Master) == 0x000168, "Member 'W_CompassMaster_C_UpdateIndicators::K2Node_DynamicCast_AsW_Compass_Indicator_Master' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'W_CompassMaster_C_UpdateIndicators::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000178, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CompassMaster_C_UpdateIndicators, CallFunc_Max_ReturnValue) == 0x00017C, "Member 'W_CompassMaster_C_UpdateIndicators::CallFunc_Max_ReturnValue' has a wrong offset!");

}

