#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalInventoryManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "S_ContainerDetails_structs.hpp"
#include "S_ConsumableDetails_structs.hpp"
#include "S_AttachmentSlot_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_DurabilityDetails_structs.hpp"


namespace SDK::Params
{

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.ClearContainerInventories
// 0x0038 (0x0038 - 0x0000)
struct BP_GlobalInventoryManager_C_ClearContainerInventories final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0C[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_ClearContainerInventories) == 0x000008, "Wrong alignment on BP_GlobalInventoryManager_C_ClearContainerInventories");
static_assert(sizeof(BP_GlobalInventoryManager_C_ClearContainerInventories) == 0x000038, "Wrong size on BP_GlobalInventoryManager_C_ClearContainerInventories");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, Temp_int_Variable) == 0x000000, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ClearContainerInventories, CallFunc_Less_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_GlobalInventoryManager_C_ClearContainerInventories::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.CreateNewInventory
// 0x0130 (0x0130 - 0x0000)
struct BP_GlobalInventoryManager_C_CreateNewInventory final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Replicate;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowStartingItems;                                // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0D[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MasterInventory_C*                  Inventory;                                         // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerDetails                    ContainerDetailsL;                                 // 0x0040(0x0070)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  NewInvL;                                           // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0E[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_MasterItemInventory_C*              CallFunc_AddComponent_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A0F[0x3];                                     // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_CreateNewInventory) == 0x000010, "Wrong alignment on BP_GlobalInventoryManager_C_CreateNewInventory");
static_assert(sizeof(BP_GlobalInventoryManager_C_CreateNewInventory) == 0x000130, "Wrong size on BP_GlobalInventoryManager_C_CreateNewInventory");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, Item) == 0x000000, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::Item' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, Replicate) == 0x000030, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::Replicate' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, AllowStartingItems) == 0x000031, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::AllowStartingItems' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, Inventory) == 0x000038, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::Inventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, ContainerDetailsL) == 0x000040, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::ContainerDetailsL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, NewInvL) == 0x0000B0, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::NewInvL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, Temp_struct_Variable) == 0x0000C0, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, CallFunc_AddComponent_ReturnValue) == 0x000120, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, CallFunc_IsValid_ReturnValue) == 0x000128, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewInventory, CallFunc_Array_Add_ReturnValue) == 0x00012C, "Member 'BP_GlobalInventoryManager_C_CreateNewInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.CreateNewItem
// 0x1320 (0x1320 - 0x0000)
struct BP_GlobalInventoryManager_C_CreateNewItem final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddDefaults;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AddStartingItems;                                  // 0x000D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x000E(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Replicated;                                        // 0x000F(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             NewItem;                                           // 0x0010(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CreatedItemL;                                      // 0x0040(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_ItemDetails                         ItemDetailsL;                                      // 0x0070(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0900(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A10[0xE];                                     // 0x0932(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0940(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CallFunc_CreateNewInventory_Inventory;             // 0x11D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x11D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemConsumableDetails_ItemFound;      // 0x11D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A11[0x6];                                     // 0x11DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ConsumableDetails                   CallFunc_SGK_ItemConsumableDetails_ItemDetails;    // 0x11E0(0x0040)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemContainerDetails_ItemFound;       // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A12[0x7];                                     // 0x1221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ContainerDetails                    CallFunc_SGK_ItemContainerDetails_ItemContainerDetails; // 0x1228(0x0070)(ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_MasterInventory_C*                  CallFunc_CreateNewInventory_Inventory_1;           // 0x1298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x12A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A13[0x7];                                     // 0x12A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  CallFunc_CreateNewWeaponInventory_WeaponInventory; // 0x12A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x12B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DurabilityDetails_ItemFound;          // 0x12B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A14[0x5];                                     // 0x12B3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_DurabilityDetails                   CallFunc_SGK_DurabilityDetails_DurabilityDetails;  // 0x12B8(0x0050)(HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x1310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A15[0x3];                                     // 0x1311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x1314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_CreateNewItem) == 0x000010, "Wrong alignment on BP_GlobalInventoryManager_C_CreateNewItem");
static_assert(sizeof(BP_GlobalInventoryManager_C_CreateNewItem) == 0x001320, "Wrong size on BP_GlobalInventoryManager_C_CreateNewItem");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, ItemId) == 0x000000, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::ItemId' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, Amount) == 0x000008, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::Amount' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, AddDefaults) == 0x00000C, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::AddDefaults' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, AddStartingItems) == 0x00000D, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::AddStartingItems' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, Rotated) == 0x00000E, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::Rotated' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, Replicated) == 0x00000F, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::Replicated' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, NewItem) == 0x000010, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::NewItem' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CreatedItemL) == 0x000040, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CreatedItemL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, ItemDetailsL) == 0x000070, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::ItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, K2Node_MakeStruct_S_InvItem) == 0x000900, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, Temp_bool_Variable) == 0x000930, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemDetails_ItemFound) == 0x000931, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000940, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_CreateNewInventory_Inventory) == 0x0011D0, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_CreateNewInventory_Inventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_IsValid_ReturnValue) == 0x0011D8, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemConsumableDetails_ItemFound) == 0x0011D9, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemConsumableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemConsumableDetails_ItemDetails) == 0x0011E0, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemConsumableDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemContainerDetails_ItemFound) == 0x001220, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemContainerDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_ItemContainerDetails_ItemContainerDetails) == 0x001228, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_ItemContainerDetails_ItemContainerDetails' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_CreateNewInventory_Inventory_1) == 0x001298, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_CreateNewInventory_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_IsValid_ReturnValue_1) == 0x0012A0, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_CreateNewWeaponInventory_WeaponInventory) == 0x0012A8, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_CreateNewWeaponInventory_WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_IsValid_ReturnValue_2) == 0x0012B0, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_ClassIsChildOf_ReturnValue) == 0x0012B1, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_DurabilityDetails_ItemFound) == 0x0012B2, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_DurabilityDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_SGK_DurabilityDetails_DurabilityDetails) == 0x0012B8, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_SGK_DurabilityDetails_DurabilityDetails' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_GetGameMode_ReturnValue) == 0x001308, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, CallFunc_IsValid_ReturnValue_3) == 0x001310, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewItem, K2Node_Select_Default) == 0x001314, "Member 'BP_GlobalInventoryManager_C_CreateNewItem::K2Node_Select_Default' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.CreateNewWeaponInventory
// 0x09E0 (0x09E0 - 0x0000)
struct BP_GlobalInventoryManager_C_CreateNewWeaponInventory final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Replicate;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowStartingItems;                                // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A16[0x6];                                     // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  WeaponInventory;                                   // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_ContainerDetails                    WeaponInvDetailsL;                                 // 0x0040(0x0070)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  NewWeaponInventoryL;                               // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A17[0x8];                                     // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x00C0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WeaponInventory_C*                  CallFunc_AddComponent_ReturnValue;                 // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A18[0x7];                                     // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0130(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x09C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A19[0x4];                                     // 0x09C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory) == 0x000010, "Wrong alignment on BP_GlobalInventoryManager_C_CreateNewWeaponInventory");
static_assert(sizeof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory) == 0x0009E0, "Wrong size on BP_GlobalInventoryManager_C_CreateNewWeaponInventory");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, Item) == 0x000000, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::Item' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, Replicate) == 0x000030, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::Replicate' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, AllowStartingItems) == 0x000031, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::AllowStartingItems' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, WeaponInventory) == 0x000038, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::WeaponInventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, WeaponInvDetailsL) == 0x000040, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::WeaponInvDetailsL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, NewWeaponInventoryL) == 0x0000B0, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::NewWeaponInventoryL' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, Temp_struct_Variable) == 0x0000C0, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, CallFunc_AddComponent_ReturnValue) == 0x000120, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, CallFunc_SGK_ItemDetails_ItemFound) == 0x000128, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000130, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, CallFunc_Array_Add_ReturnValue) == 0x0009C0, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x0009C8, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_CreateNewWeaponInventory, K2Node_ClassDynamicCast_bSuccess) == 0x0009D0, "Member 'BP_GlobalInventoryManager_C_CreateNewWeaponInventory::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.DestroyItemInventory
// 0x0090 (0x0090 - 0x0000)
struct BP_GlobalInventoryManager_C_DestroyItemInventory final
{
public:
	class UBP_MasterInventory_C*                  MasterInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1A[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1B[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1C[0x2];                                     // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1D[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1E[0x5];                                     // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0040(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_DestroyItemInventory) == 0x000008, "Wrong alignment on BP_GlobalInventoryManager_C_DestroyItemInventory");
static_assert(sizeof(BP_GlobalInventoryManager_C_DestroyItemInventory) == 0x000090, "Wrong size on BP_GlobalInventoryManager_C_DestroyItemInventory");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, MasterInventory) == 0x000000, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::MasterInventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, Temp_int_Variable) == 0x00000C, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Conv_IntToByte_ReturnValue) == 0x000010, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_GetValidValue_ReturnValue) == 0x000011, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, Temp_int_Variable_1) == 0x000014, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00001C, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00001D, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_MakeLiteralInt_ReturnValue) == 0x000024, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000030, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_Array_RemoveItem_ReturnValue) == 0x000039, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_SelectAttachmentItem_IsValid) == 0x00003A, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000040, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_DestroyItemInventory, CallFunc_IsValid_ReturnValue_1) == 0x000088, "Member 'BP_GlobalInventoryManager_C_DestroyItemInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.ExecuteUbergraph_BP_GlobalInventoryManager
// 0x0050 (0x0050 - 0x0000)
struct BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UBP_SGKSaveGame_C* SaveGame)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1F[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A20[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_CustomEvent_SaveGame;                       // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_SaveSystem_C*                       CallFunc_SGK_GetSaveGame_SaveGame;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager) == 0x000008, "Wrong alignment on BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager");
static_assert(sizeof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager) == 0x000050, "Wrong size on BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, EntryPoint) == 0x000000, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, CallFunc_GetGameMode_ReturnValue) == 0x000018, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000020, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, K2Node_CustomEvent_SaveGame) == 0x000038, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::K2Node_CustomEvent_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, CallFunc_SGK_GetSaveGame_SaveGame) == 0x000040, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::CallFunc_SGK_GetSaveGame_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'BP_GlobalInventoryManager_C_ExecuteUbergraph_BP_GlobalInventoryManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_GlobalInventoryManager.BP_GlobalInventoryManager_C.LoadSave
// 0x0008 (0x0008 - 0x0000)
struct BP_GlobalInventoryManager_C_LoadSave final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GlobalInventoryManager_C_LoadSave) == 0x000008, "Wrong alignment on BP_GlobalInventoryManager_C_LoadSave");
static_assert(sizeof(BP_GlobalInventoryManager_C_LoadSave) == 0x000008, "Wrong size on BP_GlobalInventoryManager_C_LoadSave");
static_assert(offsetof(BP_GlobalInventoryManager_C_LoadSave, SaveGame) == 0x000000, "Member 'BP_GlobalInventoryManager_C_LoadSave::SaveGame' has a wrong offset!");

}

