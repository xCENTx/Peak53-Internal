#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponSelection

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EWeaponCategories_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WeaponSelection.WeaponSelection_C
// 0x08C8 (0x0B40 - 0x0278)
class UWeaponSelection_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Border_0;                                          // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCommonTextBlock*                       ButtonText_2;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_165;                                         // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                SelectWeapon;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EWeaponCategories                             Category;                                          // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_3CD1[0x7];                                     // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         Out_Row;                                           // 0x02B0(0x0890)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)

public:
	void BndEvt__WeaponSelection_SelectWeapon_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WeaponSelection_SelectWeapon_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void ExecuteUbergraph_WeaponSelection(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void ResetColor();
	void Select();
	void UpdateRow(const struct FS_ItemDetails& Param_Out_Row, int32 CurrentIndex, class UDataTable* Data_Table, class FName Row_Name);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponSelection_C">();
	}
	static class UWeaponSelection_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponSelection_C>();
	}
};
static_assert(alignof(UWeaponSelection_C) == 0x000010, "Wrong alignment on UWeaponSelection_C");
static_assert(sizeof(UWeaponSelection_C) == 0x000B40, "Wrong size on UWeaponSelection_C");
static_assert(offsetof(UWeaponSelection_C, UberGraphFrame) == 0x000278, "Member 'UWeaponSelection_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, Border_0) == 0x000280, "Member 'UWeaponSelection_C::Border_0' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, ButtonText_2) == 0x000288, "Member 'UWeaponSelection_C::ButtonText_2' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, Image_165) == 0x000290, "Member 'UWeaponSelection_C::Image_165' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, SelectWeapon) == 0x000298, "Member 'UWeaponSelection_C::SelectWeapon' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, ItemId) == 0x0002A0, "Member 'UWeaponSelection_C::ItemId' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, Category) == 0x0002A8, "Member 'UWeaponSelection_C::Category' has a wrong offset!");
static_assert(offsetof(UWeaponSelection_C, Out_Row) == 0x0002B0, "Member 'UWeaponSelection_C::Out_Row' has a wrong offset!");

}

