#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EquipmentInventoryList

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BP_EquipmentInventoryList.BP_EquipmentInventoryList_C
// 0x0088 (0x0300 - 0x0278)
class UBP_EquipmentInventoryList_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_InventoryPanel_C*                   BP_InventoryPanel;                                 // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   BP_InventoryPanel_1;                               // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   BP_InventoryPanel_2;                               // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_InventoryPanel_C*                   BP_InventoryPanel_3;                               // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                InnerBackround;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OuterBackround;                                    // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_114;                                   // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TArray<class UBP_InventoryPanel_C*>           InvPanels;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FLinearColor                           OuterBackroundColor;                               // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           InnerBackroundColor;                               // 0x02D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                InventoryPanelPadding;                             // 0x02E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        PanelTitleWidth;                                   // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ClearInventoryPanels();
	void Construct();
	void CreateNewInventoryPanel(class UBP_MasterInventory_C* Inventory, bool FirstPanel);
	void ExecuteUbergraph_BP_EquipmentInventoryList(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void RemoveInventoryPanel(class UBP_MasterInventory_C* Inventory);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EquipmentInventoryList_C">();
	}
	static class UBP_EquipmentInventoryList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_EquipmentInventoryList_C>();
	}
};
static_assert(alignof(UBP_EquipmentInventoryList_C) == 0x000008, "Wrong alignment on UBP_EquipmentInventoryList_C");
static_assert(sizeof(UBP_EquipmentInventoryList_C) == 0x000300, "Wrong size on UBP_EquipmentInventoryList_C");
static_assert(offsetof(UBP_EquipmentInventoryList_C, UberGraphFrame) == 0x000278, "Member 'UBP_EquipmentInventoryList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, BP_InventoryPanel) == 0x000280, "Member 'UBP_EquipmentInventoryList_C::BP_InventoryPanel' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, BP_InventoryPanel_1) == 0x000288, "Member 'UBP_EquipmentInventoryList_C::BP_InventoryPanel_1' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, BP_InventoryPanel_2) == 0x000290, "Member 'UBP_EquipmentInventoryList_C::BP_InventoryPanel_2' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, BP_InventoryPanel_3) == 0x000298, "Member 'UBP_EquipmentInventoryList_C::BP_InventoryPanel_3' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, InnerBackround) == 0x0002A0, "Member 'UBP_EquipmentInventoryList_C::InnerBackround' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, OuterBackround) == 0x0002A8, "Member 'UBP_EquipmentInventoryList_C::OuterBackround' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, VerticalBox_114) == 0x0002B0, "Member 'UBP_EquipmentInventoryList_C::VerticalBox_114' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, InvPanels) == 0x0002B8, "Member 'UBP_EquipmentInventoryList_C::InvPanels' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, OuterBackroundColor) == 0x0002C8, "Member 'UBP_EquipmentInventoryList_C::OuterBackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, InnerBackroundColor) == 0x0002D8, "Member 'UBP_EquipmentInventoryList_C::InnerBackroundColor' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, InventoryPanelPadding) == 0x0002E8, "Member 'UBP_EquipmentInventoryList_C::InventoryPanelPadding' has a wrong offset!");
static_assert(offsetof(UBP_EquipmentInventoryList_C, PanelTitleWidth) == 0x0002F8, "Member 'UBP_EquipmentInventoryList_C::PanelTitleWidth' has a wrong offset!");

}

