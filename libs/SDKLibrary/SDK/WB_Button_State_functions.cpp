#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_Button_State

#include "Basic.hpp"

#include "WB_Button_State_classes.hpp"
#include "WB_Button_State_parameters.hpp"


namespace SDK
{

// Function WB_Button_State.WB_Button_State_C.AlignStateTextWidth
// (Public, BlueprintCallable, BlueprintEvent)

void UWB_Button_State_C::AlignStateTextWidth()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "AlignStateTextWidth");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BndEvt__WB_Button_State_B_Left_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::BndEvt__WB_Button_State_B_Left_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BndEvt__WB_Button_State_B_Left_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature");

	Params::WB_Button_State_C_BndEvt__WB_Button_State_B_Left_K2Node_ComponentBoundEvent_1_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.BndEvt__WB_Button_State_B_Right_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UCommonButtonBase*                Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::BndEvt__WB_Button_State_B_Right_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BndEvt__WB_Button_State_B_Right_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature");

	Params::WB_Button_State_C_BndEvt__WB_Button_State_B_Right_K2Node_ComponentBoundEvent_2_CommonButtonBaseClicked__DelegateSignature Parms{};

	Parms.Button = Button;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature
// (BlueprintEvent)
// Parameters:
// bool                                    Param_bUsingGamepad                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature(bool Param_bUsingGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature");

	Params::WB_Button_State_C_BndEvt__WB_Button_State_InputDetector_K2Node_ComponentBoundEvent_0_OnInputMethodChanged__DelegateSignature Parms{};

	Parms.Param_bUsingGamepad = Param_bUsingGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnClicked
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnClicked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnClicked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnDeselected
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnDeselected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnDeselected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnDisabled
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnDisabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnDisabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnEnabled
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnEnabled");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnHovered
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnHovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnSelected
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnSelected()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnSelected");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.BP_OnUnhovered
// (Event, Protected, BlueprintEvent)

void UWB_Button_State_C::BP_OnUnhovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "BP_OnUnhovered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.ClampStateIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

int32 UWB_Button_State_C::ClampStateIndex(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "ClampStateIndex");

	Params::WB_Button_State_C_ClampStateIndex Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_State.WB_Button_State_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWB_Button_State_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.ExecuteUbergraph_WB_Button_State
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::ExecuteUbergraph_WB_Button_State(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "ExecuteUbergraph_WB_Button_State");

	Params::WB_Button_State_C_ExecuteUbergraph_WB_Button_State Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.FindTextInfoByButtonState
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ECommonButtonState                      State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FS_ButtonTextInfo_PMM            S_ButtonTextInfo_PMM                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// struct FS_TextInfo_PMM                  ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FS_TextInfo_PMM UWB_Button_State_C::FindTextInfoByButtonState(ECommonButtonState State, const struct FS_ButtonTextInfo_PMM& S_ButtonTextInfo_PMM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "FindTextInfoByButtonState");

	Params::WB_Button_State_C_FindTextInfoByButtonState Parms{};

	Parms.State = State;
	Parms.S_ButtonTextInfo_PMM = std::move(S_ButtonTextInfo_PMM);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_State.WB_Button_State_C.GetCurrentStateText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UWB_Button_State_C::GetCurrentStateText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "GetCurrentStateText");

	Params::WB_Button_State_C_GetCurrentStateText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_State.WB_Button_State_C.OnAnalogValueChanged
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FAnalogInputEvent                InAnalogInputEvent                                     (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_Button_State_C::OnAnalogValueChanged(const struct FGeometry& MyGeometry, const struct FAnalogInputEvent& InAnalogInputEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "OnAnalogValueChanged");

	Params::WB_Button_State_C_OnAnalogValueChanged Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InAnalogInputEvent = std::move(InAnalogInputEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_State.WB_Button_State_C.OnLeftExecute
// (BlueprintCallable, BlueprintEvent)

void UWB_Button_State_C::OnLeftExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "OnLeftExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UWB_Button_State_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "OnPreviewKeyDown");

	Params::WB_Button_State_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function WB_Button_State.WB_Button_State_C.OnRightExecute
// (BlueprintCallable, BlueprintEvent)

void UWB_Button_State_C::OnRightExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "OnRightExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WB_Button_State.WB_Button_State_C.OnStateChanged__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWB_Button_State_C*               Button                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::OnStateChanged__DelegateSignature(class UWB_Button_State_C* Button, int32 NewState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "OnStateChanged__DelegateSignature");

	Params::WB_Button_State_C_OnStateChanged__DelegateSignature Parms{};

	Parms.Button = Button;
	Parms.NewState = NewState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "PreConstruct");

	Params::WB_Button_State_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetButtonText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_Button_State_C::SetButtonText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetButtonText");

	Params::WB_Button_State_C_SetButtonText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetButtonTextInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECommonButtonState                      InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetButtonTextInfo(ECommonButtonState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetButtonTextInfo");

	Params::WB_Button_State_C_SetButtonTextInfo Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetCurrentState
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipCallback                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetCurrentState(int32 InState, bool SkipCallback)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetCurrentState");

	Params::WB_Button_State_C_SetCurrentState Parms{};

	Parms.InState = InState;
	Parms.SkipCallback = SkipCallback;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetInputSwitcherGamepad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepad                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetInputSwitcherGamepad(bool IsGamepad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetInputSwitcherGamepad");

	Params::WB_Button_State_C_SetInputSwitcherGamepad Parms{};

	Parms.IsGamepad = IsGamepad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetInputSwitcherVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetInputSwitcherVisibility(bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetInputSwitcherVisibility");

	Params::WB_Button_State_C_SetInputSwitcherVisibility Parms{};

	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetStateText
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void UWB_Button_State_C::SetStateText(const class FText& InText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetStateText");

	Params::WB_Button_State_C_SetStateText Parms{};

	Parms.InText = std::move(InText);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetTextInfo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCommonTextBlock*                 InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FS_TextInfo_PMM                  TextInfo                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetTextInfo(class UCommonTextBlock* InText, const struct FS_TextInfo_PMM& TextInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetTextInfo");

	Params::WB_Button_State_C_SetTextInfo Parms{};

	Parms.InText = InText;
	Parms.TextInfo = std::move(TextInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function WB_Button_State.WB_Button_State_C.SetTextVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          InText                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    bVisible                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWB_Button_State_C::SetTextVisibility(class UWidget* InText, bool bVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WB_Button_State_C", "SetTextVisibility");

	Params::WB_Button_State_C_SetTextVisibility Parms{};

	Parms.InText = InText;
	Parms.bVisible = bVisible;

	UObject::ProcessEvent(Func, &Parms);
}

}

