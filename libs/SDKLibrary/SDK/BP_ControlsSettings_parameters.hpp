#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ControlsSettings

#include "Basic.hpp"

#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function BP_ControlsSettings.BP_ControlsSettings_C.CreateKeybindWidgets
// 0x0230 (0x0230 - 0x0000)
struct BP_ControlsSettings_C_CreateKeybindWidgets final
{
public:
	class UInputMappingContext*                   MappingContextL;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              KeyMappingL;                                       // 0x0008(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UInputAction*>                   ActionsAddedL;                                     // 0x0090(0x0010)(Edit, BlueprintVisible)
	int32                                         ArrayIndexL;                                       // 0x00A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C4[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_Keybind_C*                          ControlWidgetL;                                    // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C5[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C6[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x00E0(0x0088)(ContainsInstancedReference)
	TMap<class UInputMappingContext*, int32>      CallFunc_GetMappingContexts_ReturnValue;           // 0x0168(0x0050)(ConstParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C7[0x7];                                     // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInputMappingContext*>           CallFunc_Map_Keys_Keys;                            // 0x01C0(0x0010)(ReferenceParm)
	class UInputMappingContext*                   CallFunc_Array_Get_Item_1;                         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C8[0x7];                                     // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVerticalBoxSlot*                       CallFunc_AddChildToVerticalBox_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46C9[0x3];                                     // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CA[0x4];                                     // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_Keybind_C*                          CallFunc_Create_ReturnValue;                       // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_Top_ImplicitCast;                // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlsSettings_C_CreateKeybindWidgets) == 0x000008, "Wrong alignment on BP_ControlsSettings_C_CreateKeybindWidgets");
static_assert(sizeof(BP_ControlsSettings_C_CreateKeybindWidgets) == 0x000230, "Wrong size on BP_ControlsSettings_C_CreateKeybindWidgets");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, MappingContextL) == 0x000000, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::MappingContextL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, KeyMappingL) == 0x000008, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::KeyMappingL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, ActionsAddedL) == 0x000090, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::ActionsAddedL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, ArrayIndexL) == 0x0000A0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, ControlWidgetL) == 0x0000A8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::ControlWidgetL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_real_Variable) == 0x0000B0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_real_Variable_1) == 0x0000B8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_Length_ReturnValue) == 0x0000C4, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_int_Loop_Counter_Variable) == 0x0000C8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_int_Array_Index_Variable_1) == 0x0000D4, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_bool_Variable) == 0x0000D8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_GetMappingContexts_ReturnValue) == 0x000168, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_GetMappingContexts_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_Contains_ReturnValue) == 0x0001B8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Map_Keys_Keys) == 0x0001C0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_Get_Item_1) == 0x0001D0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_Length_ReturnValue_1) == 0x0001D8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Array_AddUnique_ReturnValue) == 0x0001DC, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, K2Node_Select_Default) == 0x0001E8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_AddChildToVerticalBox_ReturnValue) == 0x0001F0, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_AddChildToVerticalBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, K2Node_MakeStruct_Margin) == 0x0001F8, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, Temp_int_Loop_Counter_Variable_1) == 0x000208, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Less_IntInt_ReturnValue_1) == 0x00020C, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Add_IntInt_ReturnValue_1) == 0x000210, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_GetOwningPlayer_ReturnValue) == 0x000218, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, CallFunc_Create_ReturnValue) == 0x000220, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_CreateKeybindWidgets, K2Node_MakeStruct_Top_ImplicitCast) == 0x000228, "Member 'BP_ControlsSettings_C_CreateKeybindWidgets::K2Node_MakeStruct_Top_ImplicitCast' has a wrong offset!");

// Function BP_ControlsSettings.BP_ControlsSettings_C.ExecuteUbergraph_BP_ControlsSettings
// 0x0020 (0x0020 - 0x0000)
struct BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CB[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SGKGameInstance_C*                  K2Node_DynamicCast_AsBP_SGKGame_Instance;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings) == 0x000008, "Wrong alignment on BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings");
static_assert(sizeof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings) == 0x000020, "Wrong size on BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings");
static_assert(offsetof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings, EntryPoint) == 0x000000, "Member 'BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings, K2Node_DynamicCast_AsBP_SGKGame_Instance) == 0x000010, "Member 'BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings::K2Node_DynamicCast_AsBP_SGKGame_Instance' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings, K2Node_Event_IsDesignTime) == 0x000019, "Member 'BP_ControlsSettings_C_ExecuteUbergraph_BP_ControlsSettings::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function BP_ControlsSettings.BP_ControlsSettings_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct BP_ControlsSettings_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlsSettings_C_PreConstruct) == 0x000001, "Wrong alignment on BP_ControlsSettings_C_PreConstruct");
static_assert(sizeof(BP_ControlsSettings_C_PreConstruct) == 0x000001, "Wrong size on BP_ControlsSettings_C_PreConstruct");
static_assert(offsetof(BP_ControlsSettings_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'BP_ControlsSettings_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function BP_ControlsSettings.BP_ControlsSettings_C.ResetKeybinds
// 0x0230 (0x0230 - 0x0000)
struct BP_ControlsSettings_C_ResetKeybinds final
{
public:
	class UInputMappingContext*                   MappingContextL;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              KeyTempL;                                          // 0x0008(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class FName>                           KeyNamesL;                                         // 0x0090(0x0010)(Edit, BlueprintVisible)
	struct FEnhancedActionKeyMapping              KeyMappingL;                                       // 0x00A0(0x0088)(Edit, BlueprintVisible, ContainsInstancedReference)
	class FName                                   KeyNameL;                                          // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEnhancedActionKeyMapping              CallFunc_Array_Get_Item;                           // 0x0140(0x0088)(ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CC[0x3];                                     // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInputMappingContext*>           CallFunc_Map_Keys_Keys;                            // 0x01D0(0x0010)(ReferenceParm)
	struct FKey                                   CallFunc_Map_Find_Value;                           // 0x01E0(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CD[0x7];                                     // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputMappingContext*                   CallFunc_Array_Get_Item_1;                         // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CE[0x2];                                     // 0x0212(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys_1;                          // 0x0218(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46CF[0x3];                                     // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ControlsSettings_C_ResetKeybinds) == 0x000008, "Wrong alignment on BP_ControlsSettings_C_ResetKeybinds");
static_assert(sizeof(BP_ControlsSettings_C_ResetKeybinds) == 0x000230, "Wrong size on BP_ControlsSettings_C_ResetKeybinds");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, MappingContextL) == 0x000000, "Member 'BP_ControlsSettings_C_ResetKeybinds::MappingContextL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, KeyTempL) == 0x000008, "Member 'BP_ControlsSettings_C_ResetKeybinds::KeyTempL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, KeyNamesL) == 0x000090, "Member 'BP_ControlsSettings_C_ResetKeybinds::KeyNamesL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, KeyMappingL) == 0x0000A0, "Member 'BP_ControlsSettings_C_ResetKeybinds::KeyMappingL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, KeyNameL) == 0x000128, "Member 'BP_ControlsSettings_C_ResetKeybinds::KeyNameL' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, Temp_int_Array_Index_Variable) == 0x000130, "Member 'BP_ControlsSettings_C_ResetKeybinds::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, Temp_int_Loop_Counter_Variable) == 0x000134, "Member 'BP_ControlsSettings_C_ResetKeybinds::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Add_IntInt_ReturnValue) == 0x000138, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, Temp_int_Array_Index_Variable_1) == 0x00013C, "Member 'BP_ControlsSettings_C_ResetKeybinds::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Get_Item) == 0x000140, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Length_ReturnValue) == 0x0001C8, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_DeleteGameInSlot_ReturnValue) == 0x0001CC, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Map_Keys_Keys) == 0x0001D0, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Map_Find_Value) == 0x0001E0, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Map_Find_ReturnValue) == 0x0001F8, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Get_Item_1) == 0x000200, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Add_ReturnValue) == 0x000208, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Length_ReturnValue_1) == 0x00020C, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Array_Contains_ReturnValue) == 0x000210, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Less_IntInt_ReturnValue) == 0x000211, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, Temp_int_Loop_Counter_Variable_1) == 0x000214, "Member 'BP_ControlsSettings_C_ResetKeybinds::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Map_Keys_Keys_1) == 0x000218, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Map_Keys_Keys_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Less_IntInt_ReturnValue_1) == 0x000228, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ControlsSettings_C_ResetKeybinds, CallFunc_Add_IntInt_ReturnValue_1) == 0x00022C, "Member 'BP_ControlsSettings_C_ResetKeybinds::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

}

