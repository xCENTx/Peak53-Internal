#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_HUD

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ALS_HUD.ALS_HUD_C.ExecuteUbergraph_ALS_HUD
// 0x0210 (0x0210 - 0x0000)
struct ALS_HUD_C_ExecuteUbergraph_ALS_HUD final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389F[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              CallFunc_Get_CharacterInfo_Visibility_ReturnValue; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A0[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A1[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALSPlayerController*                   K2Node_DynamicCast_AsALSPlayer_Controller;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A2[0xE];                                     // 0x0032(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetThirdPersonPivotTarget_ReturnValue;    // 0x0040(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A3[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue; // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A4[0x7];                                     // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UALSDebugComponent*                     CallFunc_GetComponentByClass_ReturnValue;          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0128(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowLayerColors_ReturnValue;           // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowDebugShapes_ReturnValue;           // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetShowTraces_ReturnValue;                // 0x0132(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDebugView_ReturnValue;                 // 0x0133(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A5[0x3];                                     // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0138(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A6[0x4];                                     // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetAssignedKeyName_Text;                  // 0x0180(0x0018)()
	class FText                                   CallFunc_GetAssignedKeyName_Text_1;                // 0x0198(0x0018)()
	class FText                                   CallFunc_GetAssignedKeyName_Text_2;                // 0x01B0(0x0018)()
	class FText                                   CallFunc_GetAssignedKeyName_Text_3;                // 0x01C8(0x0018)()
	class FText                                   CallFunc_GetAssignedKeyName_Text_4;                // 0x01E0(0x0018)()
	class FText                                   CallFunc_GetAssignedKeyName_Text_5;                // 0x01F8(0x0018)()
};
static_assert(alignof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD) == 0x000010, "Wrong alignment on ALS_HUD_C_ExecuteUbergraph_ALS_HUD");
static_assert(sizeof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD) == 0x000210, "Wrong size on ALS_HUD_C_ExecuteUbergraph_ALS_HUD");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, EntryPoint) == 0x000000, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_Get_CharacterInfo_Visibility_ReturnValue) == 0x000010, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_Get_CharacterInfo_Visibility_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000018, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, K2Node_DynamicCast_AsALSPlayer_Controller) == 0x000028, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::K2Node_DynamicCast_AsALSPlayer_Controller' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetThirdPersonPivotTarget_ReturnValue) == 0x000040, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetThirdPersonPivotTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_BreakTransform_Location) == 0x0000A0, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_BreakTransform_Rotation) == 0x0000B8, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_BreakTransform_Scale) == 0x0000D0, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_Add_VectorVector_ReturnValue) == 0x0000F0, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition) == 0x000108, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_ProjectWorldLocationToWidgetPosition_ScreenPosition' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue) == 0x000118, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_ProjectWorldLocationToWidgetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetComponentByClass_ReturnValue) == 0x000120, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000128, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetShowLayerColors_ReturnValue) == 0x000130, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetShowLayerColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetShowDebugShapes_ReturnValue) == 0x000131, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetShowDebugShapes_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetShowTraces_ReturnValue) == 0x000132, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetShowTraces_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetDebugView_ReturnValue) == 0x000133, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetDebugView_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_IsValid_ReturnValue_2) == 0x000134, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, K2Node_Event_MyGeometry) == 0x000138, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, K2Node_Event_InDeltaTime) == 0x000178, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text) == 0x000180, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text_1) == 0x000198, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text_2) == 0x0001B0, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text_2' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text_3) == 0x0001C8, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text_3' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text_4) == 0x0001E0, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text_4' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_ExecuteUbergraph_ALS_HUD, CallFunc_GetAssignedKeyName_Text_5) == 0x0001F8, "Member 'ALS_HUD_C_ExecuteUbergraph_ALS_HUD::CallFunc_GetAssignedKeyName_Text_5' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_AnimCurveNames
// 0x00C8 (0x00C8 - 0x0000)
struct ALS_HUD_C_Get_AnimCurveNames final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FName                                   CurveName;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A7[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetActiveCurveNames_OutNames;             // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A8[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38A9[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AA[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_HUD_C_Get_AnimCurveNames) == 0x000008, "Wrong alignment on ALS_HUD_C_Get_AnimCurveNames");
static_assert(sizeof(ALS_HUD_C_Get_AnimCurveNames) == 0x0000C8, "Wrong size on ALS_HUD_C_Get_AnimCurveNames");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_AnimCurveNames::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CurveName) == 0x000018, "Member 'ALS_HUD_C_Get_AnimCurveNames::CurveName' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, String) == 0x000020, "Member 'ALS_HUD_C_Get_AnimCurveNames::String' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, AnimInstance) == 0x000030, "Member 'ALS_HUD_C_Get_AnimCurveNames::AnimInstance' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'ALS_HUD_C_Get_AnimCurveNames::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_GetActiveCurveNames_OutNames) == 0x000040, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_GetActiveCurveNames_OutNames' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'ALS_HUD_C_Get_AnimCurveNames::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Array_Get_Item) == 0x000060, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_GetAnimInstance_ReturnValue) == 0x000070, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Conv_NameToString_ReturnValue) == 0x000098, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveNames, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'ALS_HUD_C_Get_AnimCurveNames::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_AnimCurveValues
// 0x00D8 (0x00D8 - 0x0000)
struct ALS_HUD_C_Get_AnimCurveValues final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FName                                   CurveName;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 String;                                            // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class UAnimInstance*                          AnimInstance;                                      // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AB[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetActiveCurveNames_OutNames;             // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AC[0x3];                                     // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AD[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AE[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38AF[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_HUD_C_Get_AnimCurveValues) == 0x000008, "Wrong alignment on ALS_HUD_C_Get_AnimCurveValues");
static_assert(sizeof(ALS_HUD_C_Get_AnimCurveValues) == 0x0000D8, "Wrong size on ALS_HUD_C_Get_AnimCurveValues");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_AnimCurveValues::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CurveName) == 0x000018, "Member 'ALS_HUD_C_Get_AnimCurveValues::CurveName' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, String) == 0x000020, "Member 'ALS_HUD_C_Get_AnimCurveValues::String' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, AnimInstance) == 0x000030, "Member 'ALS_HUD_C_Get_AnimCurveValues::AnimInstance' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'ALS_HUD_C_Get_AnimCurveValues::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_GetActiveCurveNames_OutNames) == 0x000040, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_GetActiveCurveNames_OutNames' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'ALS_HUD_C_Get_AnimCurveValues::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Array_Get_Item) == 0x000060, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_GetAnimInstance_ReturnValue) == 0x000070, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_GetCurveValue_ReturnValue) == 0x000098, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000A0, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B0, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000C0, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_AnimCurveValues, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x0000D0, "Member 'ALS_HUD_C_Get_AnimCurveValues::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_CharacterInfo_Visibility
// 0x0002 (0x0002 - 0x0000)
struct ALS_HUD_C_Get_CharacterInfo_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_HUD_C_Get_CharacterInfo_Visibility) == 0x000001, "Wrong alignment on ALS_HUD_C_Get_CharacterInfo_Visibility");
static_assert(sizeof(ALS_HUD_C_Get_CharacterInfo_Visibility) == 0x000002, "Wrong size on ALS_HUD_C_Get_CharacterInfo_Visibility");
static_assert(offsetof(ALS_HUD_C_Get_CharacterInfo_Visibility, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_CharacterInfo_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterInfo_Visibility, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ALS_HUD_C_Get_CharacterInfo_Visibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_CharacterStates
// 0x0198 (0x0198 - 0x0000)
struct ALS_HUD_C_Get_CharacterStates final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B0[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0180(0x0018)()
};
static_assert(alignof(ALS_HUD_C_Get_CharacterStates) == 0x000008, "Wrong alignment on ALS_HUD_C_Get_CharacterStates");
static_assert(sizeof(ALS_HUD_C_Get_CharacterStates) == 0x000198, "Wrong size on ALS_HUD_C_Get_CharacterStates");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_CharacterStates::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000020, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000030, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x000040, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000050, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000060, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x000070, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6) == 0x000080, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7) == 0x000090, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000F0, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000100, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000110, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000120, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000130, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000140, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000150, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000160, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000170, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_CharacterStates, CallFunc_Conv_StringToText_ReturnValue) == 0x000180, "Member 'ALS_HUD_C_Get_CharacterStates::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_DebugCharacterName
// 0x0048 (0x0048 - 0x0000)
struct ALS_HUD_C_Get_DebugCharacterName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B1[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0030(0x0018)()
};
static_assert(alignof(ALS_HUD_C_Get_DebugCharacterName) == 0x000008, "Wrong alignment on ALS_HUD_C_Get_DebugCharacterName");
static_assert(sizeof(ALS_HUD_C_Get_DebugCharacterName) == 0x000048, "Wrong size on ALS_HUD_C_Get_DebugCharacterName");
static_assert(offsetof(ALS_HUD_C_Get_DebugCharacterName, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_DebugCharacterName::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_DebugCharacterName, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ALS_HUD_C_Get_DebugCharacterName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_DebugCharacterName, CallFunc_GetObjectName_ReturnValue) == 0x000020, "Member 'ALS_HUD_C_Get_DebugCharacterName::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_DebugCharacterName, CallFunc_Conv_StringToText_ReturnValue) == 0x000030, "Member 'ALS_HUD_C_Get_DebugCharacterName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_DebugView_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_DebugView_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_DebugView_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_DebugView_Color");
static_assert(sizeof(ALS_HUD_C_Get_DebugView_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_DebugView_Color");
static_assert(offsetof(ALS_HUD_C_Get_DebugView_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_DebugView_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_DebugView_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_DebugView_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_DebugView_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_DebugView_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_HUD_Visibility
// 0x0001 (0x0001 - 0x0000)
struct ALS_HUD_C_Get_HUD_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_HUD_C_Get_HUD_Visibility) == 0x000001, "Wrong alignment on ALS_HUD_C_Get_HUD_Visibility");
static_assert(sizeof(ALS_HUD_C_Get_HUD_Visibility) == 0x000001, "Wrong size on ALS_HUD_C_Get_HUD_Visibility");
static_assert(offsetof(ALS_HUD_C_Get_HUD_Visibility, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_HUD_Visibility::ReturnValue' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_ShowCharacterInfo_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_ShowCharacterInfo_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_ShowCharacterInfo_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_ShowCharacterInfo_Color");
static_assert(sizeof(ALS_HUD_C_Get_ShowCharacterInfo_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_ShowCharacterInfo_Color");
static_assert(offsetof(ALS_HUD_C_Get_ShowCharacterInfo_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_ShowCharacterInfo_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowCharacterInfo_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_ShowCharacterInfo_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowCharacterInfo_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_ShowCharacterInfo_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_ShowDebugShapes_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_ShowDebugShapes_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_ShowDebugShapes_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_ShowDebugShapes_Color");
static_assert(sizeof(ALS_HUD_C_Get_ShowDebugShapes_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_ShowDebugShapes_Color");
static_assert(offsetof(ALS_HUD_C_Get_ShowDebugShapes_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_ShowDebugShapes_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowDebugShapes_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_ShowDebugShapes_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowDebugShapes_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_ShowDebugShapes_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_ShowHUD_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_ShowHUD_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_ShowHUD_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_ShowHUD_Color");
static_assert(sizeof(ALS_HUD_C_Get_ShowHUD_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_ShowHUD_Color");
static_assert(offsetof(ALS_HUD_C_Get_ShowHUD_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_ShowHUD_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowHUD_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_ShowHUD_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowHUD_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_ShowHUD_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_ShowLayerColors_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_ShowLayerColors_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_ShowLayerColors_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_ShowLayerColors_Color");
static_assert(sizeof(ALS_HUD_C_Get_ShowLayerColors_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_ShowLayerColors_Color");
static_assert(offsetof(ALS_HUD_C_Get_ShowLayerColors_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_ShowLayerColors_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowLayerColors_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_ShowLayerColors_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowLayerColors_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_ShowLayerColors_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_ShowTraces_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_ShowTraces_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_ShowTraces_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_ShowTraces_Color");
static_assert(sizeof(ALS_HUD_C_Get_ShowTraces_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_ShowTraces_Color");
static_assert(offsetof(ALS_HUD_C_Get_ShowTraces_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_ShowTraces_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowTraces_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_ShowTraces_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_ShowTraces_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_ShowTraces_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Get_Slomo_Color
// 0x003C (0x003C - 0x0000)
struct ALS_HUD_C_Get_Slomo_Color final
{
public:
	struct FSlateColor                            ReturnValue;                                       // 0x0000(0x0014)(Parm, OutParm, ReturnParm)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0014(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0028(0x0014)()
};
static_assert(alignof(ALS_HUD_C_Get_Slomo_Color) == 0x000004, "Wrong alignment on ALS_HUD_C_Get_Slomo_Color");
static_assert(sizeof(ALS_HUD_C_Get_Slomo_Color) == 0x00003C, "Wrong size on ALS_HUD_C_Get_Slomo_Color");
static_assert(offsetof(ALS_HUD_C_Get_Slomo_Color, ReturnValue) == 0x000000, "Member 'ALS_HUD_C_Get_Slomo_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_Slomo_Color, K2Node_MakeStruct_SlateColor) == 0x000014, "Member 'ALS_HUD_C_Get_Slomo_Color::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Get_Slomo_Color, K2Node_MakeStruct_SlateColor_1) == 0x000028, "Member 'ALS_HUD_C_Get_Slomo_Color::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.GetAssignedKeyName
// 0x0068 (0x0068 - 0x0000)
struct ALS_HUD_C_GetAssignedKeyName final
{
public:
	const class UInputAction*                     Action;                                            // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0008(0x0018)(Parm, OutParm)
	class UEnhancedInputLocalPlayerSubsystem*     CallFunc_GetLocalPlayerSubsystem_ReturnValue;      // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IEnhancedInputSubsystemInterface> CallFunc_QueryKeysMappedToAction_self_CastInput;   // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FKey>                           CallFunc_QueryKeysMappedToAction_ReturnValue;      // 0x0038(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38B2[0x7];                                     // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0050(0x0018)()
};
static_assert(alignof(ALS_HUD_C_GetAssignedKeyName) == 0x000008, "Wrong alignment on ALS_HUD_C_GetAssignedKeyName");
static_assert(sizeof(ALS_HUD_C_GetAssignedKeyName) == 0x000068, "Wrong size on ALS_HUD_C_GetAssignedKeyName");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, Action) == 0x000000, "Member 'ALS_HUD_C_GetAssignedKeyName::Action' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, Text) == 0x000008, "Member 'ALS_HUD_C_GetAssignedKeyName::Text' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, CallFunc_GetLocalPlayerSubsystem_ReturnValue) == 0x000020, "Member 'ALS_HUD_C_GetAssignedKeyName::CallFunc_GetLocalPlayerSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, CallFunc_QueryKeysMappedToAction_self_CastInput) == 0x000028, "Member 'ALS_HUD_C_GetAssignedKeyName::CallFunc_QueryKeysMappedToAction_self_CastInput' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, CallFunc_QueryKeysMappedToAction_ReturnValue) == 0x000038, "Member 'ALS_HUD_C_GetAssignedKeyName::CallFunc_QueryKeysMappedToAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, CallFunc_Array_IsEmpty_ReturnValue) == 0x000048, "Member 'ALS_HUD_C_GetAssignedKeyName::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_GetAssignedKeyName, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000050, "Member 'ALS_HUD_C_GetAssignedKeyName::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");

// Function ALS_HUD.ALS_HUD_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct ALS_HUD_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_HUD_C_Tick) == 0x000008, "Wrong alignment on ALS_HUD_C_Tick");
static_assert(sizeof(ALS_HUD_C_Tick) == 0x000048, "Wrong size on ALS_HUD_C_Tick");
static_assert(offsetof(ALS_HUD_C_Tick, MyGeometry) == 0x000000, "Member 'ALS_HUD_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ALS_HUD_C_Tick, InDeltaTime) == 0x000040, "Member 'ALS_HUD_C_Tick::InDeltaTime' has a wrong offset!");

}

