#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestroyedStorageBag

#include "Basic.hpp"

#include "S_WorldAction_structs.hpp"
#include "E_WorldActions_structs.hpp"
#include "S_InvItem_structs.hpp"


namespace SDK::Params
{

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.ExecuteUbergraph_BP_DestroyedStorageBag
// 0x0020 (0x0020 - 0x0000)
struct BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522D[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FText>                           K2Node_Event_VerifiedPlayers;                      // 0x0008(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_TurnedOn;                             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag");
static_assert(sizeof(BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag) == 0x000020, "Wrong size on BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag");
static_assert(offsetof(BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag, EntryPoint) == 0x000000, "Member 'BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag, K2Node_Event_VerifiedPlayers) == 0x000008, "Member 'BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag::K2Node_Event_VerifiedPlayers' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag, K2Node_Event_TurnedOn) == 0x000018, "Member 'BP_DestroyedStorageBag_C_ExecuteUbergraph_BP_DestroyedStorageBag::K2Node_Event_TurnedOn' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK AllowInteraction
// 0x0001 (0x0001 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_AllowInteraction final
{
public:
	bool                                          AllowInteraction;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_AllowInteraction) == 0x000001, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_AllowInteraction");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_AllowInteraction) == 0x000001, "Wrong size on BP_DestroyedStorageBag_C_SGK_AllowInteraction");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_AllowInteraction, AllowInteraction) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_AllowInteraction::AllowInteraction' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK CodeCheck
// 0x0020 (0x0020 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_CodeCheck final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          CodeAccepted;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_CodeCheck) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_CodeCheck");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_CodeCheck) == 0x000020, "Wrong size on BP_DestroyedStorageBag_C_SGK_CodeCheck");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_CodeCheck, Code) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_CodeCheck::Code' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_CodeCheck, CodeAccepted) == 0x000018, "Member 'BP_DestroyedStorageBag_C_SGK_CodeCheck::CodeAccepted' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK DropItem
// 0x0038 (0x0038 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_DropItem final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Dropped;                                           // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Spawned;                                           // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SaveLoaded;                                        // 0x0032(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0033(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_DropItem) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_DropItem");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_DropItem) == 0x000038, "Wrong size on BP_DestroyedStorageBag_C_SGK_DropItem");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_DropItem, InvItem) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_DropItem::InvItem' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_DropItem, Dropped) == 0x000030, "Member 'BP_DestroyedStorageBag_C_SGK_DropItem::Dropped' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_DropItem, Spawned) == 0x000031, "Member 'BP_DestroyedStorageBag_C_SGK_DropItem::Spawned' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_DropItem, SaveLoaded) == 0x000032, "Member 'BP_DestroyedStorageBag_C_SGK_DropItem::SaveLoaded' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_DropItem, ReturnValue) == 0x000033, "Member 'BP_DestroyedStorageBag_C_SGK_DropItem::ReturnValue' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK EndInteraction
// 0x0010 (0x0010 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_EndInteraction final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_EndInteraction) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_EndInteraction");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_EndInteraction) == 0x000010, "Wrong size on BP_DestroyedStorageBag_C_SGK_EndInteraction");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_EndInteraction, PlayerInventory) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_EndInteraction::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_EndInteraction, ReturnValue) == 0x000008, "Member 'BP_DestroyedStorageBag_C_SGK_EndInteraction::ReturnValue' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK GetVerifiedPlayers
// 0x0010 (0x0010 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers final
{
public:
	TArray<class FText>                           VerifiedPlayers;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers) == 0x000010, "Wrong size on BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers, VerifiedPlayers) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_GetVerifiedPlayers::VerifiedPlayers' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK Interact
// 0x0010 (0x0010 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_Interact final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_WorldActions                                Action;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_Interact) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_Interact");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_Interact) == 0x000010, "Wrong size on BP_DestroyedStorageBag_C_SGK_Interact");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_Interact, PlayerInventory) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_Interact::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_Interact, Action) == 0x000008, "Member 'BP_DestroyedStorageBag_C_SGK_Interact::Action' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_Interact, ReturnValue) == 0x000009, "Member 'BP_DestroyedStorageBag_C_SGK_Interact::ReturnValue' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK InteractName
// 0x0018 (0x0018 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_InteractName final
{
public:
	class FText                                   Param_InteractName;                                // 0x0000(0x0018)(Parm, OutParm)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_InteractName) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_InteractName");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_InteractName) == 0x000018, "Wrong size on BP_DestroyedStorageBag_C_SGK_InteractName");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_InteractName, Param_InteractName) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_InteractName::Param_InteractName' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK InvItem
// 0x0038 (0x0038 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_InvItem final
{
public:
	bool                                          IsItem;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522E[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             InvItem;                                           // 0x0008(0x0030)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_InvItem) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_InvItem");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_InvItem) == 0x000038, "Wrong size on BP_DestroyedStorageBag_C_SGK_InvItem");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_InvItem, IsItem) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_InvItem::IsItem' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_InvItem, InvItem) == 0x000008, "Member 'BP_DestroyedStorageBag_C_SGK_InvItem::InvItem' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK ItemAmount
// 0x0004 (0x0004 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_ItemAmount final
{
public:
	int32                                         Amount;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_ItemAmount) == 0x000004, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_ItemAmount");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_ItemAmount) == 0x000004, "Wrong size on BP_DestroyedStorageBag_C_SGK_ItemAmount");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_ItemAmount, Amount) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_ItemAmount::Amount' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK Mesh
// 0x0008 (0x0008 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_Mesh final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_Mesh) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_Mesh");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_Mesh) == 0x000008, "Wrong size on BP_DestroyedStorageBag_C_SGK_Mesh");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_Mesh, Mesh) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_Mesh::Mesh' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK PossibleActions
// 0x0050 (0x0050 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_PossibleActions final
{
public:
	class UBP_PlayerInventory_C*                  PlayerInventory;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ActionsFound;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_WorldAction>                 PossibleActions;                                   // 0x0010(0x0010)(Parm, OutParm)
	struct FS_WorldAction                         K2Node_MakeStruct_S_WorldAction;                   // 0x0020(0x0020)(HasGetValueTypeHash)
	TArray<struct FS_WorldAction>                 K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_PossibleActions) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_PossibleActions");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_PossibleActions) == 0x000050, "Wrong size on BP_DestroyedStorageBag_C_SGK_PossibleActions");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_PossibleActions, PlayerInventory) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_PossibleActions::PlayerInventory' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_PossibleActions, ActionsFound) == 0x000008, "Member 'BP_DestroyedStorageBag_C_SGK_PossibleActions::ActionsFound' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_PossibleActions, PossibleActions) == 0x000010, "Member 'BP_DestroyedStorageBag_C_SGK_PossibleActions::PossibleActions' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_PossibleActions, K2Node_MakeStruct_S_WorldAction) == 0x000020, "Member 'BP_DestroyedStorageBag_C_SGK_PossibleActions::K2Node_MakeStruct_S_WorldAction' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_PossibleActions, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_DestroyedStorageBag_C_SGK_PossibleActions::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK SetVerifiedPlayers
// 0x0010 (0x0010 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers final
{
public:
	TArray<class FText>                           VerifiedPlayers;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers) == 0x000010, "Wrong size on BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers, VerifiedPlayers) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_SetVerifiedPlayers::VerifiedPlayers' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK TurnedOnEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_TurnedOnEffect final
{
public:
	bool                                          TurnedOn;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_TurnedOnEffect) == 0x000001, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_TurnedOnEffect");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_TurnedOnEffect) == 0x000001, "Wrong size on BP_DestroyedStorageBag_C_SGK_TurnedOnEffect");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_TurnedOnEffect, TurnedOn) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_TurnedOnEffect::TurnedOn' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK UpdateCode
// 0x0020 (0x0020 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_UpdateCode final
{
public:
	class FText                                   Code;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_UpdateCode) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_UpdateCode");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_UpdateCode) == 0x000020, "Wrong size on BP_DestroyedStorageBag_C_SGK_UpdateCode");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_UpdateCode, Code) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_UpdateCode::Code' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_UpdateCode, ReturnValue) == 0x000018, "Member 'BP_DestroyedStorageBag_C_SGK_UpdateCode::ReturnValue' has a wrong offset!");

// Function BP_DestroyedStorageBag.BP_DestroyedStorageBag_C.SGK VerifyPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_DestroyedStorageBag_C_SGK_VerifyPlayer final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_DestroyedStorageBag_C_SGK_VerifyPlayer) == 0x000008, "Wrong alignment on BP_DestroyedStorageBag_C_SGK_VerifyPlayer");
static_assert(sizeof(BP_DestroyedStorageBag_C_SGK_VerifyPlayer) == 0x000020, "Wrong size on BP_DestroyedStorageBag_C_SGK_VerifyPlayer");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_VerifyPlayer, Text) == 0x000000, "Member 'BP_DestroyedStorageBag_C_SGK_VerifyPlayer::Text' has a wrong offset!");
static_assert(offsetof(BP_DestroyedStorageBag_C_SGK_VerifyPlayer, ReturnValue) == 0x000018, "Member 'BP_DestroyedStorageBag_C_SGK_VerifyPlayer::ReturnValue' has a wrong offset!");

}

