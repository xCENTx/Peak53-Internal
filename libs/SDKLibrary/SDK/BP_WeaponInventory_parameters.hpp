#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WeaponInventory

#include "Basic.hpp"

#include "S_AttachmentSlot_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "S_OtherInvSaves_structs.hpp"
#include "Engine_structs.hpp"
#include "E_AttachmentType_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_AttachmentSaveSlot_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_InvSlotID_structs.hpp"
#include "S_HoldableDetails_structs.hpp"
#include "E_FireModes_structs.hpp"
#include "S_WeaponSlot_structs.hpp"


namespace SDK::Params
{

// Function BP_WeaponInventory.BP_WeaponInventory_C.AddAttachmentUsingPlayers
// 0x0090 (0x0090 - 0x0000)
struct BP_WeaponInventory_C_AddAttachmentUsingPlayers final
{
public:
	class UBP_MasterInventory_C*                  ContainerL;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_580E[0x1];                                     // 0x000F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_580F[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0018(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory;          // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5810[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5811[0x2];                                     // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  K2Node_DynamicCast_AsBP_Player_Inventory_1;        // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5812[0x3];                                     // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_AddAttachmentUsingPlayers) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_AddAttachmentUsingPlayers");
static_assert(sizeof(BP_WeaponInventory_C_AddAttachmentUsingPlayers) == 0x000090, "Wrong size on BP_WeaponInventory_C_AddAttachmentUsingPlayers");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, ContainerL) == 0x000000, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::ContainerL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, Temp_int_Variable) == 0x000008, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000D, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_GetValidValue_ReturnValue) == 0x00000E, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_SelectAttachmentItem_IsValid) == 0x000014, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000018, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, K2Node_DynamicCast_AsBP_Player_Inventory) == 0x000060, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::K2Node_DynamicCast_AsBP_Player_Inventory' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_MakeLiteralInt_ReturnValue) == 0x00006C, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_IsValid_ReturnValue_1) == 0x000074, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000075, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, K2Node_DynamicCast_AsBP_Player_Inventory_1) == 0x000078, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::K2Node_DynamicCast_AsBP_Player_Inventory_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_Array_AddUnique_ReturnValue) == 0x000084, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000088, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddAttachmentUsingPlayers, CallFunc_IsValid_ReturnValue_2) == 0x00008C, "Member 'BP_WeaponInventory_C_AddAttachmentUsingPlayers::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.AddDefaultAttachments
// 0x23F0 (0x23F0 - 0x0000)
struct BP_WeaponInventory_C_AddDefaultAttachments final
{
public:
	struct FDataTableRowHandle                    ArrayElementL;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, NoDestructor)
	struct FS_ItemDetails                         AttachmentItemDetailsL;                            // 0x0010(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 SelfWeaponClassL;                                  // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5813[0x8];                                     // 0x08A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         SelfItemDetailsL;                                  // 0x08B0(0x0890)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TSet<E_AttachmentType>                        Temp_byte_Variable;                                // 0x1140(0x0050)()
	TArray<class UClass*>                         Temp_class_Variable;                               // 0x1190(0x0010)(ReferenceParm)
	TArray<struct FDataTableRowHandle>            Temp_struct_Variable;                              // 0x11A0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x11B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x11B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5814[0x6];                                     // 0x11B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Weapon;        // 0x11B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x11C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5815[0x3];                                     // 0x11C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x11C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x11C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5816[0x4];                                     // 0x11CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x11D0(0x0010)(NoDestructor)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x11E0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x1210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x1214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5817[0xB];                                     // 0x1215(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x1220(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x1AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5818[0x3];                                     // 0x1AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x1AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x1AB8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x1AE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x1AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5819[0xF];                                     // 0x1AF1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x1B00(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x2390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x23A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581A[0x7];                                     // 0x23A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x23A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x23B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581B[0x7];                                     // 0x23B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x23B8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x23E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_AddDefaultAttachments) == 0x000010, "Wrong alignment on BP_WeaponInventory_C_AddDefaultAttachments");
static_assert(sizeof(BP_WeaponInventory_C_AddDefaultAttachments) == 0x0023F0, "Wrong size on BP_WeaponInventory_C_AddDefaultAttachments");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, ArrayElementL) == 0x000000, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, AttachmentItemDetailsL) == 0x000010, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::AttachmentItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, SelfWeaponClassL) == 0x0008A0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::SelfWeaponClassL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, SelfItemDetailsL) == 0x0008B0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::SelfItemDetailsL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, Temp_byte_Variable) == 0x001140, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, Temp_class_Variable) == 0x001190, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, Temp_struct_Variable) == 0x0011A0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_IsValidClass_ReturnValue) == 0x0011B0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_BooleanAND_ReturnValue) == 0x0011B1, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, K2Node_ClassDynamicCast_AsBP_Master_Weapon) == 0x0011B8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::K2Node_ClassDynamicCast_AsBP_Master_Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, K2Node_ClassDynamicCast_bSuccess) == 0x0011C0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Array_Length_ReturnValue) == 0x0011C4, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, Temp_int_Array_Index_Variable) == 0x0011C8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Array_Get_Item) == 0x0011D0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, K2Node_MakeStruct_S_InvItem) == 0x0011E0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, Temp_int_Loop_Counter_Variable) == 0x001210, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_ItemDetails_ItemFound) == 0x001214, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_ItemDetails_ItemDetails) == 0x001220, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x001AB0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x001AB4, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_SelfItem_SelfItem) == 0x001AB8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_GetGameMode_ReturnValue) == 0x001AE8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x001AF0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x001B00, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x002390, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, K2Node_DynamicCast_bSuccess) == 0x0023A0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0023A8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Set_Contains_ReturnValue) == 0x0023B0, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_CreateNewItem_NewItem) == 0x0023B8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddDefaultAttachments, CallFunc_Array_Contains_ReturnValue) == 0x0023E8, "Member 'BP_WeaponInventory_C_AddDefaultAttachments::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.AddWeaponAttachment
// 0x1A10 (0x1A10 - 0x0000)
struct BP_WeaponInventory_C_AddWeaponAttachment final
{
public:
	struct FS_InvItem                             InvItem;                                           // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          PlayAnim;                                          // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581C[0xE];                                     // 0x0032(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0040(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x08D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581D[0xE];                                     // 0x08D2(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x08E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterAttachment_C*                 CallFunc_AddNewAttachment_NewAttachment;           // 0x1170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x1178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x1179(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581E[0x6];                                     // 0x117A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x1180(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_AddWeaponAttachment) == 0x000010, "Wrong alignment on BP_WeaponInventory_C_AddWeaponAttachment");
static_assert(sizeof(BP_WeaponInventory_C_AddWeaponAttachment) == 0x001A10, "Wrong size on BP_WeaponInventory_C_AddWeaponAttachment");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, InvItem) == 0x000000, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, PlayAnim) == 0x000030, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::PlayAnim' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemFound) == 0x000031, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000040, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_IsValid_ReturnValue) == 0x0008D0, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x0008D1, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x0008E0, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_AddNewAttachment_NewAttachment) == 0x001170, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_AddNewAttachment_NewAttachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_IsValid_ReturnValue_1) == 0x001178, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x001179, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AddWeaponAttachment, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x001180, "Member 'BP_WeaponInventory_C_AddWeaponAttachment::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.AmmoTypeCheck
// 0x0950 (0x0950 - 0x0000)
struct BP_WeaponInventory_C_AmmoTypeCheck final
{
public:
	struct FS_InvItem                             Item;                                              // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581F[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FDataTableRowHandle>            Temp_struct_Variable;                              // 0x0038(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5820[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0058(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5821[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0090(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5822[0x3];                                     // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0930(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_AmmoTypeCheck) == 0x000010, "Wrong alignment on BP_WeaponInventory_C_AmmoTypeCheck");
static_assert(sizeof(BP_WeaponInventory_C_AmmoTypeCheck) == 0x000950, "Wrong size on BP_WeaponInventory_C_AmmoTypeCheck");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, Item) == 0x000000, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, ReturnValue) == 0x000030, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, Temp_struct_Variable) == 0x000038, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_SGK_SelfItem_SelfItem) == 0x000058, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_SGK_ItemDetails_ItemFound) == 0x000088, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000090, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x000920, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, K2Node_ClassDynamicCast_bSuccess) == 0x000928, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_Array_Length_ReturnValue) == 0x00092C, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_Array_Get_Item) == 0x000930, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_Less_IntInt_ReturnValue) == 0x000940, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_AmmoTypeCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000941, "Member 'BP_WeaponInventory_C_AmmoTypeCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.ChamberRoundFromMag
// 0x0330 (0x0330 - 0x0000)
struct BP_WeaponInventory_C_ChamberRoundFromMag final
{
public:
	class UBP_MasterInventory_C*                  MagInvL;                                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             AmmoItemL;                                         // 0x0008(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5823[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0068(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5824[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails; // 0x00A0(0x0150)(HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItem_RemainingItem;                    // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5825[0x5];                                     // 0x01FB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_AddItem_RemainingInvItem;                 // 0x0200(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlotID                           CallFunc_AddItem_NewItemSlot;                      // 0x0230(0x0010)(ZeroConstructor, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItemAmount_ItemRemoved;             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5826[0x6];                                     // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0248(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5827[0x6];                                     // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0298(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x02E8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5828[0x3];                                     // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AmmoTypeCheck_ReturnValue;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5829[0x3];                                     // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_ChamberRoundFromMag) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_ChamberRoundFromMag");
static_assert(sizeof(BP_WeaponInventory_C_ChamberRoundFromMag) == 0x000330, "Wrong size on BP_WeaponInventory_C_ChamberRoundFromMag");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, MagInvL) == 0x000000, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::MagInvL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, AmmoItemL) == 0x000008, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::AmmoItemL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000064, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_SelfItem_SelfItem) == 0x000068, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_ItemHoldableDetails_ItemFound) == 0x000098, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_ItemHoldableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails) == 0x0000A0, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x0001F0, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, K2Node_ClassDynamicCast_bSuccess) == 0x0001F8, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_IsValidClass_ReturnValue) == 0x0001F9, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_AddItem_RemainingItem) == 0x0001FA, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_AddItem_RemainingItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_AddItem_RemainingInvItem) == 0x000200, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_AddItem_RemainingInvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_AddItem_NewItemSlot) == 0x000230, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_AddItem_NewItemSlot' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_RemoveItemAmount_ItemRemoved) == 0x000240, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_RemoveItemAmount_ItemRemoved' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SelectAttachmentItem_IsValid) == 0x000241, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000248, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000290, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_IsValid_ReturnValue) == 0x000291, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_Array_Get_Item) == 0x000298, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_InvSlotItem_InvItem) == 0x0002E8, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000318, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_SGK_IsRootSlot_RootIndex) == 0x00031C, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_AmmoTypeCheck_ReturnValue) == 0x000320, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_AmmoTypeCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_Array_Length_ReturnValue) == 0x000324, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000328, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ChamberRoundFromMag, CallFunc_Max_ReturnValue) == 0x00032C, "Member 'BP_WeaponInventory_C_ChamberRoundFromMag::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.CreateAllAttachments
// 0x0910 (0x0910 - 0x0000)
struct BP_WeaponInventory_C_CreateAllAttachments final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582A[0x2];                                     // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582B[0x3];                                     // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0010(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582C[0x6];                                     // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0060(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x08F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582D[0x3];                                     // 0x08F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x08FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582E[0x3];                                     // 0x08FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAttachment_C*                 CallFunc_AddNewAttachment_NewAttachment;           // 0x0900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_CreateAllAttachments) == 0x000010, "Wrong alignment on BP_WeaponInventory_C_CreateAllAttachments");
static_assert(sizeof(BP_WeaponInventory_C_CreateAllAttachments) == 0x000910, "Wrong size on BP_WeaponInventory_C_CreateAllAttachments");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, Temp_int_Variable) == 0x000000, "Member 'BP_WeaponInventory_C_CreateAllAttachments::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_Conv_IntToByte_ReturnValue) == 0x000004, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_GetValidValue_ReturnValue) == 0x000005, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_SelectAttachmentItem_IsValid) == 0x00000C, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000010, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_SGK_ItemDetails_ItemFound) == 0x000059, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000060, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_MakeLiteralInt_ReturnValue) == 0x0008F0, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_IsValid_ReturnValue_1) == 0x0008F4, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_Subtract_IntInt_ReturnValue) == 0x0008F8, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0008FC, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_CreateAllAttachments, CallFunc_AddNewAttachment_NewAttachment) == 0x000900, "Member 'BP_WeaponInventory_C_CreateAllAttachments::CallFunc_AddNewAttachment_NewAttachment' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.ExecuteUbergraph_BP_WeaponInventory
// 0x03E8 (0x03E8 - 0x0000)
struct BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_582F[0x2];                                     // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5830[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSet<E_FireModes>                             Temp_byte_Variable;                                // 0x0018(0x0050)()
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5831[0x2];                                     // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5832[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_1;              // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5833[0x5];                                     // 0x0083(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0088(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentType                              K2Node_CustomEvent_Attachment;                     // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5834[0x2];                                     // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_CustomEvent_Item;                           // 0x00D8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterAttachment_C*                 K2Node_CustomEvent_Actor;                          // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_CustomEvent_AttachmentItem;                 // 0x0110(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AnimationSocket;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentType                              K2Node_Event_Attachment;                           // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5835[0x1];                                     // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_3;             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue_2;              // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5836[0x2];                                     // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid_1;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5837[0x7];                                     // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue_1;       // 0x0158(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_1;             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5838[0x3];                                     // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5839[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583A[0x7];                                     // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_WeaponSlot                          CallFunc_SelectedWeaponSlot_ReturnValue;           // 0x01D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583B[0x1];                                     // 0x0223(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue_2;             // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583C[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0230(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemHoldableDetails_ItemFound;        // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583D[0x7];                                     // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_HoldableDetails                     CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails; // 0x0268(0x0150)(HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue_1;                   // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583E[0x7];                                     // 0x03B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon;  // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_583F[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_FireModes>                           CallFunc_Set_ToArray_Result;                       // 0x03D0(0x0010)(ReferenceParm)
	E_FireModes                                   CallFunc_Array_Get_Item;                           // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory");
static_assert(sizeof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory) == 0x0003E8, "Wrong size on BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, EntryPoint) == 0x000000, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, Temp_int_Variable) == 0x000004, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Conv_IntToByte_ReturnValue) == 0x00000C, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00000D, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, Temp_byte_Variable) == 0x000018, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, Temp_int_Variable_1) == 0x000068, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00006C, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetValidValue_ReturnValue) == 0x00006D, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, Temp_int_Variable_2) == 0x000070, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_MakeLiteralInt_ReturnValue) == 0x000074, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000078, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetValidValue_ReturnValue_1) == 0x000080, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetValidValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000081, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SelectAttachmentItem_IsValid) == 0x000082, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000088, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_CustomEvent_Attachment) == 0x0000D5, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_CustomEvent_Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_CustomEvent_Item) == 0x0000D8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_CustomEvent_Actor) == 0x000108, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_CustomEvent_AttachmentItem) == 0x000110, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_CustomEvent_AttachmentItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_CustomEvent_AnimationSocket) == 0x000140, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_CustomEvent_AnimationSocket' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_Event_Visible) == 0x000141, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_Event_Attachment) == 0x000142, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_Event_Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, Temp_int_Variable_3) == 0x000144, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Conv_IntToByte_ReturnValue_3) == 0x000148, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Conv_IntToByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetValidValue_ReturnValue_2) == 0x000149, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetValidValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SelectAttachmentItem_IsValid_1) == 0x000150, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SelectAttachmentItem_IsValid_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SelectAttachmentItem_ReturnValue_1) == 0x000158, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SelectAttachmentItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsValid_ReturnValue_1) == 0x0001A0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsServer_ReturnValue) == 0x0001A1, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsStandalone_ReturnValue) == 0x0001A2, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_BooleanOR_ReturnValue) == 0x0001A3, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_MakeLiteralInt_ReturnValue_1) == 0x0001A4, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_MakeLiteralInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsValid_ReturnValue_2) == 0x0001A8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0001AC, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0001B0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetPlayerController_ReturnValue) == 0x0001B8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_GetComponentByClass_ReturnValue) == 0x0001C0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsDedicatedServer_ReturnValue) == 0x0001C8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SelectedWeaponSlot_ReturnValue) == 0x0001D0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SelectedWeaponSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsValid_ReturnValue_3) == 0x000220, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Greater_IntInt_ReturnValue) == 0x000221, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000222, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_MakeLiteralInt_ReturnValue_2) == 0x000224, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_MakeLiteralInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Less_IntInt_ReturnValue) == 0x000228, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_MakeStruct_S_InvItem) == 0x000230, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SGK_ItemHoldableDetails_ItemFound) == 0x000260, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SGK_ItemHoldableDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails) == 0x000268, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_SGK_ItemHoldableDetails_ItemHoldableDetails' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_IsServer_ReturnValue_1) == 0x0003B8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_IsServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon) == 0x0003C0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_ClassDynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, K2Node_ClassDynamicCast_bSuccess) == 0x0003C8, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Set_ToArray_Result) == 0x0003D0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Set_ToArray_Result' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory, CallFunc_Array_Get_Item) == 0x0003E0, "Member 'BP_WeaponInventory_C_ExecuteUbergraph_BP_WeaponInventory::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.LoadSavedAttachments
// 0x01C0 (0x01C0 - 0x0000)
struct BP_WeaponInventory_C_LoadSavedAttachments final
{
public:
	TArray<struct FS_AttachmentSaveSlot>          Attachments;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FS_OtherInvSaves>               OtherInventorys;                                   // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_InvItem                             NewItemL;                                          // 0x0020(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_AttachmentSaveSlot                  AttachmentSaveSlotL;                               // 0x0050(0x001C)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_AttachmentSaveSlot                  CallFunc_Array_Get_Item;                           // 0x0074(0x001C)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5840[0x2];                                     // 0x0096(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5841[0x4];                                     // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x00A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5842[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5843[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_1;                         // 0x0100(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_2;                         // 0x0140(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0180(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5844[0x7];                                     // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_LoadSavedAttachments) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_LoadSavedAttachments");
static_assert(sizeof(BP_WeaponInventory_C_LoadSavedAttachments) == 0x0001C0, "Wrong size on BP_WeaponInventory_C_LoadSavedAttachments");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, Attachments) == 0x000000, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::Attachments' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, OtherInventorys) == 0x000010, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::OtherInventorys' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, NewItemL) == 0x000020, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, AttachmentSaveSlotL) == 0x000050, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::AttachmentSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, Temp_int_Array_Index_Variable) == 0x000070, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Array_Get_Item) == 0x000074, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, Temp_int_Loop_Counter_Variable) == 0x000090, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000094, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x000095, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, K2Node_MakeStruct_S_InvItem) == 0x0000A0, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_GetGameMode_ReturnValue) == 0x0000D8, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0000E0, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0000F8, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Array_Get_Item_1) == 0x000100, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_Array_Get_Item_2) == 0x000140, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_CreateNewItem_NewItem) == 0x000180, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, CallFunc_IsValid_ReturnValue) == 0x0001B0, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_LoadSavedAttachments, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x0001B8, "Member 'BP_WeaponInventory_C_LoadSavedAttachments::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.MulticastUpdateAttachmentItem
// 0x0040 (0x0040 - 0x0000)
struct BP_WeaponInventory_C_MulticastUpdateAttachmentItem final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5845[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             Item;                                              // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterAttachment_C*                 Actor;                                             // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_MulticastUpdateAttachmentItem) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_MulticastUpdateAttachmentItem");
static_assert(sizeof(BP_WeaponInventory_C_MulticastUpdateAttachmentItem) == 0x000040, "Wrong size on BP_WeaponInventory_C_MulticastUpdateAttachmentItem");
static_assert(offsetof(BP_WeaponInventory_C_MulticastUpdateAttachmentItem, Attachment) == 0x000000, "Member 'BP_WeaponInventory_C_MulticastUpdateAttachmentItem::Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_MulticastUpdateAttachmentItem, Item) == 0x000008, "Member 'BP_WeaponInventory_C_MulticastUpdateAttachmentItem::Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_MulticastUpdateAttachmentItem, Actor) == 0x000038, "Member 'BP_WeaponInventory_C_MulticastUpdateAttachmentItem::Actor' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.NextRound
// 0x0208 (0x0208 - 0x0000)
struct BP_WeaponInventory_C_NextRound final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5846[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             Item;                                              // 0x0008(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             AmmoItemL;                                         // 0x0058(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5847[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5848[0x3];                                     // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5849[0x6];                                     // 0x00CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x00D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_AmmoTypeCheck_ReturnValue;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584A[0x6];                                     // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0108(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584B[0x2];                                     // 0x015A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584C[0x4];                                     // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0170(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AmmoTypeCheck_ReturnValue_1;              // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584D[0x2];                                     // 0x01A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01A8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue_1;                        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot_1;              // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584E[0x3];                                     // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex_1;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_NextRound) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_NextRound");
static_assert(sizeof(BP_WeaponInventory_C_NextRound) == 0x000208, "Wrong size on BP_WeaponInventory_C_NextRound");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, ReturnValue) == 0x000000, "Member 'BP_WeaponInventory_C_NextRound::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, Item) == 0x000008, "Member 'BP_WeaponInventory_C_NextRound::Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, AmmoItemL) == 0x000058, "Member 'BP_WeaponInventory_C_NextRound::AmmoItemL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, Temp_int_Array_Index_Variable) == 0x0000A8, "Member 'BP_WeaponInventory_C_NextRound::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BP_WeaponInventory_C_NextRound::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, Temp_int_Array_Index_Variable_1) == 0x0000BC, "Member 'BP_WeaponInventory_C_NextRound::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, Temp_int_Loop_Counter_Variable_1) == 0x0000C0, "Member 'BP_WeaponInventory_C_NextRound::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000C4, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000C9, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_InvSlotItem_InvItem) == 0x0000D0, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_AmmoTypeCheck_ReturnValue) == 0x000100, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_AmmoTypeCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Array_Get_Item) == 0x000108, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000158, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x000159, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_IsRootSlot_RootIndex) == 0x00015C, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Array_Length_ReturnValue) == 0x000160, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000164, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Max_ReturnValue) == 0x000168, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000170, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Greater_IntInt_ReturnValue_3) == 0x0001A0, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_AmmoTypeCheck_ReturnValue_1) == 0x0001A1, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_AmmoTypeCheck_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Array_Length_ReturnValue_1) == 0x0001A4, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Array_Get_Item_1) == 0x0001A8, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0001F8, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_Max_ReturnValue_1) == 0x0001FC, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_Max_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_IsRootSlot_IsRootSlot_1) == 0x000200, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_IsRootSlot_IsRootSlot_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_NextRound, CallFunc_SGK_IsRootSlot_RootIndex_1) == 0x000204, "Member 'BP_WeaponInventory_C_NextRound::CallFunc_SGK_IsRootSlot_RootIndex_1' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.RemoveAttachment
// 0x0098 (0x0098 - 0x0000)
struct BP_WeaponInventory_C_RemoveAttachment final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_584F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterAttachment_C*                 AttachmentL;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5850[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0018(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5851[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5852[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_MasterRangeWeapon_C*                K2Node_DynamicCast_AsBP_Master_Range_Weapon;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5853[0x2];                                     // 0x007A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5854[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_RemoveAttachment) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_RemoveAttachment");
static_assert(sizeof(BP_WeaponInventory_C_RemoveAttachment) == 0x000098, "Wrong size on BP_WeaponInventory_C_RemoveAttachment");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, Attachment) == 0x000000, "Member 'BP_WeaponInventory_C_RemoveAttachment::Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, AttachmentL) == 0x000008, "Member 'BP_WeaponInventory_C_RemoveAttachment::AttachmentL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_IsValid) == 0x000010, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000018, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, Temp_int_Array_Index_Variable) == 0x000064, "Member 'BP_WeaponInventory_C_RemoveAttachment::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, K2Node_DynamicCast_AsBP_Master_Range_Weapon) == 0x000070, "Member 'BP_WeaponInventory_C_RemoveAttachment::K2Node_DynamicCast_AsBP_Master_Range_Weapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_WeaponInventory_C_RemoveAttachment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000079, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'BP_WeaponInventory_C_RemoveAttachment::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_RemoveAttachment, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'BP_WeaponInventory_C_RemoveAttachment::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.ReplicateContainingInventories
// 0x0070 (0x0070 - 0x0000)
struct BP_WeaponInventory_C_ReplicateContainingInventories final
{
public:
	bool                                          Replicate;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5855[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5856[0x2];                                     // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5857[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0018(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5858[0x3];                                     // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_ReplicateContainingInventories) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_ReplicateContainingInventories");
static_assert(sizeof(BP_WeaponInventory_C_ReplicateContainingInventories) == 0x000070, "Wrong size on BP_WeaponInventory_C_ReplicateContainingInventories");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, Replicate) == 0x000000, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::Replicate' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, Temp_int_Variable) == 0x000004, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_Conv_IntToByte_ReturnValue) == 0x000008, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_GetValidValue_ReturnValue) == 0x000009, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_SelectAttachmentItem_IsValid) == 0x000010, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000018, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_MakeLiteralInt_ReturnValue) == 0x000060, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_IsValid_ReturnValue) == 0x000064, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_Subtract_IntInt_ReturnValue) == 0x000068, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ReplicateContainingInventories, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'BP_WeaponInventory_C_ReplicateContainingInventories::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.SelectAttachmentItem
// 0x00F0 (0x00F0 - 0x0000)
struct BP_WeaponInventory_C_SelectAttachmentItem final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsValid;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5859[0x6];                                     // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      ReturnValue;                                       // 0x0008(0x0048)(Parm, OutParm, ReturnParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	E_AttachmentType                              Temp_byte_Variable;                                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585A[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      Temp_struct_Variable;                              // 0x0058(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_AttachmentSlot                      K2Node_Select_Default;                             // 0x00A0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_SelectAttachmentItem) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_SelectAttachmentItem");
static_assert(sizeof(BP_WeaponInventory_C_SelectAttachmentItem) == 0x0000F0, "Wrong size on BP_WeaponInventory_C_SelectAttachmentItem");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, Attachment) == 0x000000, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, IsValid) == 0x000001, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, ReturnValue) == 0x000008, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, Temp_byte_Variable) == 0x000050, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, Temp_struct_Variable) == 0x000058, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, K2Node_Select_Default) == 0x0000A0, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_SelectAttachmentItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_WeaponInventory_C_SelectAttachmentItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.ServerAddWeaponAttachment
// 0x0038 (0x0038 - 0x0000)
struct BP_WeaponInventory_C_ServerAddWeaponAttachment final
{
public:
	struct FS_InvItem                             AttachmentItem;                                    // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          AnimationSocket;                                   // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_ServerAddWeaponAttachment) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_ServerAddWeaponAttachment");
static_assert(sizeof(BP_WeaponInventory_C_ServerAddWeaponAttachment) == 0x000038, "Wrong size on BP_WeaponInventory_C_ServerAddWeaponAttachment");
static_assert(offsetof(BP_WeaponInventory_C_ServerAddWeaponAttachment, AttachmentItem) == 0x000000, "Member 'BP_WeaponInventory_C_ServerAddWeaponAttachment::AttachmentItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_ServerAddWeaponAttachment, AnimationSocket) == 0x000030, "Member 'BP_WeaponInventory_C_ServerAddWeaponAttachment::AnimationSocket' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.SGK LoadWeaponAttachments
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponInventory_C_SGK_LoadWeaponAttachments final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong alignment on BP_WeaponInventory_C_SGK_LoadWeaponAttachments");
static_assert(sizeof(BP_WeaponInventory_C_SGK_LoadWeaponAttachments) == 0x000001, "Wrong size on BP_WeaponInventory_C_SGK_LoadWeaponAttachments");
static_assert(offsetof(BP_WeaponInventory_C_SGK_LoadWeaponAttachments, Visible) == 0x000000, "Member 'BP_WeaponInventory_C_SGK_LoadWeaponAttachments::Visible' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.SGK RemoveAttachment
// 0x0001 (0x0001 - 0x0000)
struct BP_WeaponInventory_C_SGK_RemoveAttachment final
{
public:
	E_AttachmentType                              Attachment;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_SGK_RemoveAttachment) == 0x000001, "Wrong alignment on BP_WeaponInventory_C_SGK_RemoveAttachment");
static_assert(sizeof(BP_WeaponInventory_C_SGK_RemoveAttachment) == 0x000001, "Wrong size on BP_WeaponInventory_C_SGK_RemoveAttachment");
static_assert(offsetof(BP_WeaponInventory_C_SGK_RemoveAttachment, Attachment) == 0x000000, "Member 'BP_WeaponInventory_C_SGK_RemoveAttachment::Attachment' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.TotalAmmo
// 0x000C (0x000C - 0x0000)
struct BP_WeaponInventory_C_TotalAmmo final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585B[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_TotalAmmo) == 0x000004, "Wrong alignment on BP_WeaponInventory_C_TotalAmmo");
static_assert(sizeof(BP_WeaponInventory_C_TotalAmmo) == 0x00000C, "Wrong size on BP_WeaponInventory_C_TotalAmmo");
static_assert(offsetof(BP_WeaponInventory_C_TotalAmmo, ReturnValue) == 0x000000, "Member 'BP_WeaponInventory_C_TotalAmmo::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalAmmo, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_WeaponInventory_C_TotalAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_WeaponInventory_C_TotalAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.TotalMaxAmmo
// 0x0058 (0x0058 - 0x0000)
struct BP_WeaponInventory_C_TotalMaxAmmo final
{
public:
	int32                                         MaxAmmo;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxAmmoL;                                          // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 RangeWeaponL;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_SelfItem_SelfItem;                    // 0x0010(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_GetItemRangeClass_ReturnValue;        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585C[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_SGK_GetItemRangeClass_RangeWeapon;        // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585D[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_TotalMaxAmmo) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_TotalMaxAmmo");
static_assert(sizeof(BP_WeaponInventory_C_TotalMaxAmmo) == 0x000058, "Wrong size on BP_WeaponInventory_C_TotalMaxAmmo");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, MaxAmmo) == 0x000000, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::MaxAmmo' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, MaxAmmoL) == 0x000004, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::MaxAmmoL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, RangeWeaponL) == 0x000008, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::RangeWeaponL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, CallFunc_SGK_SelfItem_SelfItem) == 0x000010, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::CallFunc_SGK_SelfItem_SelfItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, CallFunc_SGK_GetItemRangeClass_ReturnValue) == 0x000040, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::CallFunc_SGK_GetItemRangeClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, CallFunc_SGK_GetItemRangeClass_RangeWeapon) == 0x000048, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::CallFunc_SGK_GetItemRangeClass_RangeWeapon' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_TotalMaxAmmo, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'BP_WeaponInventory_C_TotalMaxAmmo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.UpdateAllAttachments
// 0x00B8 (0x00B8 - 0x0000)
struct BP_WeaponInventory_C_UpdateAllAttachments final
{
public:
	TArray<struct FS_AttachmentSlot>              Attachments;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FS_AttachmentSlot                      NewAttachmentL;                                    // 0x0010(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585E[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_Array_Get_Item;                           // 0x0068(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_585F[0x2];                                     // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_UpdateAllAttachments) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_UpdateAllAttachments");
static_assert(sizeof(BP_WeaponInventory_C_UpdateAllAttachments) == 0x0000B8, "Wrong size on BP_WeaponInventory_C_UpdateAllAttachments");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, Attachments) == 0x000000, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::Attachments' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, NewAttachmentL) == 0x000010, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::NewAttachmentL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, Temp_int_Array_Index_Variable) == 0x00005C, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x0000B0, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, K2Node_SwitchEnum_CmpSuccess) == 0x0000B1, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x0000B4, "Member 'BP_WeaponInventory_C_UpdateAllAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.UpdateAllClientAttachments
// 0x0098 (0x0098 - 0x0000)
struct BP_WeaponInventory_C_UpdateAllClientAttachments final
{
public:
	TArray<struct FS_AttachmentSlot>              AttachmentsL;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5860[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x0028(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5861[0x4];                                     // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5862[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_UpdateAllClientAttachments) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_UpdateAllClientAttachments");
static_assert(sizeof(BP_WeaponInventory_C_UpdateAllClientAttachments) == 0x000098, "Wrong size on BP_WeaponInventory_C_UpdateAllClientAttachments");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, AttachmentsL) == 0x000000, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::AttachmentsL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_MakeLiteralInt_ReturnValue) == 0x000014, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, Temp_int_Variable) == 0x00001C, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Conv_IntToByte_ReturnValue) == 0x000020, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_GetValidValue_ReturnValue) == 0x000021, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000022, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_SelectAttachmentItem_IsValid) == 0x000023, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_SelectAttachmentItem_ReturnValue) == 0x000028, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, Temp_int_Loop_Counter_Variable) == 0x000078, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Less_IntInt_ReturnValue) == 0x00008C, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAllClientAttachments, CallFunc_Add_IntInt_ReturnValue_1) == 0x000090, "Member 'BP_WeaponInventory_C_UpdateAllClientAttachments::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_WeaponInventory.BP_WeaponInventory_C.UpdateAttachmentItem
// 0x0178 (0x0178 - 0x0000)
struct BP_WeaponInventory_C_UpdateAttachmentItem final
{
public:
	E_AttachmentType                              AttachmentType;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5863[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             AttachmentItem;                                    // 0x0008(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_MasterAttachment_C*                 Attachment;                                        // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             AmmoItemL;                                         // 0x0040(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_AttachmentSlot                      AttachmentL;                                       // 0x0090(0x0048)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectAttachmentItem_IsValid;             // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5864[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      CallFunc_SelectAttachmentItem_ReturnValue;         // 0x00E0(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0129(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5865[0x6];                                     // 0x012A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_AttachmentSlot                      K2Node_SetFieldsInStruct_StructOut;                // 0x0130(0x0048)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_WeaponInventory_C_UpdateAttachmentItem) == 0x000008, "Wrong alignment on BP_WeaponInventory_C_UpdateAttachmentItem");
static_assert(sizeof(BP_WeaponInventory_C_UpdateAttachmentItem) == 0x000178, "Wrong size on BP_WeaponInventory_C_UpdateAttachmentItem");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, AttachmentType) == 0x000000, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::AttachmentType' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, AttachmentItem) == 0x000008, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::AttachmentItem' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, Attachment) == 0x000038, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::Attachment' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, AmmoItemL) == 0x000040, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::AmmoItemL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, AttachmentL) == 0x000090, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::AttachmentL' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, CallFunc_SelectAttachmentItem_IsValid) == 0x0000D8, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::CallFunc_SelectAttachmentItem_IsValid' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, CallFunc_SelectAttachmentItem_ReturnValue) == 0x0000E0, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::CallFunc_SelectAttachmentItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, CallFunc_Greater_IntInt_ReturnValue) == 0x000128, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, K2Node_SwitchEnum_CmpSuccess) == 0x000129, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_WeaponInventory_C_UpdateAttachmentItem, K2Node_SetFieldsInStruct_StructOut) == 0x000130, "Member 'BP_WeaponInventory_C_UpdateAttachmentItem::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

}

