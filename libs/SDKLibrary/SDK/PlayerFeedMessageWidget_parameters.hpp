#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerFeedMessageWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.ExecuteUbergraph_PlayerFeedMessageWidget
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E9[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextBlock*                             K2Node_CustomEvent_MessageFeed;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0010(0x0040)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35EA[0x4];                                     // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0058(0x0058)(HasGetValueTypeHash)
};
static_assert(alignof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget) == 0x000008, "Wrong alignment on PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget");
static_assert(sizeof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget) == 0x0000B0, "Wrong size on PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, EntryPoint) == 0x000000, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, K2Node_CustomEvent_MessageFeed) == 0x000008, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::K2Node_CustomEvent_MessageFeed' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, K2Node_Event_MyGeometry) == 0x000010, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, K2Node_Event_InDeltaTime) == 0x000050, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget, K2Node_MakeStruct_SlateFontInfo) == 0x000058, "Member 'PlayerFeedMessageWidget_C_ExecuteUbergraph_PlayerFeedMessageWidget::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct PlayerFeedMessageWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerFeedMessageWidget_C_PreConstruct) == 0x000001, "Wrong alignment on PlayerFeedMessageWidget_C_PreConstruct");
static_assert(sizeof(PlayerFeedMessageWidget_C_PreConstruct) == 0x000001, "Wrong size on PlayerFeedMessageWidget_C_PreConstruct");
static_assert(offsetof(PlayerFeedMessageWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'PlayerFeedMessageWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.RemoveActorEventSeq
// 0x0008 (0x0008 - 0x0000)
struct PlayerFeedMessageWidget_C_RemoveActorEventSeq final
{
public:
	class UTextBlock*                             Param_MessageFeed;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerFeedMessageWidget_C_RemoveActorEventSeq) == 0x000008, "Wrong alignment on PlayerFeedMessageWidget_C_RemoveActorEventSeq");
static_assert(sizeof(PlayerFeedMessageWidget_C_RemoveActorEventSeq) == 0x000008, "Wrong size on PlayerFeedMessageWidget_C_RemoveActorEventSeq");
static_assert(offsetof(PlayerFeedMessageWidget_C_RemoveActorEventSeq, Param_MessageFeed) == 0x000000, "Member 'PlayerFeedMessageWidget_C_RemoveActorEventSeq::Param_MessageFeed' has a wrong offset!");

// Function PlayerFeedMessageWidget.PlayerFeedMessageWidget_C.Tick
// 0x0048 (0x0048 - 0x0000)
struct PlayerFeedMessageWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0040(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerFeedMessageWidget_C_Tick) == 0x000008, "Wrong alignment on PlayerFeedMessageWidget_C_Tick");
static_assert(sizeof(PlayerFeedMessageWidget_C_Tick) == 0x000048, "Wrong size on PlayerFeedMessageWidget_C_Tick");
static_assert(offsetof(PlayerFeedMessageWidget_C_Tick, MyGeometry) == 0x000000, "Member 'PlayerFeedMessageWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerFeedMessageWidget_C_Tick, InDeltaTime) == 0x000040, "Member 'PlayerFeedMessageWidget_C_Tick::InDeltaTime' has a wrong offset!");

}

