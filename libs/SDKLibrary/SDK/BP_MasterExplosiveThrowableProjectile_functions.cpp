#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterExplosiveThrowableProjectile

#include "Basic.hpp"

#include "BP_MasterExplosiveThrowableProjectile_classes.hpp"
#include "BP_MasterExplosiveThrowableProjectile_parameters.hpp"


namespace SDK
{

// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.BurnSound
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::BurnSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "BurnSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.ExecuteUbergraph_BP_MasterExplosiveThrowableProjectile
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterExplosiveThrowableProjectile_C::ExecuteUbergraph_BP_MasterExplosiveThrowableProjectile(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "ExecuteUbergraph_BP_MasterExplosiveThrowableProjectile");

	Params::BP_MasterExplosiveThrowableProjectile_C_ExecuteUbergraph_BP_MasterExplosiveThrowableProjectile Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.Explode
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::Explode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "Explode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.InitializeThownProjectile
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::InitializeThownProjectile()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "InitializeThownProjectile");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.MolotovDamageLogic
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::MolotovDamageLogic()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "MolotovDamageLogic");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.MolotovDamageTimer
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::MolotovDamageTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "MolotovDamageTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.MolotovDelete
// (BlueprintCallable, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::MolotovDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "MolotovDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.MulticastExplodeEffect
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UParticleSystem*                  Particle                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterExplosiveThrowableProjectile_C::MulticastExplodeEffect(class UParticleSystem* Particle, class USoundBase* Sound, const struct FVector& Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "MulticastExplodeEffect");

	Params::BP_MasterExplosiveThrowableProjectile_C_MulticastExplodeEffect Parms{};

	Parms.Particle = Particle;
	Parms.Sound = Sound;
	Parms.Scale = std::move(Scale);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_MasterExplosiveThrowableProjectile_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_MasterExplosiveThrowableProjectile.BP_MasterExplosiveThrowableProjectile_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_MasterExplosiveThrowableProjectile_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_MasterExplosiveThrowableProjectile_C", "ReceiveTick");

	Params::BP_MasterExplosiveThrowableProjectile_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}

}

