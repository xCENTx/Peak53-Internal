#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BuildingPlan

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_BuildingPlan.BP_BuildingPlan_C.ExecuteUbergraph_BP_BuildingPlan
// 0x000C (0x000C - 0x0000)
struct BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown_2;                            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown_1;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_KeyDown;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan) == 0x000004, "Wrong alignment on BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan");
static_assert(sizeof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan) == 0x00000C, "Wrong size on BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, EntryPoint) == 0x000000, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, K2Node_Event_KeyDown_2) == 0x000004, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::K2Node_Event_KeyDown_2' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, CallFunc_IsValid_ReturnValue_1) == 0x000006, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, CallFunc_IsValid_ReturnValue_2) == 0x000007, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, K2Node_Event_KeyDown_1) == 0x000008, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::K2Node_Event_KeyDown_1' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan, K2Node_Event_KeyDown) == 0x000009, "Member 'BP_BuildingPlan_C_ExecuteUbergraph_BP_BuildingPlan::K2Node_Event_KeyDown' has a wrong offset!");

// Function BP_BuildingPlan.BP_BuildingPlan_C.SGK ClientPrimaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_BuildingPlan_C_SGK_ClientPrimaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong alignment on BP_BuildingPlan_C_SGK_ClientPrimaryAction");
static_assert(sizeof(BP_BuildingPlan_C_SGK_ClientPrimaryAction) == 0x000001, "Wrong size on BP_BuildingPlan_C_SGK_ClientPrimaryAction");
static_assert(offsetof(BP_BuildingPlan_C_SGK_ClientPrimaryAction, KeyDown) == 0x000000, "Member 'BP_BuildingPlan_C_SGK_ClientPrimaryAction::KeyDown' has a wrong offset!");

// Function BP_BuildingPlan.BP_BuildingPlan_C.SGK ClientSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_BuildingPlan_C_SGK_ClientSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong alignment on BP_BuildingPlan_C_SGK_ClientSecondaryAction");
static_assert(sizeof(BP_BuildingPlan_C_SGK_ClientSecondaryAction) == 0x000001, "Wrong size on BP_BuildingPlan_C_SGK_ClientSecondaryAction");
static_assert(offsetof(BP_BuildingPlan_C_SGK_ClientSecondaryAction, KeyDown) == 0x000000, "Member 'BP_BuildingPlan_C_SGK_ClientSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_BuildingPlan.BP_BuildingPlan_C.SGK HoldableMesh
// 0x0010 (0x0010 - 0x0000)
struct BP_BuildingPlan_C_SGK_HoldableMesh final
{
public:
	class UPrimitiveComponent*                    Mesh;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_SGK_HoldableMesh_Mesh;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_SGK_HoldableMesh) == 0x000008, "Wrong alignment on BP_BuildingPlan_C_SGK_HoldableMesh");
static_assert(sizeof(BP_BuildingPlan_C_SGK_HoldableMesh) == 0x000010, "Wrong size on BP_BuildingPlan_C_SGK_HoldableMesh");
static_assert(offsetof(BP_BuildingPlan_C_SGK_HoldableMesh, Mesh) == 0x000000, "Member 'BP_BuildingPlan_C_SGK_HoldableMesh::Mesh' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_SGK_HoldableMesh, CallFunc_SGK_HoldableMesh_Mesh) == 0x000008, "Member 'BP_BuildingPlan_C_SGK_HoldableMesh::CallFunc_SGK_HoldableMesh_Mesh' has a wrong offset!");

// Function BP_BuildingPlan.BP_BuildingPlan_C.SGK ServerSecondaryAction
// 0x0001 (0x0001 - 0x0000)
struct BP_BuildingPlan_C_SGK_ServerSecondaryAction final
{
public:
	bool                                          KeyDown;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong alignment on BP_BuildingPlan_C_SGK_ServerSecondaryAction");
static_assert(sizeof(BP_BuildingPlan_C_SGK_ServerSecondaryAction) == 0x000001, "Wrong size on BP_BuildingPlan_C_SGK_ServerSecondaryAction");
static_assert(offsetof(BP_BuildingPlan_C_SGK_ServerSecondaryAction, KeyDown) == 0x000000, "Member 'BP_BuildingPlan_C_SGK_ServerSecondaryAction::KeyDown' has a wrong offset!");

// Function BP_BuildingPlan.BP_BuildingPlan_C.ToggleBuildMenu
// 0x0030 (0x0030 - 0x0000)
struct BP_BuildingPlan_C_ToggleBuildMenu final
{
public:
	bool                                          Open;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4572[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerBuildingComponent_C*          PlayerBuildingComponentL;                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4573[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerBuildingComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BuildingPlan_C_ToggleBuildMenu) == 0x000008, "Wrong alignment on BP_BuildingPlan_C_ToggleBuildMenu");
static_assert(sizeof(BP_BuildingPlan_C_ToggleBuildMenu) == 0x000030, "Wrong size on BP_BuildingPlan_C_ToggleBuildMenu");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, Open) == 0x000000, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::Open' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, PlayerBuildingComponentL) == 0x000008, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::PlayerBuildingComponentL' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_GetController_ReturnValue) == 0x000018, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_GetComponentByClass_ReturnValue) == 0x000020, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_IsValid_ReturnValue_2) == 0x000028, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BuildingPlan_C_ToggleBuildMenu, CallFunc_IsValid_ReturnValue_3) == 0x000029, "Member 'BP_BuildingPlan_C_ToggleBuildMenu::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

}

