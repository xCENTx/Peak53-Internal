#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ResolutionSetting

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.ChangeSettingValue
// 0x0010 (0x0010 - 0x0000)
struct BP_ResolutionSetting_C_ChangeSettingValue final
{
public:
	class UGameUserSettings*                      CallFunc_GetGameUserSettings_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_ChangeSettingValue) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_ChangeSettingValue");
static_assert(sizeof(BP_ResolutionSetting_C_ChangeSettingValue) == 0x000010, "Wrong size on BP_ResolutionSetting_C_ChangeSettingValue");
static_assert(offsetof(BP_ResolutionSetting_C_ChangeSettingValue, CallFunc_GetGameUserSettings_ReturnValue) == 0x000000, "Member 'BP_ResolutionSetting_C_ChangeSettingValue::CallFunc_GetGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ChangeSettingValue, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_ResolutionSetting_C_ChangeSettingValue::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.CurrentSelection
// 0x0010 (0x0010 - 0x0000)
struct BP_ResolutionSetting_C_CurrentSelection final
{
public:
	struct FIntPoint                              Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_CurrentSelection) == 0x000004, "Wrong alignment on BP_ResolutionSetting_C_CurrentSelection");
static_assert(sizeof(BP_ResolutionSetting_C_CurrentSelection) == 0x000010, "Wrong size on BP_ResolutionSetting_C_CurrentSelection");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSelection, Output) == 0x000000, "Member 'BP_ResolutionSetting_C_CurrentSelection::Output' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSelection, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_ResolutionSetting_C_CurrentSelection::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.CurrentSettingValue
// 0x0040 (0x0040 - 0x0000)
struct BP_ResolutionSetting_C_CurrentSettingValue final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A80[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_CurrentSettingValue) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_CurrentSettingValue");
static_assert(sizeof(BP_ResolutionSetting_C_CurrentSettingValue) == 0x000040, "Wrong size on BP_ResolutionSetting_C_CurrentSettingValue");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, Param_Index) == 0x000000, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_GetViewportSize_ReturnValue) == 0x000008, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_BreakVector2D_X) == 0x000018, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_Round_ReturnValue) == 0x000028, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_Round_ReturnValue_1) == 0x00002C, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, K2Node_MakeStruct_IntPoint) == 0x000030, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_CurrentSettingValue, CallFunc_Array_Find_ReturnValue) == 0x000038, "Member 'BP_ResolutionSetting_C_CurrentSettingValue::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.ExecuteUbergraph_BP_ResolutionSetting
// 0x00E0 (0x00E0 - 0x0000)
struct BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Value)>                  K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_CurrentSelection_Output;                  // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A81[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Value;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A82[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_3;           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00C8(0x0018)()
};
static_assert(alignof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting");
static_assert(sizeof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting) == 0x0000E0, "Wrong size on BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, EntryPoint) == 0x000000, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_CurrentSelection_Output) == 0x000014, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_CurrentSelection_Output' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_IntToString_ReturnValue) == 0x000020, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000030, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Subtract_IntInt_ReturnValue) == 0x00007C, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, K2Node_CustomEvent_Value) == 0x000080, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::K2Node_CustomEvent_Value' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_IntToString_ReturnValue_2) == 0x000088, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_IntToString_ReturnValue_3) == 0x000098, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_IntToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B8, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000C8, "Member 'BP_ResolutionSetting_C_ExecuteUbergraph_BP_ResolutionSetting::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.NextOption
// 0x0070 (0x0070 - 0x0000)
struct BP_ResolutionSetting_C_NextOption final
{
public:
	struct FIntPoint                              CallFunc_CurrentSelection_Output;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A83[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_NextOption) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_NextOption");
static_assert(sizeof(BP_ResolutionSetting_C_NextOption) == 0x000070, "Wrong size on BP_ResolutionSetting_C_NextOption");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_CurrentSelection_Output) == 0x000000, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_CurrentSelection_Output' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000018, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000040, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_NextOption, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00006C, "Member 'BP_ResolutionSetting_C_NextOption::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.PopulateResArray
// 0x00D8 (0x00D8 - 0x0000)
struct BP_ResolutionSetting_C_PopulateResArray final
{
public:
	bool                                          CurrentAddedL;                                     // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A84[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              ResL;                                              // 0x0004(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A85[0x5];                                     // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_1;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue_2;            // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      CallFunc_GetSupportedFullscreenResolutions_Resolutions; // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetSupportedFullscreenResolutions_ReturnValue; // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A86[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_4;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A87[0x3];                                     // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_5;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_PopulateResArray) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_PopulateResArray");
static_assert(sizeof(BP_ResolutionSetting_C_PopulateResArray) == 0x0000D8, "Wrong size on BP_ResolutionSetting_C_PopulateResArray");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CurrentAddedL) == 0x000000, "Member 'BP_ResolutionSetting_C_PopulateResArray::CurrentAddedL' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, ResL) == 0x000004, "Member 'BP_ResolutionSetting_C_PopulateResArray::ResL' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_ResolutionSetting_C_PopulateResArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_ResolutionSetting_C_PopulateResArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_GetViewportSize_ReturnValue) == 0x000018, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_X) == 0x000028, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue_1) == 0x00003C, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000040, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000041, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_GetViewportSize_ReturnValue_1) == 0x000048, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_GetViewportSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_X_1) == 0x000058, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_Y_1) == 0x000060, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue_2) == 0x000068, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue_3) == 0x00006C, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, K2Node_MakeStruct_IntPoint) == 0x000070, "Member 'BP_ResolutionSetting_C_PopulateResArray::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Array_Add_ReturnValue_1) == 0x00007C, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_GetViewportSize_ReturnValue_2) == 0x000080, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_GetViewportSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_GetSupportedFullscreenResolutions_Resolutions) == 0x000090, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_GetSupportedFullscreenResolutions_Resolutions' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_GetSupportedFullscreenResolutions_ReturnValue) == 0x0000A0, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_GetSupportedFullscreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_X_2) == 0x0000A8, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BreakVector2D_Y_2) == 0x0000B0, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue_4) == 0x0000C0, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Less_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_FTrunc_ReturnValue_5) == 0x0000C8, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_FTrunc_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000D1, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PopulateResArray, CallFunc_BooleanOR_ReturnValue) == 0x0000D2, "Member 'BP_ResolutionSetting_C_PopulateResArray::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.PreviousOption
// 0x0080 (0x0080 - 0x0000)
struct BP_ResolutionSetting_C_PreviousOption final
{
public:
	struct FIntPoint                              CallFunc_CurrentSelection_Output;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A88[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A89[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_PreviousOption) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_PreviousOption");
static_assert(sizeof(BP_ResolutionSetting_C_PreviousOption) == 0x000080, "Wrong size on BP_ResolutionSetting_C_PreviousOption");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_CurrentSelection_Output) == 0x000000, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_CurrentSelection_Output' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000070, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000074, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_PreviousOption, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000078, "Member 'BP_ResolutionSetting_C_PreviousOption::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.ResetSelection
// 0x0070 (0x0070 - 0x0000)
struct BP_ResolutionSetting_C_ResetSelection final
{
public:
	struct FIntPoint                              CallFunc_CurrentSelection_Output;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CurrentSettingValue_Index;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8A[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A8B[0x7];                                     // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0058(0x0018)()
};
static_assert(alignof(BP_ResolutionSetting_C_ResetSelection) == 0x000008, "Wrong alignment on BP_ResolutionSetting_C_ResetSelection");
static_assert(sizeof(BP_ResolutionSetting_C_ResetSelection) == 0x000070, "Wrong size on BP_ResolutionSetting_C_ResetSelection");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_CurrentSelection_Output) == 0x000000, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_CurrentSelection_Output' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_CurrentSettingValue_Index) == 0x000008, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_CurrentSettingValue_Index' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_Conv_IntToString_ReturnValue) == 0x000010, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000028, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ResolutionSetting_C_ResetSelection, CallFunc_Conv_StringToText_ReturnValue) == 0x000058, "Member 'BP_ResolutionSetting_C_ResetSelection::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function BP_ResolutionSetting.BP_ResolutionSetting_C.WindowModeChanged
// 0x0004 (0x0004 - 0x0000)
struct BP_ResolutionSetting_C_WindowModeChanged final
{
public:
	int32                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ResolutionSetting_C_WindowModeChanged) == 0x000004, "Wrong alignment on BP_ResolutionSetting_C_WindowModeChanged");
static_assert(sizeof(BP_ResolutionSetting_C_WindowModeChanged) == 0x000004, "Wrong size on BP_ResolutionSetting_C_WindowModeChanged");
static_assert(offsetof(BP_ResolutionSetting_C_WindowModeChanged, Value) == 0x000000, "Member 'BP_ResolutionSetting_C_WindowModeChanged::Value' has a wrong offset!");

}

