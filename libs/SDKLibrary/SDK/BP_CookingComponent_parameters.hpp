#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CookingComponent

#include "Basic.hpp"

#include "S_InvSaveSlot_structs.hpp"
#include "S_ItemDetails_structs.hpp"
#include "S_InvSlot_structs.hpp"
#include "S_LevelSaveData_structs.hpp"
#include "S_CraftingCost_structs.hpp"
#include "S_InvItem_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "S_CookingSave_structs.hpp"
#include "S_StorageSave_structs.hpp"
#include "Engine_structs.hpp"
#include "S_OtherInvSaves_structs.hpp"
#include "S_CookingRecipe_structs.hpp"
#include "S_CookingSlot_structs.hpp"


namespace SDK::Params
{

// Function BP_CookingComponent.BP_CookingComponent_C.Add Burnt Fuel Item
// 0x1D70 (0x1D70 - 0x0000)
struct BP_CookingComponent_C_Add_Burnt_Fuel_Item final
{
public:
	struct FS_CraftingCost                        BurnReturnItemL;                                   // 0x0000(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             NewItemL;                                          // 0x0018(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             InventorySlotL;                                    // 0x0048(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_FreeSlotCheck_ReturnValue;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C7[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FreeSlotCheck_InvSlot;                    // 0x00A0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C8[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0118(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54C9[0x3];                                     // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CA[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0160(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0208(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CB[0xF];                                     // 0x0251(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0260(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0AF0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0B20(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0B80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0B88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0B98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CC[0x7];                                     // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0BB0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0BC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DropItem_ReturnValue;                 // 0x0BC1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CD[0x6];                                     // 0x0BC2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0BC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x0BD0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CE[0xF];                                     // 0x0C01(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x0C10(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x14A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_2;              // 0x14D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54CF[0xF];                                     // 0x14D1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_2;            // 0x14E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_Add_Burnt_Fuel_Item) == 0x000010, "Wrong alignment on BP_CookingComponent_C_Add_Burnt_Fuel_Item");
static_assert(sizeof(BP_CookingComponent_C_Add_Burnt_Fuel_Item) == 0x001D70, "Wrong size on BP_CookingComponent_C_Add_Burnt_Fuel_Item");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, BurnReturnItemL) == 0x000000, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::BurnReturnItemL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, NewItemL) == 0x000018, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, InventorySlotL) == 0x000048, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::InventorySlotL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_FreeSlotCheck_ReturnValue) == 0x000098, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_FreeSlotCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_FreeSlotCheck_InvSlot) == 0x0000A0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_FreeSlotCheck_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_GetGameMode_ReturnValue) == 0x0000F0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0000F8, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000110, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_CreateNewItem_NewItem) == 0x000118, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x00014C, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_InvSlotAmount_Amount) == 0x000150, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_GetOwner_ReturnValue) == 0x000158, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_GetTransform_ReturnValue) == 0x000160, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_BreakTransform_Rotation) == 0x0001D8, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_BreakTransform_Scale) == 0x0001F0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_MakeStruct_S_InvItem) == 0x000208, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_GetForwardVector_ReturnValue) == 0x000238, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemFound) == 0x000250, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000260, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000AF0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_Add_VectorVector_ReturnValue) == 0x000B08, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_MakeTransform_ReturnValue) == 0x000B20, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000B80, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_FinishSpawningActor_ReturnValue) == 0x000B88, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_GetGameMode_ReturnValue_1) == 0x000B90, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000B98, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_bSuccess_1) == 0x000BA8, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000BB0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_DynamicCast_bSuccess_2) == 0x000BC0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_DropItem_ReturnValue) == 0x000BC1, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_DropItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000BC8, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_CreateNewItem_NewItem_1) == 0x000BD0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x000C00, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x000C10, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, K2Node_MakeStruct_S_InvItem_1) == 0x0014A0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemFound_2) == 0x0014D0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemFound_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_Add_Burnt_Fuel_Item, CallFunc_SGK_ItemDetails_ItemDetails_2) == 0x0014E0, "Member 'BP_CookingComponent_C_Add_Burnt_Fuel_Item::CallFunc_SGK_ItemDetails_ItemDetails_2' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.AddReturnedItems
// 0x0D00 (0x0D00 - 0x0000)
struct BP_CookingComponent_C_AddReturnedItems final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D0[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             NewItemL;                                          // 0x0018(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             InventorySlotL;                                    // 0x0048(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingCost                        ArrayElementL;                                     // 0x0098(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FreeSlotCheck_ReturnValue;                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D1[0x7];                                     // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_FreeSlotCheck_InvSlot;                    // 0x00B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0108(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D2[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x0148(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D3[0x4];                                     // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CraftingCost                        CallFunc_Array_Get_Item;                           // 0x01C8(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D4[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D5[0x7];                                     // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1;  // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D6[0x7];                                     // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory_1; // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0238(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D7[0x3];                                     // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D8[0x4];                                     // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem_1;                  // 0x0278(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x02A8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54D9[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x02E0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0B70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DA[0x8];                                     // 0x0B78(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0B80(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0BF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0C10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0C58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0C70(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0CD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0CD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x0CE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0CF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_DropItem_ReturnValue;                 // 0x0CF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_AddReturnedItems) == 0x000010, "Wrong alignment on BP_CookingComponent_C_AddReturnedItems");
static_assert(sizeof(BP_CookingComponent_C_AddReturnedItems) == 0x000D00, "Wrong size on BP_CookingComponent_C_AddReturnedItems");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CookingSlot) == 0x000000, "Member 'BP_CookingComponent_C_AddReturnedItems::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, NewItemL) == 0x000018, "Member 'BP_CookingComponent_C_AddReturnedItems::NewItemL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, InventorySlotL) == 0x000048, "Member 'BP_CookingComponent_C_AddReturnedItems::InventorySlotL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, ArrayElementL) == 0x000098, "Member 'BP_CookingComponent_C_AddReturnedItems::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_FreeSlotCheck_ReturnValue) == 0x0000B0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_FreeSlotCheck_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_FreeSlotCheck_InvSlot) == 0x0000B8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_FreeSlotCheck_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_MakeStruct_S_InvItem) == 0x000108, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, Temp_int_Array_Index_Variable) == 0x000138, "Member 'BP_CookingComponent_C_AddReturnedItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_CookingComponent_C_AddReturnedItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x000140, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x000148, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Add_IntInt_ReturnValue) == 0x0001C0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Array_Get_Item) == 0x0001C8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Array_Length_ReturnValue) == 0x0001E0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Less_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_GetGameMode_ReturnValue) == 0x0001E8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0001F0, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_bSuccess) == 0x000200, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_GetGameMode_ReturnValue_1) == 0x000208, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000210, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1) == 0x000218, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_GetGlobalInventory_GlobalInventory_1) == 0x000230, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_GetGlobalInventory_GlobalInventory_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_CreateNewItem_NewItem) == 0x000238, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x000268, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x00026C, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_InvSlotAmount_Amount) == 0x000270, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_CreateNewItem_NewItem_1) == 0x000278, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_CreateNewItem_NewItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_MakeStruct_S_InvItem_1) == 0x0002A8, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_ItemDetails_ItemFound) == 0x0002D8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0002E0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_GetOwner_ReturnValue) == 0x000B70, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_GetTransform_ReturnValue) == 0x000B80, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_BreakTransform_Location) == 0x000BE0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_BreakTransform_Rotation) == 0x000BF8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_BreakTransform_Scale) == 0x000C10, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_GetForwardVector_ReturnValue) == 0x000C28, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000C40, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_Add_VectorVector_ReturnValue) == 0x000C58, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_MakeTransform_ReturnValue) == 0x000C70, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000CD0, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_FinishSpawningActor_ReturnValue) == 0x000CD8, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x000CE0, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, K2Node_DynamicCast_bSuccess_2) == 0x000CF0, "Member 'BP_CookingComponent_C_AddReturnedItems::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddReturnedItems, CallFunc_SGK_DropItem_ReturnValue) == 0x000CF1, "Member 'BP_CookingComponent_C_AddReturnedItems::CallFunc_SGK_DropItem_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.AddStartingFuelItems
// 0x0A50 (0x0A50 - 0x0000)
struct BP_CookingComponent_C_AddStartingFuelItems final
{
public:
	struct FS_InvSlot                             SlotL;                                             // 0x0000(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CraftingCost                        StartingItemL;                                     // 0x0050(0x0018)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FuelSlotsL;                                        // 0x0068(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DB[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DC[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DD[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFuelItem_IsFuelItem;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesDataTableRowExist_ReturnValue;        // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DE[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54DF[0x4];                                     // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E0[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x00D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0120(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0155(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0156(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ItemLimitCheck_AllowAdd;                  // 0x0157(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_AddCount;                  // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_ItemLimitCheck_Remaining;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E1[0xF];                                     // 0x0161(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0170(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetFuelSlots_ReturnValue;                 // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E2[0x7];                                     // 0x0A01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetFuelSlots_FuelSlots;                   // 0x0A08(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SGK_RootSpaceCheck_SlotsBlocked;          // 0x0A18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E3[0x7];                                     // 0x0A19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_RootSpaceCheck_FoundSlots;            // 0x0A20(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_CraftingCost                        CallFunc_Array_Get_Item_1;                         // 0x0A30(0x0018)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0A4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_AddStartingFuelItems) == 0x000010, "Wrong alignment on BP_CookingComponent_C_AddStartingFuelItems");
static_assert(sizeof(BP_CookingComponent_C_AddStartingFuelItems) == 0x000A50, "Wrong size on BP_CookingComponent_C_AddStartingFuelItems");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, SlotL) == 0x000000, "Member 'BP_CookingComponent_C_AddStartingFuelItems::SlotL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, StartingItemL) == 0x000050, "Member 'BP_CookingComponent_C_AddStartingFuelItems::StartingItemL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, FuelSlotsL) == 0x000068, "Member 'BP_CookingComponent_C_AddStartingFuelItems::FuelSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'BP_CookingComponent_C_AddStartingFuelItems::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_CookingComponent_C_AddStartingFuelItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Not_PreBool_ReturnValue) == 0x000081, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'BP_CookingComponent_C_AddStartingFuelItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, Temp_int_Array_Index_Variable_1) == 0x00008C, "Member 'BP_CookingComponent_C_AddStartingFuelItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000090, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_InvSlotAmount_Amount) == 0x000094, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_IsFuelItem_IsFuelItem) == 0x000098, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_IsFuelItem_IsFuelItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_DoesDataTableRowExist_ReturnValue) == 0x000099, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_DoesDataTableRowExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, Temp_int_Loop_Counter_Variable_1) == 0x00009C, "Member 'BP_CookingComponent_C_AddStartingFuelItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A0, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_GetGameMode_ReturnValue) == 0x0000A8, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x0000B0, "Member 'BP_CookingComponent_C_AddStartingFuelItems::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'BP_CookingComponent_C_AddStartingFuelItems::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x0000C8, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Array_Get_Item) == 0x0000D0, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_CreateNewItem_NewItem) == 0x000120, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Less_IntInt_ReturnValue) == 0x000154, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_BooleanAND_ReturnValue) == 0x000155, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000156, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_ItemLimitCheck_AllowAdd) == 0x000157, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_ItemLimitCheck_AllowAdd' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_ItemLimitCheck_AddCount) == 0x000158, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_ItemLimitCheck_AddCount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_ItemLimitCheck_Remaining) == 0x00015C, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_ItemLimitCheck_Remaining' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_ItemDetails_ItemFound) == 0x000160, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000170, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_GetFuelSlots_ReturnValue) == 0x000A00, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_GetFuelSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_GetFuelSlots_FuelSlots) == 0x000A08, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_GetFuelSlots_FuelSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_RootSpaceCheck_SlotsBlocked) == 0x000A18, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_RootSpaceCheck_SlotsBlocked' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_SGK_RootSpaceCheck_FoundSlots) == 0x000A20, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_SGK_RootSpaceCheck_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Array_Get_Item_1) == 0x000A30, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Array_Length_ReturnValue_1) == 0x000A48, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingFuelItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x000A4C, "Member 'BP_CookingComponent_C_AddStartingFuelItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.AddStartingItems
// 0x0002 (0x0002 - 0x0000)
struct BP_CookingComponent_C_AddStartingItems final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddStartingItems_Return;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_AddStartingItems) == 0x000001, "Wrong alignment on BP_CookingComponent_C_AddStartingItems");
static_assert(sizeof(BP_CookingComponent_C_AddStartingItems) == 0x000002, "Wrong size on BP_CookingComponent_C_AddStartingItems");
static_assert(offsetof(BP_CookingComponent_C_AddStartingItems, Return) == 0x000000, "Member 'BP_CookingComponent_C_AddStartingItems::Return' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_AddStartingItems, CallFunc_AddStartingItems_Return) == 0x000001, "Member 'BP_CookingComponent_C_AddStartingItems::CallFunc_AddStartingItems_Return' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.BurnFuel
// 0x09C0 (0x09C0 - 0x0000)
struct BP_CookingComponent_C_BurnFuel final
{
public:
	bool                                          ReturnValueL;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E4[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0008(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E5[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0068(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E6[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x00A0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0931(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0932(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E7[0x1];                                     // 0x0933(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid_1;            // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E8[0x3];                                     // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount_1;               // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFuelSlots_ReturnValue;                 // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54E9[0x6];                                     // 0x094A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetFuelSlots_FuelSlots;                   // 0x0950(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0960(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x09B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x09B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_BurnFuel) == 0x000010, "Wrong alignment on BP_CookingComponent_C_BurnFuel");
static_assert(sizeof(BP_CookingComponent_C_BurnFuel) == 0x0009C0, "Wrong size on BP_CookingComponent_C_BurnFuel");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, ReturnValueL) == 0x000000, "Member 'BP_CookingComponent_C_BurnFuel::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, ArrayElementL) == 0x000008, "Member 'BP_CookingComponent_C_BurnFuel::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, Temp_int_Array_Index_Variable) == 0x000058, "Member 'BP_CookingComponent_C_BurnFuel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, Temp_int_Loop_Counter_Variable) == 0x00005C, "Member 'BP_CookingComponent_C_BurnFuel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_InvSlotItem_InvItem) == 0x000068, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_ItemDetails_ItemFound) == 0x000098, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_ItemDetails_ItemDetails) == 0x0000A0, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, Temp_bool_True_if_break_was_hit_Variable) == 0x000930, "Member 'BP_CookingComponent_C_BurnFuel::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Not_PreBool_ReturnValue) == 0x000931, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000932, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_InvSlotAmount_Amount) == 0x000934, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_InvSlotAmount_ItemValid_1) == 0x000938, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_InvSlotAmount_ItemValid_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_SGK_InvSlotAmount_Amount_1) == 0x00093C, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_SGK_InvSlotAmount_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000940, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000944, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Greater_IntInt_ReturnValue) == 0x000948, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_GetFuelSlots_ReturnValue) == 0x000949, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_GetFuelSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_GetFuelSlots_FuelSlots) == 0x000950, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_GetFuelSlots_FuelSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Array_Get_Item) == 0x000960, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Array_Length_ReturnValue) == 0x0009B0, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_Less_IntInt_ReturnValue) == 0x0009B4, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_BurnFuel, CallFunc_BooleanAND_ReturnValue) == 0x0009B5, "Member 'BP_CookingComponent_C_BurnFuel::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ClearCookingItem
// 0x0090 (0x0090 - 0x0000)
struct BP_CookingComponent_C_ClearCookingItem final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0050(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         CallFunc_Array_Get_Item;                           // 0x0064(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot;                   // 0x0078(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ClearCookingItem) == 0x000008, "Wrong alignment on BP_CookingComponent_C_ClearCookingItem");
static_assert(sizeof(BP_CookingComponent_C_ClearCookingItem) == 0x000090, "Wrong size on BP_CookingComponent_C_ClearCookingItem");
static_assert(offsetof(BP_CookingComponent_C_ClearCookingItem, InvSlot) == 0x000000, "Member 'BP_CookingComponent_C_ClearCookingItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ClearCookingItem, CookingSlot) == 0x000050, "Member 'BP_CookingComponent_C_ClearCookingItem::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ClearCookingItem, CallFunc_Array_Get_Item) == 0x000064, "Member 'BP_CookingComponent_C_ClearCookingItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ClearCookingItem, K2Node_MakeStruct_S_CookingSlot) == 0x000078, "Member 'BP_CookingComponent_C_ClearCookingItem::K2Node_MakeStruct_S_CookingSlot' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ConstructContainsSlots
// 0x02E8 (0x02E8 - 0x0000)
struct BP_CookingComponent_C_ConstructContainsSlots final
{
public:
	int32                                         ExtraSlotsL;                                       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexL;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Bop;                                               // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54EA[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x0010(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0050(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54EB[0x3];                                     // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54EC[0x4];                                     // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x0090(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54ED[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54EE[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54EF[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot;                       // 0x0108(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_3;                     // 0x0158(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F0[0x3];                                     // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_1;                     // 0x0198(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F1[0x4];                                     // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_2;                     // 0x01F0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Remainder;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FMod_ReturnValue;                         // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F2[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_8;            // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_9;            // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvSlot                             K2Node_MakeStruct_S_InvSlot_3;                     // 0x0278(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_10;           // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F3[0x7];                                     // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMod_Divisor_ImplicitCast;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMod_Dividend_ImplicitCast;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ConstructContainsSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_ConstructContainsSlots");
static_assert(sizeof(BP_CookingComponent_C_ConstructContainsSlots) == 0x0002E8, "Wrong size on BP_CookingComponent_C_ConstructContainsSlots");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, ExtraSlotsL) == 0x000000, "Member 'BP_CookingComponent_C_ConstructContainsSlots::ExtraSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, IndexL) == 0x000004, "Member 'BP_CookingComponent_C_ConstructContainsSlots::IndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Bop) == 0x000008, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Bop' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvItem) == 0x000010, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable) == 0x000040, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_1) == 0x000044, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000048, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvItem_1) == 0x000050, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_2) == 0x000080, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000084, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvItem_2) == 0x000090, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_3) == 0x0000C0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000C4, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_4) == 0x0000C8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000CC, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_bool_Variable) == 0x0000D0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Array_Length_ReturnValue) == 0x0000D4, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000DC, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000E0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000E4, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000E8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000EC, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_5) == 0x0000F0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000F4, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000F8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_7) == 0x0000FC, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000100, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvSlot) == 0x000108, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvItem_3) == 0x000158, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_8) == 0x000188, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x00018C, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000190, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_9) == 0x000194, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvSlot_1) == 0x000198, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvSlot_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, Temp_int_Variable_6) == 0x0001E8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvSlot_2) == 0x0001F0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvSlot_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_10) == 0x000240, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000244, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_11) == 0x000248, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00024C, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_FMod_Remainder) == 0x000250, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_FMod_Remainder' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_FMod_ReturnValue) == 0x000258, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_FMod_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_FTrunc_ReturnValue) == 0x00025C, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000260, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x000264, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000268, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_8) == 0x00026C, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_9) == 0x000270, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Add_IntInt_ReturnValue_12) == 0x000274, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_MakeStruct_S_InvSlot_3) == 0x000278, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_MakeStruct_S_InvSlot_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_Subtract_IntInt_ReturnValue_10) == 0x0002C8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_Subtract_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, K2Node_Select_Default) == 0x0002CC, "Member 'BP_CookingComponent_C_ConstructContainsSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x0002D0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_FMod_Divisor_ImplicitCast) == 0x0002D8, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_FMod_Divisor_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructContainsSlots, CallFunc_FMod_Dividend_ImplicitCast) == 0x0002E0, "Member 'BP_CookingComponent_C_ConstructContainsSlots::CallFunc_FMod_Dividend_ImplicitCast' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ConstructCookingSlots
// 0x0030 (0x0030 - 0x0000)
struct BP_CookingComponent_C_ConstructCookingSlots final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot;                   // 0x0004(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F4[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ConstructCookingSlots) == 0x000004, "Wrong alignment on BP_CookingComponent_C_ConstructCookingSlots");
static_assert(sizeof(BP_CookingComponent_C_ConstructCookingSlots) == 0x000030, "Wrong size on BP_CookingComponent_C_ConstructCookingSlots");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, Temp_int_Variable) == 0x000000, "Member 'BP_CookingComponent_C_ConstructCookingSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, K2Node_MakeStruct_S_CookingSlot) == 0x000004, "Member 'BP_CookingComponent_C_ConstructCookingSlots::K2Node_MakeStruct_S_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ConstructCookingSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_CookingComponent_C_ConstructCookingSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ExecuteUbergraph_BP_CookingComponent
// 0x01C0 (0x01C0 - 0x0000)
struct BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F5[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F6[0x7];                                     // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SGKSaveGame_C*                      K2Node_Event_SaveGame;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F7[0x8];                                     // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StorageSave                         K2Node_Event_S_StorageSave;                        // 0x0040(0x0090)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F8[0x4];                                     // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Time;                           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface;  // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54F9[0x7];                                     // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FA[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_3;                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKInteractionInterface_C> K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateFuelBurn_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FB[0x1];                                     // 0x0143(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FC[0x4];                                     // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             K2Node_Event_InvSlot;                              // 0x0150(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCookingSlot_IsCookingSlot;              // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FD[0x2];                                     // 0x01AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent) == 0x000010, "Wrong alignment on BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent");
static_assert(sizeof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent) == 0x0001C0, "Wrong size on BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, EntryPoint) == 0x000000, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_GetOwner_ReturnValue) == 0x000020, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_HasAuthority_ReturnValue) == 0x000028, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_Event_SaveGame) == 0x000030, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_Event_SaveGame' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_Event_S_StorageSave) == 0x000040, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_Event_S_StorageSave' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, Temp_int_Array_Index_Variable) == 0x0000D0, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_CustomEvent_Time) == 0x0000D8, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_K2_SetTimer_ReturnValue) == 0x0000E0, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_GetOwner_ReturnValue_1) == 0x0000E8, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_GetOwner_ReturnValue_2) == 0x0000F0, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_AsBP_SGKInteraction_Interface) == 0x0000F8, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_AsBP_SGKInteraction_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1) == 0x000110, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_bSuccess_1) == 0x000120, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_GetOwner_ReturnValue_3) == 0x000128, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_GetOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2) == 0x000130, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_AsBP_SGKInteraction_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_UpdateFuelBurn_ReturnValue) == 0x000141, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_UpdateFuelBurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000142, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000148, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, K2Node_Event_InvSlot) == 0x000150, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::K2Node_Event_InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_Less_IntInt_ReturnValue) == 0x0001AC, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_IsCookingSlot_IsCookingSlot) == 0x0001AD, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_IsCookingSlot_IsCookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0001B0, "Member 'BP_CookingComponent_C_ExecuteUbergraph_BP_CookingComponent::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.FreeSlotCheck
// 0x12D0 (0x12D0 - 0x0000)
struct BP_CookingComponent_C_FreeSlotCheck final
{
public:
	struct FS_CraftingCost                        Item;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FE[0x7];                                     // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             InvSlot;                                           // 0x0020(0x0050)(Parm, OutParm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54FF[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0078(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_IsRootSlot_IsRootSlot;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5500[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_IsRootSlot_RootIndex;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5501[0x3];                                     // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5502[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x00E8(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_WeightCheck_ExceedsMaxWeight;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound;                // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5503[0x6];                                     // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails;              // 0x0120(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemDetails_ItemFound_1;              // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5504[0xF];                                     // 0x09B1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_ItemDetails                         CallFunc_SGK_ItemDetails_ItemDetails_1;            // 0x09C0(0x0890)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x1250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x1254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContentsSlots_ReturnValue;             // 0x1255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5505[0x2];                                     // 0x1256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetContentsSlots_ContentsSlots;           // 0x1258(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x1268(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x12B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5506[0x3];                                     // 0x12B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x12BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x12C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_FreeSlotCheck) == 0x000010, "Wrong alignment on BP_CookingComponent_C_FreeSlotCheck");
static_assert(sizeof(BP_CookingComponent_C_FreeSlotCheck) == 0x0012D0, "Wrong size on BP_CookingComponent_C_FreeSlotCheck");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, Item) == 0x000000, "Member 'BP_CookingComponent_C_FreeSlotCheck::Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_FreeSlotCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, InvSlot) == 0x000020, "Member 'BP_CookingComponent_C_FreeSlotCheck::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, ReturnValueL) == 0x000070, "Member 'BP_CookingComponent_C_FreeSlotCheck::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, ArrayElementL) == 0x000078, "Member 'BP_CookingComponent_C_FreeSlotCheck::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'BP_CookingComponent_C_FreeSlotCheck::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_IsRootSlot_IsRootSlot) == 0x0000CC, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_IsRootSlot_IsRootSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_IsRootSlot_RootIndex) == 0x0000D0, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_IsRootSlot_RootIndex' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x0000D4, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_InvSlotAmount_Amount) == 0x0000D8, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, Temp_int_Loop_Counter_Variable) == 0x0000DC, "Member 'BP_CookingComponent_C_FreeSlotCheck::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_Add_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, K2Node_MakeStruct_S_InvItem) == 0x0000E8, "Member 'BP_CookingComponent_C_FreeSlotCheck::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_WeightCheck_ExceedsMaxWeight) == 0x000118, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_WeightCheck_ExceedsMaxWeight' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_ItemDetails_ItemFound) == 0x000119, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_ItemDetails_ItemFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_ItemDetails_ItemDetails) == 0x000120, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_ItemDetails_ItemDetails' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_ItemDetails_ItemFound_1) == 0x0009B0, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_ItemDetails_ItemFound_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_SGK_ItemDetails_ItemDetails_1) == 0x0009C0, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_SGK_ItemDetails_ItemDetails_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_Add_IntInt_ReturnValue_1) == 0x001250, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_LessEqual_IntInt_ReturnValue) == 0x001254, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_GetContentsSlots_ReturnValue) == 0x001255, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_GetContentsSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_GetContentsSlots_ContentsSlots) == 0x001258, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_GetContentsSlots_ContentsSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_Array_Get_Item) == 0x001268, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0012B8, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_Array_Length_ReturnValue) == 0x0012BC, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_FreeSlotCheck, CallFunc_Less_IntInt_ReturnValue) == 0x0012C0, "Member 'BP_CookingComponent_C_FreeSlotCheck::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.GetContentsSlots
// 0x00C0 (0x00C0 - 0x0000)
struct BP_CookingComponent_C_GetContentsSlots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5507[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     ContentsSlots;                                     // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     ContentsSlotsL;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ArrayIndexL;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5508[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0030(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5509[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550A[0x3];                                     // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_GetContentsSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_GetContentsSlots");
static_assert(sizeof(BP_CookingComponent_C_GetContentsSlots) == 0x0000C0, "Wrong size on BP_CookingComponent_C_GetContentsSlots");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, ReturnValue) == 0x000000, "Member 'BP_CookingComponent_C_GetContentsSlots::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, ContentsSlots) == 0x000008, "Member 'BP_CookingComponent_C_GetContentsSlots::ContentsSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, ContentsSlotsL) == 0x000018, "Member 'BP_CookingComponent_C_GetContentsSlots::ContentsSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, ArrayIndexL) == 0x000028, "Member 'BP_CookingComponent_C_GetContentsSlots::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, ArrayElementL) == 0x000030, "Member 'BP_CookingComponent_C_GetContentsSlots::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, Temp_int_Variable) == 0x000080, "Member 'BP_CookingComponent_C_GetContentsSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x000088, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, Temp_bool_Variable) == 0x000090, "Member 'BP_CookingComponent_C_GetContentsSlots::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Array_Length_ReturnValue) == 0x000094, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000098, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Array_Add_ReturnValue) == 0x00009C, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000A0, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0000A4, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A8, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0000AC, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x0000B0, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, K2Node_Select_Default) == 0x0000B4, "Member 'BP_CookingComponent_C_GetContentsSlots::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetContentsSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'BP_CookingComponent_C_GetContentsSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.GetCookingInvSlots
// 0x0100 (0x0100 - 0x0000)
struct BP_CookingComponent_C_GetCookingInvSlots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550B[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     Param_CookingSlots;                                // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CookingSlotsL;                                     // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ArrayIndexL;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550C[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0030(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550D[0x3];                                     // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0090(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550E[0x3];                                     // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_GetCookingInvSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_GetCookingInvSlots");
static_assert(sizeof(BP_CookingComponent_C_GetCookingInvSlots) == 0x000100, "Wrong size on BP_CookingComponent_C_GetCookingInvSlots");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, ReturnValue) == 0x000000, "Member 'BP_CookingComponent_C_GetCookingInvSlots::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, Param_CookingSlots) == 0x000008, "Member 'BP_CookingComponent_C_GetCookingInvSlots::Param_CookingSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CookingSlotsL) == 0x000018, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CookingSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, ArrayIndexL) == 0x000028, "Member 'BP_CookingComponent_C_GetCookingInvSlots::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, ArrayElementL) == 0x000030, "Member 'BP_CookingComponent_C_GetCookingInvSlots::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, Temp_int_Variable) == 0x000080, "Member 'BP_CookingComponent_C_GetCookingInvSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000084, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x00008C, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Array_Get_Item) == 0x000090, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Array_Add_ReturnValue) == 0x0000E0, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000E4, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000E8, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000EC, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000F0, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0000F4, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000F8, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetCookingInvSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000FC, "Member 'BP_CookingComponent_C_GetCookingInvSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.GetFuelSlots
// 0x00D8 (0x00D8 - 0x0000)
struct BP_CookingComponent_C_GetFuelSlots final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_550F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     FuelSlots;                                         // 0x0008(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     FuelSlotsL;                                        // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         ArrayIndexL;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndexL;                                        // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndexL;                                       // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5510[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_7;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5511[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0080(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_GetFuelSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_GetFuelSlots");
static_assert(sizeof(BP_CookingComponent_C_GetFuelSlots) == 0x0000D8, "Wrong size on BP_CookingComponent_C_GetFuelSlots");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, ReturnValue) == 0x000000, "Member 'BP_CookingComponent_C_GetFuelSlots::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, FuelSlots) == 0x000008, "Member 'BP_CookingComponent_C_GetFuelSlots::FuelSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, FuelSlotsL) == 0x000018, "Member 'BP_CookingComponent_C_GetFuelSlots::FuelSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, ArrayIndexL) == 0x000028, "Member 'BP_CookingComponent_C_GetFuelSlots::ArrayIndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, LastIndexL) == 0x00002C, "Member 'BP_CookingComponent_C_GetFuelSlots::LastIndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, StartIndexL) == 0x000030, "Member 'BP_CookingComponent_C_GetFuelSlots::StartIndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, Temp_int_Variable) == 0x000034, "Member 'BP_CookingComponent_C_GetFuelSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x00003C, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000044, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00004C, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000050, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000058, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x00005C, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000064, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x000068, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Subtract_IntInt_ReturnValue_7) == 0x00006C, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Subtract_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Add_IntInt_ReturnValue_5) == 0x000074, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000078, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_GetFuelSlots, CallFunc_Array_Add_ReturnValue) == 0x0000D0, "Member 'BP_CookingComponent_C_GetFuelSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.IsCookingSlot
// 0x0018 (0x0018 - 0x0000)
struct BP_CookingComponent_C_IsCookingSlot final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsCookingSlot;                               // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5512[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_IsCookingSlot) == 0x000004, "Wrong alignment on BP_CookingComponent_C_IsCookingSlot");
static_assert(sizeof(BP_CookingComponent_C_IsCookingSlot) == 0x000018, "Wrong size on BP_CookingComponent_C_IsCookingSlot");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, Param_Index) == 0x000000, "Member 'BP_CookingComponent_C_IsCookingSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, Param_IsCookingSlot) == 0x000004, "Member 'BP_CookingComponent_C_IsCookingSlot::Param_IsCookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_CookingComponent_C_IsCookingSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CookingComponent_C_IsCookingSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_CookingComponent_C_IsCookingSlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsCookingSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000014, "Member 'BP_CookingComponent_C_IsCookingSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.IsFuelItem
// 0x0038 (0x0038 - 0x0000)
struct BP_CookingComponent_C_IsFuelItem final
{
public:
	class FName                                   ItemId;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Param_IsFuelItem;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5513[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5514[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDataTableRowHandle                    CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_IsFuelItem) == 0x000008, "Wrong alignment on BP_CookingComponent_C_IsFuelItem");
static_assert(sizeof(BP_CookingComponent_C_IsFuelItem) == 0x000038, "Wrong size on BP_CookingComponent_C_IsFuelItem");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, ItemId) == 0x000000, "Member 'BP_CookingComponent_C_IsFuelItem::ItemId' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, Param_IsFuelItem) == 0x000008, "Member 'BP_CookingComponent_C_IsFuelItem::Param_IsFuelItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'BP_CookingComponent_C_IsFuelItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_CookingComponent_C_IsFuelItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CookingComponent_C_IsFuelItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_IsFuelItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_CookingComponent_C_IsFuelItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CookingComponent_C_IsFuelItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsFuelItem, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000031, "Member 'BP_CookingComponent_C_IsFuelItem::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.IsIndexFuelSlot
// 0x0030 (0x0030 - 0x0000)
struct BP_CookingComponent_C_IsIndexFuelSlot final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFuelSlot;                                        // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5515[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotsL;                                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5516[0x1];                                     // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_IsIndexFuelSlot) == 0x000004, "Wrong alignment on BP_CookingComponent_C_IsIndexFuelSlot");
static_assert(sizeof(BP_CookingComponent_C_IsIndexFuelSlot) == 0x000030, "Wrong size on BP_CookingComponent_C_IsIndexFuelSlot");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, Param_Index) == 0x000000, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, IsFuelSlot) == 0x000004, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::IsFuelSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, SlotsL) == 0x000008, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::SlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000010, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x000014, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000019, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000024, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Add_IntInt_ReturnValue_3) == 0x000028, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_IsIndexFuelSlot, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x00002C, "Member 'BP_CookingComponent_C_IsIndexFuelSlot::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.LoadComponentData
// 0x0150 (0x0150 - 0x0000)
struct BP_CookingComponent_C_LoadComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          LoadComplete;                                      // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5517[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_5518[0x8];                                     // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindCookingSaveData_SaveFound;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5519[0xF];                                     // 0x0091(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSave                         CallFunc_FindCookingSaveData_Array_Element;        // 0x00A0(0x00B0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_LoadComponentData) == 0x000010, "Wrong alignment on BP_CookingComponent_C_LoadComponentData");
static_assert(sizeof(BP_CookingComponent_C_LoadComponentData) == 0x000150, "Wrong size on BP_CookingComponent_C_LoadComponentData");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, SaveGame) == 0x000000, "Member 'BP_CookingComponent_C_LoadComponentData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, LoadComplete) == 0x000008, "Member 'BP_CookingComponent_C_LoadComponentData::LoadComplete' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_CookingComponent_C_LoadComponentData::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_LoadComponentData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_CookingComponent_C_LoadComponentData::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, CallFunc_FindCookingSaveData_SaveFound) == 0x000090, "Member 'BP_CookingComponent_C_LoadComponentData::CallFunc_FindCookingSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadComponentData, CallFunc_FindCookingSaveData_Array_Element) == 0x0000A0, "Member 'BP_CookingComponent_C_LoadComponentData::CallFunc_FindCookingSaveData_Array_Element' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.LoadCookingData
// 0x0430 (0x0430 - 0x0000)
struct BP_CookingComponent_C_LoadCookingData final
{
public:
	struct FS_StorageSave                         S_StorageSave;                                     // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     FoundSlotsL;                                       // 0x0090(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FS_InvItem                             InvItemL;                                          // 0x00A0(0x0030)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSaveSlot                         InvSaveSlotL;                                      // 0x00D0(0x0028)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551A[0x8];                                     // 0x00F8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_StorageSave                         CookingSaveDataL;                                  // 0x0100(0x0090)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551B[0x4];                                     // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item;                           // 0x0198(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01D8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     K2Node_MakeArray_Array;                            // 0x0228(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551C[0x4];                                     // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_SGKGameModeInterface_C> K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface;    // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551D[0x3];                                     // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_GlobalInventoryManager_C*           CallFunc_SGK_GetGlobalInventory_GlobalInventory;   // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCookingSlot_IsCookingSlot;              // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551E[0x6];                                     // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0270(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x02C0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x02F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UBP_WeaponInventory_C*                  K2Node_DynamicCast_AsBP_Weapon_Inventory;          // 0x0308(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551F[0x6];                                     // 0x0312(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_OtherInvSaves                       CallFunc_Array_Get_Item_3;                         // 0x0318(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_CreateNewItem_NewItem;                    // 0x0358(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_SetFieldsInStruct_StructOut;                // 0x0388(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x03B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5520[0x7];                                     // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots_1;            // 0x03D0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue_1;         // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5521[0x3];                                     // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSaveSlot                         CallFunc_Array_Get_Item_4;                         // 0x03E4(0x0028)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5522[0x7];                                     // 0x0411(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast;     // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_CurrentWeight_ImplicitCast_1;   // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_LoadCookingData) == 0x000010, "Wrong alignment on BP_CookingComponent_C_LoadCookingData");
static_assert(sizeof(BP_CookingComponent_C_LoadCookingData) == 0x000430, "Wrong size on BP_CookingComponent_C_LoadCookingData");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, S_StorageSave) == 0x000000, "Member 'BP_CookingComponent_C_LoadCookingData::S_StorageSave' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, FoundSlotsL) == 0x000090, "Member 'BP_CookingComponent_C_LoadCookingData::FoundSlotsL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, InvItemL) == 0x0000A0, "Member 'BP_CookingComponent_C_LoadCookingData::InvItemL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, InvSaveSlotL) == 0x0000D0, "Member 'BP_CookingComponent_C_LoadCookingData::InvSaveSlotL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CookingSaveDataL) == 0x000100, "Member 'BP_CookingComponent_C_LoadCookingData::CookingSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, Temp_int_Array_Index_Variable) == 0x000190, "Member 'BP_CookingComponent_C_LoadCookingData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Get_Item) == 0x000198, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Get_Item_1) == 0x0001D8, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_MakeArray_Array) == 0x000228, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, Temp_int_Loop_Counter_Variable) == 0x000238, "Member 'BP_CookingComponent_C_LoadCookingData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_GetGameMode_ReturnValue) == 0x000240, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface) == 0x000248, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_DynamicCast_AsBP_SGKGame_Mode_Interface' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_DynamicCast_bSuccess) == 0x000258, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Add_IntInt_ReturnValue) == 0x00025C, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_SGK_GetGlobalInventory_GlobalInventory) == 0x000260, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_SGK_GetGlobalInventory_GlobalInventory' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_IsCookingSlot_IsCookingSlot) == 0x000268, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_IsCookingSlot_IsCookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_IsValid_ReturnValue) == 0x000269, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Get_Item_2) == 0x000270, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_MakeStruct_S_InvItem) == 0x0002C0, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_SGK_ItemSize_Height) == 0x0002F0, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_SGK_ItemSize_Width) == 0x0002F4, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_SGK_SlotFinder_FoundSlots) == 0x0002F8, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_DynamicCast_AsBP_Weapon_Inventory) == 0x000308, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_DynamicCast_AsBP_Weapon_Inventory' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_DynamicCast_bSuccess_1) == 0x000310, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000311, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Get_Item_3) == 0x000318, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_CreateNewItem_NewItem) == 0x000358, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_CreateNewItem_NewItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_SetFieldsInStruct_StructOut) == 0x000388, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x0003B8, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0003C8, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_UpdateInvSlots_UpdatedSlots_1) == 0x0003D0, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_UpdateInvSlots_UpdatedSlots_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_IsValidIndex_ReturnValue_1) == 0x0003E0, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_IsValidIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Get_Item_4) == 0x0003E4, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Array_Length_ReturnValue) == 0x00040C, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, CallFunc_Less_IntInt_ReturnValue) == 0x000410, "Member 'BP_CookingComponent_C_LoadCookingData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_VariableSet_CurrentWeight_ImplicitCast) == 0x000418, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_VariableSet_CurrentWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_LoadCookingData, K2Node_VariableSet_CurrentWeight_ImplicitCast_1) == 0x000420, "Member 'BP_CookingComponent_C_LoadCookingData::K2Node_VariableSet_CurrentWeight_ImplicitCast_1' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.LoadInventoryData
// 0x0090 (0x0090 - 0x0000)
struct BP_CookingComponent_C_LoadInventoryData final
{
public:
	struct FS_StorageSave                         S_StorageSave;                                     // 0x0000(0x0090)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_LoadInventoryData) == 0x000010, "Wrong alignment on BP_CookingComponent_C_LoadInventoryData");
static_assert(sizeof(BP_CookingComponent_C_LoadInventoryData) == 0x000090, "Wrong size on BP_CookingComponent_C_LoadInventoryData");
static_assert(offsetof(BP_CookingComponent_C_LoadInventoryData, S_StorageSave) == 0x000000, "Member 'BP_CookingComponent_C_LoadInventoryData::S_StorageSave' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.MoveCookingItem
// 0x00D0 (0x00D0 - 0x0000)
struct BP_CookingComponent_C_MoveCookingItem final
{
public:
	struct FS_InvSlot                             ContentElement;                                    // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CookingSlot;                                       // 0x0050(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x00A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_MoveCookingItem) == 0x000008, "Wrong alignment on BP_CookingComponent_C_MoveCookingItem");
static_assert(sizeof(BP_CookingComponent_C_MoveCookingItem) == 0x0000D0, "Wrong size on BP_CookingComponent_C_MoveCookingItem");
static_assert(offsetof(BP_CookingComponent_C_MoveCookingItem, ContentElement) == 0x000000, "Member 'BP_CookingComponent_C_MoveCookingItem::ContentElement' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_MoveCookingItem, CookingSlot) == 0x000050, "Member 'BP_CookingComponent_C_MoveCookingItem::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_MoveCookingItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x0000A0, "Member 'BP_CookingComponent_C_MoveCookingItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.UnPauseSingleSlot
// 0x0028 (0x0028 - 0x0000)
struct BP_CookingComponent_C_UnPauseSingleSlot final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Pause;                                             // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5523[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_UnPauseSingleSlot) == 0x000008, "Wrong alignment on BP_CookingComponent_C_UnPauseSingleSlot");
static_assert(sizeof(BP_CookingComponent_C_UnPauseSingleSlot) == 0x000028, "Wrong size on BP_CookingComponent_C_UnPauseSingleSlot");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, Param_Index) == 0x000000, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, Pause) == 0x000004, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::Pause' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UnPauseSingleSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'BP_CookingComponent_C_UnPauseSingleSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.PauseAllPlayerCookingSlots
// 0x0020 (0x0020 - 0x0000)
struct BP_CookingComponent_C_PauseAllPlayerCookingSlots final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_PauseAllPlayerCookingSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_PauseAllPlayerCookingSlots");
static_assert(sizeof(BP_CookingComponent_C_PauseAllPlayerCookingSlots) == 0x000020, "Wrong size on BP_CookingComponent_C_PauseAllPlayerCookingSlots");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_PauseAllPlayerCookingSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_PauseAllPlayerCookingSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.RestartPlayerCookingSlot
// 0x0038 (0x0038 - 0x0000)
struct BP_CookingComponent_C_RestartPlayerCookingSlot final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5524[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_RestartPlayerCookingSlot) == 0x000008, "Wrong alignment on BP_CookingComponent_C_RestartPlayerCookingSlot");
static_assert(sizeof(BP_CookingComponent_C_RestartPlayerCookingSlot) == 0x000038, "Wrong size on BP_CookingComponent_C_RestartPlayerCookingSlot");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CookingSlot) == 0x000000, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_RestartPlayerCookingSlot, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_CookingComponent_C_RestartPlayerCookingSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ResumeAllPlayerCookingSlots
// 0x0058 (0x0058 - 0x0000)
struct BP_CookingComponent_C_ResumeAllPlayerCookingSlots final
{
public:
	class UBP_PlayerInventory_C*                  UsingPlayerL;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5525[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         CallFunc_Array_Get_Item;                           // 0x0020(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5526[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5527[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots) == 0x000008, "Wrong alignment on BP_CookingComponent_C_ResumeAllPlayerCookingSlots");
static_assert(sizeof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots) == 0x000058, "Wrong size on BP_CookingComponent_C_ResumeAllPlayerCookingSlots");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, UsingPlayerL) == 0x000000, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::UsingPlayerL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000034, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Array_Get_Item_1) == 0x000048, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_ResumeAllPlayerCookingSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000054, "Member 'BP_CookingComponent_C_ResumeAllPlayerCookingSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.SaveComponentData
// 0x0008 (0x0008 - 0x0000)
struct BP_CookingComponent_C_SaveComponentData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_SaveComponentData) == 0x000008, "Wrong alignment on BP_CookingComponent_C_SaveComponentData");
static_assert(sizeof(BP_CookingComponent_C_SaveComponentData) == 0x000008, "Wrong size on BP_CookingComponent_C_SaveComponentData");
static_assert(offsetof(BP_CookingComponent_C_SaveComponentData, SaveGame) == 0x000000, "Member 'BP_CookingComponent_C_SaveComponentData::SaveGame' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.SaveCookingData
// 0x0298 (0x0298 - 0x0000)
struct BP_CookingComponent_C_SaveCookingData final
{
public:
	class UBP_SGKSaveGame_C*                      SaveGame;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FS_LevelSaveData                       LevelSaveDataL;                                    // 0x0008(0x00D0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_PrepareCookingSaveData_ExtraDataIndex;    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5528[0x4];                                     // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_PrepareCookingSaveData_NewLevelSaveData;  // 0x00F0(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SelectLevelSaveData_SaveFound;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5529[0x7];                                     // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_LevelSaveData                       CallFunc_SelectLevelSaveData_LevelSaveData;        // 0x01C8(0x00D0)(ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_SaveCookingData) == 0x000008, "Wrong alignment on BP_CookingComponent_C_SaveCookingData");
static_assert(sizeof(BP_CookingComponent_C_SaveCookingData) == 0x000298, "Wrong size on BP_CookingComponent_C_SaveCookingData");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, SaveGame) == 0x000000, "Member 'BP_CookingComponent_C_SaveCookingData::SaveGame' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, LevelSaveDataL) == 0x000008, "Member 'BP_CookingComponent_C_SaveCookingData::LevelSaveDataL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, CallFunc_GetCurrentLevelName_ReturnValue) == 0x0000D8, "Member 'BP_CookingComponent_C_SaveCookingData::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, CallFunc_PrepareCookingSaveData_ExtraDataIndex) == 0x0000E8, "Member 'BP_CookingComponent_C_SaveCookingData::CallFunc_PrepareCookingSaveData_ExtraDataIndex' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, CallFunc_PrepareCookingSaveData_NewLevelSaveData) == 0x0000F0, "Member 'BP_CookingComponent_C_SaveCookingData::CallFunc_PrepareCookingSaveData_NewLevelSaveData' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, CallFunc_SelectLevelSaveData_SaveFound) == 0x0001C0, "Member 'BP_CookingComponent_C_SaveCookingData::CallFunc_SelectLevelSaveData_SaveFound' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SaveCookingData, CallFunc_SelectLevelSaveData_LevelSaveData) == 0x0001C8, "Member 'BP_CookingComponent_C_SaveCookingData::CallFunc_SelectLevelSaveData_LevelSaveData' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.ServerBurnFuel
// 0x0008 (0x0008 - 0x0000)
struct BP_CookingComponent_C_ServerBurnFuel final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_ServerBurnFuel) == 0x000008, "Wrong alignment on BP_CookingComponent_C_ServerBurnFuel");
static_assert(sizeof(BP_CookingComponent_C_ServerBurnFuel) == 0x000008, "Wrong size on BP_CookingComponent_C_ServerBurnFuel");
static_assert(offsetof(BP_CookingComponent_C_ServerBurnFuel, Time) == 0x000000, "Member 'BP_CookingComponent_C_ServerBurnFuel::Time' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.SetNewCookingItem
// 0x0178 (0x0178 - 0x0000)
struct BP_CookingComponent_C_SetNewCookingItem final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552A[0x3];                                     // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0054(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x0068(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552B[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x00A0(0x0078)(HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552C[0x3];                                     // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_Array_Get_Item;                           // 0x011C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0130(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot;                   // 0x0160(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_SetNewCookingItem) == 0x000008, "Wrong alignment on BP_CookingComponent_C_SetNewCookingItem");
static_assert(sizeof(BP_CookingComponent_C_SetNewCookingItem) == 0x000178, "Wrong size on BP_CookingComponent_C_SetNewCookingItem");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, InvSlot) == 0x000000, "Member 'BP_CookingComponent_C_SetNewCookingItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, ReturnValue) == 0x000050, "Member 'BP_CookingComponent_C_SetNewCookingItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CookingSlot) == 0x000054, "Member 'BP_CookingComponent_C_SetNewCookingItem::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x000068, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x000098, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x0000A0, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_Set_Contains_ReturnValue) == 0x000118, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_Array_Get_Item) == 0x00011C, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000130, "Member 'BP_CookingComponent_C_SetNewCookingItem::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingItem, K2Node_MakeStruct_S_CookingSlot) == 0x000160, "Member 'BP_CookingComponent_C_SetNewCookingItem::K2Node_MakeStruct_S_CookingSlot' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.SetNewCookingSlotItem
// 0x0268 (0x0268 - 0x0000)
struct BP_CookingComponent_C_SetNewCookingSlotItem final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvItem                             Item;                                              // 0x0050(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          SpecialSlot;                                       // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552D[0x2];                                     // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552E[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552F[0x3];                                     // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5530[0x7];                                     // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem;                  // 0x00D0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5531[0x3];                                     // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_ItemSize_Height;                      // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width;                       // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5532[0x3];                                     // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_ItemSize_Height_1;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_1;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_2;                    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_2;                     // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5533[0x4];                                     // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots;                // 0x0130(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvItem                             CallFunc_SGK_InvSlotItem_InvItem_1;                // 0x0140(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots;              // 0x0170(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0180(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_3;                    // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_3;                     // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_4;                    // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_4;                     // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_2;                           // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Height_5;                    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SGK_ItemSize_Width_5;                     // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_3;                           // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5534[0x7];                                     // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_SGK_SlotFinder_FoundSlots_1;              // 0x01F8(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FS_InvSlot>                     CallFunc_UpdateInvSlots_UpdatedSlots_1;            // 0x0208(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x0218(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_SetNewCookingSlotItem) == 0x000008, "Wrong alignment on BP_CookingComponent_C_SetNewCookingSlotItem");
static_assert(sizeof(BP_CookingComponent_C_SetNewCookingSlotItem) == 0x000268, "Wrong size on BP_CookingComponent_C_SetNewCookingSlotItem");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, InvSlot) == 0x000000, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::InvSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Item) == 0x000050, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, SpecialSlot) == 0x000080, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::SpecialSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_bool_Variable) == 0x000081, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Variable) == 0x000084, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_bool_Variable_1) == 0x000088, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Variable_1) == 0x00008C, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_bool_Variable_2) == 0x000090, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Variable_2) == 0x000094, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Variable_3) == 0x000098, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Loop_Counter_Variable) == 0x00009C, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Array_Index_Variable) == 0x0000A4, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Array_Index_Variable_1) == 0x0000A8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_InvSlotItem_InvItem) == 0x0000D0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_InvSlotItem_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Length_ReturnValue_1) == 0x000100, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Less_IntInt_ReturnValue_1) == 0x000104, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height) == 0x000108, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width) == 0x00010C, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, Temp_bool_Variable_3) == 0x000110, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height_1) == 0x000114, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width_1) == 0x000118, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height_2) == 0x00011C, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width_2) == 0x000120, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, K2Node_Select_Default) == 0x000124, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, K2Node_Select_Default_1) == 0x000128, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_SlotFinder_FoundSlots) == 0x000130, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_SlotFinder_FoundSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_InvSlotItem_InvItem_1) == 0x000140, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_InvSlotItem_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_UpdateInvSlots_UpdatedSlots) == 0x000170, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_UpdateInvSlots_UpdatedSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Get_Item_2) == 0x000180, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height_3) == 0x0001D0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width_3) == 0x0001D4, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height_4) == 0x0001D8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width_4) == 0x0001DC, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, K2Node_Select_Default_2) == 0x0001E0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Height_5) == 0x0001E4, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Height_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_ItemSize_Width_5) == 0x0001E8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_ItemSize_Width_5' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, K2Node_Select_Default_3) == 0x0001EC, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Greater_IntInt_ReturnValue) == 0x0001F0, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_SGK_SlotFinder_FoundSlots_1) == 0x0001F8, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_SGK_SlotFinder_FoundSlots_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_UpdateInvSlots_UpdatedSlots_1) == 0x000208, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_UpdateInvSlots_UpdatedSlots_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_SetNewCookingSlotItem, CallFunc_Array_Get_Item_3) == 0x000218, "Member 'BP_CookingComponent_C_SetNewCookingSlotItem::CallFunc_Array_Get_Item_3' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.SGK UpdateSpecialSlot
// 0x0050 (0x0050 - 0x0000)
struct BP_CookingComponent_C_SGK_UpdateSpecialSlot final
{
public:
	struct FS_InvSlot                             InvSlot;                                           // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_SGK_UpdateSpecialSlot) == 0x000008, "Wrong alignment on BP_CookingComponent_C_SGK_UpdateSpecialSlot");
static_assert(sizeof(BP_CookingComponent_C_SGK_UpdateSpecialSlot) == 0x000050, "Wrong size on BP_CookingComponent_C_SGK_UpdateSpecialSlot");
static_assert(offsetof(BP_CookingComponent_C_SGK_UpdateSpecialSlot, InvSlot) == 0x000000, "Member 'BP_CookingComponent_C_SGK_UpdateSpecialSlot::InvSlot' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.StartPlayerCookingSlot
// 0x0038 (0x0038 - 0x0000)
struct BP_CookingComponent_C_StartPlayerCookingSlot final
{
public:
	struct FS_CookingSlot                         CookingSlot;                                       // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5535[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerInventory_C*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_StartPlayerCookingSlot) == 0x000008, "Wrong alignment on BP_CookingComponent_C_StartPlayerCookingSlot");
static_assert(sizeof(BP_CookingComponent_C_StartPlayerCookingSlot) == 0x000038, "Wrong size on BP_CookingComponent_C_StartPlayerCookingSlot");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CookingSlot) == 0x000000, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_StartPlayerCookingSlot, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'BP_CookingComponent_C_StartPlayerCookingSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.UpdateCookingItems
// 0x0310 (0x0310 - 0x0000)
struct BP_CookingComponent_C_UpdateCookingItems final
{
public:
	struct FS_InvSlot                             ContentsElementL;                                  // 0x0000(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CookingSlot                         CookingElementL;                                   // 0x0050(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5536[0x4];                                     // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             ArrayElementL;                                     // 0x0068(0x0050)(Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x00B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SetNewCookingItem_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5537[0x3];                                     // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_SetNewCookingItem_CookingSlot;            // 0x010C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetContentsSlots_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5538[0x7];                                     // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetContentsSlots_ContentsSlots;           // 0x0128(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5539[0x3];                                     // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553A[0x3];                                     // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553B[0x7];                                     // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x0160(0x0078)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Set_Contains_ReturnValue;                 // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553C[0x3];                                     // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553D[0x3];                                     // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553E[0x2];                                     // 0x023A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_ClearCookingItem_CookingSlot;             // 0x023C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetNewCookingItem_ReturnValue_1;          // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_553F[0x2];                                     // 0x0252(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_SetNewCookingItem_CookingSlot_1;          // 0x0254(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid_1;            // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5540[0x3];                                     // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount_1;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid_2;            // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5541[0x3];                                     // 0x0271(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount_2;               // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot;                   // 0x0278(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5542[0x2];                                     // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingSlot                         CallFunc_Array_Get_Item_2;                         // 0x0290(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetCookingInvSlots_ReturnValue;           // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5543[0x3];                                     // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetCookingInvSlots_CookingSlots;          // 0x02A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x02B8(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x030C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_UpdateCookingItems) == 0x000008, "Wrong alignment on BP_CookingComponent_C_UpdateCookingItems");
static_assert(sizeof(BP_CookingComponent_C_UpdateCookingItems) == 0x000310, "Wrong size on BP_CookingComponent_C_UpdateCookingItems");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, ContentsElementL) == 0x000000, "Member 'BP_CookingComponent_C_UpdateCookingItems::ContentsElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CookingElementL) == 0x000050, "Member 'BP_CookingComponent_C_UpdateCookingItems::CookingElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, ArrayElementL) == 0x000068, "Member 'BP_CookingComponent_C_UpdateCookingItems::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SetNewCookingItem_ReturnValue) == 0x000108, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SetNewCookingItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SetNewCookingItem_CookingSlot) == 0x00010C, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SetNewCookingItem_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_GetContentsSlots_ReturnValue) == 0x000120, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_GetContentsSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_GetContentsSlots_ContentsSlots) == 0x000128, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_GetContentsSlots_ContentsSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Length_ReturnValue) == 0x000138, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, Temp_int_Loop_Counter_Variable) == 0x00013C, "Member 'BP_CookingComponent_C_UpdateCookingItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Less_IntInt_ReturnValue) == 0x000140, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Add_IntInt_ReturnValue) == 0x000144, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, Temp_int_Array_Index_Variable) == 0x000148, "Member 'BP_CookingComponent_C_UpdateCookingItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, Temp_int_Loop_Counter_Variable_1) == 0x00014C, "Member 'BP_CookingComponent_C_UpdateCookingItems::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000150, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_Amount) == 0x000154, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x000158, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x000160, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001D8, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Set_Contains_ReturnValue) == 0x0001DC, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Set_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, Temp_int_Array_Index_Variable_1) == 0x0001E0, "Member 'BP_CookingComponent_C_UpdateCookingItems::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, Temp_bool_True_if_break_was_hit_Variable) == 0x0001E4, "Member 'BP_CookingComponent_C_UpdateCookingItems::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Not_PreBool_ReturnValue) == 0x000238, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_BooleanAND_ReturnValue) == 0x000239, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_ClearCookingItem_CookingSlot) == 0x00023C, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_ClearCookingItem_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000250, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SetNewCookingItem_ReturnValue_1) == 0x000251, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SetNewCookingItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SetNewCookingItem_CookingSlot_1) == 0x000254, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SetNewCookingItem_CookingSlot_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_ItemValid_1) == 0x000268, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_ItemValid_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_Amount_1) == 0x00026C, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_Amount_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_ItemValid_2) == 0x000270, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_ItemValid_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_SGK_InvSlotAmount_Amount_2) == 0x000274, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_SGK_InvSlotAmount_Amount_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, K2Node_MakeStruct_S_CookingSlot) == 0x000278, "Member 'BP_CookingComponent_C_UpdateCookingItems::K2Node_MakeStruct_S_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00028C, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00028D, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Get_Item_2) == 0x000290, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_GetCookingInvSlots_ReturnValue) == 0x0002A4, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_GetCookingInvSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_GetCookingInvSlots_CookingSlots) == 0x0002A8, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_GetCookingInvSlots_CookingSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Get_Item_3) == 0x0002B8, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Array_Length_ReturnValue_1) == 0x000308, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingItems, CallFunc_Less_IntInt_ReturnValue_1) == 0x00030C, "Member 'BP_CookingComponent_C_UpdateCookingItems::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.UpdateCookingTimes
// 0x0540 (0x0540 - 0x0000)
struct BP_CookingComponent_C_UpdateCookingTimes final
{
public:
	struct FS_CookingRecipe                       RecipeL;                                           // 0x0000(0x0078)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         IndexL;                                            // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         ArrayElementL;                                     // 0x007C(0x0014)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5544[0x1];                                     // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5545[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem;                       // 0x00A0(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5546[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe;      // 0x00D8(0x0078)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5547[0x4];                                     // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0158(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5548[0x4];                                     // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_1;                         // 0x01B0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5549[0x4];                                     // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvSlot                             CallFunc_Array_Get_Item_2;                         // 0x0208(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554A[0x4];                                     // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_1;                     // 0x0260(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue_1;      // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554B[0x7];                                     // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe_1;    // 0x0298(0x0078)(HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_2;                     // 0x0310(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot;                   // 0x0340(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue_2;      // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554C[0x3];                                     // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe_2;    // 0x0358(0x0078)(HasGetValueTypeHash)
	struct FS_InvSlot                             CallFunc_Array_Get_Item_3;                         // 0x03D0(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_InvItem                             K2Node_MakeStruct_S_InvItem_3;                     // 0x0428(0x0030)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_ItemCookingRecipe_ReturnValue_3;      // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554D[0x7];                                     // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FS_CookingRecipe                       CallFunc_SGK_ItemCookingRecipe_CookingRecipe_3;    // 0x0460(0x0078)(HasGetValueTypeHash)
	struct FS_CookingSlot                         K2Node_MakeStruct_S_CookingSlot_1;                 // 0x04D8(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554E[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_CookingSlot                         CallFunc_Array_Get_Item_4;                         // 0x0508(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_554F[0x3];                                     // 0x051D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5550[0x3];                                     // 0x0525(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_Time_6_51E1F19A4EC9904979CC80B79F2EEE7B_ImplicitCast; // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5551[0x4];                                     // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_UpdateCookingTimes) == 0x000008, "Wrong alignment on BP_CookingComponent_C_UpdateCookingTimes");
static_assert(sizeof(BP_CookingComponent_C_UpdateCookingTimes) == 0x000540, "Wrong size on BP_CookingComponent_C_UpdateCookingTimes");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, RecipeL) == 0x000000, "Member 'BP_CookingComponent_C_UpdateCookingTimes::RecipeL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, IndexL) == 0x000078, "Member 'BP_CookingComponent_C_UpdateCookingTimes::IndexL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, ArrayElementL) == 0x00007C, "Member 'BP_CookingComponent_C_UpdateCookingTimes::ArrayElementL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Greater_IntInt_ReturnValue) == 0x000090, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Contains_ReturnValue) == 0x000091, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Contains_ReturnValue_1) == 0x000092, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000098, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_InvItem) == 0x0000A0, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_InvItem' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_ReturnValue) == 0x0000D0, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_CookingRecipe) == 0x0000D8, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_CookingRecipe' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, Temp_int_Array_Index_Variable) == 0x000150, "Member 'BP_CookingComponent_C_UpdateCookingTimes::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Get_Item) == 0x000158, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, Temp_int_Loop_Counter_Variable) == 0x0001A8, "Member 'BP_CookingComponent_C_UpdateCookingTimes::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Get_Item_1) == 0x0001B0, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Add_IntInt_ReturnValue) == 0x000200, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Get_Item_2) == 0x000208, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_IntInt_ReturnValue) == 0x000258, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_InvItem_1) == 0x000260, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_InvItem_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_ReturnValue_1) == 0x000290, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_CookingRecipe_1) == 0x000298, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_CookingRecipe_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_InvItem_2) == 0x000310, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_InvItem_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_CookingSlot) == 0x000340, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_CookingSlot' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_ReturnValue_2) == 0x000354, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_CookingRecipe_2) == 0x000358, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_CookingRecipe_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Get_Item_3) == 0x0003D0, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000420, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000424, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_InvItem_3) == 0x000428, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_InvItem_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_ReturnValue_3) == 0x000458, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_SGK_ItemCookingRecipe_CookingRecipe_3) == 0x000460, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_SGK_ItemCookingRecipe_CookingRecipe_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_MakeStruct_S_CookingSlot_1) == 0x0004D8, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_MakeStruct_S_CookingSlot_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x0004EC, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0004F0, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0004F8, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000500, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Get_Item_4) == 0x000508, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00051C, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Array_Length_ReturnValue) == 0x000520, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Less_IntInt_ReturnValue) == 0x000524, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000528, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, K2Node_SetFieldsInStruct_Time_6_51E1F19A4EC9904979CC80B79F2EEE7B_ImplicitCast) == 0x000530, "Member 'BP_CookingComponent_C_UpdateCookingTimes::K2Node_SetFieldsInStruct_Time_6_51E1F19A4EC9904979CC80B79F2EEE7B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateCookingTimes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000538, "Member 'BP_CookingComponent_C_UpdateCookingTimes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function BP_CookingComponent.BP_CookingComponent_C.UpdateFuelBurn
// 0x0088 (0x0088 - 0x0000)
struct BP_CookingComponent_C_UpdateFuelBurn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValueL;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5552[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5553[0x3];                                     // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFuelSlots_ReturnValue;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5554[0x2];                                     // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FS_InvSlot>                     CallFunc_GetFuelSlots_FuelSlots;                   // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FS_InvSlot                             CallFunc_Array_Get_Item;                           // 0x0028(0x0050)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_SGK_InvSlotAmount_ItemValid;              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5555[0x3];                                     // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SGK_InvSlotAmount_Amount;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CookingComponent_C_UpdateFuelBurn) == 0x000008, "Wrong alignment on BP_CookingComponent_C_UpdateFuelBurn");
static_assert(sizeof(BP_CookingComponent_C_UpdateFuelBurn) == 0x000088, "Wrong size on BP_CookingComponent_C_UpdateFuelBurn");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, ReturnValue) == 0x000000, "Member 'BP_CookingComponent_C_UpdateFuelBurn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, ReturnValueL) == 0x000001, "Member 'BP_CookingComponent_C_UpdateFuelBurn::ReturnValueL' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, Temp_bool_True_if_break_was_hit_Variable) == 0x000002, "Member 'BP_CookingComponent_C_UpdateFuelBurn::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CookingComponent_C_UpdateFuelBurn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CookingComponent_C_UpdateFuelBurn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000014, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_GetFuelSlots_ReturnValue) == 0x000015, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_GetFuelSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_GetFuelSlots_FuelSlots) == 0x000018, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_GetFuelSlots_FuelSlots' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_SGK_InvSlotAmount_ItemValid) == 0x000078, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_SGK_InvSlotAmount_ItemValid' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_SGK_InvSlotAmount_Amount) == 0x00007C, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_SGK_InvSlotAmount_Amount' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_Less_IntInt_ReturnValue) == 0x000084, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CookingComponent_C_UpdateFuelBurn, CallFunc_BooleanAND_ReturnValue) == 0x000085, "Member 'BP_CookingComponent_C_UpdateFuelBurn::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

