#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ChatWindow

#include "Basic.hpp"

#include "W_ChatWindow_classes.hpp"
#include "W_ChatWindow_parameters.hpp"


namespace SDK
{

// Function W_ChatWindow.W_ChatWindow_C.BndEvt__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatWindow_C::BndEvt__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "BndEvt__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::W_ChatWindow_C_BndEvt__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_ChatWindow_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatWindow.W_ChatWindow_C.ExecuteUbergraph_W_ChatWindow
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatWindow_C::ExecuteUbergraph_W_ChatWindow(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "ExecuteUbergraph_W_ChatWindow");

	Params::W_ChatWindow_C_ExecuteUbergraph_W_ChatWindow Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.Fade Chat Window
// (Public, BlueprintCallable, BlueprintEvent)

void UW_ChatWindow_C::Fade_Chat_Window()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Fade Chat Window");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatWindow.W_ChatWindow_C.Get Is Team 1
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bIsSeal                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatWindow_C::Get_Is_Team_1(bool* bIsSeal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Get Is Team 1");

	Params::W_ChatWindow_C_Get_Is_Team_1 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsSeal != nullptr)
		*bIsSeal = Parms.bIsSeal;
}


// Function W_ChatWindow.W_ChatWindow_C.InitChatEntry
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bTeamChat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatWindow_C::InitChatEntry(bool Param_bTeamChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "InitChatEntry");

	Params::W_ChatWindow_C_InitChatEntry Parms{};

	Parms.Param_bTeamChat = Param_bTeamChat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.OnRep_bVisibleChat?
// (BlueprintCallable, BlueprintEvent)

void UW_ChatWindow_C::OnRep_bVisibleChat_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "OnRep_bVisibleChat?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatWindow.W_ChatWindow_C.PrintMessage
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FPKChatMessage                   Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ChatWindow_C::PrintMessage(const struct FPKChatMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "PrintMessage");

	Params::W_ChatWindow_C_PrintMessage Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.Send Chat Message
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message_Message                                        (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ChatWindow_C::Send_Chat_Message(const class FText& Message_Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Send Chat Message");

	Params::W_ChatWindow_C_Send_Chat_Message Parms{};

	Parms.Message_Message = std::move(Message_Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.ServerMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Sender                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Msg                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Param_bTeamChat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_ChatWindow_C::ServerMessage(const class FText& Sender, const class FText& Msg, bool Param_bTeamChat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "ServerMessage");

	Params::W_ChatWindow_C_ServerMessage Parms{};

	Parms.Sender = std::move(Sender);
	Parms.Msg = std::move(Msg);
	Parms.Param_bTeamChat = Param_bTeamChat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_ChatWindow.W_ChatWindow_C.SetTextToSend
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_bTeamChat                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Msg                                                    (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             TexToSend                                              (Parm, OutParm)

void UW_ChatWindow_C::SetTextToSend(bool Param_bTeamChat, const class FText& Sender, const class FText& Msg, class FText* TexToSend)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "SetTextToSend");

	Params::W_ChatWindow_C_SetTextToSend Parms{};

	Parms.Param_bTeamChat = Param_bTeamChat;
	Parms.Sender = std::move(Sender);
	Parms.Msg = std::move(Msg);

	UObject::ProcessEvent(Func, &Parms);

	if (TexToSend != nullptr)
		*TexToSend = std::move(Parms.TexToSend);
}


// Function W_ChatWindow.W_ChatWindow_C.Should Play Message
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   IndexToTest                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FPKChatMessage>           TargetArray                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FPKChatMessage                   Output                                                 (Parm, OutParm)

bool UW_ChatWindow_C::Should_Play_Message(int32 IndexToTest, const TArray<struct FPKChatMessage>& TargetArray, struct FPKChatMessage* Output)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Should Play Message");

	Params::W_ChatWindow_C_Should_Play_Message Parms{};

	Parms.IndexToTest = IndexToTest;
	Parms.TargetArray = std::move(TargetArray);

	UObject::ProcessEvent(Func, &Parms);

	if (Output != nullptr)
		*Output = std::move(Parms.Output);

	return Parms.ReturnValue;
}


// Function W_ChatWindow.W_ChatWindow_C.Show Chat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_ChatWindow_C::Show_Chat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Show Chat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_ChatWindow.W_ChatWindow_C.Update Chat
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FPKChatMessage>           Messages                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UW_ChatWindow_C::Update_Chat(TArray<struct FPKChatMessage>& Messages)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "Update Chat");

	Params::W_ChatWindow_C_Update_Chat Parms{};

	Parms.Messages = std::move(Messages);

	UObject::ProcessEvent(Func, &Parms);

	Messages = std::move(Parms.Messages);
}


// Function W_ChatWindow.W_ChatWindow_C.UpdateChatWindow
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPKChatMessage                   Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_ChatWindow_C::UpdateChatWindow(const struct FPKChatMessage& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_ChatWindow_C", "UpdateChatWindow");

	Params::W_ChatWindow_C_UpdateChatWindow Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}

}

