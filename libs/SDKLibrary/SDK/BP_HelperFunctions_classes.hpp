#pragma once

// Dumped with Dumper-7!


namespace SDK
{
//---------------------------------------------------------------------------------------------------------------------
// CLASSES
//---------------------------------------------------------------------------------------------------------------------

// 0x0 (0x28 - 0x28)
// BlueprintGeneratedClass BP_HelperFunctions.BP_HelperFunctions_C
class UBP_HelperFunctions_C : public UBlueprintFunctionLibrary
{
public:

	static class UClass* StaticClass();
	static class UBP_HelperFunctions_C* GetDefaultObj();

	void Debug_PrintVideoMode(float Duration, bool bPrintToLog, class UObject* __WorldContext, const struct FIntPoint& CallFunc_GetLastConfirmedScreenResolution_ReturnValue, enum class EWindowMode CallFunc_GetFullscreenMode_ReturnValue, const class FString& CallFunc_Conv_IntPointToString_ReturnValue, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue, const class FString& CallFunc_Concat_StrStr_ReturnValue_1, const struct FIntPoint& CallFunc_GetScreenResolution_ReturnValue, enum class EWindowMode CallFunc_GetLastConfirmedFullscreenMode_ReturnValue, const class FString& CallFunc_Conv_IntPointToString_ReturnValue_1, const class FString& CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1, const class FString& CallFunc_Concat_StrStr_ReturnValue_2, const class FString& CallFunc_Concat_StrStr_ReturnValue_3);
	void OpenPauseMenu(class UObject* __WorldContext, class UWB_Cursor_32x32_C* CallFunc_Create_ReturnValue, class UWB_PauseMenu_C* CallFunc_Create_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue, class APlayerController* CallFunc_GetPlayerController_ReturnValue_1, class APlayerController* CallFunc_GetPlayerController_ReturnValue_2, class APawn* CallFunc_GetPlayerPawn_ReturnValue);
	bool HasRequestWithTimer(class UObject* __WorldContext, class UWB_Request_Timer_C** Output, TArray<class UWB_Request_Timer_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UWB_Request_Timer_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue);
	class UWB_Request_Timer_C* CreateRequestWithTimer(bool IsConfirmOnly, class FText Text_Head, class FText Text_Body, class UObject* __WorldContext, class UWB_Request_Timer_C* CallFunc_Create_ReturnValue, bool CallFunc_HasRequestWithTimer_ReturnValue, class UWB_Request_Timer_C* CallFunc_HasRequestWithTimer_Output, bool CallFunc_IsInViewport_ReturnValue);
	void GetDefaultInputMappings(class UObject* __WorldContext, TMap<class FName, class FText>* Default_Input_Mappings, class UPMM_Instance_C* CallFunc_Get_PMM_Instance_AsPMM_Instance);
	bool GetInvertGamepad(class UObject* __WorldContext, class UPMM_Instance_C* CallFunc_Get_PMM_Instance_AsPMM_Instance);
	bool GetInvertMouse(class UObject* __WorldContext, class UPMM_Instance_C* CallFunc_Get_PMM_Instance_AsPMM_Instance);
	double GetGamepadSensitivity(class UObject* __WorldContext, class UPMM_Instance_C* CallFunc_Get_PMM_Instance_AsPMM_Instance, double CallFunc_FClamp_ReturnValue);
	double GetMouseSensitivity(class UObject* __WorldContext, class UPMM_Instance_C* CallFunc_Get_PMM_Instance_AsPMM_Instance, double CallFunc_FClamp_ReturnValue);
	void CreateHighlightWidget(double Playback_Speed, bool UseGlobalColor, enum class EGlobalColors GlobalColorType, const struct FLinearColor& Color, float Opacity, class UObject* __WorldContext, class UWB_FX_Highlight_C* CallFunc_Create_ReturnValue, double CallFunc_SetDoublePropertyByName_Value_ImplicitCast);
	void Get_PMM_Instance(class UObject* __WorldContext, class UPMM_Instance_C** AsPMM_Instance, class UGameInstance* CallFunc_GetGameInstance_ReturnValue, class UPMM_Instance_C* K2Node_DynamicCast_AsPMM_Instance, bool K2Node_DynamicCast_bSuccess);
	bool ValidateDataTableRow(struct FDataTableRowHandle& RowHandle, class UObject* __WorldContext, bool CallFunc_DoesDataTableRowExist_ReturnValue);
	class UHorizontalBoxSlot* AddToHorizontalBox(class UHorizontalBox* Target, class UWidget* Content, enum class EHorizontalAlignment InHorizontalAlignment, enum class EVerticalAlignment InVerticalAlignment, class UObject* __WorldContext, class UHorizontalBoxSlot* CallFunc_AddChildToHorizontalBox_ReturnValue);
	bool HasRequest(class UObject* __WorldContext, class UWB_Request_C** Output, TArray<class UWB_Request_C*>& CallFunc_GetAllWidgetsOfClass_FoundWidgets, class UWB_Request_C* CallFunc_Array_Get_Item, bool CallFunc_IsValid_ReturnValue);
	class UWB_Request_C* CreateRequest(bool IsConfirmOnly, class FText Text_Head, class FText Text_Body, class UObject* __WorldContext, class UWB_Request_C* CallFunc_Create_ReturnValue, bool CallFunc_HasRequest_ReturnValue, class UWB_Request_C* CallFunc_HasRequest_Output, bool CallFunc_IsInViewport_ReturnValue);
	bool IsUsingGamepad(class UObject* __WorldContext, class UCommonInputSubsystem* CallFunc_GetLocalPlayerSubsystem_ReturnValue, enum class ECommonInputType CallFunc_GetCurrentInputType_ReturnValue, bool CallFunc_EqualEqual_ByteByte_ReturnValue);
	void TextInfo_HandleColorOverride(const struct FS_TextInfo_PMM& In, class UObject* __WorldContext, struct FS_TextInfo_PMM* Out, bool Temp_bool_Variable, const struct FLinearColor& CallFunc_GetGlobalColorByType_ReturnValue, const struct FLinearColor& K2Node_Select_Default, const struct FS_TextInfo_PMM& K2Node_MakeStruct_S_TextInfo_PMM);
	struct FLinearColor GetGlobalColorByType(enum class EGlobalColors Type, class UObject* __WorldContext, class UBP_PrimaryDataAsset_Global_C* GlobalData, enum class EGlobalColors Temp_byte_Variable, const struct FLinearColor& CallFunc_GetGlobalColors_Overall_Color_Tone_1, const struct FLinearColor& CallFunc_GetGlobalColors_Overall_Color_Tone_2, const struct FLinearColor& CallFunc_GetGlobalColors_Overall_Color_Contrast, const struct FLinearColor& CallFunc_GetGlobalColors_Overall_Color_Font, const struct FLinearColor& CallFunc_GetGlobalColors_Overall_Color_Font_Contrast, const struct FLinearColor& CallFunc_GetGlobalColors_OverallColor_White, const struct FLinearColor& K2Node_Select_Default);
	void GetGlobalColors(class UObject* __WorldContext, struct FLinearColor* Overall_Color_Tone_1, struct FLinearColor* Overall_Color_Tone_2, struct FLinearColor* Overall_Color_Contrast, struct FLinearColor* Overall_Color_Font, struct FLinearColor* Overall_Color_Font_Contrast, struct FLinearColor* OverallColor_White, class UBP_PrimaryDataAsset_Global_C* GlobalData);
	bool ValidateImageObject(class UObject* InObject, class UObject* __WorldContext, bool CallFunc_IsValid_ReturnValue, class UMaterialInstance* K2Node_DynamicCast_AsMaterial_Instance, bool K2Node_DynamicCast_bSuccess, class UTexture* K2Node_DynamicCast_AsTexture, bool K2Node_DynamicCast_bSuccess_1);
	double VectorGetDistanceTo(const struct FVector& Vector, const struct FVector& Other_Vector, class UObject* __WorldContext, const struct FVector& CallFunc_Subtract_VectorVector_ReturnValue, double CallFunc_VSize_ReturnValue);
	struct FVector2D LerpVector2D(const struct FVector2D& A, const struct FVector2D& B, double Alpha, class UObject* __WorldContext, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_Lerp_ReturnValue, double CallFunc_Lerp_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	bool HasTransformChanged(const struct FWidgetTransform& InTransform, class UObject* __WorldContext, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_2, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_3, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_4, double CallFunc_BreakVector2D_X_2, double CallFunc_BreakVector2D_Y_2, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_5, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_6, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, bool CallFunc_BooleanOR_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue_4, bool CallFunc_BooleanOR_ReturnValue_5, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast);
	class UVerticalBoxSlot* AddChildToVerticalBox(class UVerticalBox* VerticalBox, class UWidget* Child, enum class EVerticalAlignment InVerticalAlignment, enum class EHorizontalAlignment InHorizontalAlignment, class UObject* __WorldContext, class UVerticalBoxSlot* CallFunc_AddChildToVerticalBox_ReturnValue);
	bool HasColorChanged(const struct FLinearColor& InColor, class UObject* __WorldContext, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, bool CallFunc_NotEqual_DoubleDouble_ReturnValue, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_1, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_2, bool CallFunc_NotEqual_DoubleDouble_ReturnValue_3, bool CallFunc_BooleanOR_ReturnValue, bool CallFunc_BooleanOR_ReturnValue_1, bool CallFunc_BooleanOR_ReturnValue_2, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2, double CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3);
	void InterpRenderAngle(class UWidget* Target, double TargetValue, double InterpSpeed, bool InterpConstant, class UObject* __WorldContext, double CallFunc_Finterpolate_ReturnValue, double CallFunc_Finterpolate_Current_ImplicitCast, float CallFunc_SetRenderTransformAngle_Angle_ImplicitCast);
	void InterpRenderTransform(class UWidget* Target, enum class EUMGRenderTransform TransformType, const struct FVector2D& TargetValue, double InterpSpeed, bool InterpConstant, class UObject* __WorldContext, bool K2Node_SwitchEnum_CmpSuccess, const struct FVector2D& CallFunc_Vector2DInterpolate_ReturnValue, const struct FVector2D& CallFunc_Vector2DInterpolate_ReturnValue_1, const struct FVector2D& CallFunc_Vector2DInterpolate_ReturnValue_2);
	void InterpRenderOpacity(class UWidget* Target, double TargetValue, double InterpSpeed, bool InterpConstant, class UObject* __WorldContext, float CallFunc_GetRenderOpacity_ReturnValue, double CallFunc_Finterpolate_ReturnValue, double CallFunc_Finterpolate_Current_ImplicitCast, float CallFunc_SetRenderOpacity_InOpacity_ImplicitCast);
	struct FVector2D ClampVector2D(const struct FVector2D& Vector2D, double Min, double Max, class UObject* __WorldContext, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_FClamp_ReturnValue, double CallFunc_FClamp_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	struct FVector2D MapRangeClampedVector2D(const struct FVector2D& Value, const struct FVector2D& InRangeA, const struct FVector2D& InRangeB, const struct FVector2D& OutRangeA, const struct FVector2D& OutRangeB, class UObject* __WorldContext, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, double CallFunc_BreakVector2D_X_1, double CallFunc_BreakVector2D_Y_1, double CallFunc_BreakVector2D_X_2, double CallFunc_BreakVector2D_Y_2, double CallFunc_BreakVector2D_X_3, double CallFunc_BreakVector2D_Y_3, double CallFunc_BreakVector2D_X_4, double CallFunc_BreakVector2D_Y_4, double CallFunc_MapRangeClamped_ReturnValue, double CallFunc_MapRangeClamped_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue);
	struct FVector2D Vector2DInterpolate(const struct FVector2D& Current, const struct FVector2D& Target, double InterpSpeed, bool InterpConstant, class UObject* __WorldContext, bool Temp_bool_Variable, double CallFunc_GetWorldDeltaSeconds_ReturnValue, const struct FVector2D& CallFunc_Vector2DInterpTo_Constant_ReturnValue, const struct FVector2D& CallFunc_Vector2DInterpTo_ReturnValue, const struct FVector2D& K2Node_Select_Default, float CallFunc_Vector2DInterpTo_InterpSpeed_ImplicitCast, float CallFunc_Vector2DInterpTo_Constant_InterpSpeed_ImplicitCast, float CallFunc_Vector2DInterpTo_DeltaTime_ImplicitCast, float CallFunc_Vector2DInterpTo_Constant_DeltaTime_ImplicitCast);
	class UOverlaySlot* AddChildToOverlay(class UOverlay* Overlay, class UWidget* Child, enum class EVerticalAlignment InVerticalAlignment, enum class EHorizontalAlignment InHorizontalAlignment, class UObject* __WorldContext, class UOverlaySlot* CallFunc_AddChildToOverlay_ReturnValue);
	double Finterpolate(double Current, double Target, double InterpSpeed, bool InterpConstant, class UObject* __WorldContext, bool Temp_bool_Variable, double CallFunc_GetWorldDeltaSeconds_ReturnValue, double CallFunc_FInterpTo_Constant_ReturnValue, double CallFunc_FInterpTo_ReturnValue, double K2Node_Select_Default);
	double RandomizePositiveNegativeFloat(double Value, class UObject* __WorldContext, bool Temp_bool_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_RandomBool_ReturnValue, double K2Node_Select_Default);
	void SetBorderBrushTiling(class UBorder* Target, enum class ESlateBrushTileType Tiling, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetBorderBrushSize(class UBorder* Target, const struct FVector2D& Size, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetBorderBrush(class UBorder* Target, class UObject* Brush, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetImageBrushSize(class UImage* Target, const struct FVector2D& Size, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetImageBrushTiling(class UImage* Target, enum class ESlateBrushTileType Tiling, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetImageBrush(class UImage* Target, class UObject* Brush, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush);
	void SetFillImageDrawAs(class UProgressBar* Target, enum class ESlateBrushDrawType DrawAs, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetFillImageMargin(class UProgressBar* Target, double Margin, class UObject* __WorldContext, double CallFunc_MakeLiteralDouble_ReturnValue, const struct FMargin& K2Node_MakeStruct_Margin, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle, float K2Node_MakeStruct_Left_ImplicitCast, float K2Node_MakeStruct_Top_ImplicitCast, float K2Node_MakeStruct_Right_ImplicitCast, float K2Node_MakeStruct_Bottom_ImplicitCast);
	void SetBackgroundTint(class UProgressBar* Target, const struct FSlateColor& Tint, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeMirroring(class UProgressBar* Target, enum class ESlateBrushMirrorType Mirroring, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeTiling(class UProgressBar* Target, enum class ESlateBrushTileType Tiling, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeDrawAs(class UProgressBar* Target, enum class ESlateBrushDrawType Draw_As, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeTint(class UProgressBar* Target, const struct FLinearColor& Tint, class UObject* __WorldContext, const struct FSlateColor& K2Node_MakeStruct_SlateColor, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeMargin(class UProgressBar* Target, const struct FMargin& Margin, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeImageSize(class UProgressBar* Target, const struct FVector2D& Image_Size, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetMarqueeImage(class UProgressBar* Target, class UObject* Image, class UObject* __WorldContext, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void GetFillImage(class UProgressBar* Target, class UObject* __WorldContext, class UObject** FillImage);
	void SetFillImageTiling(class UProgressBar* Target, enum class ESlateBrushTileType Tiling, class UObject* __WorldContext, struct FProgressBarStyle* Output_Get, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetFillImageSize(class UProgressBar* Target, const struct FVector2D& FillImageSize, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	void SetFillImage(class UProgressBar* Target, class UObject* FillImage, class UObject* __WorldContext, const struct FSlateBrush& K2Node_MakeStruct_SlateBrush, const struct FProgressBarStyle& K2Node_MakeStruct_ProgressBarStyle);
	struct FLinearColor SubtractBrightnessValue(const struct FLinearColor& InColor, double Value, class UObject* __WorldContext, bool Temp_bool_Variable, float CallFunc_RGBToHSV_H, float CallFunc_RGBToHSV_S, float CallFunc_RGBToHSV_V, float CallFunc_RGBToHSV_A, double Temp_real_Variable, double CallFunc_Multiply_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double K2Node_Select_Default, const struct FLinearColor& CallFunc_HSVToRGB_ReturnValue, double CallFunc_Multiply_DoubleDouble_A_ImplicitCast, float CallFunc_HSVToRGB_V_ImplicitCast);
	struct FLinearColor SubtractFromColor(const struct FLinearColor& InColor, double Value, class UObject* __WorldContext, bool Temp_bool_Variable, float CallFunc_BreakColor_R, float CallFunc_BreakColor_G, float CallFunc_BreakColor_B, float CallFunc_BreakColor_A, double Temp_real_Variable, double CallFunc_Subtract_DoubleDouble_ReturnValue, bool CallFunc_LessEqual_DoubleDouble_ReturnValue, double CallFunc_Subtract_DoubleDouble_ReturnValue_1, double CallFunc_Subtract_DoubleDouble_ReturnValue_2, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_1, bool CallFunc_LessEqual_DoubleDouble_ReturnValue_2, bool Temp_bool_Variable_1, double K2Node_Select_Default, double Temp_real_Variable_1, double Temp_real_Variable_2, double K2Node_Select_Default_1, bool Temp_bool_Variable_2, double K2Node_Select_Default_2, const struct FLinearColor& K2Node_MakeStruct_LinearColor, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1, double CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2, float K2Node_MakeStruct_G_ImplicitCast, float K2Node_MakeStruct_R_ImplicitCast, float K2Node_MakeStruct_B_ImplicitCast);
	void GetSize(class USizeBox* SizeBox, class UObject* __WorldContext, double* Width, double* Height, bool Temp_bool_Variable, bool CallFunc_IsValid_ReturnValue, double Temp_real_Variable, bool Temp_bool_Variable_1, double K2Node_Select_Default, double Temp_real_Variable_1, double K2Node_Select_Default_1, double K2Node_Select_Option_1_ImplicitCast, double K2Node_Select_Option_1_ImplicitCast_1);
	void SetSize(class USizeBox* SizeBox, double Width, double Height, class UObject* __WorldContext, bool CallFunc_IsValid_ReturnValue, float CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast, float CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast);
	struct FVector2D GetTexture2DSizeClamped(class UTexture2D* Texture2D, const struct FVector2D& Clamp, class UObject* __WorldContext, int32 CallFunc_Blueprint_GetSizeY_ReturnValue, double CallFunc_BreakVector2D_X, double CallFunc_BreakVector2D_Y, float CallFunc_Conv_IntToFloat_ReturnValue, int32 CallFunc_Blueprint_GetSizeX_ReturnValue, double CallFunc_FClamp_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, double CallFunc_FClamp_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, double CallFunc_FClamp_Value_ImplicitCast, double CallFunc_FClamp_Value_ImplicitCast_1);
	struct FVector2D GetTexture2DSize(class UTexture2D* Texture2D, class UObject* __WorldContext, int32 CallFunc_Blueprint_GetSizeY_ReturnValue, int32 CallFunc_Blueprint_GetSizeX_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue, float CallFunc_Conv_IntToFloat_ReturnValue_1, const struct FVector2D& CallFunc_MakeVector2D_ReturnValue, double CallFunc_MakeVector2D_Y_ImplicitCast, double CallFunc_MakeVector2D_X_ImplicitCast);
};

}


