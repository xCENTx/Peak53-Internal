#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerBuildingComponent

#include "Basic.hpp"

#include "BP_PlayerBuildingComponent_classes.hpp"
#include "BP_PlayerBuildingComponent_parameters.hpp"


namespace SDK
{

// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ApplyHeightAdjust
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          StartLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ApplyHeightAdjust(const struct FVector& StartLocation, struct FVector* EndLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ApplyHeightAdjust");

	Params::BP_PlayerBuildingComponent_C_ApplyHeightAdjust Parms{};

	Parms.StartLocation = std::move(StartLocation);

	UObject::ProcessEvent(Func, &Parms);

	if (EndLocation != nullptr)
		*EndLocation = std::move(Parms.EndLocation);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ApplyRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Param_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         NewRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_PlayerBuildingComponent_C::ApplyRotation(const struct FRotator& Param_Rotation, struct FRotator* NewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ApplyRotation");

	Params::BP_PlayerBuildingComponent_C_ApplyRotation Parms{};

	Parms.Param_Rotation = std::move(Param_Rotation);

	UObject::ProcessEvent(Func, &Parms);

	if (NewRotation != nullptr)
		*NewRotation = std::move(Parms.NewRotation);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.BuildTrace
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::BuildTrace()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "BuildTrace");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ChangeHeightAdjustment
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Increase                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ChangeHeightAdjustment(bool Increase)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ChangeHeightAdjustment");

	Params::BP_PlayerBuildingComponent_C_ChangeHeightAdjustment Parms{};

	Parms.Increase = Increase;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientCreateMenu
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ClientCreateMenu(class UClass* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientCreateMenu");

	Params::BP_PlayerBuildingComponent_C_ClientCreateMenu Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientExitBuildMode
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ClientExitBuildMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientExitBuildMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientInitialize
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ClientInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientPlaceNamedBuildPart
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PlayerBuildingComponent_C::ClientPlaceNamedBuildPart(const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientPlaceNamedBuildPart");

	Params::BP_PlayerBuildingComponent_C_ClientPlaceNamedBuildPart Parms{};

	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientPrimaryAction
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ClientPrimaryAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientPrimaryAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientRemoveMenu
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ClientRemoveMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientRemoveMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientSelectBuildMode
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BuildingMode                          BuildMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ClientSelectBuildMode(E_BuildingMode BuildMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientSelectBuildMode");

	Params::BP_PlayerBuildingComponent_C_ClientSelectBuildMode Parms{};

	Parms.BuildMode = BuildMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientSelectBuildPart
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ClientSelectBuildPart(class FName ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientSelectBuildPart");

	Params::BP_PlayerBuildingComponent_C_ClientSelectBuildPart Parms{};

	Parms.ItemRowName = ItemRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ClientTraces
// (BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ClientTraces()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ClientTraces");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.CollisionCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    CollisionBlocked                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    HidePreview                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class AActor* UBP_PlayerBuildingComponent_C::CollisionCheck(class AActor* Actor, bool* CollisionBlocked, bool* HidePreview)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "CollisionCheck");

	Params::BP_PlayerBuildingComponent_C_CollisionCheck Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (CollisionBlocked != nullptr)
		*CollisionBlocked = Parms.CollisionBlocked;

	if (HidePreview != nullptr)
		*HidePreview = Parms.HidePreview;

	return Parms.ReturnValue;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.CreateRadialMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Widget                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::CreateRadialMenu(class UClass* Widget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "CreateRadialMenu");

	Params::BP_PlayerBuildingComponent_C_CreateRadialMenu Parms{};

	Parms.Widget = Widget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.DestroyPlaced
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::DestroyPlaced()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "DestroyPlaced");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.DisablePlacement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Hide                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::DisablePlacement(bool Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "DisablePlacement");

	Params::BP_PlayerBuildingComponent_C_DisablePlacement Parms{};

	Parms.Hide = Hide;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.EnablePlacement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_GridComponent_C*              GridComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::EnablePlacement(class UBP_GridComponent_C* GridComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "EnablePlacement");

	Params::BP_PlayerBuildingComponent_C_EnablePlacement Parms{};

	Parms.GridComponent = GridComponent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ExecuteUbergraph_BP_PlayerBuildingComponent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ExecuteUbergraph_BP_PlayerBuildingComponent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ExecuteUbergraph_BP_PlayerBuildingComponent");

	Params::BP_PlayerBuildingComponent_C_ExecuteUbergraph_BP_PlayerBuildingComponent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ExitBuildingMode
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ExitBuildingMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ExitBuildingMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.GroundCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    GroundFound                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::GroundCheck(class AActor* Actor, bool* GroundFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "GroundCheck");

	Params::BP_PlayerBuildingComponent_C_GroundCheck Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (GroundFound != nullptr)
		*GroundFound = Parms.GroundFound;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.HitActor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Param_HitActor                                         (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::HitActor(class AActor** Param_HitActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "HitActor");

	Params::BP_PlayerBuildingComponent_C_HitActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HitActor != nullptr)
		*Param_HitActor = Parms.Param_HitActor;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.HitComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UPrimitiveComponent*              Param_HitComponent                                     (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::HitComponent(class UPrimitiveComponent** Param_HitComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "HitComponent");

	Params::BP_PlayerBuildingComponent_C_HitComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_HitComponent != nullptr)
		*Param_HitComponent = Parms.Param_HitComponent;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.HitGridComponent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              Grid                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_GridComponent_C*              GridComponent                                          (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

bool UBP_PlayerBuildingComponent_C::HitGridComponent(class UPrimitiveComponent* Grid, class UBP_GridComponent_C** GridComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "HitGridComponent");

	Params::BP_PlayerBuildingComponent_C_HitGridComponent Parms{};

	Parms.Grid = Grid;

	UObject::ProcessEvent(Func, &Parms);

	if (GridComponent != nullptr)
		*GridComponent = Parms.GridComponent;

	return Parms.ReturnValue;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.HitLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::HitLocation(struct FVector* Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "HitLocation");

	Params::BP_PlayerBuildingComponent_C_HitLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.IsOnGrid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    OnGrid                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::IsOnGrid(bool* OnGrid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "IsOnGrid");

	Params::BP_PlayerBuildingComponent_C_IsOnGrid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OnGrid != nullptr)
		*OnGrid = Parms.OnGrid;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ItemCostCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RemoveItems                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ItemsFound                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ItemCostCheck(bool RemoveItems, bool* ItemsFound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ItemCostCheck");

	Params::BP_PlayerBuildingComponent_C_ItemCostCheck Parms{};

	Parms.RemoveItems = RemoveItems;

	UObject::ProcessEvent(Func, &Parms);

	if (ItemsFound != nullptr)
		*ItemsFound = Parms.ItemsFound;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.OwnershipCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class FText>                     Owners                                                 (Parm, OutParm)

bool UBP_PlayerBuildingComponent_C::OwnershipCheck(class AActor* Actor, TArray<class FText>* Owners)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "OwnershipCheck");

	Params::BP_PlayerBuildingComponent_C_OwnershipCheck Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (Owners != nullptr)
		*Owners = std::move(Parms.Owners);

	return Parms.ReturnValue;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.PickupActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::PickupActor(class UObject* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "PickupActor");

	Params::BP_PlayerBuildingComponent_C_PickupActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.PlaceBuildPart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RowName                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnGrid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PlayerBuildingComponent_C::PlaceBuildPart(class FName RowName, const struct FVector& Location, const struct FRotator& Param_Rotation, bool OnGrid, class USceneComponent* AttachComponent, const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "PlaceBuildPart");

	Params::BP_PlayerBuildingComponent_C_PlaceBuildPart Parms{};

	Parms.RowName = RowName;
	Parms.Location = std::move(Location);
	Parms.Param_Rotation = std::move(Param_Rotation);
	Parms.OnGrid = OnGrid;
	Parms.AttachComponent = AttachComponent;
	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.PlotPoleDistanceCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           CheckActor                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bLocked                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::PlotPoleDistanceCheck(const class AActor* CheckActor, bool* bLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "PlotPoleDistanceCheck");

	Params::BP_PlayerBuildingComponent_C_PlotPoleDistanceCheck Parms{};

	Parms.CheckActor = CheckActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bLocked != nullptr)
		*bLocked = Parms.bLocked;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.PreviewLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::PreviewLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "PreviewLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.RepairActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::RepairActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "RepairActor");

	Params::BP_PlayerBuildingComponent_C_RepairActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ResetFloorCheck
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ResetFloorCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ResetFloorCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.RotateBuildPart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::RotateBuildPart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "RotateBuildPart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SelectBuildMode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_BuildingMode                          BuildMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::SelectBuildMode(E_BuildingMode BuildMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SelectBuildMode");

	Params::BP_PlayerBuildingComponent_C_SelectBuildMode Parms{};

	Parms.BuildMode = BuildMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SelectBuildPart
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ItemRowName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::SelectBuildPart(class FName ItemRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SelectBuildPart");

	Params::BP_PlayerBuildingComponent_C_SelectBuildPart Parms{};

	Parms.ItemRowName = ItemRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SelectClosestFloorGrid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ClosestGrid                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    SupportingGridFound                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NonSuppored                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Hide                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::SelectClosestFloorGrid(class UPrimitiveComponent** ClosestGrid, bool* SupportingGridFound, bool* NonSuppored, bool* Hide)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SelectClosestFloorGrid");

	Params::BP_PlayerBuildingComponent_C_SelectClosestFloorGrid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ClosestGrid != nullptr)
		*ClosestGrid = Parms.ClosestGrid;

	if (SupportingGridFound != nullptr)
		*SupportingGridFound = Parms.SupportingGridFound;

	if (NonSuppored != nullptr)
		*NonSuppored = Parms.NonSuppored;

	if (Hide != nullptr)
		*Hide = Parms.Hide;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SelectClosestFoundationGrid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              ClosestGrid                                            (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ChecksDone                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::SelectClosestFoundationGrid(class UPrimitiveComponent** ClosestGrid, bool* ChecksDone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SelectClosestFoundationGrid");

	Params::BP_PlayerBuildingComponent_C_SelectClosestFoundationGrid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ClosestGrid != nullptr)
		*ClosestGrid = Parms.ClosestGrid;

	if (ChecksDone != nullptr)
		*ChecksDone = Parms.ChecksDone;
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerDeleteActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           DeleteActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    ForceDestroy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerDeleteActor(class AActor* DeleteActor, bool ForceDestroy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerDeleteActor");

	Params::BP_PlayerBuildingComponent_C_ServerDeleteActor Parms{};

	Parms.DeleteActor = DeleteActor;
	Parms.ForceDestroy = ForceDestroy;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerDisableBuildPlacement
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Disable                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerDisableBuildPlacement(bool Disable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerDisableBuildPlacement");

	Params::BP_PlayerBuildingComponent_C_ServerDisableBuildPlacement Parms{};

	Parms.Disable = Disable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerInitialize
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ServerInitialize()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerInitialize");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerOpenBuildingMenu
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerOpenBuildingMenu(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerOpenBuildingMenu");

	Params::BP_PlayerBuildingComponent_C_ServerOpenBuildingMenu Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerPickupActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Param_PickupActor                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerPickupActor(class AActor* Param_PickupActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerPickupActor");

	Params::BP_PlayerBuildingComponent_C_ServerPickupActor Parms{};

	Parms.Param_PickupActor = Param_PickupActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerPlaceBuildPart
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_BuildPartRowName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Param_Rotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OnGrid                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  AttachComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UBP_PlayerBuildingComponent_C::ServerPlaceBuildPart(class FName Param_BuildPartRowName, const struct FVector& Location, const struct FRotator& Param_Rotation, bool OnGrid, class USceneComponent* AttachComponent, const class FText& Param_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerPlaceBuildPart");

	Params::BP_PlayerBuildingComponent_C_ServerPlaceBuildPart Parms{};

	Parms.Param_BuildPartRowName = Param_BuildPartRowName;
	Parms.Location = std::move(Location);
	Parms.Param_Rotation = std::move(Param_Rotation);
	Parms.OnGrid = OnGrid;
	Parms.AttachComponent = AttachComponent;
	Parms.Param_Name = std::move(Param_Name);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerPlaceSoundEffect
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::ServerPlaceSoundEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerPlaceSoundEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerRepairActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerRepairActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerRepairActor");

	Params::BP_PlayerBuildingComponent_C_ServerRepairActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerSetBuildPart
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Param_BuildPartRowName                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerSetBuildPart(class FName Param_BuildPartRowName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerSetBuildPart");

	Params::BP_PlayerBuildingComponent_C_ServerSetBuildPart Parms{};

	Parms.Param_BuildPartRowName = Param_BuildPartRowName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerUpdateSelectedActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerUpdateSelectedActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerUpdateSelectedActor");

	Params::BP_PlayerBuildingComponent_C_ServerUpdateSelectedActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ServerUpgradeActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ServerUpgradeActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ServerUpgradeActor");

	Params::BP_PlayerBuildingComponent_C_ServerUpgradeActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SetCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Placed                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::SetCollision(bool Placed, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SetCollision");

	Params::BP_PlayerBuildingComponent_C_SetCollision Parms{};

	Parms.Placed = Placed;
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.SpawnGridManager
// (BlueprintCallable, BlueprintEvent)

void UBP_PlayerBuildingComponent_C::SpawnGridManager()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "SpawnGridManager");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.Toggle Name Panel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::Toggle_Name_Panel(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "Toggle Name Panel");

	Params::BP_PlayerBuildingComponent_C_Toggle_Name_Panel Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ToggleBuildMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ToggleBuildMenu(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ToggleBuildMenu");

	Params::BP_PlayerBuildingComponent_C_ToggleBuildMenu Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.ToggleBuildOptionsMenu
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Open                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::ToggleBuildOptionsMenu(bool Open)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "ToggleBuildOptionsMenu");

	Params::BP_PlayerBuildingComponent_C_ToggleBuildOptionsMenu Parms{};

	Parms.Open = Open;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.TraceMath
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_CameraType                            CameraType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::TraceMath(E_CameraType CameraType, struct FVector* Start, struct FVector* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "TraceMath");

	Params::BP_PlayerBuildingComponent_C_TraceMath Parms{};

	Parms.CameraType = CameraType;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.UpdateIgnoreGrids
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Grid                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::UpdateIgnoreGrids(class UClass* Grid)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "UpdateIgnoreGrids");

	Params::BP_PlayerBuildingComponent_C_UpdateIgnoreGrids Parms{};

	Parms.Grid = Grid;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerBuildingComponent.BP_PlayerBuildingComponent_C.UpgradeActor
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UBP_PlayerBuildingComponent_C::UpgradeActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerBuildingComponent_C", "UpgradeActor");

	Params::BP_PlayerBuildingComponent_C_UpgradeActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}

}

