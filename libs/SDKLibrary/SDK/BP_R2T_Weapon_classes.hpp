#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_R2T_Weapon

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_R2T_Weapon.BP_R2T_Weapon_C
// 0x0038 (0x02E0 - 0x02A8)
class ABP_R2T_Weapon_C : public ASceneCapture2D
{
public:
	class UChildActorComponent*                   ChildActor;                                        // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight2;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight1;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        WeaponParent;                                      // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 WeaponClass;                                       // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Set_Weapon(class UClass* Param_WeaponClass);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_R2T_Weapon_C">();
	}
	static class ABP_R2T_Weapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_R2T_Weapon_C>();
	}
};
static_assert(alignof(ABP_R2T_Weapon_C) == 0x000008, "Wrong alignment on ABP_R2T_Weapon_C");
static_assert(sizeof(ABP_R2T_Weapon_C) == 0x0002E0, "Wrong size on ABP_R2T_Weapon_C");
static_assert(offsetof(ABP_R2T_Weapon_C, ChildActor) == 0x0002A8, "Member 'ABP_R2T_Weapon_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, SpotLight2) == 0x0002B0, "Member 'ABP_R2T_Weapon_C::SpotLight2' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, SpotLight1) == 0x0002B8, "Member 'ABP_R2T_Weapon_C::SpotLight1' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, SpotLight) == 0x0002C0, "Member 'ABP_R2T_Weapon_C::SpotLight' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, PointLight) == 0x0002C8, "Member 'ABP_R2T_Weapon_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, WeaponParent) == 0x0002D0, "Member 'ABP_R2T_Weapon_C::WeaponParent' has a wrong offset!");
static_assert(offsetof(ABP_R2T_Weapon_C, WeaponClass) == 0x0002D8, "Member 'ABP_R2T_Weapon_C::WeaponClass' has a wrong offset!");

}

